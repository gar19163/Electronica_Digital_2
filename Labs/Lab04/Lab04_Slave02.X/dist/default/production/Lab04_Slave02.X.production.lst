

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 09 22:22:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  000B                     _INTCONbits	set	11
   284  0006                     _PORTBbits	set	6
   285  0008                     _PORTD	set	8
   286  0014                     _SSPCONbits	set	20
   287  000C                     _PIR1bits	set	12
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  0058                     _RBIF	set	88
   291  0063                     _SSPIF	set	99
   292  005E                     _PEIE	set	94
   293  005F                     _GIE	set	95
   294  0096                     _IOCBbits	set	150
   295  0095                     _WPUBbits	set	149
   296  0081                     _OPTION_REGbits	set	129
   297  0088                     _TRISD	set	136
   298  0086                     _TRISB	set	134
   299  0094                     _SSPSTATbits	set	148
   300  0091                     _SSPCON2bits	set	145
   301  0087                     _TRISCbits	set	135
   302  0094                     _SSPSTAT	set	148
   303  0093                     _SSPADD	set	147
   304  0091                     _SSPCON2	set	145
   305  04A0                     _BF	set	1184
   306  0463                     _SSPIE	set	1123
   307  043C                     _TRISC4	set	1084
   308  043B                     _TRISC3	set	1083
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F4               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011  01F6               	clrf	(__pbssCOMMON+2)& (0+127)
   322  0012                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  0012                     __end_of__initialization:
   326  0012  0183               	clrf	3
   327  0013  120A  118A  28CE   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssCOMMON
   330  0074                     __pbssCOMMON:
   331  0074                     _dato:
   332  0074                     	ds	1
   333  0075                     _z:
   334  0075                     	ds	1
   335  0076                     _c:
   336  0076                     	ds	1
   337                           
   338                           	psect	cstackCOMMON
   339  0070                     __pcstackCOMMON:
   340  0070                     ?_setup:
   341  0070                     ?_I2C_Slave_Init:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ??_isr:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_main:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           ; 1 bytes @ 0x0
   355  0070                     	ds	3
   356  0073                     ??_I2C_Slave_Init:
   357  0073                     I2C_Slave_Init@address:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     ??_setup:
   364  0074                     ??_main:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           	psect	maintext
   369  00CE                     __pmaintext:	
   370                           ; 1 bytes @ 0x4
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 113 in file "Slave02.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called: 3
   396 ;; This function calls:
   397 ;;		_setup
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  00CE                     _main:
   406  00CE                     l853:	
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   409                           
   410                           
   411                           ;Slave02.c: 114:     setup();
   412  00CE  120A  118A  2097  120A  118A  	fcall	_setup
   413  00D3                     l125:	
   414                           ;Slave02.c: 115:     while(1){
   415                           
   416  00D3                     l126:	
   417                           ;Slave02.c: 116:     }
   418                           
   419  00D3  28D3               	goto	l125
   420  00D4  120A  118A  280C   	ljmp	start
   421  00D7                     __end_of_main:
   422                           
   423                           	psect	text1
   424  0097                     __ptext1:	
   425 ;; *************** function _setup *****************
   426 ;; Defined at:
   427 ;;		line 121 in file "Slave02.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, pclath, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   441 ;;      Params:         0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used: 1
   447 ;; Hardware stack levels required when called: 2
   448 ;; This function calls:
   449 ;;		_I2C_Slave_Init
   450 ;; This function is called by:
   451 ;;		_main
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _setup
   457  0097                     _setup:
   458  0097                     l741:	
   459                           ;incstack = 0
   460                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   461                           
   462                           
   463                           ;Slave02.c: 123:     ANSEL = 0x00;
   464  0097  1683               	bsf	3,5	;RP0=1, select bank3
   465  0098  1703               	bsf	3,6	;RP1=1, select bank3
   466  0099  0188               	clrf	8	;volatile
   467                           
   468                           ;Slave02.c: 124:     ANSELH = 0x00;
   469  009A  0189               	clrf	9	;volatile
   470  009B                     l743:
   471                           
   472                           ;Slave02.c: 127:     TRISB = 0xFF;
   473  009B  30FF               	movlw	255
   474  009C  1683               	bsf	3,5	;RP0=1, select bank1
   475  009D  1303               	bcf	3,6	;RP1=0, select bank1
   476  009E  0086               	movwf	6	;volatile
   477  009F                     l745:
   478                           
   479                           ;Slave02.c: 128:     TRISD = 0x00;
   480  009F  0188               	clrf	8	;volatile
   481  00A0                     l747:
   482                           
   483                           ;Slave02.c: 129:     PORTD = 0x00;
   484  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   485  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   486  00A2  0188               	clrf	8	;volatile
   487  00A3                     l749:
   488                           
   489                           ;Slave02.c: 132:     OPTION_REGbits.nRBPU = 0;
   490  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   491  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   492  00A5  1381               	bcf	1,7	;volatile
   493  00A6                     l751:
   494                           
   495                           ;Slave02.c: 133:     WPUBbits.WPUB0 = 1;
   496  00A6  1415               	bsf	21,0	;volatile
   497  00A7                     l753:
   498                           
   499                           ;Slave02.c: 134:     WPUBbits.WPUB1 = 1;
   500  00A7  1495               	bsf	21,1	;volatile
   501  00A8                     l755:
   502                           
   503                           ;Slave02.c: 135:     IOCBbits.IOCB0 = 1;
   504  00A8  1416               	bsf	22,0	;volatile
   505  00A9                     l757:
   506                           
   507                           ;Slave02.c: 136:     IOCBbits.IOCB1 = 1;
   508  00A9  1496               	bsf	22,1	;volatile
   509  00AA                     l759:
   510                           
   511                           ;Slave02.c: 139:     INTCONbits.GIE = 1;
   512  00AA  178B               	bsf	11,7	;volatile
   513  00AB                     l761:
   514                           
   515                           ;Slave02.c: 140:     INTCONbits.RBIE = 1;
   516  00AB  158B               	bsf	11,3	;volatile
   517  00AC                     l763:
   518                           
   519                           ;Slave02.c: 141:     INTCONbits.RBIF = 0;
   520  00AC  100B               	bcf	11,0	;volatile
   521  00AD                     l765:
   522                           
   523                           ;Slave02.c: 143:     I2C_Slave_Init(0x60);
   524  00AD  3060               	movlw	96
   525  00AE  120A  118A  20B4  120A  118A  	fcall	_I2C_Slave_Init
   526  00B3                     l131:
   527  00B3  0008               	return
   528  00B4                     __end_of_setup:
   529                           
   530                           	psect	text2
   531  00B4                     __ptext2:	
   532 ;; *************** function _I2C_Slave_Init *****************
   533 ;; Defined at:
   534 ;;		line 89 in file "I2C.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  address         1    wreg     unsigned char 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  address         1    3[COMMON] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         1       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         1       0       0       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_setup
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _I2C_Slave_Init
   564  00B4                     _I2C_Slave_Init:
   565                           
   566                           ;incstack = 0
   567                           ; Regs used in _I2C_Slave_Init: [wreg]
   568                           ;I2C_Slave_Init@address stored from wreg
   569  00B4  00F3               	movwf	I2C_Slave_Init@address
   570  00B5                     l723:
   571                           
   572                           ;I2C.c: 89: void I2C_Slave_Init(uint8_t address);I2C.c: 90: {;I2C.c: 91:     SSPADD = ad
      +                          dress;
   573  00B5  0873               	movf	I2C_Slave_Init@address,w
   574  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   575  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   576  00B8  0093               	movwf	19	;volatile
   577                           
   578                           ;I2C.c: 92:     SSPCON = 0x36;
   579  00B9  3036               	movlw	54
   580  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   581  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   582  00BC  0094               	movwf	20	;volatile
   583                           
   584                           ;I2C.c: 93:     SSPSTAT = 0x80;
   585  00BD  3080               	movlw	128
   586  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   587  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   588  00C0  0094               	movwf	20	;volatile
   589                           
   590                           ;I2C.c: 94:     SSPCON2 = 0x01;
   591  00C1  3001               	movlw	1
   592  00C2  0091               	movwf	17	;volatile
   593  00C3                     l725:
   594                           
   595                           ;I2C.c: 95:     TRISC3 = 1;
   596  00C3  1587               	bsf	7,3	;volatile
   597  00C4                     l727:
   598                           
   599                           ;I2C.c: 96:     TRISC4 = 1;
   600  00C4  1607               	bsf	7,4	;volatile
   601  00C5                     l729:
   602                           
   603                           ;I2C.c: 97:     GIE = 1;
   604  00C5  178B               	bsf	11,7	;volatile
   605  00C6                     l731:
   606                           
   607                           ;I2C.c: 98:     PEIE = 1;
   608  00C6  170B               	bsf	11,6	;volatile
   609  00C7                     l733:
   610                           
   611                           ;I2C.c: 99:     SSPIF = 0;
   612  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   613  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   614  00C9  118C               	bcf	12,3	;volatile
   615  00CA                     l735:
   616                           
   617                           ;I2C.c: 100:     SSPIE = 1;
   618  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   619  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   620  00CC  158C               	bsf	12,3	;volatile
   621  00CD                     l55:
   622  00CD  0008               	return
   623  00CE                     __end_of_I2C_Slave_Init:
   624                           
   625                           	psect	text3
   626  0016                     __ptext3:	
   627 ;; *************** function _isr *****************
   628 ;; Defined at:
   629 ;;		line 66 in file "Slave02.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          3       0       0       0       0
   646 ;;      Totals:         3       0       0       0       0
   647 ;;Total ram usage:        3 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		Interrupt level 1
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _isr
   658  0016                     _isr:
   659  0016                     i1l807:
   660                           
   661                           ;Slave02.c: 67:     if(PIR1bits.SSPIF == 1){
   662  0016  1283               	bcf	3,5	;RP0=0, select bank0
   663  0017  1303               	bcf	3,6	;RP1=0, select bank0
   664  0018  1D8C               	btfss	12,3	;volatile
   665  0019  281B               	goto	u5_21
   666  001A  281C               	goto	u5_20
   667  001B                     u5_21:
   668  001B  287D               	goto	i1l104
   669  001C                     u5_20:
   670  001C                     i1l809:
   671                           
   672                           ;Slave02.c: 69:         SSPCONbits.CKP = 0;
   673  001C  1214               	bcf	20,4	;volatile
   674                           
   675                           ;Slave02.c: 71:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   676  001D  1B14               	btfsc	20,6	;volatile
   677  001E  2820               	goto	u6_21
   678  001F  2821               	goto	u6_20
   679  0020                     u6_21:
   680  0020  2825               	goto	i1l813
   681  0021                     u6_20:
   682  0021                     i1l811:
   683  0021  1F94               	btfss	20,7	;volatile
   684  0022  2824               	goto	u7_21
   685  0023  2825               	goto	u7_20
   686  0024                     u7_21:
   687  0024  282C               	goto	i1l821
   688  0025                     u7_20:
   689  0025                     i1l813:
   690                           
   691                           ;Slave02.c: 72:             z = SSPBUF;
   692  0025  0813               	movf	19,w	;volatile
   693  0026  00F0               	movwf	??_isr
   694  0027  0870               	movf	??_isr,w
   695  0028  00F5               	movwf	_z
   696  0029                     i1l815:
   697                           
   698                           ;Slave02.c: 73:             SSPCONbits.SSPOV = 0;
   699  0029  1314               	bcf	20,6	;volatile
   700  002A                     i1l817:
   701                           
   702                           ;Slave02.c: 74:             SSPCONbits.WCOL = 0;
   703  002A  1394               	bcf	20,7	;volatile
   704  002B                     i1l819:
   705                           
   706                           ;Slave02.c: 75:             SSPCONbits.CKP = 1;
   707  002B  1614               	bsf	20,4	;volatile
   708  002C                     i1l821:
   709                           
   710                           ;Slave02.c: 78:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   711  002C  1683               	bsf	3,5	;RP0=1, select bank1
   712  002D  1303               	bcf	3,6	;RP1=0, select bank1
   713  002E  1A94               	btfsc	20,5	;volatile
   714  002F  2831               	goto	u8_21
   715  0030  2832               	goto	u8_20
   716  0031                     u8_21:
   717  0031  2859               	goto	i1l108
   718  0032                     u8_20:
   719  0032                     i1l823:
   720  0032  1914               	btfsc	20,2	;volatile
   721  0033  2835               	goto	u9_21
   722  0034  2836               	goto	u9_20
   723  0035                     u9_21:
   724  0035  2859               	goto	i1l108
   725  0036                     u9_20:
   726  0036                     i1l825:
   727                           
   728                           ;Slave02.c: 79:             _delay((unsigned long)((7)*(8000000/4000000.0)));
   729  0036  3004               	movlw	4
   730  0037  00F0               	movwf	??_isr
   731  0038                     u17_27:
   732  0038  0BF0               	decfsz	??_isr,f
   733  0039  2838               	goto	u17_27
   734  003A  0000               	nop
   735                           
   736                           ;Slave02.c: 80:             z = SSPBUF;
   737  003B  1283               	bcf	3,5	;RP0=0, select bank0
   738  003C  1303               	bcf	3,6	;RP1=0, select bank0
   739  003D  0813               	movf	19,w	;volatile
   740  003E  00F0               	movwf	??_isr
   741  003F  0870               	movf	??_isr,w
   742  0040  00F5               	movwf	_z
   743  0041                     i1l827:
   744                           
   745                           ;Slave02.c: 81:             _delay((unsigned long)((2)*(8000000/4000000.0)));
   746  0041  2842               	nop2	;2 cycle nop
   747  0042  2843               	nop2	;2 cycle nop
   748  0043                     i1l829:
   749                           
   750                           ;Slave02.c: 82:             PIR1bits.SSPIF = 0;
   751  0043  1283               	bcf	3,5	;RP0=0, select bank0
   752  0044  1303               	bcf	3,6	;RP1=0, select bank0
   753  0045  118C               	bcf	12,3	;volatile
   754  0046                     i1l831:
   755                           
   756                           ;Slave02.c: 83:             SSPCONbits.CKP = 1;
   757  0046  1614               	bsf	20,4	;volatile
   758  0047                     i1l109:	
   759                           ;Slave02.c: 84:             while(!SSPSTATbits.BF);
   760                           
   761  0047  1683               	bsf	3,5	;RP0=1, select bank1
   762  0048  1303               	bcf	3,6	;RP1=0, select bank1
   763  0049  1C14               	btfss	20,0	;volatile
   764  004A  284C               	goto	u10_21
   765  004B  284D               	goto	u10_20
   766  004C                     u10_21:
   767  004C  2847               	goto	i1l109
   768  004D                     u10_20:
   769  004D                     i1l833:
   770                           
   771                           ;Slave02.c: 85:             c = SSPBUF;
   772  004D  1283               	bcf	3,5	;RP0=0, select bank0
   773  004E  1303               	bcf	3,6	;RP1=0, select bank0
   774  004F  0813               	movf	19,w	;volatile
   775  0050  00F0               	movwf	??_isr
   776  0051  0870               	movf	??_isr,w
   777  0052  00F6               	movwf	_c
   778                           
   779                           ;Slave02.c: 86:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   780  0053  30A6               	movlw	166
   781  0054  00F0               	movwf	??_isr
   782  0055                     u18_27:
   783  0055  0BF0               	decfsz	??_isr,f
   784  0056  2855               	goto	u18_27
   785  0057  0000               	nop
   786                           
   787                           ;Slave02.c: 87:             }
   788  0058  287A               	goto	i1l112
   789  0059                     i1l108:	
   790                           ;Slave02.c: 88:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   791                           
   792  0059  1A94               	btfsc	20,5	;volatile
   793  005A  285C               	goto	u11_21
   794  005B  285D               	goto	u11_20
   795  005C                     u11_21:
   796  005C  287A               	goto	i1l112
   797  005D                     u11_20:
   798  005D                     i1l835:
   799  005D  1D14               	btfss	20,2	;volatile
   800  005E  2860               	goto	u12_21
   801  005F  2861               	goto	u12_20
   802  0060                     u12_21:
   803  0060  287A               	goto	i1l112
   804  0061                     u12_20:
   805  0061                     i1l837:
   806                           
   807                           ;Slave02.c: 89:             z = SSPBUF;
   808  0061  1283               	bcf	3,5	;RP0=0, select bank0
   809  0062  1303               	bcf	3,6	;RP1=0, select bank0
   810  0063  0813               	movf	19,w	;volatile
   811  0064  00F0               	movwf	??_isr
   812  0065  0870               	movf	??_isr,w
   813  0066  00F5               	movwf	_z
   814  0067                     i1l839:
   815                           
   816                           ;Slave02.c: 90:             BF = 0;
   817  0067  1683               	bsf	3,5	;RP0=1, select bank1
   818  0068  1303               	bcf	3,6	;RP1=0, select bank1
   819  0069  1014               	bcf	20,0	;volatile
   820                           
   821                           ;Slave02.c: 91:             SSPBUF = PORTD;
   822  006A  1283               	bcf	3,5	;RP0=0, select bank0
   823  006B  1303               	bcf	3,6	;RP1=0, select bank0
   824  006C  0808               	movf	8,w	;volatile
   825  006D  0093               	movwf	19	;volatile
   826  006E                     i1l841:
   827                           
   828                           ;Slave02.c: 92:             SSPCONbits.CKP = 1;
   829  006E  1614               	bsf	20,4	;volatile
   830                           
   831                           ;Slave02.c: 93:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   832  006F  30A6               	movlw	166
   833  0070  00F0               	movwf	??_isr
   834  0071                     u19_27:
   835  0071  0BF0               	decfsz	??_isr,f
   836  0072  2871               	goto	u19_27
   837  0073  0000               	nop
   838  0074                     i1l114:	
   839                           ;Slave02.c: 94:             while(SSPSTATbits.BF);
   840                           
   841  0074  1683               	bsf	3,5	;RP0=1, select bank1
   842  0075  1303               	bcf	3,6	;RP1=0, select bank1
   843  0076  1814               	btfsc	20,0	;volatile
   844  0077  2879               	goto	u13_21
   845  0078  287A               	goto	u13_20
   846  0079                     u13_21:
   847  0079  2874               	goto	i1l114
   848  007A                     u13_20:
   849  007A                     i1l112:
   850                           
   851                           ;Slave02.c: 97:         PIR1bits.SSPIF = 0;
   852  007A  1283               	bcf	3,5	;RP0=0, select bank0
   853  007B  1303               	bcf	3,6	;RP1=0, select bank0
   854  007C  118C               	bcf	12,3	;volatile
   855  007D                     i1l104:	
   856                           ;Slave02.c: 98:     }
   857                           
   858                           
   859                           ;Slave02.c: 100:     if (RBIF == 1){
   860  007D  1C0B               	btfss	11,0	;volatile
   861  007E  2880               	goto	u14_21
   862  007F  2881               	goto	u14_20
   863  0080                     u14_21:
   864  0080  2890               	goto	i1l120
   865  0081                     u14_20:
   866  0081                     i1l843:
   867                           
   868                           ;Slave02.c: 101:         if (PORTBbits.RB0 == 0){
   869  0081  1806               	btfsc	6,0	;volatile
   870  0082  2884               	goto	u15_21
   871  0083  2885               	goto	u15_20
   872  0084                     u15_21:
   873  0084  2889               	goto	i1l847
   874  0085                     u15_20:
   875  0085                     i1l845:
   876                           
   877                           ;Slave02.c: 102:             PORTD++;
   878  0085  3001               	movlw	1
   879  0086  00F0               	movwf	??_isr
   880  0087  0870               	movf	??_isr,w
   881  0088  0788               	addwf	8,f	;volatile
   882  0089                     i1l847:
   883                           
   884                           ;Slave02.c: 104:         if (PORTBbits.RB1 == 0){
   885  0089  1886               	btfsc	6,1	;volatile
   886  008A  288C               	goto	u16_21
   887  008B  288D               	goto	u16_20
   888  008C                     u16_21:
   889  008C  288F               	goto	i1l851
   890  008D                     u16_20:
   891  008D                     i1l849:
   892                           
   893                           ;Slave02.c: 105:             PORTD--;
   894  008D  3001               	movlw	1
   895  008E  0288               	subwf	8,f	;volatile
   896  008F                     i1l851:
   897                           
   898                           ;Slave02.c: 107:         INTCONbits.RBIF = 0;
   899  008F  100B               	bcf	11,0	;volatile
   900  0090                     i1l120:
   901  0090  0872               	movf	??_isr+2,w
   902  0091  008A               	movwf	10
   903  0092  0E71               	swapf	??_isr+1,w
   904  0093  0083               	movwf	3
   905  0094  0EFE               	swapf	btemp,f
   906  0095  0E7E               	swapf	btemp,w
   907  0096  0009               	retfie
   908  0097                     __end_of_isr:
   909  007E                     btemp	set	126	;btemp
   910  007E                     wtemp0	set	126
   911                           
   912                           	psect	intentry
   913  0004                     __pintentry:	
   914                           ;incstack = 0
   915                           ; Regs used in _isr: [wreg+status,2+status,0]
   916                           
   917  0004                     interrupt_function:
   918  007E                     saved_w	set	btemp
   919  0004  00FE               	movwf	btemp
   920  0005  0E03               	swapf	3,w
   921  0006  00F1               	movwf	??_isr+1
   922  0007  080A               	movf	10,w
   923  0008  00F2               	movwf	??_isr+2
   924  0009  120A  118A  2816   	ljmp	_isr
   925                           
   926                           	psect	config
   927                           
   928                           ;Config register CONFIG1 @ 0x2007
   929                           ;	Oscillator Selection bits
   930                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   931                           ;	Watchdog Timer Enable bit
   932                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   933                           ;	Power-up Timer Enable bit
   934                           ;	PWRTE = OFF, PWRT disabled
   935                           ;	RE3/MCLR pin function select bit
   936                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   937                           ;	Code Protection bit
   938                           ;	CP = OFF, Program memory code protection is disabled
   939                           ;	Data Code Protection bit
   940                           ;	CPD = OFF, Data memory code protection is disabled
   941                           ;	Brown Out Reset Selection bits
   942                           ;	BOREN = OFF, BOR disabled
   943                           ;	Internal External Switchover bit
   944                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   945                           ;	Fail-Safe Clock Monitor Enabled bit
   946                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   947                           ;	Low Voltage Programming Enable bit
   948                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   949                           ;	In-Circuit Debugger Mode bit
   950                           ;	DEBUG = 0x1, unprogrammed default
   951  2007                     	org	8199
   952  2007  30D6               	dw	12502
   953                           
   954                           ;Config register CONFIG2 @ 0x2008
   955                           ;	Brown-out Reset Selection bit
   956                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   957                           ;	Flash Program Memory Self Write Enable bits
   958                           ;	WRT = OFF, Write protection off
   959  2008                     	org	8200
   960  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 09 22:22:56 2021

                      _c 0076                        _z 0075              _SSPSTATbits 0094  
                     _BF 04A0                       l55 00CD                      l131 00B3  
                    l125 00D3                      l126 00D3                      l731 00C6  
                    l723 00B5                      l733 00C7                      l725 00C3  
                    l741 0097                      l735 00CA                      l727 00C4  
                    l751 00A6                      l743 009B                      l729 00C5  
                    l761 00AB                      l753 00A7                      l745 009F  
                    l763 00AC                      l755 00A8                      l747 00A0  
                    l765 00AD                      l757 00A9                      l749 00A3  
                    l853 00CE                      l759 00AA                      _GIE 005F  
                    _isr 0016                     ?_isr 0070                     _PEIE 005E  
                   _RBIF 0058                     u5_20 001C                     u5_21 001B  
                   u6_20 0021                     u6_21 0020                     u7_20 0025  
                   u7_21 0024                     u8_20 0032                     u8_21 0031  
                   u9_20 0036                     u9_21 0035                     _dato 0074  
                   _main 00CE                     btemp 007E                     start 000C  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 0188  
                  i1l120 0090                    i1l112 007A                    i1l104 007D  
                  i1l114 0074                    i1l108 0059                    i1l109 0047  
                  i1l811 0021                    i1l821 002C                    i1l813 0025  
                  i1l831 0046                    i1l823 0032                    i1l815 0029  
                  i1l807 0016                    i1l841 006E                    i1l833 004D  
                  i1l825 0036                    i1l817 002A                    i1l809 001C  
                  i1l851 008F                    i1l843 0081                    i1l835 005D  
                  i1l827 0041                    i1l819 002B                    i1l845 0085  
                  i1l837 0061                    i1l829 0043                    i1l847 0089  
                  i1l839 0067                    i1l849 008D                    u10_20 004D  
                  u10_21 004C                    u11_20 005D                    u11_21 005C  
                  u12_20 0061                    u12_21 0060                    u13_20 007A  
                  u13_21 0079                    u14_20 0081                    u14_21 0080  
                  u15_20 0085                    u15_21 0084                    u16_20 008D  
                  u16_21 008C                    u17_27 0038                    u18_27 0055  
                  _PORTD 0008                    u19_27 0071                    _TRISB 0086  
                  _TRISD 0088                    _SSPIE 0463                    _SSPIF 0063  
                  _setup 0097                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00D7  
                 ??_main 0074                   ?_setup 0070                   _ANSELH 0189  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
__end_of__initialization 0012           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001A  
          __end_of_setup 00B4           _OPTION_REGbits 0081                  ??_setup 0074  
  I2C_Slave_Init@address 0073               __pmaintext 00CE               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  __ptext1 0097  
                __ptext2 00B4                  __ptext3 0016             __size_of_isr 0081  
   end_of_initialization 0012           _I2C_Slave_Init 00B4                _PORTBbits 0006  
              _TRISCbits 0087   __end_of_I2C_Slave_Init 00CE      start_initialization 000F  
            __end_of_isr 0097          ?_I2C_Slave_Init 0070              __pbssCOMMON 0074  
              ___latbits 0002           __size_of_setup 001D        interrupt_function 0004  
               _IOCBbits 0096                 _PIR1bits 000C                 _WPUBbits 0095  
       ??_I2C_Slave_Init 0073            __size_of_main 0009               _INTCONbits 000B  
               intlevel1 0000              _SSPCON2bits 0091               _SSPCONbits 0014  
