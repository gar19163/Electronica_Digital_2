

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Aug 09 22:26:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399                           
   400                           	psect	strings
   401  0800                     __pstrings:
   402  0800                     stringtab:
   403  0800                     __stringtab:
   404                           
   405                           ;	String table - string pointers are 1 byte each
   406  0800  1BFF               	btfsc	btemp+1,7
   407  0801  280A               	ljmp	stringcode
   408  0802  1383               	bcf	3,7
   409  0803  187F               	btfsc	btemp+1,0
   410  0804  1783               	bsf	3,7
   411  0805  0800               	movf	0,w
   412  0806  0A84               	incf	4,f
   413  0807  1903               	skipnz
   414  0808  0AFF               	incf	btemp+1,f
   415  0809  0008               	return
   416  080A                     stringcode:
   417  080A                     stringdir:
   418  080A  3008               	movlw	high stringdir
   419  080B  008A               	movwf	10
   420  080C  0804               	movf	4,w
   421  080D  0A84               	incf	4,f
   422  080E  0782               	addwf	2,f
   423  080F                     __stringbase:
   424  080F  3400               	retlw	0
   425  0810                     __end_of__stringtab:
   426  0810                     __powers_:
   427  0810  3400               	retlw	0
   428  0811  3400               	retlw	0
   429  0812  3480               	retlw	128
   430  0813  343F               	retlw	63
   431  0814  3400               	retlw	0
   432  0815  3400               	retlw	0
   433  0816  3420               	retlw	32
   434  0817  3441               	retlw	65
   435  0818  3400               	retlw	0
   436  0819  3400               	retlw	0
   437  081A  34C8               	retlw	200
   438  081B  3442               	retlw	66
   439  081C  3400               	retlw	0
   440  081D  3400               	retlw	0
   441  081E  347A               	retlw	122
   442  081F  3444               	retlw	68
   443  0820  3400               	retlw	0
   444  0821  3440               	retlw	64
   445  0822  341C               	retlw	28
   446  0823  3446               	retlw	70
   447  0824  3400               	retlw	0
   448  0825  3450               	retlw	80
   449  0826  34C3               	retlw	195
   450  0827  3447               	retlw	71
   451  0828  3400               	retlw	0
   452  0829  3424               	retlw	36
   453  082A  3474               	retlw	116
   454  082B  3449               	retlw	73
   455  082C  3480               	retlw	128
   456  082D  3496               	retlw	150
   457  082E  3418               	retlw	24
   458  082F  344B               	retlw	75
   459  0830  3420               	retlw	32
   460  0831  34BC               	retlw	188
   461  0832  34BE               	retlw	190
   462  0833  344C               	retlw	76
   463  0834  3428               	retlw	40
   464  0835  346B               	retlw	107
   465  0836  346E               	retlw	110
   466  0837  344E               	retlw	78
   467  0838  34F9               	retlw	249
   468  0839  3402               	retlw	2
   469  083A  3415               	retlw	21
   470  083B  3450               	retlw	80
   471  083C  34EC               	retlw	236
   472  083D  3478               	retlw	120
   473  083E  34AD               	retlw	173
   474  083F  3460               	retlw	96
   475  0840  34CA               	retlw	202
   476  0841  34F2               	retlw	242
   477  0842  3449               	retlw	73
   478  0843  3471               	retlw	113
   479  0844                     __end_of__powers_:
   480  0844                     __npowers_:
   481  0844  3400               	retlw	0
   482  0845  3400               	retlw	0
   483  0846  3480               	retlw	128
   484  0847  343F               	retlw	63
   485  0848  34CD               	retlw	205
   486  0849  34CC               	retlw	204
   487  084A  34CC               	retlw	204
   488  084B  343D               	retlw	61
   489  084C  340A               	retlw	10
   490  084D  34D7               	retlw	215
   491  084E  3423               	retlw	35
   492  084F  343C               	retlw	60
   493  0850  346F               	retlw	111
   494  0851  3412               	retlw	18
   495  0852  3483               	retlw	131
   496  0853  343A               	retlw	58
   497  0854  3417               	retlw	23
   498  0855  34B7               	retlw	183
   499  0856  34D1               	retlw	209
   500  0857  3438               	retlw	56
   501  0858  34AC               	retlw	172
   502  0859  34C5               	retlw	197
   503  085A  3427               	retlw	39
   504  085B  3437               	retlw	55
   505  085C  34BD               	retlw	189
   506  085D  3437               	retlw	55
   507  085E  3486               	retlw	134
   508  085F  3435               	retlw	53
   509  0860  3495               	retlw	149
   510  0861  34BF               	retlw	191
   511  0862  34D6               	retlw	214
   512  0863  3433               	retlw	51
   513  0864  3477               	retlw	119
   514  0865  34CC               	retlw	204
   515  0866  342B               	retlw	43
   516  0867  3432               	retlw	50
   517  0868  345F               	retlw	95
   518  0869  3470               	retlw	112
   519  086A  3489               	retlw	137
   520  086B  3430               	retlw	48
   521  086C  34FF               	retlw	255
   522  086D  34E6               	retlw	230
   523  086E  34DB               	retlw	219
   524  086F  342E               	retlw	46
   525  0870  3408               	retlw	8
   526  0871  34E5               	retlw	229
   527  0872  343C               	retlw	60
   528  0873  341E               	retlw	30
   529  0874  3460               	retlw	96
   530  0875  3442               	retlw	66
   531  0876  34A2               	retlw	162
   532  0877  340D               	retlw	13
   533  0878                     __end_of__npowers_:
   534  0878                     _dpowers:
   535  0878  3401               	retlw	1
   536  0879  3400               	retlw	0
   537  087A  3400               	retlw	0
   538  087B  3400               	retlw	0
   539  087C  340A               	retlw	10
   540  087D  3400               	retlw	0
   541  087E  3400               	retlw	0
   542  087F  3400               	retlw	0
   543  0880  3464               	retlw	100
   544  0881  3400               	retlw	0
   545  0882  3400               	retlw	0
   546  0883  3400               	retlw	0
   547  0884  34E8               	retlw	232
   548  0885  3403               	retlw	3
   549  0886  3400               	retlw	0
   550  0887  3400               	retlw	0
   551  0888  3410               	retlw	16
   552  0889  3427               	retlw	39
   553  088A  3400               	retlw	0
   554  088B  3400               	retlw	0
   555  088C  34A0               	retlw	160
   556  088D  3486               	retlw	134
   557  088E  3401               	retlw	1
   558  088F  3400               	retlw	0
   559  0890  3440               	retlw	64
   560  0891  3442               	retlw	66
   561  0892  340F               	retlw	15
   562  0893  3400               	retlw	0
   563  0894  3480               	retlw	128
   564  0895  3496               	retlw	150
   565  0896  3498               	retlw	152
   566  0897  3400               	retlw	0
   567  0898  3400               	retlw	0
   568  0899  34E1               	retlw	225
   569  089A  34F5               	retlw	245
   570  089B  3405               	retlw	5
   571  089C  3400               	retlw	0
   572  089D  34CA               	retlw	202
   573  089E  349A               	retlw	154
   574  089F  343B               	retlw	59
   575  08A0                     __end_of_dpowers:
   576  0007                     _PORTCbits	set	7
   577  0013                     _SSPBUF	set	19
   578  0014                     _SSPCON	set	20
   579  0008                     _PORTD	set	8
   580  0006                     _PORTB	set	6
   581  0063                     _SSPIF	set	99
   582  005E                     _PEIE	set	94
   583  005F                     _GIE	set	95
   584  0091                     _SSPCON2bits	set	145
   585  0094                     _SSPSTAT	set	148
   586  0093                     _SSPADD	set	147
   587  0091                     _SSPCON2	set	145
   588  0088                     _TRISD	set	136
   589  0086                     _TRISB	set	134
   590  0087                     _TRISCbits	set	135
   591  0463                     _SSPIE	set	1123
   592  043C                     _TRISC4	set	1084
   593  043B                     _TRISC3	set	1083
   594  0189                     _ANSELH	set	393
   595  0188                     _ANSEL	set	392
   596  08A0                     STR_1:
   597  08A0  3441               	retlw	65	;'A'
   598  08A1  3444               	retlw	68	;'D'
   599  08A2  3443               	retlw	67	;'C'
   600  08A3  343A               	retlw	58	;':'
   601  08A4  3420               	retlw	32	;' '
   602  08A5  3420               	retlw	32	;' '
   603  08A6  3443               	retlw	67	;'C'
   604  08A7  344F               	retlw	79	;'O'
   605  08A8  344E               	retlw	78	;'N'
   606  08A9  3454               	retlw	84	;'T'
   607  08AA  343A               	retlw	58	;':'
   608  08AB  3420               	retlw	32	;' '
   609  08AC  3420               	retlw	32	;' '
   610  08AD  3454               	retlw	84	;'T'
   611  08AE  3445               	retlw	69	;'E'
   612  08AF  344D               	retlw	77	;'M'
   613  08B0  3450               	retlw	80	;'P'
   614  08B1  343A               	retlw	58	;':'
   615  08B2  3400               	retlw	0
   616  08B3                     STR_4:
   617  08B3  3425               	retlw	37	;'%'
   618  08B4  3433               	retlw	51	;'3'
   619  08B5  342E               	retlw	46	;'.'
   620  08B6  3431               	retlw	49	;'1'
   621  08B7  3466               	retlw	102	;'f'
   622  08B8  3443               	retlw	67	;'C'
   623  08B9  3400               	retlw	0
   624  08BA                     STR_3:
   625  08BA  3425               	retlw	37	;'%'
   626  08BB  3433               	retlw	51	;'3'
   627  08BC  342E               	retlw	46	;'.'
   628  08BD  3430               	retlw	48	;'0'
   629  08BE  3466               	retlw	102	;'f'
   630  08BF  3455               	retlw	85	;'U'
   631  08C0  3400               	retlw	0
   632  08C1                     STR_2:
   633  08C1  3425               	retlw	37	;'%'
   634  08C2  3433               	retlw	51	;'3'
   635  08C3  342E               	retlw	46	;'.'
   636  08C4  3432               	retlw	50	;'2'
   637  08C5  3466               	retlw	102	;'f'
   638  08C6  3456               	retlw	86	;'V'
   639  08C7  3400               	retlw	0
   640                           
   641                           	psect	cinit
   642  07E6                     start_initialization:	
   643                           ; #config settings
   644                           
   645  07E6                     __initialization:
   646                           
   647                           ; Clear objects allocated to BANK0
   648  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   649  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   650  07E8  01EE               	clrf	__pbssBANK0& (0+127)
   651  07E9  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   652                           
   653                           ; Clear objects allocated to BANK1
   654  07EA  1383               	bcf	3,7	;select IRP bank0
   655  07EB  30C9               	movlw	low __pbssBANK1
   656  07EC  0084               	movwf	4
   657  07ED  30D7               	movlw	low (__pbssBANK1+14)
   658  07EE  160A  158A  2259  120A  118A  	fcall	clear_ram0
   659                           
   660                           ; Clear objects allocated to BANK3
   661  07F3  1783               	bsf	3,7	;select IRP bank2
   662  07F4  3090               	movlw	low __pbssBANK3
   663  07F5  0084               	movwf	4
   664  07F6  30AE               	movlw	low (__pbssBANK3+30)
   665  07F7  160A  158A  2259  120A  118A  	fcall	clear_ram0
   666  07FC                     end_of_initialization:	
   667                           ;End of C runtime variable initialization code
   668                           
   669  07FC                     __end_of__initialization:
   670  07FC  0183               	clrf	3
   671  07FD  160A  118A  2B52   	ljmp	_main	;jump to C main() function
   672                           
   673                           	psect	bssBANK0
   674  006E                     __pbssBANK0:
   675  006E                     _val1:
   676  006E                     	ds	1
   677  006F                     _dig:
   678  006F                     	ds	1
   679                           
   680                           	psect	bssBANK1
   681  00C9                     __pbssBANK1:
   682  00C9                     _dig3:
   683  00C9                     	ds	4
   684  00CD                     _dig2:
   685  00CD                     	ds	4
   686  00D1                     _dig1:
   687  00D1                     	ds	4
   688  00D5                     _op:
   689  00D5                     	ds	1
   690  00D6                     _val2:
   691  00D6                     	ds	1
   692                           
   693                           	psect	bssBANK3
   694  0190                     __pbssBANK3:
   695  0190                     _s:
   696  0190                     	ds	30
   697                           
   698                           	psect	clrtext
   699  1A59                     clear_ram0:	
   700                           ;	Called with FSR containing the base address, and
   701                           ;	W with the last address+1
   702                           
   703  1A59  0064               	clrwdt	;clear the watchdog before getting into this loop
   704  1A5A                     clrloop0:
   705  1A5A  0180               	clrf	0	;clear RAM location pointed to by FSR
   706  1A5B  0A84               	incf	4,f	;increment pointer
   707  1A5C  0604               	xorwf	4,w	;XOR with final address
   708  1A5D  1903               	btfsc	3,2	;have we reached the end yet?
   709  1A5E  3400               	retlw	0	;all done for this memory range, return
   710  1A5F  0604               	xorwf	4,w	;XOR again to restore value
   711  1A60  2A5A               	goto	clrloop0	;do the next byte
   712                           
   713                           	psect	cstackBANK1
   714  00A0                     __pcstackBANK1:
   715  00A0                     ?_sprintf:
   716  00A0                     sprintf@f:	
   717                           ; 2 bytes @ 0x0
   718                           
   719                           
   720                           ; 1 bytes @ 0x0
   721  00A0                     	ds	5
   722  00A5                     ??_sprintf:
   723                           
   724                           ; 1 bytes @ 0x5
   725  00A5                     	ds	5
   726  00AA                     _sprintf$942:
   727                           
   728                           ; 4 bytes @ 0xA
   729  00AA                     	ds	4
   730  00AE                     sprintf@ap:
   731                           
   732                           ; 1 bytes @ 0xE
   733  00AE                     	ds	1
   734  00AF                     sprintf@val:
   735                           
   736                           ; 4 bytes @ 0xF
   737  00AF                     	ds	4
   738  00B3                     sprintf@flag:
   739                           
   740                           ; 2 bytes @ 0x13
   741  00B3                     	ds	2
   742  00B5                     sprintf@width:
   743                           
   744                           ; 2 bytes @ 0x15
   745  00B5                     	ds	2
   746  00B7                     sprintf@tmpval:
   747                           
   748                           ; 4 bytes @ 0x17
   749  00B7                     	ds	4
   750  00BB                     sprintf@eexp:
   751                           
   752                           ; 2 bytes @ 0x1B
   753  00BB                     	ds	2
   754  00BD                     sprintf@fval:
   755                           
   756                           ; 4 bytes @ 0x1D
   757  00BD                     	ds	4
   758  00C1                     sprintf@sp:
   759                           
   760                           ; 1 bytes @ 0x21
   761  00C1                     	ds	1
   762  00C2                     sprintf@prec:
   763                           
   764                           ; 2 bytes @ 0x22
   765  00C2                     	ds	2
   766  00C4                     sprintf@c:
   767                           
   768                           ; 1 bytes @ 0x24
   769  00C4                     	ds	1
   770  00C5                     ??_main:
   771                           
   772                           ; 1 bytes @ 0x25
   773  00C5                     	ds	4
   774                           
   775                           	psect	cstackCOMMON
   776  0070                     __pcstackCOMMON:
   777  0070                     ?_isdigit:
   778  0070                     ?___fleq:	
   779                           ; 1 bit 
   780                           
   781  0070                     ?___flge:	
   782                           ; 1 bit 
   783                           
   784  0070                     ?_setup:	
   785                           ; 1 bit 
   786                           
   787  0070                     ?_Lcd_Init:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0070                     ?_Lcd_Clear:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0070                     ?_I2C_Master_Start:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0070                     ??_I2C_Master_Start:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0070                     ?_I2C_Master_Write:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     ?_I2C_Master_Stop:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     ??_I2C_Master_Stop:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0070                     ??_isdigit:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0070                     ?_main:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_I2C_Master_Wait:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ??_I2C_Master_Wait:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_Lcd_Port:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ??_Lcd_Port:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_Lcd_Cmd:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_Lcd_Write_Char:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_I2C_Master_Read:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?__Umul8_16:	
   836                           ; 2 bytes @ 0x0
   837                           
   838  0070                     ?___wmul:	
   839                           ; 2 bytes @ 0x0
   840                           
   841  0070                     ?___awmod:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0070                     ?___lwmod:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0070                     ?__tdiv_to_l_:	
   848                           ; 2 bytes @ 0x0
   849                           
   850  0070                     ?__div_to_l_:	
   851                           ; 4 bytes @ 0x0
   852                           
   853  0070                     ?___lldiv:	
   854                           ; 4 bytes @ 0x0
   855                           
   856  0070                     ?___flneg:	
   857                           ; 4 bytes @ 0x0
   858                           
   859  0070                     ?___llmod:	
   860                           ; 4 bytes @ 0x0
   861                           
   862  0070                     Lcd_Port@a:	
   863                           ; 4 bytes @ 0x0
   864                           
   865  0070                     __Umul8_16@multiplicand:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     _isdigit$759:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     I2C_Master_Write@d:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     I2C_Master_Read@a:	
   875                           ; 2 bytes @ 0x0
   876                           
   877  0070                     ___wmul@multiplier:	
   878                           ; 2 bytes @ 0x0
   879                           
   880  0070                     ___awmod@divisor:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0070                     ___lwmod@divisor:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0070                     ___lldiv@divisor:	
   887                           ; 2 bytes @ 0x0
   888                           
   889  0070                     __div_to_l_@f1:	
   890                           ; 4 bytes @ 0x0
   891                           
   892  0070                     ___fleq@ff1:	
   893                           ; 4 bytes @ 0x0
   894                           
   895  0070                     ___flge@ff1:	
   896                           ; 4 bytes @ 0x0
   897                           
   898  0070                     ___flneg@f1:	
   899                           ; 4 bytes @ 0x0
   900                           
   901  0070                     __tdiv_to_l_@f1:	
   902                           ; 4 bytes @ 0x0
   903                           
   904  0070                     ___llmod@divisor:	
   905                           ; 4 bytes @ 0x0
   906                           
   907                           
   908                           ; 4 bytes @ 0x0
   909  0070                     	ds	1
   910  0071                     ??_Lcd_Cmd:
   911  0071                     ??_Lcd_Write_Char:	
   912                           ; 1 bytes @ 0x1
   913                           
   914  0071                     isdigit@c:	
   915                           ; 1 bytes @ 0x1
   916                           
   917                           
   918                           ; 1 bytes @ 0x1
   919  0071                     	ds	1
   920  0072                     ??_I2C_Master_Write:
   921  0072                     ??_I2C_Master_Read:	
   922                           ; 1 bytes @ 0x2
   923                           
   924  0072                     ??__Umul8_16:	
   925                           ; 1 bytes @ 0x2
   926                           
   927  0072                     Lcd_Write_Char@a:	
   928                           ; 1 bytes @ 0x2
   929                           
   930  0072                     ___wmul@multiplicand:	
   931                           ; 1 bytes @ 0x2
   932                           
   933  0072                     ___awmod@dividend:	
   934                           ; 2 bytes @ 0x2
   935                           
   936  0072                     ___lwmod@dividend:	
   937                           ; 2 bytes @ 0x2
   938                           
   939                           
   940                           ; 2 bytes @ 0x2
   941  0072                     	ds	1
   942  0073                     ?_Lcd_Write_String:
   943  0073                     Lcd_Cmd@a:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     Lcd_Write_String@a:	
   947                           ; 1 bytes @ 0x3
   948                           
   949                           
   950                           ; 2 bytes @ 0x3
   951  0073                     	ds	1
   952  0074                     ??_Lcd_Init:
   953  0074                     ??_Lcd_Clear:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0074                     ?_Lcd_Set_Cursor:	
   957                           ; 1 bytes @ 0x4
   958                           
   959  0074                     ??___wmul:	
   960                           ; 1 bytes @ 0x4
   961                           
   962  0074                     ??___awmod:	
   963                           ; 1 bytes @ 0x4
   964                           
   965  0074                     ??___flneg:	
   966                           ; 1 bytes @ 0x4
   967                           
   968  0074                     ??___lwmod:	
   969                           ; 1 bytes @ 0x4
   970                           
   971  0074                     Lcd_Set_Cursor@b:	
   972                           ; 1 bytes @ 0x4
   973                           
   974  0074                     I2C_Master_Read@temp:	
   975                           ; 1 bytes @ 0x4
   976                           
   977  0074                     ___wmul@product:	
   978                           ; 2 bytes @ 0x4
   979                           
   980  0074                     __Umul8_16@product:	
   981                           ; 2 bytes @ 0x4
   982                           
   983  0074                     ___lldiv@dividend:	
   984                           ; 2 bytes @ 0x4
   985                           
   986  0074                     __div_to_l_@f2:	
   987                           ; 4 bytes @ 0x4
   988                           
   989  0074                     ___fleq@ff2:	
   990                           ; 4 bytes @ 0x4
   991                           
   992  0074                     ___flge@ff2:	
   993                           ; 4 bytes @ 0x4
   994                           
   995  0074                     __tdiv_to_l_@f2:	
   996                           ; 4 bytes @ 0x4
   997                           
   998  0074                     ___llmod@dividend:	
   999                           ; 4 bytes @ 0x4
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x4
  1003  0074                     	ds	1
  1004  0075                     ??_Lcd_Set_Cursor:
  1005  0075                     ??_Lcd_Write_String:	
  1006                           ; 1 bytes @ 0x5
  1007                           
  1008  0075                     ___awmod@counter:	
  1009                           ; 1 bytes @ 0x5
  1010                           
  1011  0075                     ___lwmod@counter:	
  1012                           ; 1 bytes @ 0x5
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x5
  1016  0075                     	ds	1
  1017  0076                     ?___lwdiv:
  1018  0076                     ?___xxtofl:	
  1019                           ; 2 bytes @ 0x6
  1020                           
  1021  0076                     Lcd_Set_Cursor@a:	
  1022                           ; 4 bytes @ 0x6
  1023                           
  1024  0076                     ___awmod@sign:	
  1025                           ; 1 bytes @ 0x6
  1026                           
  1027  0076                     ___lwdiv@divisor:	
  1028                           ; 1 bytes @ 0x6
  1029                           
  1030  0076                     __Umul8_16@word_mpld:	
  1031                           ; 2 bytes @ 0x6
  1032                           
  1033  0076                     ___xxtofl@val:	
  1034                           ; 2 bytes @ 0x6
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x6
  1038  0076                     	ds	1
  1039  0077                     ?___awdiv:
  1040  0077                     Lcd_Set_Cursor@temp:	
  1041                           ; 2 bytes @ 0x7
  1042                           
  1043  0077                     ___awdiv@divisor:	
  1044                           ; 1 bytes @ 0x7
  1045                           
  1046                           
  1047                           ; 2 bytes @ 0x7
  1048  0077                     	ds	1
  1049  0078                     ??__tdiv_to_l_:
  1050  0078                     ??__div_to_l_:	
  1051                           ; 1 bytes @ 0x8
  1052                           
  1053  0078                     ??___lldiv:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056  0078                     ??___fleq:	
  1057                           ; 1 bytes @ 0x8
  1058                           
  1059  0078                     ??___flge:	
  1060                           ; 1 bytes @ 0x8
  1061                           
  1062  0078                     ??___llmod:	
  1063                           ; 1 bytes @ 0x8
  1064                           
  1065  0078                     __Umul8_16@multiplier:	
  1066                           ; 1 bytes @ 0x8
  1067                           
  1068  0078                     Lcd_Write_String@i:	
  1069                           ; 1 bytes @ 0x8
  1070                           
  1071  0078                     ___lwdiv@dividend:	
  1072                           ; 2 bytes @ 0x8
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x8
  1076  0078                     	ds	1
  1077  0079                     ___llmod@counter:
  1078  0079                     ___awdiv@dividend:	
  1079                           ; 1 bytes @ 0x9
  1080                           
  1081  0079                     ___lldiv@quotient:	
  1082                           ; 2 bytes @ 0x9
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0x9
  1086  0079                     	ds	1
  1087  007A                     ??___lwdiv:
  1088  007A                     ??___xxtofl:	
  1089                           ; 1 bytes @ 0xA
  1090                           
  1091                           
  1092                           ; 1 bytes @ 0xA
  1093  007A                     	ds	1
  1094  007B                     ??___awdiv:
  1095  007B                     ___lwdiv@quotient:	
  1096                           ; 1 bytes @ 0xB
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0xB
  1100  007B                     	ds	2
  1101  007D                     ___lldiv@counter:
  1102  007D                     ___lwdiv@counter:	
  1103                           ; 1 bytes @ 0xD
  1104                           
  1105                           
  1106                           ; 1 bytes @ 0xD
  1107  007D                     	ds	1
  1108  007E                     ??_setup:
  1109  007E                     ??___flsub:	
  1110                           ; 1 bytes @ 0xE
  1111                           
  1112                           
  1113                           	psect	cstackBANK0
  1114  0020                     __pcstackBANK0:	
  1115                           ; 1 bytes @ 0xE
  1116                           
  1117  0020                     ?_I2C_Master_Init:
  1118  0020                     ___awdiv@counter:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0020                     ___xxtofl@sign:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0020                     I2C_Master_Init@c:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0020                     __div_to_l_@quot:	
  1128                           ; 4 bytes @ 0x0
  1129                           
  1130  0020                     __tdiv_to_l_@quot:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133                           
  1134                           ; 4 bytes @ 0x0
  1135  0020                     	ds	1
  1136  0021                     ___awdiv@sign:
  1137  0021                     ___xxtofl@exp:	
  1138                           ; 1 bytes @ 0x1
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x1
  1142  0021                     	ds	1
  1143  0022                     ___awdiv@quotient:
  1144  0022                     ___xxtofl@arg:	
  1145                           ; 2 bytes @ 0x2
  1146                           
  1147                           
  1148                           ; 4 bytes @ 0x2
  1149  0022                     	ds	2
  1150  0024                     ??_I2C_Master_Init:
  1151  0024                     ?___flmul:	
  1152                           ; 1 bytes @ 0x4
  1153                           
  1154  0024                     __div_to_l_@cntr:	
  1155                           ; 4 bytes @ 0x4
  1156                           
  1157  0024                     __tdiv_to_l_@cntr:	
  1158                           ; 1 bytes @ 0x4
  1159                           
  1160  0024                     ___flmul@b:	
  1161                           ; 1 bytes @ 0x4
  1162                           
  1163                           
  1164                           ; 4 bytes @ 0x4
  1165  0024                     	ds	1
  1166  0025                     __div_to_l_@exp1:
  1167  0025                     __tdiv_to_l_@exp1:	
  1168                           ; 1 bytes @ 0x5
  1169                           
  1170                           
  1171                           ; 1 bytes @ 0x5
  1172  0025                     	ds	3
  1173  0028                     ___flmul@a:
  1174                           
  1175                           ; 4 bytes @ 0x8
  1176  0028                     	ds	4
  1177  002C                     ??___flmul:
  1178                           
  1179                           ; 1 bytes @ 0xC
  1180  002C                     	ds	5
  1181  0031                     ___flmul@sign:
  1182                           
  1183                           ; 1 bytes @ 0x11
  1184  0031                     	ds	1
  1185  0032                     ___flmul@grs:
  1186                           
  1187                           ; 4 bytes @ 0x12
  1188  0032                     	ds	4
  1189  0036                     ___flmul@aexp:
  1190                           
  1191                           ; 1 bytes @ 0x16
  1192  0036                     	ds	1
  1193  0037                     ___flmul@bexp:
  1194                           
  1195                           ; 1 bytes @ 0x17
  1196  0037                     	ds	1
  1197  0038                     ___flmul@prod:
  1198                           
  1199                           ; 4 bytes @ 0x18
  1200  0038                     	ds	4
  1201  003C                     ___flmul@temp:
  1202                           
  1203                           ; 2 bytes @ 0x1C
  1204  003C                     	ds	2
  1205  003E                     ?_fround:
  1206  003E                     ?_scale:	
  1207                           ; 4 bytes @ 0x1E
  1208                           
  1209                           
  1210                           ; 4 bytes @ 0x1E
  1211  003E                     	ds	4
  1212  0042                     ??_fround:
  1213  0042                     ??_scale:	
  1214                           ; 1 bytes @ 0x22
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x22
  1218  0042                     	ds	7
  1219  0049                     _fround$940:
  1220                           
  1221                           ; 4 bytes @ 0x29
  1222  0049                     	ds	3
  1223  004C                     _scale$941:
  1224                           
  1225                           ; 4 bytes @ 0x2C
  1226  004C                     	ds	1
  1227  004D                     _fround$939:
  1228                           
  1229                           ; 4 bytes @ 0x2D
  1230  004D                     	ds	3
  1231  0050                     scale@scl:
  1232                           
  1233                           ; 1 bytes @ 0x30
  1234  0050                     	ds	1
  1235  0051                     ?___fltol:
  1236  0051                     fround@prec:	
  1237                           ; 4 bytes @ 0x31
  1238                           
  1239  0051                     ___fltol@f1:	
  1240                           ; 1 bytes @ 0x31
  1241                           
  1242                           
  1243                           ; 4 bytes @ 0x31
  1244  0051                     	ds	1
  1245  0052                     ?___fladd:
  1246  0052                     ___fladd@b:	
  1247                           ; 4 bytes @ 0x32
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x32
  1251  0052                     	ds	3
  1252  0055                     ??___fltol:
  1253                           
  1254                           ; 1 bytes @ 0x35
  1255  0055                     	ds	1
  1256  0056                     ___fladd@a:
  1257                           
  1258                           ; 4 bytes @ 0x36
  1259  0056                     	ds	4
  1260  005A                     ??___fladd:
  1261  005A                     ___fltol@sign1:	
  1262                           ; 1 bytes @ 0x3A
  1263                           
  1264                           
  1265                           ; 1 bytes @ 0x3A
  1266  005A                     	ds	1
  1267  005B                     ___fltol@exp1:
  1268                           
  1269                           ; 1 bytes @ 0x3B
  1270  005B                     	ds	7
  1271  0062                     ___fladd@signs:
  1272                           
  1273                           ; 1 bytes @ 0x42
  1274  0062                     	ds	1
  1275  0063                     ___fladd@aexp:
  1276                           
  1277                           ; 1 bytes @ 0x43
  1278  0063                     	ds	1
  1279  0064                     ___fladd@bexp:
  1280                           
  1281                           ; 1 bytes @ 0x44
  1282  0064                     	ds	1
  1283  0065                     ___fladd@grs:
  1284                           
  1285                           ; 1 bytes @ 0x45
  1286  0065                     	ds	1
  1287  0066                     ?___flsub:
  1288  0066                     ___flsub@a:	
  1289                           ; 4 bytes @ 0x46
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x46
  1293  0066                     	ds	4
  1294  006A                     ___flsub@b:
  1295                           
  1296                           ; 4 bytes @ 0x4A
  1297  006A                     	ds	4
  1298                           
  1299                           	psect	maintext
  1300  1352                     __pmaintext:	
  1301 ;;
  1302 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1303 ;;
  1304 ;; *************** function _main *****************
  1305 ;; Defined at:
  1306 ;;		line 74 in file "Master.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : B00/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0
  1322 ;;      Temps:          0       0       4       0       0
  1323 ;;      Totals:         0       0       4       0       0
  1324 ;;Total ram usage:        4 bytes
  1325 ;; Hardware stack levels required when called: 4
  1326 ;; This function calls:
  1327 ;;		_I2C_Master_Read
  1328 ;;		_I2C_Master_Start
  1329 ;;		_I2C_Master_Stop
  1330 ;;		_I2C_Master_Write
  1331 ;;		_Lcd_Clear
  1332 ;;		_Lcd_Init
  1333 ;;		_Lcd_Set_Cursor
  1334 ;;		_Lcd_Write_String
  1335 ;;		___fladd
  1336 ;;		___flmul
  1337 ;;		___xxtofl
  1338 ;;		_setup
  1339 ;;		_sprintf
  1340 ;; This function is called by:
  1341 ;;		Startup code after reset
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _main
  1347  1352                     _main:
  1348  1352                     l3444:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1351                           
  1352                           
  1353                           ;Master.c: 75:     setup();
  1354  1352  160A  158A  22CF  160A  118A  	fcall	_setup
  1355                           
  1356                           ;Master.c: 76:     Lcd_Init();
  1357  1357  160A  158A  2423  160A  118A  	fcall	_Lcd_Init
  1358                           
  1359                           ;Master.c: 77:     Lcd_Clear();
  1360  135C  120A  158A  20CA  160A  118A  	fcall	_Lcd_Clear
  1361  1361                     l3446:
  1362                           
  1363                           ;Master.c: 78:     op = 2;
  1364  1361  3002               	movlw	2
  1365  1362  1683               	bsf	3,5	;RP0=1, select bank1
  1366  1363  1303               	bcf	3,6	;RP1=0, select bank1
  1367  1364  00C5               	movwf	??_main^(0+128)
  1368  1365  0845               	movf	??_main^(0+128),w
  1369  1366  00D5               	movwf	_op^(0+128)
  1370  1367                     l3448:
  1371                           
  1372                           ;Master.c: 82:         I2C_Master_Start();
  1373  1367  160A  158A  2261  160A  118A  	fcall	_I2C_Master_Start
  1374  136C                     l3450:
  1375                           
  1376                           ;Master.c: 83:         I2C_Master_Write(0x61);
  1377  136C  3061               	movlw	97
  1378  136D  00F0               	movwf	I2C_Master_Write@d
  1379  136E  3000               	movlw	0
  1380  136F  00F1               	movwf	I2C_Master_Write@d+1
  1381  1370  160A  158A  2273  160A  118A  	fcall	_I2C_Master_Write
  1382  1375                     l3452:
  1383                           
  1384                           ;Master.c: 84:         dig2 = I2C_Master_Read(0);
  1385  1375  3000               	movlw	0
  1386  1376  00F0               	movwf	I2C_Master_Read@a
  1387  1377  00F1               	movwf	I2C_Master_Read@a+1
  1388  1378  160A  158A  2383  160A  118A  	fcall	_I2C_Master_Read
  1389  137D  0870               	movf	?_I2C_Master_Read,w
  1390  137E  1683               	bsf	3,5	;RP0=1, select bank1
  1391  137F  1303               	bcf	3,6	;RP1=0, select bank1
  1392  1380  00C5               	movwf	??_main^(0+128)
  1393  1381  0871               	movf	?_I2C_Master_Read+1,w
  1394  1382  00C6               	movwf	(??_main^(0+128)+1)
  1395  1383  01C7               	clrf	(??_main^(0+128)+2)
  1396  1384  01C8               	clrf	(??_main^(0+128)+3)
  1397  1385  0848               	movf	(??_main+3)^(0+128),w
  1398  1386  00F9               	movwf	___xxtofl@val+3
  1399  1387  0847               	movf	(??_main+2)^(0+128),w
  1400  1388  00F8               	movwf	___xxtofl@val+2
  1401  1389  0846               	movf	(??_main+1)^(0+128),w
  1402  138A  00F7               	movwf	___xxtofl@val+1
  1403  138B  0845               	movf	??_main^(0+128),w
  1404  138C  00F6               	movwf	___xxtofl@val
  1405  138D  3000               	movlw	0
  1406  138E  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1407  1393  0879               	movf	?___xxtofl+3,w
  1408  1394  1683               	bsf	3,5	;RP0=1, select bank1
  1409  1395  1303               	bcf	3,6	;RP1=0, select bank1
  1410  1396  00D0               	movwf	(_dig2+3)^(0+128)
  1411  1397  0878               	movf	?___xxtofl+2,w
  1412  1398  00CF               	movwf	(_dig2+2)^(0+128)
  1413  1399  0877               	movf	?___xxtofl+1,w
  1414  139A  00CE               	movwf	(_dig2+1)^(0+128)
  1415  139B  0876               	movf	?___xxtofl,w
  1416  139C  00CD               	movwf	_dig2^(0+128)
  1417  139D                     l3454:
  1418                           
  1419                           ;Master.c: 85:         I2C_Master_Stop();
  1420  139D  160A  158A  226A  160A  118A  	fcall	_I2C_Master_Stop
  1421  13A2                     l3456:
  1422                           
  1423                           ;Master.c: 86:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1424  13A2  3003               	movlw	3
  1425  13A3  1683               	bsf	3,5	;RP0=1, select bank1
  1426  13A4  1303               	bcf	3,6	;RP1=0, select bank1
  1427  13A5  00C7               	movwf	(??_main^(0+128)+2)
  1428  13A6  3008               	movlw	8
  1429  13A7  00C6               	movwf	(??_main^(0+128)+1)
  1430  13A8  3076               	movlw	118
  1431  13A9  00C5               	movwf	??_main^(0+128)
  1432  13AA                     u5597:
  1433  13AA  0BC5               	decfsz	??_main^(0+128),f
  1434  13AB  2BAA               	goto	u5597
  1435  13AC  0BC6               	decfsz	(??_main^(0+128)+1),f
  1436  13AD  2BAA               	goto	u5597
  1437  13AE  0BC7               	decfsz	(??_main^(0+128)+2),f
  1438  13AF  2BAA               	goto	u5597
  1439  13B0  0000               	nop
  1440                           
  1441                           ;Master.c: 88:         I2C_Master_Start();
  1442  13B1  160A  158A  2261  160A  118A  	fcall	_I2C_Master_Start
  1443                           
  1444                           ;Master.c: 89:         I2C_Master_Write(0x51);
  1445  13B6  3051               	movlw	81
  1446  13B7  00F0               	movwf	I2C_Master_Write@d
  1447  13B8  3000               	movlw	0
  1448  13B9  00F1               	movwf	I2C_Master_Write@d+1
  1449  13BA  160A  158A  2273  160A  118A  	fcall	_I2C_Master_Write
  1450                           
  1451                           ;Master.c: 90:         dig1 = I2C_Master_Read(0);
  1452  13BF  3000               	movlw	0
  1453  13C0  00F0               	movwf	I2C_Master_Read@a
  1454  13C1  00F1               	movwf	I2C_Master_Read@a+1
  1455  13C2  160A  158A  2383  160A  118A  	fcall	_I2C_Master_Read
  1456  13C7  0870               	movf	?_I2C_Master_Read,w
  1457  13C8  1683               	bsf	3,5	;RP0=1, select bank1
  1458  13C9  1303               	bcf	3,6	;RP1=0, select bank1
  1459  13CA  00C5               	movwf	??_main^(0+128)
  1460  13CB  0871               	movf	?_I2C_Master_Read+1,w
  1461  13CC  00C6               	movwf	(??_main^(0+128)+1)
  1462  13CD  01C7               	clrf	(??_main^(0+128)+2)
  1463  13CE  01C8               	clrf	(??_main^(0+128)+3)
  1464  13CF  0848               	movf	(??_main+3)^(0+128),w
  1465  13D0  00F9               	movwf	___xxtofl@val+3
  1466  13D1  0847               	movf	(??_main+2)^(0+128),w
  1467  13D2  00F8               	movwf	___xxtofl@val+2
  1468  13D3  0846               	movf	(??_main+1)^(0+128),w
  1469  13D4  00F7               	movwf	___xxtofl@val+1
  1470  13D5  0845               	movf	??_main^(0+128),w
  1471  13D6  00F6               	movwf	___xxtofl@val
  1472  13D7  3000               	movlw	0
  1473  13D8  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1474  13DD  0879               	movf	?___xxtofl+3,w
  1475  13DE  1683               	bsf	3,5	;RP0=1, select bank1
  1476  13DF  1303               	bcf	3,6	;RP1=0, select bank1
  1477  13E0  00D4               	movwf	(_dig1+3)^(0+128)
  1478  13E1  0878               	movf	?___xxtofl+2,w
  1479  13E2  00D3               	movwf	(_dig1+2)^(0+128)
  1480  13E3  0877               	movf	?___xxtofl+1,w
  1481  13E4  00D2               	movwf	(_dig1+1)^(0+128)
  1482  13E5  0876               	movf	?___xxtofl,w
  1483  13E6  00D1               	movwf	_dig1^(0+128)
  1484                           
  1485                           ;Master.c: 91:         I2C_Master_Stop();
  1486  13E7  160A  158A  226A  160A  118A  	fcall	_I2C_Master_Stop
  1487  13EC                     l3458:
  1488                           
  1489                           ;Master.c: 92:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1490  13EC  3003               	movlw	3
  1491  13ED  1683               	bsf	3,5	;RP0=1, select bank1
  1492  13EE  1303               	bcf	3,6	;RP1=0, select bank1
  1493  13EF  00C7               	movwf	(??_main^(0+128)+2)
  1494  13F0  3008               	movlw	8
  1495  13F1  00C6               	movwf	(??_main^(0+128)+1)
  1496  13F2  3076               	movlw	118
  1497  13F3  00C5               	movwf	??_main^(0+128)
  1498  13F4                     u5607:
  1499  13F4  0BC5               	decfsz	??_main^(0+128),f
  1500  13F5  2BF4               	goto	u5607
  1501  13F6  0BC6               	decfsz	(??_main^(0+128)+1),f
  1502  13F7  2BF4               	goto	u5607
  1503  13F8  0BC7               	decfsz	(??_main^(0+128)+2),f
  1504  13F9  2BF4               	goto	u5607
  1505  13FA  0000               	nop
  1506  13FB                     l3460:
  1507                           
  1508                           ;Master.c: 94:         I2C_Master_Start();
  1509  13FB  160A  158A  2261  160A  118A  	fcall	_I2C_Master_Start
  1510  1400                     l3462:
  1511                           
  1512                           ;Master.c: 95:         I2C_Master_Write(0x80);
  1513  1400  3080               	movlw	128
  1514  1401  00F0               	movwf	I2C_Master_Write@d
  1515  1402  3000               	movlw	0
  1516  1403  00F1               	movwf	I2C_Master_Write@d+1
  1517  1404  160A  158A  2273  160A  118A  	fcall	_I2C_Master_Write
  1518  1409                     l3464:
  1519                           
  1520                           ;Master.c: 96:         I2C_Master_Write(0xF3);
  1521  1409  30F3               	movlw	243
  1522  140A  00F0               	movwf	I2C_Master_Write@d
  1523  140B  3000               	movlw	0
  1524  140C  00F1               	movwf	I2C_Master_Write@d+1
  1525  140D  160A  158A  2273  160A  118A  	fcall	_I2C_Master_Write
  1526  1412                     l3466:
  1527                           
  1528                           ;Master.c: 97:         I2C_Master_Stop();
  1529  1412  160A  158A  226A  160A  118A  	fcall	_I2C_Master_Stop
  1530  1417                     l3468:
  1531                           
  1532                           ;Master.c: 98:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1533  1417  3003               	movlw	3
  1534  1418  1683               	bsf	3,5	;RP0=1, select bank1
  1535  1419  1303               	bcf	3,6	;RP1=0, select bank1
  1536  141A  00C7               	movwf	(??_main^(0+128)+2)
  1537  141B  3008               	movlw	8
  1538  141C  00C6               	movwf	(??_main^(0+128)+1)
  1539  141D  3076               	movlw	118
  1540  141E  00C5               	movwf	??_main^(0+128)
  1541  141F                     u5617:
  1542  141F  0BC5               	decfsz	??_main^(0+128),f
  1543  1420  2C1F               	goto	u5617
  1544  1421  0BC6               	decfsz	(??_main^(0+128)+1),f
  1545  1422  2C1F               	goto	u5617
  1546  1423  0BC7               	decfsz	(??_main^(0+128)+2),f
  1547  1424  2C1F               	goto	u5617
  1548  1425  0000               	nop
  1549                           
  1550                           ;Master.c: 100:         I2C_Master_Start();
  1551  1426  160A  158A  2261  160A  118A  	fcall	_I2C_Master_Start
  1552                           
  1553                           ;Master.c: 101:         I2C_Master_Write(0x81);
  1554  142B  3081               	movlw	129
  1555  142C  00F0               	movwf	I2C_Master_Write@d
  1556  142D  3000               	movlw	0
  1557  142E  00F1               	movwf	I2C_Master_Write@d+1
  1558  142F  160A  158A  2273  160A  118A  	fcall	_I2C_Master_Write
  1559                           
  1560                           ;Master.c: 102:         dig3 = I2C_Master_Read(0);
  1561  1434  3000               	movlw	0
  1562  1435  00F0               	movwf	I2C_Master_Read@a
  1563  1436  00F1               	movwf	I2C_Master_Read@a+1
  1564  1437  160A  158A  2383  160A  118A  	fcall	_I2C_Master_Read
  1565  143C  0870               	movf	?_I2C_Master_Read,w
  1566  143D  1683               	bsf	3,5	;RP0=1, select bank1
  1567  143E  1303               	bcf	3,6	;RP1=0, select bank1
  1568  143F  00C5               	movwf	??_main^(0+128)
  1569  1440  0871               	movf	?_I2C_Master_Read+1,w
  1570  1441  00C6               	movwf	(??_main^(0+128)+1)
  1571  1442  01C7               	clrf	(??_main^(0+128)+2)
  1572  1443  01C8               	clrf	(??_main^(0+128)+3)
  1573  1444  0848               	movf	(??_main+3)^(0+128),w
  1574  1445  00F9               	movwf	___xxtofl@val+3
  1575  1446  0847               	movf	(??_main+2)^(0+128),w
  1576  1447  00F8               	movwf	___xxtofl@val+2
  1577  1448  0846               	movf	(??_main+1)^(0+128),w
  1578  1449  00F7               	movwf	___xxtofl@val+1
  1579  144A  0845               	movf	??_main^(0+128),w
  1580  144B  00F6               	movwf	___xxtofl@val
  1581  144C  3000               	movlw	0
  1582  144D  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1583  1452  0879               	movf	?___xxtofl+3,w
  1584  1453  1683               	bsf	3,5	;RP0=1, select bank1
  1585  1454  1303               	bcf	3,6	;RP1=0, select bank1
  1586  1455  00CC               	movwf	(_dig3+3)^(0+128)
  1587  1456  0878               	movf	?___xxtofl+2,w
  1588  1457  00CB               	movwf	(_dig3+2)^(0+128)
  1589  1458  0877               	movf	?___xxtofl+1,w
  1590  1459  00CA               	movwf	(_dig3+1)^(0+128)
  1591  145A  0876               	movf	?___xxtofl,w
  1592  145B  00C9               	movwf	_dig3^(0+128)
  1593                           
  1594                           ;Master.c: 103:         I2C_Master_Stop();
  1595  145C  160A  158A  226A  160A  118A  	fcall	_I2C_Master_Stop
  1596  1461                     l3470:
  1597                           
  1598                           ;Master.c: 104:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1599  1461  3003               	movlw	3
  1600  1462  1683               	bsf	3,5	;RP0=1, select bank1
  1601  1463  1303               	bcf	3,6	;RP1=0, select bank1
  1602  1464  00C7               	movwf	(??_main^(0+128)+2)
  1603  1465  3008               	movlw	8
  1604  1466  00C6               	movwf	(??_main^(0+128)+1)
  1605  1467  3076               	movlw	118
  1606  1468  00C5               	movwf	??_main^(0+128)
  1607  1469                     u5627:
  1608  1469  0BC5               	decfsz	??_main^(0+128),f
  1609  146A  2C69               	goto	u5627
  1610  146B  0BC6               	decfsz	(??_main^(0+128)+1),f
  1611  146C  2C69               	goto	u5627
  1612  146D  0BC7               	decfsz	(??_main^(0+128)+2),f
  1613  146E  2C69               	goto	u5627
  1614  146F  0000               	nop
  1615  1470                     l3472:
  1616                           
  1617                           ;Master.c: 107:         Lcd_Set_Cursor(1,1);
  1618  1470  01F4               	clrf	Lcd_Set_Cursor@b
  1619  1471  0AF4               	incf	Lcd_Set_Cursor@b,f
  1620  1472  3001               	movlw	1
  1621  1473  160A  158A  22EF  160A  118A  	fcall	_Lcd_Set_Cursor
  1622  1478                     l3474:
  1623                           
  1624                           ;Master.c: 108:         Lcd_Write_String("ADC:  CONT:  TEMP:");
  1625  1478  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1626  1479  00F3               	movwf	Lcd_Write_String@a
  1627  147A  3080               	movlw	128
  1628  147B  00F4               	movwf	Lcd_Write_String@a+1
  1629  147C  160A  158A  2464  160A  118A  	fcall	_Lcd_Write_String
  1630  1481                     l3476:
  1631                           
  1632                           ;Master.c: 111:         dig1 = dig1*0.0196;
  1633  1481  303C               	movlw	60
  1634  1482  1283               	bcf	3,5	;RP0=0, select bank0
  1635  1483  1303               	bcf	3,6	;RP1=0, select bank0
  1636  1484  00A7               	movwf	___flmul@b+3
  1637  1485  30A0               	movlw	160
  1638  1486  00A6               	movwf	___flmul@b+2
  1639  1487  3090               	movlw	144
  1640  1488  00A5               	movwf	___flmul@b+1
  1641  1489  302E               	movlw	46
  1642  148A  00A4               	movwf	___flmul@b
  1643  148B  1683               	bsf	3,5	;RP0=1, select bank1
  1644  148C  1303               	bcf	3,6	;RP1=0, select bank1
  1645  148D  0854               	movf	(_dig1+3)^(0+128),w
  1646  148E  1283               	bcf	3,5	;RP0=0, select bank0
  1647  148F  1303               	bcf	3,6	;RP1=0, select bank0
  1648  1490  00AB               	movwf	___flmul@a+3
  1649  1491  1683               	bsf	3,5	;RP0=1, select bank1
  1650  1492  1303               	bcf	3,6	;RP1=0, select bank1
  1651  1493  0853               	movf	(_dig1+2)^(0+128),w
  1652  1494  1283               	bcf	3,5	;RP0=0, select bank0
  1653  1495  1303               	bcf	3,6	;RP1=0, select bank0
  1654  1496  00AA               	movwf	___flmul@a+2
  1655  1497  1683               	bsf	3,5	;RP0=1, select bank1
  1656  1498  1303               	bcf	3,6	;RP1=0, select bank1
  1657  1499  0852               	movf	(_dig1+1)^(0+128),w
  1658  149A  1283               	bcf	3,5	;RP0=0, select bank0
  1659  149B  1303               	bcf	3,6	;RP1=0, select bank0
  1660  149C  00A9               	movwf	___flmul@a+1
  1661  149D  1683               	bsf	3,5	;RP0=1, select bank1
  1662  149E  1303               	bcf	3,6	;RP1=0, select bank1
  1663  149F  0851               	movf	_dig1^(0+128),w
  1664  14A0  1283               	bcf	3,5	;RP0=0, select bank0
  1665  14A1  1303               	bcf	3,6	;RP1=0, select bank0
  1666  14A2  00A8               	movwf	___flmul@a
  1667  14A3  120A  158A  249F  160A  118A  	fcall	___flmul
  1668  14A8  1283               	bcf	3,5	;RP0=0, select bank0
  1669  14A9  1303               	bcf	3,6	;RP1=0, select bank0
  1670  14AA  0827               	movf	?___flmul+3,w
  1671  14AB  1683               	bsf	3,5	;RP0=1, select bank1
  1672  14AC  1303               	bcf	3,6	;RP1=0, select bank1
  1673  14AD  00D4               	movwf	(_dig1+3)^(0+128)
  1674  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  1675  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  1676  14B0  0826               	movf	?___flmul+2,w
  1677  14B1  1683               	bsf	3,5	;RP0=1, select bank1
  1678  14B2  1303               	bcf	3,6	;RP1=0, select bank1
  1679  14B3  00D3               	movwf	(_dig1+2)^(0+128)
  1680  14B4  1283               	bcf	3,5	;RP0=0, select bank0
  1681  14B5  1303               	bcf	3,6	;RP1=0, select bank0
  1682  14B6  0825               	movf	?___flmul+1,w
  1683  14B7  1683               	bsf	3,5	;RP0=1, select bank1
  1684  14B8  1303               	bcf	3,6	;RP1=0, select bank1
  1685  14B9  00D2               	movwf	(_dig1+1)^(0+128)
  1686  14BA  1283               	bcf	3,5	;RP0=0, select bank0
  1687  14BB  1303               	bcf	3,6	;RP1=0, select bank0
  1688  14BC  0824               	movf	?___flmul,w
  1689  14BD  1683               	bsf	3,5	;RP0=1, select bank1
  1690  14BE  1303               	bcf	3,6	;RP1=0, select bank1
  1691  14BF  00D1               	movwf	_dig1^(0+128)
  1692  14C0                     l3478:
  1693                           
  1694                           ;Master.c: 112:         Lcd_Set_Cursor(2,1);
  1695  14C0  01F4               	clrf	Lcd_Set_Cursor@b
  1696  14C1  0AF4               	incf	Lcd_Set_Cursor@b,f
  1697  14C2  3002               	movlw	2
  1698  14C3  160A  158A  22EF  160A  118A  	fcall	_Lcd_Set_Cursor
  1699  14C8                     l3480:
  1700                           
  1701                           ;Master.c: 113:         sprintf(s,"%3.2fV",dig1);
  1702  14C8  30B2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1703  14C9  1683               	bsf	3,5	;RP0=1, select bank1
  1704  14CA  1303               	bcf	3,6	;RP1=0, select bank1
  1705  14CB  00C5               	movwf	??_main^(0+128)
  1706  14CC  0845               	movf	??_main^(0+128),w
  1707  14CD  00A0               	movwf	sprintf@f^(0+128)
  1708  14CE  0854               	movf	(_dig1+3)^(0+128),w
  1709  14CF  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1710  14D0  0853               	movf	(_dig1+2)^(0+128),w
  1711  14D1  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1712  14D2  0852               	movf	(_dig1+1)^(0+128),w
  1713  14D3  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1714  14D4  0851               	movf	_dig1^(0+128),w
  1715  14D5  00A1               	movwf	(?_sprintf^(0+128)+1)
  1716  14D6  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1717  14D7  120A  118A  206B  160A  118A  	fcall	_sprintf
  1718  14DC                     l3482:
  1719                           
  1720                           ;Master.c: 114:         Lcd_Write_String(s);
  1721  14DC  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1722  14DD  00F3               	movwf	Lcd_Write_String@a
  1723  14DE  3001               	movlw	1
  1724  14DF  00F4               	movwf	Lcd_Write_String@a+1
  1725  14E0  160A  158A  2464  160A  118A  	fcall	_Lcd_Write_String
  1726  14E5                     l3484:
  1727                           
  1728                           ;Master.c: 116:         Lcd_Set_Cursor(2,6);
  1729  14E5  3006               	movlw	6
  1730  14E6  1683               	bsf	3,5	;RP0=1, select bank1
  1731  14E7  1303               	bcf	3,6	;RP1=0, select bank1
  1732  14E8  00C5               	movwf	??_main^(0+128)
  1733  14E9  0845               	movf	??_main^(0+128),w
  1734  14EA  00F4               	movwf	Lcd_Set_Cursor@b
  1735  14EB  3002               	movlw	2
  1736  14EC  160A  158A  22EF  160A  118A  	fcall	_Lcd_Set_Cursor
  1737  14F1                     l3486:
  1738                           
  1739                           ;Master.c: 117:         sprintf(s,"%3.0fU",dig2);
  1740  14F1  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1741  14F2  1683               	bsf	3,5	;RP0=1, select bank1
  1742  14F3  1303               	bcf	3,6	;RP1=0, select bank1
  1743  14F4  00C5               	movwf	??_main^(0+128)
  1744  14F5  0845               	movf	??_main^(0+128),w
  1745  14F6  00A0               	movwf	sprintf@f^(0+128)
  1746  14F7  0850               	movf	(_dig2+3)^(0+128),w
  1747  14F8  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1748  14F9  084F               	movf	(_dig2+2)^(0+128),w
  1749  14FA  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1750  14FB  084E               	movf	(_dig2+1)^(0+128),w
  1751  14FC  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1752  14FD  084D               	movf	_dig2^(0+128),w
  1753  14FE  00A1               	movwf	(?_sprintf^(0+128)+1)
  1754  14FF  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1755  1500  120A  118A  206B  160A  118A  	fcall	_sprintf
  1756  1505                     l3488:
  1757                           
  1758                           ;Master.c: 118:         Lcd_Write_String(s);
  1759  1505  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1760  1506  00F3               	movwf	Lcd_Write_String@a
  1761  1507  3001               	movlw	1
  1762  1508  00F4               	movwf	Lcd_Write_String@a+1
  1763  1509  160A  158A  2464  160A  118A  	fcall	_Lcd_Write_String
  1764  150E                     l3490:
  1765                           
  1766                           ;Master.c: 120:         dig3 = dig3-81;
  1767  150E  30C2               	movlw	194
  1768  150F  1283               	bcf	3,5	;RP0=0, select bank0
  1769  1510  1303               	bcf	3,6	;RP1=0, select bank0
  1770  1511  00D5               	movwf	___fladd@b+3
  1771  1512  30A2               	movlw	162
  1772  1513  00D4               	movwf	___fladd@b+2
  1773  1514  3000               	movlw	0
  1774  1515  00D3               	movwf	___fladd@b+1
  1775  1516  3000               	movlw	0
  1776  1517  00D2               	movwf	___fladd@b
  1777  1518  1683               	bsf	3,5	;RP0=1, select bank1
  1778  1519  1303               	bcf	3,6	;RP1=0, select bank1
  1779  151A  084C               	movf	(_dig3+3)^(0+128),w
  1780  151B  1283               	bcf	3,5	;RP0=0, select bank0
  1781  151C  1303               	bcf	3,6	;RP1=0, select bank0
  1782  151D  00D9               	movwf	___fladd@a+3
  1783  151E  1683               	bsf	3,5	;RP0=1, select bank1
  1784  151F  1303               	bcf	3,6	;RP1=0, select bank1
  1785  1520  084B               	movf	(_dig3+2)^(0+128),w
  1786  1521  1283               	bcf	3,5	;RP0=0, select bank0
  1787  1522  1303               	bcf	3,6	;RP1=0, select bank0
  1788  1523  00D8               	movwf	___fladd@a+2
  1789  1524  1683               	bsf	3,5	;RP0=1, select bank1
  1790  1525  1303               	bcf	3,6	;RP1=0, select bank1
  1791  1526  084A               	movf	(_dig3+1)^(0+128),w
  1792  1527  1283               	bcf	3,5	;RP0=0, select bank0
  1793  1528  1303               	bcf	3,6	;RP1=0, select bank0
  1794  1529  00D7               	movwf	___fladd@a+1
  1795  152A  1683               	bsf	3,5	;RP0=1, select bank1
  1796  152B  1303               	bcf	3,6	;RP1=0, select bank1
  1797  152C  0849               	movf	_dig3^(0+128),w
  1798  152D  1283               	bcf	3,5	;RP0=0, select bank0
  1799  152E  1303               	bcf	3,6	;RP1=0, select bank0
  1800  152F  00D6               	movwf	___fladd@a
  1801  1530  160A  118A  2578  160A  118A  	fcall	___fladd
  1802  1535  1283               	bcf	3,5	;RP0=0, select bank0
  1803  1536  1303               	bcf	3,6	;RP1=0, select bank0
  1804  1537  0855               	movf	?___fladd+3,w
  1805  1538  1683               	bsf	3,5	;RP0=1, select bank1
  1806  1539  1303               	bcf	3,6	;RP1=0, select bank1
  1807  153A  00CC               	movwf	(_dig3+3)^(0+128)
  1808  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1809  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1810  153D  0854               	movf	?___fladd+2,w
  1811  153E  1683               	bsf	3,5	;RP0=1, select bank1
  1812  153F  1303               	bcf	3,6	;RP1=0, select bank1
  1813  1540  00CB               	movwf	(_dig3+2)^(0+128)
  1814  1541  1283               	bcf	3,5	;RP0=0, select bank0
  1815  1542  1303               	bcf	3,6	;RP1=0, select bank0
  1816  1543  0853               	movf	?___fladd+1,w
  1817  1544  1683               	bsf	3,5	;RP0=1, select bank1
  1818  1545  1303               	bcf	3,6	;RP1=0, select bank1
  1819  1546  00CA               	movwf	(_dig3+1)^(0+128)
  1820  1547  1283               	bcf	3,5	;RP0=0, select bank0
  1821  1548  1303               	bcf	3,6	;RP1=0, select bank0
  1822  1549  0852               	movf	?___fladd,w
  1823  154A  1683               	bsf	3,5	;RP0=1, select bank1
  1824  154B  1303               	bcf	3,6	;RP1=0, select bank1
  1825  154C  00C9               	movwf	_dig3^(0+128)
  1826  154D                     l3492:
  1827                           
  1828                           ;Master.c: 121:         Lcd_Set_Cursor(2,12);
  1829  154D  300C               	movlw	12
  1830  154E  00C5               	movwf	??_main^(0+128)
  1831  154F  0845               	movf	??_main^(0+128),w
  1832  1550  00F4               	movwf	Lcd_Set_Cursor@b
  1833  1551  3002               	movlw	2
  1834  1552  160A  158A  22EF  160A  118A  	fcall	_Lcd_Set_Cursor
  1835  1557                     l3494:
  1836                           
  1837                           ;Master.c: 122:         sprintf(s,"%3.1fC",dig3);
  1838  1557  30A4               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1839  1558  1683               	bsf	3,5	;RP0=1, select bank1
  1840  1559  1303               	bcf	3,6	;RP1=0, select bank1
  1841  155A  00C5               	movwf	??_main^(0+128)
  1842  155B  0845               	movf	??_main^(0+128),w
  1843  155C  00A0               	movwf	sprintf@f^(0+128)
  1844  155D  084C               	movf	(_dig3+3)^(0+128),w
  1845  155E  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1846  155F  084B               	movf	(_dig3+2)^(0+128),w
  1847  1560  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1848  1561  084A               	movf	(_dig3+1)^(0+128),w
  1849  1562  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1850  1563  0849               	movf	_dig3^(0+128),w
  1851  1564  00A1               	movwf	(?_sprintf^(0+128)+1)
  1852  1565  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1853  1566  120A  118A  206B  160A  118A  	fcall	_sprintf
  1854  156B                     l3496:
  1855                           
  1856                           ;Master.c: 123:         Lcd_Write_String(s);
  1857  156B  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1858  156C  00F3               	movwf	Lcd_Write_String@a
  1859  156D  3001               	movlw	1
  1860  156E  00F4               	movwf	Lcd_Write_String@a+1
  1861  156F  160A  158A  2464  160A  118A  	fcall	_Lcd_Write_String
  1862  1574  2B67               	goto	l3448
  1863  1575  120A  118A  2800   	ljmp	start
  1864  1578                     __end_of_main:
  1865                           
  1866                           	psect	text1
  1867  006B                     __ptext1:	
  1868 ;; *************** function _sprintf *****************
  1869 ;; Defined at:
  1870 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  sp              1    wreg     PTR unsigned char 
  1873 ;;		 -> s(30), 
  1874 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1875 ;;		 -> STR_4(7), STR_3(7), STR_2(7), 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1878 ;;		 -> s(30), 
  1879 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1880 ;;  tmpval          4   23[BANK1 ] struct .
  1881 ;;  val             4   15[BANK1 ] unsigned long 
  1882 ;;  prec            2   34[BANK1 ] int 
  1883 ;;  eexp            2   27[BANK1 ] int 
  1884 ;;  width           2   21[BANK1 ] int 
  1885 ;;  flag            2   19[BANK1 ] unsigned short 
  1886 ;;  cp              2    0        PTR const unsigned char 
  1887 ;;  len             2    0        unsigned int 
  1888 ;;  c               1   36[BANK1 ] unsigned char 
  1889 ;;  ap              1   14[BANK1 ] PTR void [1]
  1890 ;;		 -> ?_sprintf(2), 
  1891 ;;  d               1    0        unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  2    0[BANK1 ] int 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       5       0       0
  1902 ;;      Locals:         0       0      27       0       0
  1903 ;;      Temps:          0       0       5       0       0
  1904 ;;      Totals:         0       0      37       0       0
  1905 ;;Total ram usage:       37 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 3
  1908 ;; This function calls:
  1909 ;;		___awdiv
  1910 ;;		___fladd
  1911 ;;		___fleq
  1912 ;;		___flge
  1913 ;;		___flmul
  1914 ;;		___flneg
  1915 ;;		___flsub
  1916 ;;		___fltol
  1917 ;;		___lldiv
  1918 ;;		___llmod
  1919 ;;		___wmul
  1920 ;;		___xxtofl
  1921 ;;		__div_to_l_
  1922 ;;		__tdiv_to_l_
  1923 ;;		_fround
  1924 ;;		_isdigit
  1925 ;;		_scale
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _sprintf
  1933  006B                     _sprintf:
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1937                           ;sprintf@sp stored from wreg
  1938  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1939  006C  1303               	bcf	3,6	;RP1=0, select bank1
  1940  006D  00C1               	movwf	sprintf@sp^(0+128)
  1941  006E                     l3182:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1944  006E  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1945  006F  00A5               	movwf	??_sprintf^(0+128)
  1946  0070  0825               	movf	??_sprintf^(0+128),w
  1947  0071  00AE               	movwf	sprintf@ap^(0+128)
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1950  0072  2FCF               	goto	l3432
  1951  0073                     l3184:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1954  0073  3025               	movlw	37
  1955  0074  0644               	xorwf	sprintf@c^(0+128),w
  1956  0075  1903               	btfsc	3,2
  1957  0076  2878               	goto	u5121
  1958  0077  2879               	goto	u5120
  1959  0078                     u5121:
  1960  0078  2885               	goto	l3190
  1961  0079                     u5120:
  1962  0079                     l3186:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1965  0079  0844               	movf	sprintf@c^(0+128),w
  1966  007A  00A5               	movwf	??_sprintf^(0+128)
  1967  007B  0841               	movf	sprintf@sp^(0+128),w
  1968  007C  0084               	movwf	4
  1969  007D  0825               	movf	??_sprintf^(0+128),w
  1970  007E  1783               	bsf	3,7	;select IRP bank2
  1971  007F  0080               	movwf	0
  1972  0080                     l3188:
  1973  0080  3001               	movlw	1
  1974  0081  00A5               	movwf	??_sprintf^(0+128)
  1975  0082  0825               	movf	??_sprintf^(0+128),w
  1976  0083  07C1               	addwf	sprintf@sp^(0+128),f
  1977                           
  1978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1979  0084  2FCF               	goto	l3432
  1980  0085                     l3190:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1983  0085  01B5               	clrf	sprintf@width^(0+128)
  1984  0086  01B6               	clrf	(sprintf@width+1)^(0+128)
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1987  0087  01B3               	clrf	sprintf@flag^(0+128)
  1988  0088  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1989  0089                     l3192:
  1990                           
  1991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1992  0089  0820               	movf	sprintf@f^(0+128),w
  1993  008A  0084               	movwf	4
  1994  008B  120A  158A  200A  120A  118A  	fcall	stringdir
  1995  0090  160A  158A  2288  120A  118A  	fcall	_isdigit
  1996  0095  1C03               	btfss	3,0
  1997  0096  2898               	goto	u5131
  1998  0097  2899               	goto	u5130
  1999  0098                     u5131:
  2000  0098  28D9               	goto	l3204
  2001  0099                     u5130:
  2002  0099                     l3194:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2005  0099  1683               	bsf	3,5	;RP0=1, select bank1
  2006  009A  1303               	bcf	3,6	;RP1=0, select bank1
  2007  009B  01B5               	clrf	sprintf@width^(0+128)
  2008  009C  01B6               	clrf	(sprintf@width+1)^(0+128)
  2009  009D                     l3196:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2012  009D  300A               	movlw	10
  2013  009E  00F0               	movwf	___wmul@multiplier
  2014  009F  3000               	movlw	0
  2015  00A0  00F1               	movwf	___wmul@multiplier+1
  2016  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  2017  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  2018  00A3  0836               	movf	(sprintf@width+1)^(0+128),w
  2019  00A4  00F3               	movwf	___wmul@multiplicand+1
  2020  00A5  0835               	movf	sprintf@width^(0+128),w
  2021  00A6  00F2               	movwf	___wmul@multiplicand
  2022  00A7  160A  158A  2337  120A  118A  	fcall	___wmul
  2023  00AC  0871               	movf	?___wmul+1,w
  2024  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  2025  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  2026  00AF  00B6               	movwf	(sprintf@width+1)^(0+128)
  2027  00B0  0870               	movf	?___wmul,w
  2028  00B1  00B5               	movwf	sprintf@width^(0+128)
  2029  00B2                     l3198:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2032  00B2  0820               	movf	sprintf@f^(0+128),w
  2033  00B3  0084               	movwf	4
  2034  00B4  120A  158A  200A  120A  118A  	fcall	stringdir
  2035  00B9  3ED0               	addlw	208
  2036  00BA  00A5               	movwf	??_sprintf^(0+128)
  2037  00BB  30FF               	movlw	255
  2038  00BC  1803               	skipnc
  2039  00BD  3000               	movlw	0
  2040  00BE  00A6               	movwf	(??_sprintf^(0+128)+1)
  2041  00BF  0825               	movf	??_sprintf^(0+128),w
  2042  00C0  07B5               	addwf	sprintf@width^(0+128),f
  2043  00C1  1803               	skipnc
  2044  00C2  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2045  00C3  0826               	movf	(??_sprintf+1)^(0+128),w
  2046  00C4  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2047  00C5                     l3200:
  2048  00C5  3001               	movlw	1
  2049  00C6  00A5               	movwf	??_sprintf^(0+128)
  2050  00C7  0825               	movf	??_sprintf^(0+128),w
  2051  00C8  07A0               	addwf	sprintf@f^(0+128),f
  2052  00C9                     l3202:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2055  00C9  0820               	movf	sprintf@f^(0+128),w
  2056  00CA  0084               	movwf	4
  2057  00CB  120A  158A  200A  120A  118A  	fcall	stringdir
  2058  00D0  160A  158A  2288  120A  118A  	fcall	_isdigit
  2059  00D5  1803               	btfsc	3,0
  2060  00D6  28D8               	goto	u5141
  2061  00D7  28D9               	goto	u5140
  2062  00D8                     u5141:
  2063  00D8  289D               	goto	l3196
  2064  00D9                     u5140:
  2065  00D9                     l3204:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2068  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  2069  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  2070  00DB  0820               	movf	sprintf@f^(0+128),w
  2071  00DC  0084               	movwf	4
  2072  00DD  120A  158A  200A  120A  118A  	fcall	stringdir
  2073  00E2  3A2E               	xorlw	46
  2074  00E3  1D03               	skipz
  2075  00E4  28E6               	goto	u5151
  2076  00E5  28E7               	goto	u5150
  2077  00E6                     u5151:
  2078  00E6  292C               	goto	l3220
  2079  00E7                     u5150:
  2080  00E7                     l3206:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2083  00E7  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2084  00E8                     l3208:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  2087  00E8  3001               	movlw	1
  2088  00E9  00A5               	movwf	??_sprintf^(0+128)
  2089  00EA  0825               	movf	??_sprintf^(0+128),w
  2090  00EB  07A0               	addwf	sprintf@f^(0+128),f
  2091  00EC                     l3210:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2094  00EC  01C2               	clrf	sprintf@prec^(0+128)
  2095  00ED  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2098  00EE  291B               	goto	l3218
  2099  00EF                     l3212:
  2100                           
  2101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2102  00EF  300A               	movlw	10
  2103  00F0  00F0               	movwf	___wmul@multiplier
  2104  00F1  3000               	movlw	0
  2105  00F2  00F1               	movwf	___wmul@multiplier+1
  2106  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  2107  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  2108  00F5  0843               	movf	(sprintf@prec+1)^(0+128),w
  2109  00F6  00F3               	movwf	___wmul@multiplicand+1
  2110  00F7  0842               	movf	sprintf@prec^(0+128),w
  2111  00F8  00F2               	movwf	___wmul@multiplicand
  2112  00F9  160A  158A  2337  120A  118A  	fcall	___wmul
  2113  00FE  0871               	movf	?___wmul+1,w
  2114  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0100  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0101  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2117  0102  0870               	movf	?___wmul,w
  2118  0103  00C2               	movwf	sprintf@prec^(0+128)
  2119  0104                     l3214:
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2122  0104  0820               	movf	sprintf@f^(0+128),w
  2123  0105  0084               	movwf	4
  2124  0106  120A  158A  200A  120A  118A  	fcall	stringdir
  2125  010B  3ED0               	addlw	208
  2126  010C  00A5               	movwf	??_sprintf^(0+128)
  2127  010D  30FF               	movlw	255
  2128  010E  1803               	skipnc
  2129  010F  3000               	movlw	0
  2130  0110  00A6               	movwf	(??_sprintf^(0+128)+1)
  2131  0111  0825               	movf	??_sprintf^(0+128),w
  2132  0112  07C2               	addwf	sprintf@prec^(0+128),f
  2133  0113  1803               	skipnc
  2134  0114  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2135  0115  0826               	movf	(??_sprintf+1)^(0+128),w
  2136  0116  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2137  0117                     l3216:
  2138  0117  3001               	movlw	1
  2139  0118  00A5               	movwf	??_sprintf^(0+128)
  2140  0119  0825               	movf	??_sprintf^(0+128),w
  2141  011A  07A0               	addwf	sprintf@f^(0+128),f
  2142  011B                     l3218:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2145  011B  0820               	movf	sprintf@f^(0+128),w
  2146  011C  0084               	movwf	4
  2147  011D  120A  158A  200A  120A  118A  	fcall	stringdir
  2148  0122  160A  158A  2288  120A  118A  	fcall	_isdigit
  2149  0127  1803               	btfsc	3,0
  2150  0128  292A               	goto	u5161
  2151  0129  292B               	goto	u5160
  2152  012A                     u5161:
  2153  012A  28EF               	goto	l3212
  2154  012B                     u5160:
  2155  012B  2932               	goto	l3226
  2156  012C                     l3220:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2159  012C  01C2               	clrf	sprintf@prec^(0+128)
  2160  012D  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2161  012E                     l3222:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2164  012E  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2165  012F  2932               	goto	l3226
  2166  0130                     l284:	
  2167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2168                           
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2171  0130  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  2174  0131  294E               	goto	l3228
  2175  0132                     l3226:
  2176  0132  3001               	movlw	1
  2177  0133  1683               	bsf	3,5	;RP0=1, select bank1
  2178  0134  1303               	bcf	3,6	;RP1=0, select bank1
  2179  0135  07A0               	addwf	sprintf@f^(0+128),f
  2180  0136  30FF               	movlw	-1
  2181  0137  0720               	addwf	sprintf@f^(0+128),w
  2182  0138  0084               	movwf	4
  2183  0139  120A  158A  200A  120A  118A  	fcall	stringdir
  2184  013E  00C4               	movwf	sprintf@c^(0+128)
  2185  013F  00A5               	movwf	??_sprintf^(0+128)
  2186  0140  01A6               	clrf	(??_sprintf^(0+128)+1)
  2187                           
  2188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2189                           ; Switch size 1, requested type "simple"
  2190                           ; Number of cases is 1, Range of values is 0 to 0
  2191                           ; switch strategies available:
  2192                           ; Name         Instructions Cycles
  2193                           ; simple_byte            4     3 (average)
  2194                           ; direct_byte           11     8 (fixed)
  2195                           ; jumptable            260     6 (fixed)
  2196                           ;	Chosen strategy is simple_byte
  2197  0141  0826               	movf	(??_sprintf+1)^(0+128),w
  2198  0142  3A00               	xorlw	0	; case 0
  2199  0143  1903               	skipnz
  2200  0144  2946               	goto	l3532
  2201  0145  2FCF               	goto	l3432
  2202  0146                     l3532:
  2203                           
  2204                           ; Switch size 1, requested type "simple"
  2205                           ; Number of cases is 2, Range of values is 0 to 102
  2206                           ; switch strategies available:
  2207                           ; Name         Instructions Cycles
  2208                           ; simple_byte            7     4 (average)
  2209                           ; jumptable            260     6 (fixed)
  2210                           ;	Chosen strategy is simple_byte
  2211  0146  0825               	movf	??_sprintf^(0+128),w
  2212  0147  3A00               	xorlw	0	; case 0
  2213  0148  1903               	skipnz
  2214  0149  2FE1               	goto	l3434
  2215  014A  3A66               	xorlw	102	; case 102
  2216  014B  1903               	skipnz
  2217  014C  2930               	goto	l284
  2218  014D  2FCF               	goto	l3432
  2219  014E                     l3228:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2222  014E  3000               	movlw	0
  2223  014F  0533               	andwf	sprintf@flag^(0+128),w
  2224  0150  00A5               	movwf	??_sprintf^(0+128)
  2225  0151  3007               	movlw	7
  2226  0152  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2227  0153  00A6               	movwf	(??_sprintf+1)^(0+128)
  2228  0154  0825               	movf	??_sprintf^(0+128),w
  2229  0155  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2230  0156  1903               	btfsc	3,2
  2231  0157  2959               	goto	u5171
  2232  0158  295A               	goto	u5170
  2233  0159                     u5171:
  2234  0159  2F0C               	goto	l3386
  2235  015A                     u5170:
  2236  015A                     l3230:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2239  015A  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2240  015B  295D               	goto	u5181
  2241  015C  295E               	goto	u5180
  2242  015D                     u5181:
  2243  015D  2962               	goto	l3234
  2244  015E                     u5180:
  2245  015E                     l3232:
  2246                           
  2247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2248  015E  3006               	movlw	6
  2249  015F  00C2               	movwf	sprintf@prec^(0+128)
  2250  0160  3000               	movlw	0
  2251  0161  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2252  0162                     l3234:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2255  0162  082E               	movf	sprintf@ap^(0+128),w
  2256  0163  0084               	movwf	4
  2257  0164  1383               	bcf	3,7	;select IRP bank0
  2258  0165  0800               	movf	0,w
  2259  0166  00BD               	movwf	sprintf@fval^(0+128)
  2260  0167  0A84               	incf	4,f
  2261  0168  0800               	movf	0,w
  2262  0169  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2263  016A  0A84               	incf	4,f
  2264  016B  0800               	movf	0,w
  2265  016C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2266  016D  0A84               	incf	4,f
  2267  016E  0800               	movf	0,w
  2268  016F  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2269  0170                     l3236:
  2270  0170  3004               	movlw	4
  2271  0171  00A5               	movwf	??_sprintf^(0+128)
  2272  0172  0825               	movf	??_sprintf^(0+128),w
  2273  0173  07AE               	addwf	sprintf@ap^(0+128),f
  2274  0174                     l3238:
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2277  0174  0840               	movf	(sprintf@fval+3)^(0+128),w
  2278  0175  00F3               	movwf	___flge@ff1+3
  2279  0176  083F               	movf	(sprintf@fval+2)^(0+128),w
  2280  0177  00F2               	movwf	___flge@ff1+2
  2281  0178  083E               	movf	(sprintf@fval+1)^(0+128),w
  2282  0179  00F1               	movwf	___flge@ff1+1
  2283  017A  083D               	movf	sprintf@fval^(0+128),w
  2284  017B  00F0               	movwf	___flge@ff1
  2285  017C  3000               	movlw	0
  2286  017D  00F7               	movwf	___flge@ff2+3
  2287  017E  3000               	movlw	0
  2288  017F  00F6               	movwf	___flge@ff2+2
  2289  0180  3000               	movlw	0
  2290  0181  00F5               	movwf	___flge@ff2+1
  2291  0182  3000               	movlw	0
  2292  0183  00F4               	movwf	___flge@ff2
  2293  0184  160A  158A  25E5  120A  118A  	fcall	___flge
  2294  0189  1803               	btfsc	3,0
  2295  018A  298C               	goto	u5191
  2296  018B  298D               	goto	u5190
  2297  018C                     u5191:
  2298  018C  29AA               	goto	l3244
  2299  018D                     u5190:
  2300  018D                     l3240:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2303  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2304  018E  1303               	bcf	3,6	;RP1=0, select bank1
  2305  018F  0840               	movf	(sprintf@fval+3)^(0+128),w
  2306  0190  00F3               	movwf	___flneg@f1+3
  2307  0191  083F               	movf	(sprintf@fval+2)^(0+128),w
  2308  0192  00F2               	movwf	___flneg@f1+2
  2309  0193  083E               	movf	(sprintf@fval+1)^(0+128),w
  2310  0194  00F1               	movwf	___flneg@f1+1
  2311  0195  083D               	movf	sprintf@fval^(0+128),w
  2312  0196  00F0               	movwf	___flneg@f1
  2313  0197  160A  158A  227D  120A  118A  	fcall	___flneg
  2314  019C  0873               	movf	?___flneg+3,w
  2315  019D  1683               	bsf	3,5	;RP0=1, select bank1
  2316  019E  1303               	bcf	3,6	;RP1=0, select bank1
  2317  019F  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2318  01A0  0872               	movf	?___flneg+2,w
  2319  01A1  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2320  01A2  0871               	movf	?___flneg+1,w
  2321  01A3  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2322  01A4  0870               	movf	?___flneg,w
  2323  01A5  00BD               	movwf	sprintf@fval^(0+128)
  2324  01A6                     l3242:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2327  01A6  3003               	movlw	3
  2328  01A7  04B3               	iorwf	sprintf@flag^(0+128),f
  2329  01A8  3000               	movlw	0
  2330  01A9  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2331  01AA                     l3244:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2334  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2335  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  2336  01AC  01BB               	clrf	sprintf@eexp^(0+128)
  2337  01AD  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2338  01AE                     l3246:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2341  01AE  0840               	movf	(sprintf@fval+3)^(0+128),w
  2342  01AF  00F3               	movwf	___fleq@ff1+3
  2343  01B0  083F               	movf	(sprintf@fval+2)^(0+128),w
  2344  01B1  00F2               	movwf	___fleq@ff1+2
  2345  01B2  083E               	movf	(sprintf@fval+1)^(0+128),w
  2346  01B3  00F1               	movwf	___fleq@ff1+1
  2347  01B4  083D               	movf	sprintf@fval^(0+128),w
  2348  01B5  00F0               	movwf	___fleq@ff1
  2349  01B6  3000               	movlw	0
  2350  01B7  00F7               	movwf	___fleq@ff2+3
  2351  01B8  3000               	movlw	0
  2352  01B9  00F6               	movwf	___fleq@ff2+2
  2353  01BA  3000               	movlw	0
  2354  01BB  00F5               	movwf	___fleq@ff2+1
  2355  01BC  3000               	movlw	0
  2356  01BD  00F4               	movwf	___fleq@ff2
  2357  01BE  160A  158A  24EA  120A  118A  	fcall	___fleq
  2358  01C3  1803               	btfsc	3,0
  2359  01C4  29C6               	goto	u5201
  2360  01C5  29C7               	goto	u5200
  2361  01C6                     u5201:
  2362  01C6  2AB7               	goto	l3272
  2363  01C7                     u5200:
  2364  01C7                     l3248:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2367  01C7  1003               	clrc
  2368  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2369  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  2370  01CA  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2371  01CB  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2372  01CC  3E82               	addlw	130
  2373  01CD  00BB               	movwf	sprintf@eexp^(0+128)
  2374  01CE  30FF               	movlw	255
  2375  01CF  1803               	skipnc
  2376  01D0  3000               	movlw	0
  2377  01D1  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2378  01D2                     l3250:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2381  01D2  30FF               	movlw	255
  2382  01D3  07BB               	addwf	sprintf@eexp^(0+128),f
  2383  01D4  1803               	skipnc
  2384  01D5  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2385  01D6  30FF               	movlw	255
  2386  01D7  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2387  01D8                     l3252:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2390  01D8  3003               	movlw	3
  2391  01D9  00F0               	movwf	___wmul@multiplier
  2392  01DA  3000               	movlw	0
  2393  01DB  00F1               	movwf	___wmul@multiplier+1
  2394  01DC  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2395  01DD  00F3               	movwf	___wmul@multiplicand+1
  2396  01DE  083B               	movf	sprintf@eexp^(0+128),w
  2397  01DF  00F2               	movwf	___wmul@multiplicand
  2398  01E0  160A  158A  2337  120A  118A  	fcall	___wmul
  2399  01E5  0871               	movf	?___wmul+1,w
  2400  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2401  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2402  01E8  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2403  01E9  0870               	movf	?___wmul,w
  2404  01EA  00BB               	movwf	sprintf@eexp^(0+128)
  2405  01EB                     l3254:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2408  01EB  300A               	movlw	10
  2409  01EC  00F7               	movwf	___awdiv@divisor
  2410  01ED  3000               	movlw	0
  2411  01EE  00F8               	movwf	___awdiv@divisor+1
  2412  01EF  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2413  01F0  00FA               	movwf	___awdiv@dividend+1
  2414  01F1  083B               	movf	sprintf@eexp^(0+128),w
  2415  01F2  00F9               	movwf	___awdiv@dividend
  2416  01F3  120A  158A  20D7  120A  118A  	fcall	___awdiv
  2417  01F8  0878               	movf	?___awdiv+1,w
  2418  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2419  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2420  01FB  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2421  01FC  0877               	movf	?___awdiv,w
  2422  01FD  00BB               	movwf	sprintf@eexp^(0+128)
  2423  01FE                     l3256:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2426  01FE  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2427  01FF  2A01               	goto	u5211
  2428  0200  2A02               	goto	u5210
  2429  0201                     u5211:
  2430  0201  2A08               	goto	l3260
  2431  0202                     u5210:
  2432  0202                     l3258:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2435  0202  30FF               	movlw	255
  2436  0203  07BB               	addwf	sprintf@eexp^(0+128),f
  2437  0204  1803               	skipnc
  2438  0205  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2439  0206  30FF               	movlw	255
  2440  0207  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2441  0208                     l3260:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2444  0208  033B               	decf	sprintf@eexp^(0+128),w
  2445  0209  3AFF               	xorlw	255
  2446  020A  120A  158A  2140  120A  118A  	fcall	_scale
  2447  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0211  0841               	movf	?_scale+3,w
  2450  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0214  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2453  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0217  0840               	movf	?_scale+2,w
  2456  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2458  021A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2459  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2460  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2461  021D  083F               	movf	?_scale+1,w
  2462  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2463  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2464  0220  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2465  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0223  083E               	movf	?_scale,w
  2468  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2470  0226  00B7               	movwf	sprintf@tmpval^(0+128)
  2471  0227                     l3262:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2474  0227  0840               	movf	(sprintf@fval+3)^(0+128),w
  2475  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2477  022A  00A7               	movwf	___flmul@b+3
  2478  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2479  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2480  022D  083F               	movf	(sprintf@fval+2)^(0+128),w
  2481  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2482  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0230  00A6               	movwf	___flmul@b+2
  2484  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0233  083E               	movf	(sprintf@fval+1)^(0+128),w
  2487  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0236  00A5               	movwf	___flmul@b+1
  2490  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2491  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0239  083D               	movf	sprintf@fval^(0+128),w
  2493  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2494  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2495  023C  00A4               	movwf	___flmul@b
  2496  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2497  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2498  023F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2499  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0242  00AB               	movwf	___flmul@a+3
  2502  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0245  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2505  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0248  00AA               	movwf	___flmul@a+2
  2508  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2509  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2510  024B  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2511  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2512  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2513  024E  00A9               	movwf	___flmul@a+1
  2514  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0250  1303               	bcf	3,6	;RP1=0, select bank1
  2516  0251  0837               	movf	sprintf@tmpval^(0+128),w
  2517  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0254  00A8               	movwf	___flmul@a
  2520  0255  120A  158A  249F  120A  118A  	fcall	___flmul
  2521  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2522  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2523  025C  0827               	movf	?___flmul+3,w
  2524  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2525  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2526  025F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2527  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2528  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0262  0826               	movf	?___flmul+2,w
  2530  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2531  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2532  0265  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2533  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0268  0825               	movf	?___flmul+1,w
  2536  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2537  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2538  026B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2539  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2540  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2541  026E  0824               	movf	?___flmul,w
  2542  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0271  00B7               	movwf	sprintf@tmpval^(0+128)
  2545  0272                     l3264:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2548  0272  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2549  0273  00F3               	movwf	___flge@ff1+3
  2550  0274  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2551  0275  00F2               	movwf	___flge@ff1+2
  2552  0276  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2553  0277  00F1               	movwf	___flge@ff1+1
  2554  0278  0837               	movf	sprintf@tmpval^(0+128),w
  2555  0279  00F0               	movwf	___flge@ff1
  2556  027A  303F               	movlw	63
  2557  027B  00F7               	movwf	___flge@ff2+3
  2558  027C  3080               	movlw	128
  2559  027D  00F6               	movwf	___flge@ff2+2
  2560  027E  3000               	movlw	0
  2561  027F  00F5               	movwf	___flge@ff2+1
  2562  0280  3000               	movlw	0
  2563  0281  00F4               	movwf	___flge@ff2
  2564  0282  160A  158A  25E5  120A  118A  	fcall	___flge
  2565  0287  1803               	btfsc	3,0
  2566  0288  2A8A               	goto	u5221
  2567  0289  2A8B               	goto	u5220
  2568  028A                     u5221:
  2569  028A  2A94               	goto	l3268
  2570  028B                     u5220:
  2571  028B                     l3266:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2574  028B  30FF               	movlw	255
  2575  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2576  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2577  028E  07BB               	addwf	sprintf@eexp^(0+128),f
  2578  028F  1803               	skipnc
  2579  0290  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2580  0291  30FF               	movlw	255
  2581  0292  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2582  0293  2AB7               	goto	l3272
  2583  0294                     l3268:
  2584  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2585  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2586  0296  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2587  0297  00F3               	movwf	___flge@ff1+3
  2588  0298  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2589  0299  00F2               	movwf	___flge@ff1+2
  2590  029A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2591  029B  00F1               	movwf	___flge@ff1+1
  2592  029C  0837               	movf	sprintf@tmpval^(0+128),w
  2593  029D  00F0               	movwf	___flge@ff1
  2594  029E  3041               	movlw	65
  2595  029F  00F7               	movwf	___flge@ff2+3
  2596  02A0  3020               	movlw	32
  2597  02A1  00F6               	movwf	___flge@ff2+2
  2598  02A2  3000               	movlw	0
  2599  02A3  00F5               	movwf	___flge@ff2+1
  2600  02A4  3000               	movlw	0
  2601  02A5  00F4               	movwf	___flge@ff2
  2602  02A6  160A  158A  25E5  120A  118A  	fcall	___flge
  2603  02AB  1C03               	btfss	3,0
  2604  02AC  2AAE               	goto	u5231
  2605  02AD  2AAF               	goto	u5230
  2606  02AE                     u5231:
  2607  02AE  2AB7               	goto	l3272
  2608  02AF                     u5230:
  2609  02AF                     l3270:
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2612  02AF  3001               	movlw	1
  2613  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2614  02B1  1303               	bcf	3,6	;RP1=0, select bank1
  2615  02B2  07BB               	addwf	sprintf@eexp^(0+128),f
  2616  02B3  1803               	skipnc
  2617  02B4  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2618  02B5  3000               	movlw	0
  2619  02B6  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2620  02B7                     l3272:
  2621                           
  2622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2623  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  2624  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  2625  02B9  0843               	movf	(sprintf@prec+1)^(0+128),w
  2626  02BA  3A80               	xorlw	128
  2627  02BB  00FF               	movwf	btemp+1
  2628  02BC  3080               	movlw	128
  2629  02BD  027F               	subwf	btemp+1,w
  2630  02BE  1D03               	skipz
  2631  02BF  2AC2               	goto	u5245
  2632  02C0  300D               	movlw	13
  2633  02C1  0242               	subwf	sprintf@prec^(0+128),w
  2634  02C2                     u5245:
  2635  02C2  1803               	skipnc
  2636  02C3  2AC5               	goto	u5241
  2637  02C4  2AC6               	goto	u5240
  2638  02C5                     u5241:
  2639  02C5  2B0D               	goto	l3276
  2640  02C6                     u5240:
  2641  02C6                     l3274:
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2644  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2645  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  2646  02C8  0842               	movf	sprintf@prec^(0+128),w
  2647  02C9  160A  118A  2147  120A  118A  	fcall	_fround
  2648  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2649  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2650  02D0  0841               	movf	?_fround+3,w
  2651  02D1  00D5               	movwf	___fladd@b+3
  2652  02D2  0840               	movf	?_fround+2,w
  2653  02D3  00D4               	movwf	___fladd@b+2
  2654  02D4  083F               	movf	?_fround+1,w
  2655  02D5  00D3               	movwf	___fladd@b+1
  2656  02D6  083E               	movf	?_fround,w
  2657  02D7  00D2               	movwf	___fladd@b
  2658  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2659  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2660  02DA  0840               	movf	(sprintf@fval+3)^(0+128),w
  2661  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2662  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2663  02DD  00D9               	movwf	___fladd@a+3
  2664  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2665  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2666  02E0  083F               	movf	(sprintf@fval+2)^(0+128),w
  2667  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2668  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2669  02E3  00D8               	movwf	___fladd@a+2
  2670  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2671  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2672  02E6  083E               	movf	(sprintf@fval+1)^(0+128),w
  2673  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2674  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2675  02E9  00D7               	movwf	___fladd@a+1
  2676  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2677  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2678  02EC  083D               	movf	sprintf@fval^(0+128),w
  2679  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2680  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2681  02EF  00D6               	movwf	___fladd@a
  2682  02F0  160A  118A  2578  120A  118A  	fcall	___fladd
  2683  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2684  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2685  02F7  0855               	movf	?___fladd+3,w
  2686  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2687  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  2688  02FA  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2689  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2690  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2691  02FD  0854               	movf	?___fladd+2,w
  2692  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2693  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0300  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2695  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0303  0853               	movf	?___fladd+1,w
  2698  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2700  0306  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2701  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2702  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0309  0852               	movf	?___fladd,w
  2704  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2705  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2706  030C  00BD               	movwf	sprintf@fval^(0+128)
  2707  030D                     l3276:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2710  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2711  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2712  030F  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2713  0310  3A80               	xorlw	128
  2714  0311  00FF               	movwf	btemp+1
  2715  0312  3080               	movlw	128
  2716  0313  027F               	subwf	btemp+1,w
  2717  0314  1D03               	skipz
  2718  0315  2B18               	goto	u5255
  2719  0316  300A               	movlw	10
  2720  0317  023B               	subwf	sprintf@eexp^(0+128),w
  2721  0318                     u5255:
  2722  0318  1803               	skipnc
  2723  0319  2B1B               	goto	u5251
  2724  031A  2B1C               	goto	u5250
  2725  031B                     u5251:
  2726  031B  2B6D               	goto	l3284
  2727  031C                     u5250:
  2728  031C                     l3278:
  2729  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2730  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2731  031E  0840               	movf	(sprintf@fval+3)^(0+128),w
  2732  031F  00F3               	movwf	___fleq@ff1+3
  2733  0320  083F               	movf	(sprintf@fval+2)^(0+128),w
  2734  0321  00F2               	movwf	___fleq@ff1+2
  2735  0322  083E               	movf	(sprintf@fval+1)^(0+128),w
  2736  0323  00F1               	movwf	___fleq@ff1+1
  2737  0324  083D               	movf	sprintf@fval^(0+128),w
  2738  0325  00F0               	movwf	___fleq@ff1
  2739  0326  3000               	movlw	0
  2740  0327  00F7               	movwf	___fleq@ff2+3
  2741  0328  3000               	movlw	0
  2742  0329  00F6               	movwf	___fleq@ff2+2
  2743  032A  3000               	movlw	0
  2744  032B  00F5               	movwf	___fleq@ff2+1
  2745  032C  3000               	movlw	0
  2746  032D  00F4               	movwf	___fleq@ff2
  2747  032E  160A  158A  24EA  120A  118A  	fcall	___fleq
  2748  0333  1803               	btfsc	3,0
  2749  0334  2B36               	goto	u5261
  2750  0335  2B37               	goto	u5260
  2751  0336                     u5261:
  2752  0336  2BDF               	goto	l3298
  2753  0337                     u5260:
  2754  0337                     l3280:
  2755  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2757  0339  0840               	movf	(sprintf@fval+3)^(0+128),w
  2758  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2759  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2760  033C  00D4               	movwf	___fltol@f1+3
  2761  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2762  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2763  033F  083F               	movf	(sprintf@fval+2)^(0+128),w
  2764  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0342  00D3               	movwf	___fltol@f1+2
  2767  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2768  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2769  0345  083E               	movf	(sprintf@fval+1)^(0+128),w
  2770  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0348  00D2               	movwf	___fltol@f1+1
  2773  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2774  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2775  034B  083D               	movf	sprintf@fval^(0+128),w
  2776  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2777  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2778  034E  00D1               	movwf	___fltol@f1
  2779  034F  160A  118A  200D  120A  118A  	fcall	___fltol
  2780  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0356  0854               	movf	?___fltol+3,w
  2783  0357  0453               	iorwf	?___fltol+2,w
  2784  0358  0452               	iorwf	?___fltol+1,w
  2785  0359  0451               	iorwf	?___fltol,w
  2786  035A  1D03               	skipz
  2787  035B  2B5D               	goto	u5271
  2788  035C  2B5E               	goto	u5270
  2789  035D                     u5271:
  2790  035D  2BDF               	goto	l3298
  2791  035E                     u5270:
  2792  035E                     l3282:
  2793  035E  1683               	bsf	3,5	;RP0=1, select bank1
  2794  035F  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0360  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2796  0361  3A80               	xorlw	128
  2797  0362  00FF               	movwf	btemp+1
  2798  0363  3080               	movlw	128
  2799  0364  027F               	subwf	btemp+1,w
  2800  0365  1D03               	skipz
  2801  0366  2B69               	goto	u5285
  2802  0367  3002               	movlw	2
  2803  0368  023B               	subwf	sprintf@eexp^(0+128),w
  2804  0369                     u5285:
  2805  0369  1C03               	skipc
  2806  036A  2B6C               	goto	u5281
  2807  036B  2B6D               	goto	u5280
  2808  036C                     u5281:
  2809  036C  2BDF               	goto	l3298
  2810  036D                     u5280:
  2811  036D                     l3284:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2814  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2815  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2816  036F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2817  0370  00F3               	movwf	___flge@ff1+3
  2818  0371  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2819  0372  00F2               	movwf	___flge@ff1+2
  2820  0373  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2821  0374  00F1               	movwf	___flge@ff1+1
  2822  0375  0837               	movf	sprintf@tmpval^(0+128),w
  2823  0376  00F0               	movwf	___flge@ff1
  2824  0377  3040               	movlw	64
  2825  0378  00F7               	movwf	___flge@ff2+3
  2826  0379  3089               	movlw	137
  2827  037A  00F6               	movwf	___flge@ff2+2
  2828  037B  3070               	movlw	112
  2829  037C  00F5               	movwf	___flge@ff2+1
  2830  037D  305F               	movlw	95
  2831  037E  00F4               	movwf	___flge@ff2
  2832  037F  160A  158A  25E5  120A  118A  	fcall	___flge
  2833  0384  1803               	btfsc	3,0
  2834  0385  2B87               	goto	u5291
  2835  0386  2B88               	goto	u5290
  2836  0387                     u5291:
  2837  0387  2B91               	goto	l3288
  2838  0388                     u5290:
  2839  0388                     l3286:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2842  0388  30F7               	movlw	247
  2843  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2844  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2845  038B  07BB               	addwf	sprintf@eexp^(0+128),f
  2846  038C  1803               	skipnc
  2847  038D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2848  038E  30FF               	movlw	255
  2849  038F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2852  0390  2B99               	goto	l3290
  2853  0391                     l3288:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2856  0391  30F8               	movlw	248
  2857  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2859  0394  07BB               	addwf	sprintf@eexp^(0+128),f
  2860  0395  1803               	skipnc
  2861  0396  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2862  0397  30FF               	movlw	255
  2863  0398  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2864  0399                     l3290:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2867  0399  083B               	movf	sprintf@eexp^(0+128),w
  2868  039A  120A  158A  2140  120A  118A  	fcall	_scale
  2869  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2870  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2871  03A1  0841               	movf	?_scale+3,w
  2872  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2873  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2874  03A4  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2875  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2876  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2877  03A7  0840               	movf	?_scale+2,w
  2878  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2879  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2880  03AA  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2881  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2882  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2883  03AD  083F               	movf	?_scale+1,w
  2884  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2885  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2886  03B0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2887  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2888  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2889  03B3  083E               	movf	?_scale,w
  2890  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2891  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2892  03B6  00B7               	movwf	sprintf@tmpval^(0+128)
  2893  03B7                     l3292:
  2894  03B7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2895  03B8  00F3               	movwf	__div_to_l_@f1+3
  2896  03B9  083F               	movf	(sprintf@fval+2)^(0+128),w
  2897  03BA  00F2               	movwf	__div_to_l_@f1+2
  2898  03BB  083E               	movf	(sprintf@fval+1)^(0+128),w
  2899  03BC  00F1               	movwf	__div_to_l_@f1+1
  2900  03BD  083D               	movf	sprintf@fval^(0+128),w
  2901  03BE  00F0               	movwf	__div_to_l_@f1
  2902  03BF  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2903  03C0  00F7               	movwf	__div_to_l_@f2+3
  2904  03C1  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2905  03C2  00F6               	movwf	__div_to_l_@f2+2
  2906  03C3  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2907  03C4  00F5               	movwf	__div_to_l_@f2+1
  2908  03C5  0837               	movf	sprintf@tmpval^(0+128),w
  2909  03C6  00F4               	movwf	__div_to_l_@f2
  2910  03C7  160A  118A  2089  120A  118A  	fcall	__div_to_l_
  2911  03CC  0873               	movf	?__div_to_l_+3,w
  2912  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2913  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2914  03CF  00B2               	movwf	(sprintf@val+3)^(0+128)
  2915  03D0  0872               	movf	?__div_to_l_+2,w
  2916  03D1  00B1               	movwf	(sprintf@val+2)^(0+128)
  2917  03D2  0871               	movf	?__div_to_l_+1,w
  2918  03D3  00B0               	movwf	(sprintf@val+1)^(0+128)
  2919  03D4  0870               	movf	?__div_to_l_,w
  2920  03D5  00AF               	movwf	sprintf@val^(0+128)
  2921  03D6                     l3296:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2924  03D6  3000               	movlw	0
  2925  03D7  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2926  03D8  3000               	movlw	0
  2927  03D9  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2928  03DA  3000               	movlw	0
  2929  03DB  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2930  03DC  3000               	movlw	0
  2931  03DD  00BD               	movwf	sprintf@fval^(0+128)
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2934  03DE  2C63               	goto	l3304
  2935  03DF                     l3298:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2938  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2939  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  2940  03E1  0840               	movf	(sprintf@fval+3)^(0+128),w
  2941  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2942  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2943  03E4  00D4               	movwf	___fltol@f1+3
  2944  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2945  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2946  03E7  083F               	movf	(sprintf@fval+2)^(0+128),w
  2947  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2948  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2949  03EA  00D3               	movwf	___fltol@f1+2
  2950  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2951  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2952  03ED  083E               	movf	(sprintf@fval+1)^(0+128),w
  2953  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2954  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2955  03F0  00D2               	movwf	___fltol@f1+1
  2956  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2957  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2958  03F3  083D               	movf	sprintf@fval^(0+128),w
  2959  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2960  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2961  03F6  00D1               	movwf	___fltol@f1
  2962  03F7  160A  118A  200D  120A  118A  	fcall	___fltol
  2963  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2964  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2965  03FE  0854               	movf	?___fltol+3,w
  2966  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2967  0400  1303               	bcf	3,6	;RP1=0, select bank1
  2968  0401  00B2               	movwf	(sprintf@val+3)^(0+128)
  2969  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0404  0853               	movf	?___fltol+2,w
  2972  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2974  0407  00B1               	movwf	(sprintf@val+2)^(0+128)
  2975  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2977  040A  0852               	movf	?___fltol+1,w
  2978  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2979  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2980  040D  00B0               	movwf	(sprintf@val+1)^(0+128)
  2981  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2982  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0410  0851               	movf	?___fltol,w
  2984  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2985  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2986  0413  00AF               	movwf	sprintf@val^(0+128)
  2987  0414                     l3300:
  2988                           
  2989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2990  0414  0832               	movf	(sprintf@val+3)^(0+128),w
  2991  0415  00F9               	movwf	___xxtofl@val+3
  2992  0416  0831               	movf	(sprintf@val+2)^(0+128),w
  2993  0417  00F8               	movwf	___xxtofl@val+2
  2994  0418  0830               	movf	(sprintf@val+1)^(0+128),w
  2995  0419  00F7               	movwf	___xxtofl@val+1
  2996  041A  082F               	movf	sprintf@val^(0+128),w
  2997  041B  00F6               	movwf	___xxtofl@val
  2998  041C  3000               	movlw	0
  2999  041D  160A  158A  2687  120A  118A  	fcall	___xxtofl
  3000  0422  0879               	movf	?___xxtofl+3,w
  3001  0423  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0424  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0425  00E9               	movwf	___flsub@a+3
  3004  0426  0878               	movf	?___xxtofl+2,w
  3005  0427  00E8               	movwf	___flsub@a+2
  3006  0428  0877               	movf	?___xxtofl+1,w
  3007  0429  00E7               	movwf	___flsub@a+1
  3008  042A  0876               	movf	?___xxtofl,w
  3009  042B  00E6               	movwf	___flsub@a
  3010  042C  1683               	bsf	3,5	;RP0=1, select bank1
  3011  042D  1303               	bcf	3,6	;RP1=0, select bank1
  3012  042E  0840               	movf	(sprintf@fval+3)^(0+128),w
  3013  042F  1283               	bcf	3,5	;RP0=0, select bank0
  3014  0430  1303               	bcf	3,6	;RP1=0, select bank0
  3015  0431  00ED               	movwf	___flsub@b+3
  3016  0432  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0433  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0434  083F               	movf	(sprintf@fval+2)^(0+128),w
  3019  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0437  00EC               	movwf	___flsub@b+2
  3022  0438  1683               	bsf	3,5	;RP0=1, select bank1
  3023  0439  1303               	bcf	3,6	;RP1=0, select bank1
  3024  043A  083E               	movf	(sprintf@fval+1)^(0+128),w
  3025  043B  1283               	bcf	3,5	;RP0=0, select bank0
  3026  043C  1303               	bcf	3,6	;RP1=0, select bank0
  3027  043D  00EB               	movwf	___flsub@b+1
  3028  043E  1683               	bsf	3,5	;RP0=1, select bank1
  3029  043F  1303               	bcf	3,6	;RP1=0, select bank1
  3030  0440  083D               	movf	sprintf@fval^(0+128),w
  3031  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0443  00EA               	movwf	___flsub@b
  3034  0444  160A  158A  2313  120A  118A  	fcall	___flsub
  3035  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3036  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3037  044B  0869               	movf	?___flsub+3,w
  3038  044C  1683               	bsf	3,5	;RP0=1, select bank1
  3039  044D  1303               	bcf	3,6	;RP1=0, select bank1
  3040  044E  00C0               	movwf	(sprintf@fval+3)^(0+128)
  3041  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0450  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0451  0868               	movf	?___flsub+2,w
  3044  0452  1683               	bsf	3,5	;RP0=1, select bank1
  3045  0453  1303               	bcf	3,6	;RP1=0, select bank1
  3046  0454  00BF               	movwf	(sprintf@fval+2)^(0+128)
  3047  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0457  0867               	movf	?___flsub+1,w
  3050  0458  1683               	bsf	3,5	;RP0=1, select bank1
  3051  0459  1303               	bcf	3,6	;RP1=0, select bank1
  3052  045A  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3053  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3054  045C  1303               	bcf	3,6	;RP1=0, select bank0
  3055  045D  0866               	movf	?___flsub,w
  3056  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3057  045F  1303               	bcf	3,6	;RP1=0, select bank1
  3058  0460  00BD               	movwf	sprintf@fval^(0+128)
  3059  0461                     l3302:
  3060                           
  3061                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3062  0461  01BB               	clrf	sprintf@eexp^(0+128)
  3063  0462  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3064  0463                     l3304:
  3065                           
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3067  0463  01C4               	clrf	sprintf@c^(0+128)
  3068  0464  0AC4               	incf	sprintf@c^(0+128),f
  3069  0465                     l3310:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3072  0465  0844               	movf	sprintf@c^(0+128),w
  3073  0466  00A5               	movwf	??_sprintf^(0+128)
  3074  0467  3001               	movlw	1
  3075  0468                     u5305:
  3076  0468  1003               	clrc
  3077  0469  0DA5               	rlf	??_sprintf^(0+128),f
  3078  046A  3EFF               	addlw	-1
  3079  046B  1D03               	skipz
  3080  046C  2C68               	goto	u5305
  3081  046D  1003               	clrc
  3082  046E  0D25               	rlf	??_sprintf^(0+128),w
  3083  046F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3084  0470  0084               	movwf	4
  3085  0471  120A  158A  200A  120A  118A  	fcall	stringdir
  3086  0476  00A6               	movwf	(??_sprintf+1)^(0+128)
  3087  0477  120A  158A  200A  120A  118A  	fcall	stringdir
  3088  047C  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3089  047D  120A  158A  200A  120A  118A  	fcall	stringdir
  3090  0482  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3091  0483  120A  158A  200A  120A  118A  	fcall	stringdir
  3092  0488  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3093  0489  0829               	movf	(??_sprintf+4)^(0+128),w
  3094  048A  0232               	subwf	(sprintf@val+3)^(0+128),w
  3095  048B  1D03               	skipz
  3096  048C  2C97               	goto	u5315
  3097  048D  0828               	movf	(??_sprintf+3)^(0+128),w
  3098  048E  0231               	subwf	(sprintf@val+2)^(0+128),w
  3099  048F  1D03               	skipz
  3100  0490  2C97               	goto	u5315
  3101  0491  0827               	movf	(??_sprintf+2)^(0+128),w
  3102  0492  0230               	subwf	(sprintf@val+1)^(0+128),w
  3103  0493  1D03               	skipz
  3104  0494  2C97               	goto	u5315
  3105  0495  0826               	movf	(??_sprintf+1)^(0+128),w
  3106  0496  022F               	subwf	sprintf@val^(0+128),w
  3107  0497                     u5315:
  3108  0497  1803               	skipnc
  3109  0498  2C9A               	goto	u5311
  3110  0499  2C9B               	goto	u5310
  3111  049A                     u5311:
  3112  049A  2C9C               	goto	l3314
  3113  049B                     u5310:
  3114  049B  2CA6               	goto	l3316
  3115  049C                     l3314:
  3116  049C  3001               	movlw	1
  3117  049D  00A5               	movwf	??_sprintf^(0+128)
  3118  049E  0825               	movf	??_sprintf^(0+128),w
  3119  049F  07C4               	addwf	sprintf@c^(0+128),f
  3120  04A0  300A               	movlw	10
  3121  04A1  0644               	xorwf	sprintf@c^(0+128),w
  3122  04A2  1D03               	btfss	3,2
  3123  04A3  2CA5               	goto	u5321
  3124  04A4  2CA6               	goto	u5320
  3125  04A5                     u5321:
  3126  04A5  2C65               	goto	l3310
  3127  04A6                     u5320:
  3128  04A6                     l3316:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3131  04A6  0844               	movf	sprintf@c^(0+128),w
  3132  04A7  0742               	addwf	sprintf@prec^(0+128),w
  3133  04A8  00A5               	movwf	??_sprintf^(0+128)
  3134  04A9  0843               	movf	(sprintf@prec+1)^(0+128),w
  3135  04AA  1803               	skipnc
  3136  04AB  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3137  04AC  00A6               	movwf	(??_sprintf^(0+128)+1)
  3138  04AD  083B               	movf	sprintf@eexp^(0+128),w
  3139  04AE  0725               	addwf	??_sprintf^(0+128),w
  3140  04AF  00A7               	movwf	(??_sprintf+2)^(0+128)
  3141  04B0  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3142  04B1  1803               	skipnc
  3143  04B2  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3144  04B3  0726               	addwf	(??_sprintf+1)^(0+128),w
  3145  04B4  00A8               	movwf	(??_sprintf+3)^(0+128)
  3146  04B5  0827               	movf	(??_sprintf+2)^(0+128),w
  3147  04B6  02B5               	subwf	sprintf@width^(0+128),f
  3148  04B7  0828               	movf	(??_sprintf+3)^(0+128),w
  3149  04B8  1C03               	skipc
  3150  04B9  03B6               	decf	(sprintf@width+1)^(0+128),f
  3151  04BA  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3152                           
  3153                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1169:     if(
  3154  04BB  0842               	movf	sprintf@prec^(0+128),w
  3155  04BC  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3156  04BD  1903               	btfsc	3,2
  3157  04BE  2CC0               	goto	u5331
  3158  04BF  2CC1               	goto	u5330
  3159  04C0                     u5331:
  3160  04C0  2CC7               	goto	l3320
  3161  04C1                     u5330:
  3162  04C1                     l3318:
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3165  04C1  30FF               	movlw	255
  3166  04C2  07B5               	addwf	sprintf@width^(0+128),f
  3167  04C3  1803               	skipnc
  3168  04C4  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3169  04C5  30FF               	movlw	255
  3170  04C6  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3171  04C7                     l3320:
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3174  04C7  3003               	movlw	3
  3175  04C8  0533               	andwf	sprintf@flag^(0+128),w
  3176  04C9  00A5               	movwf	??_sprintf^(0+128)
  3177  04CA  3000               	movlw	0
  3178  04CB  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3179  04CC  00A6               	movwf	(??_sprintf+1)^(0+128)
  3180  04CD  0825               	movf	??_sprintf^(0+128),w
  3181  04CE  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3182  04CF  1903               	btfsc	3,2
  3183  04D0  2CD2               	goto	u5341
  3184  04D1  2CD3               	goto	u5340
  3185  04D2                     u5341:
  3186  04D2  2CE8               	goto	l3330
  3187  04D3                     u5340:
  3188  04D3                     l3322:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3191  04D3  30FF               	movlw	255
  3192  04D4  07B5               	addwf	sprintf@width^(0+128),f
  3193  04D5  1803               	skipnc
  3194  04D6  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3195  04D7  30FF               	movlw	255
  3196  04D8  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3197  04D9  2CE8               	goto	l3330
  3198  04DA                     l3324:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3201  04DA  3020               	movlw	32
  3202  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  3203  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  3204  04DD  00A5               	movwf	??_sprintf^(0+128)
  3205  04DE  0841               	movf	sprintf@sp^(0+128),w
  3206  04DF  0084               	movwf	4
  3207  04E0  0825               	movf	??_sprintf^(0+128),w
  3208  04E1  1783               	bsf	3,7	;select IRP bank2
  3209  04E2  0080               	movwf	0
  3210  04E3                     l3326:
  3211  04E3  3001               	movlw	1
  3212  04E4  00A5               	movwf	??_sprintf^(0+128)
  3213  04E5  0825               	movf	??_sprintf^(0+128),w
  3214  04E6  07C1               	addwf	sprintf@sp^(0+128),f
  3215  04E7  2CD3               	goto	l3322
  3216  04E8                     l3330:
  3217                           
  3218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3219  04E8  0836               	movf	(sprintf@width+1)^(0+128),w
  3220  04E9  3A80               	xorlw	128
  3221  04EA  00FF               	movwf	btemp+1
  3222  04EB  3080               	movlw	128
  3223  04EC  027F               	subwf	btemp+1,w
  3224  04ED  1D03               	skipz
  3225  04EE  2CF1               	goto	u5355
  3226  04EF  3001               	movlw	1
  3227  04F0  0235               	subwf	sprintf@width^(0+128),w
  3228  04F1                     u5355:
  3229  04F1  1803               	skipnc
  3230  04F2  2CF4               	goto	u5351
  3231  04F3  2CF5               	goto	u5350
  3232  04F4                     u5351:
  3233  04F4  2CDA               	goto	l3324
  3234  04F5                     u5350:
  3235  04F5                     l3332:
  3236                           
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3238  04F5  3003               	movlw	3
  3239  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3240  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  3241  04F8  0533               	andwf	sprintf@flag^(0+128),w
  3242  04F9  00A5               	movwf	??_sprintf^(0+128)
  3243  04FA  3000               	movlw	0
  3244  04FB  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3245  04FC  00A6               	movwf	(??_sprintf+1)^(0+128)
  3246  04FD  0825               	movf	??_sprintf^(0+128),w
  3247  04FE  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3248  04FF  1903               	btfsc	3,2
  3249  0500  2D02               	goto	u5361
  3250  0501  2D03               	goto	u5360
  3251  0502                     u5361:
  3252  0502  2D75               	goto	l315
  3253  0503                     u5360:
  3254  0503                     l3334:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3257  0503  302D               	movlw	45
  3258  0504  00A5               	movwf	??_sprintf^(0+128)
  3259  0505  0841               	movf	sprintf@sp^(0+128),w
  3260  0506  0084               	movwf	4
  3261  0507  0825               	movf	??_sprintf^(0+128),w
  3262  0508  1783               	bsf	3,7	;select IRP bank2
  3263  0509  0080               	movwf	0
  3264  050A                     l3336:
  3265  050A  3001               	movlw	1
  3266  050B  00A5               	movwf	??_sprintf^(0+128)
  3267  050C  0825               	movf	??_sprintf^(0+128),w
  3268  050D  07C1               	addwf	sprintf@sp^(0+128),f
  3269  050E  2D75               	goto	l315
  3270  050F                     l3338:
  3271                           
  3272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3273  050F  0844               	movf	sprintf@c^(0+128),w
  3274  0510  00A5               	movwf	??_sprintf^(0+128)
  3275  0511  3001               	movlw	1
  3276  0512                     u5375:
  3277  0512  1003               	clrc
  3278  0513  0DA5               	rlf	??_sprintf^(0+128),f
  3279  0514  3EFF               	addlw	-1
  3280  0515  1D03               	skipz
  3281  0516  2D12               	goto	u5375
  3282  0517  1003               	clrc
  3283  0518  0D25               	rlf	??_sprintf^(0+128),w
  3284  0519  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3285  051A  0084               	movwf	4
  3286  051B  120A  158A  200A  120A  118A  	fcall	stringdir
  3287  0520  00F0               	movwf	___lldiv@divisor
  3288  0521  120A  158A  200A  120A  118A  	fcall	stringdir
  3289  0526  00F1               	movwf	___lldiv@divisor+1
  3290  0527  120A  158A  200A  120A  118A  	fcall	stringdir
  3291  052C  00F2               	movwf	___lldiv@divisor+2
  3292  052D  120A  158A  200A  120A  118A  	fcall	stringdir
  3293  0532  00F3               	movwf	___lldiv@divisor+3
  3294  0533  0832               	movf	(sprintf@val+3)^(0+128),w
  3295  0534  00F7               	movwf	___lldiv@dividend+3
  3296  0535  0831               	movf	(sprintf@val+2)^(0+128),w
  3297  0536  00F6               	movwf	___lldiv@dividend+2
  3298  0537  0830               	movf	(sprintf@val+1)^(0+128),w
  3299  0538  00F5               	movwf	___lldiv@dividend+1
  3300  0539  082F               	movf	sprintf@val^(0+128),w
  3301  053A  00F4               	movwf	___lldiv@dividend
  3302  053B  120A  118A  2005  120A  118A  	fcall	___lldiv
  3303  0540  0873               	movf	?___lldiv+3,w
  3304  0541  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0542  1303               	bcf	3,6	;RP1=0, select bank1
  3306  0543  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3307  0544  0872               	movf	?___lldiv+2,w
  3308  0545  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3309  0546  0871               	movf	?___lldiv+1,w
  3310  0547  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3311  0548  0870               	movf	?___lldiv,w
  3312  0549  00B7               	movwf	sprintf@tmpval^(0+128)
  3313  054A                     l3340:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3316  054A  3000               	movlw	0
  3317  054B  00F3               	movwf	___llmod@divisor+3
  3318  054C  3000               	movlw	0
  3319  054D  00F2               	movwf	___llmod@divisor+2
  3320  054E  3000               	movlw	0
  3321  054F  00F1               	movwf	___llmod@divisor+1
  3322  0550  300A               	movlw	10
  3323  0551  00F0               	movwf	___llmod@divisor
  3324  0552  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3325  0553  00F7               	movwf	___llmod@dividend+3
  3326  0554  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3327  0555  00F6               	movwf	___llmod@dividend+2
  3328  0556  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3329  0557  00F5               	movwf	___llmod@dividend+1
  3330  0558  0837               	movf	sprintf@tmpval^(0+128),w
  3331  0559  00F4               	movwf	___llmod@dividend
  3332  055A  160A  158A  2538  120A  118A  	fcall	___llmod
  3333  055F  0873               	movf	?___llmod+3,w
  3334  0560  1683               	bsf	3,5	;RP0=1, select bank1
  3335  0561  1303               	bcf	3,6	;RP1=0, select bank1
  3336  0562  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3337  0563  0872               	movf	?___llmod+2,w
  3338  0564  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3339  0565  0871               	movf	?___llmod+1,w
  3340  0566  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3341  0567  0870               	movf	?___llmod,w
  3342  0568  00B7               	movwf	sprintf@tmpval^(0+128)
  3343  0569                     l3342:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3346  0569  0837               	movf	sprintf@tmpval^(0+128),w
  3347  056A  3E30               	addlw	48
  3348  056B  00A5               	movwf	??_sprintf^(0+128)
  3349  056C  0841               	movf	sprintf@sp^(0+128),w
  3350  056D  0084               	movwf	4
  3351  056E  0825               	movf	??_sprintf^(0+128),w
  3352  056F  1783               	bsf	3,7	;select IRP bank2
  3353  0570  0080               	movwf	0
  3354  0571  3001               	movlw	1
  3355  0572  00A5               	movwf	??_sprintf^(0+128)
  3356  0573  0825               	movf	??_sprintf^(0+128),w
  3357  0574  07C1               	addwf	sprintf@sp^(0+128),f
  3358  0575                     l315:	
  3359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  3360                           
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3363  0575  3001               	movlw	1
  3364  0576  02C4               	subwf	sprintf@c^(0+128),f
  3365  0577  0A44               	incf	sprintf@c^(0+128),w
  3366  0578  1D03               	btfss	3,2
  3367  0579  2D7B               	goto	u5381
  3368  057A  2D7C               	goto	u5380
  3369  057B                     u5381:
  3370  057B  2D0F               	goto	l3338
  3371  057C                     u5380:
  3372  057C  2D90               	goto	l3350
  3373  057D                     l3344:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3376  057D  3030               	movlw	48
  3377  057E  1683               	bsf	3,5	;RP0=1, select bank1
  3378  057F  1303               	bcf	3,6	;RP1=0, select bank1
  3379  0580  00A5               	movwf	??_sprintf^(0+128)
  3380  0581  0841               	movf	sprintf@sp^(0+128),w
  3381  0582  0084               	movwf	4
  3382  0583  0825               	movf	??_sprintf^(0+128),w
  3383  0584  1783               	bsf	3,7	;select IRP bank2
  3384  0585  0080               	movwf	0
  3385  0586                     l3346:
  3386  0586  3001               	movlw	1
  3387  0587  00A5               	movwf	??_sprintf^(0+128)
  3388  0588  0825               	movf	??_sprintf^(0+128),w
  3389  0589  07C1               	addwf	sprintf@sp^(0+128),f
  3390  058A                     l3348:
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3393  058A  30FF               	movlw	255
  3394  058B  07BB               	addwf	sprintf@eexp^(0+128),f
  3395  058C  1803               	skipnc
  3396  058D  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3397  058E  30FF               	movlw	255
  3398  058F  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3399  0590                     l3350:
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3402  0590  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3403  0591  3A80               	xorlw	128
  3404  0592  00FF               	movwf	btemp+1
  3405  0593  3080               	movlw	128
  3406  0594  027F               	subwf	btemp+1,w
  3407  0595  1D03               	skipz
  3408  0596  2D99               	goto	u5395
  3409  0597  3001               	movlw	1
  3410  0598  023B               	subwf	sprintf@eexp^(0+128),w
  3411  0599                     u5395:
  3412  0599  1803               	skipnc
  3413  059A  2D9C               	goto	u5391
  3414  059B  2D9D               	goto	u5390
  3415  059C                     u5391:
  3416  059C  2D7D               	goto	l3344
  3417  059D                     u5390:
  3418  059D                     l3352:
  3419                           
  3420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3421  059D  1683               	bsf	3,5	;RP0=1, select bank1
  3422  059E  1303               	bcf	3,6	;RP1=0, select bank1
  3423  059F  0843               	movf	(sprintf@prec+1)^(0+128),w
  3424  05A0  3A80               	xorlw	128
  3425  05A1  00FF               	movwf	btemp+1
  3426  05A2  3080               	movlw	128
  3427  05A3  027F               	subwf	btemp+1,w
  3428  05A4  1D03               	skipz
  3429  05A5  2DA8               	goto	u5405
  3430  05A6  3009               	movlw	9
  3431  05A7  0242               	subwf	sprintf@prec^(0+128),w
  3432  05A8                     u5405:
  3433  05A8  1C03               	skipc
  3434  05A9  2DAB               	goto	u5401
  3435  05AA  2DAC               	goto	u5400
  3436  05AB                     u5401:
  3437  05AB  2DB3               	goto	l3356
  3438  05AC                     u5400:
  3439  05AC                     l3354:
  3440                           
  3441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3442  05AC  3008               	movlw	8
  3443  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  3444  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  3445  05AF  00A5               	movwf	??_sprintf^(0+128)
  3446  05B0  0825               	movf	??_sprintf^(0+128),w
  3447  05B1  00C4               	movwf	sprintf@c^(0+128)
  3448  05B2  2DB9               	goto	l322
  3449  05B3                     l3356:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3452  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3453  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3454  05B5  0842               	movf	sprintf@prec^(0+128),w
  3455  05B6  00A5               	movwf	??_sprintf^(0+128)
  3456  05B7  0825               	movf	??_sprintf^(0+128),w
  3457  05B8  00C4               	movwf	sprintf@c^(0+128)
  3458  05B9                     l322:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3461  05B9  0844               	movf	sprintf@c^(0+128),w
  3462  05BA  00A5               	movwf	??_sprintf^(0+128)
  3463  05BB  01A6               	clrf	(??_sprintf^(0+128)+1)
  3464  05BC  0825               	movf	??_sprintf^(0+128),w
  3465  05BD  02C2               	subwf	sprintf@prec^(0+128),f
  3466  05BE  0826               	movf	(??_sprintf+1)^(0+128),w
  3467  05BF  1C03               	skipc
  3468  05C0  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3469  05C1  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3470  05C2                     l3358:
  3471                           
  3472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3473  05C2  0844               	movf	sprintf@c^(0+128),w
  3474  05C3  1903               	btfsc	3,2
  3475  05C4  2DC6               	goto	u5411
  3476  05C5  2DC7               	goto	u5410
  3477  05C6                     u5411:
  3478  05C6  2DD2               	goto	l3364
  3479  05C7                     u5410:
  3480  05C7                     l3360:
  3481                           
  3482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3483  05C7  302E               	movlw	46
  3484  05C8  00A5               	movwf	??_sprintf^(0+128)
  3485  05C9  0841               	movf	sprintf@sp^(0+128),w
  3486  05CA  0084               	movwf	4
  3487  05CB  0825               	movf	??_sprintf^(0+128),w
  3488  05CC  1783               	bsf	3,7	;select IRP bank2
  3489  05CD  0080               	movwf	0
  3490  05CE                     l3362:
  3491  05CE  3001               	movlw	1
  3492  05CF  00A5               	movwf	??_sprintf^(0+128)
  3493  05D0  0825               	movf	??_sprintf^(0+128),w
  3494  05D1  07C1               	addwf	sprintf@sp^(0+128),f
  3495  05D2                     l3364:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3498  05D2  0844               	movf	sprintf@c^(0+128),w
  3499  05D3  120A  158A  2140  120A  118A  	fcall	_scale
  3500  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3501  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3502  05DA  0841               	movf	?_scale+3,w
  3503  05DB  1683               	bsf	3,5	;RP0=1, select bank1
  3504  05DC  1303               	bcf	3,6	;RP1=0, select bank1
  3505  05DD  00AD               	movwf	(_sprintf$942+3)^(0+128)
  3506  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3507  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3508  05E0  0840               	movf	?_scale+2,w
  3509  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3510  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  3511  05E3  00AC               	movwf	(_sprintf$942+2)^(0+128)
  3512  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3513  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3514  05E6  083F               	movf	?_scale+1,w
  3515  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3516  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3517  05E9  00AB               	movwf	(_sprintf$942+1)^(0+128)
  3518  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3519  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3520  05EC  083E               	movf	?_scale,w
  3521  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3522  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3523  05EF  00AA               	movwf	_sprintf$942^(0+128)
  3524  05F0                     l3366:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3527  05F0  082D               	movf	(_sprintf$942+3)^(0+128),w
  3528  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3529  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3530  05F3  00AB               	movwf	___flmul@a+3
  3531  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3532  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3533  05F6  082C               	movf	(_sprintf$942+2)^(0+128),w
  3534  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3535  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3536  05F9  00AA               	movwf	___flmul@a+2
  3537  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3538  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3539  05FC  082B               	movf	(_sprintf$942+1)^(0+128),w
  3540  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3541  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3542  05FF  00A9               	movwf	___flmul@a+1
  3543  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3544  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3545  0602  082A               	movf	_sprintf$942^(0+128),w
  3546  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0605  00A8               	movwf	___flmul@a
  3549  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3550  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3551  0608  0840               	movf	(sprintf@fval+3)^(0+128),w
  3552  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3553  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3554  060B  00A7               	movwf	___flmul@b+3
  3555  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3556  060D  1303               	bcf	3,6	;RP1=0, select bank1
  3557  060E  083F               	movf	(sprintf@fval+2)^(0+128),w
  3558  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0611  00A6               	movwf	___flmul@b+2
  3561  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3562  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3563  0614  083E               	movf	(sprintf@fval+1)^(0+128),w
  3564  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0617  00A5               	movwf	___flmul@b+1
  3567  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3568  0619  1303               	bcf	3,6	;RP1=0, select bank1
  3569  061A  083D               	movf	sprintf@fval^(0+128),w
  3570  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3571  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3572  061D  00A4               	movwf	___flmul@b
  3573  061E  120A  158A  249F  120A  118A  	fcall	___flmul
  3574  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3575  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3576  0625  0827               	movf	?___flmul+3,w
  3577  0626  00D4               	movwf	___fltol@f1+3
  3578  0627  0826               	movf	?___flmul+2,w
  3579  0628  00D3               	movwf	___fltol@f1+2
  3580  0629  0825               	movf	?___flmul+1,w
  3581  062A  00D2               	movwf	___fltol@f1+1
  3582  062B  0824               	movf	?___flmul,w
  3583  062C  00D1               	movwf	___fltol@f1
  3584  062D  160A  118A  200D  120A  118A  	fcall	___fltol
  3585  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0634  0854               	movf	?___fltol+3,w
  3588  0635  1683               	bsf	3,5	;RP0=1, select bank1
  3589  0636  1303               	bcf	3,6	;RP1=0, select bank1
  3590  0637  00B2               	movwf	(sprintf@val+3)^(0+128)
  3591  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3593  063A  0853               	movf	?___fltol+2,w
  3594  063B  1683               	bsf	3,5	;RP0=1, select bank1
  3595  063C  1303               	bcf	3,6	;RP1=0, select bank1
  3596  063D  00B1               	movwf	(sprintf@val+2)^(0+128)
  3597  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3598  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0640  0852               	movf	?___fltol+1,w
  3600  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3601  0642  1303               	bcf	3,6	;RP1=0, select bank1
  3602  0643  00B0               	movwf	(sprintf@val+1)^(0+128)
  3603  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0646  0851               	movf	?___fltol,w
  3606  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3608  0649  00AF               	movwf	sprintf@val^(0+128)
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3611  064A  2EEC               	goto	l3376
  3612  064B                     l3368:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3615  064B  0844               	movf	sprintf@c^(0+128),w
  3616  064C  00A5               	movwf	??_sprintf^(0+128)
  3617  064D  3001               	movlw	1
  3618  064E                     u5425:
  3619  064E  1003               	clrc
  3620  064F  0DA5               	rlf	??_sprintf^(0+128),f
  3621  0650  3EFF               	addlw	-1
  3622  0651  1D03               	skipz
  3623  0652  2E4E               	goto	u5425
  3624  0653  1003               	clrc
  3625  0654  0D25               	rlf	??_sprintf^(0+128),w
  3626  0655  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3627  0656  0084               	movwf	4
  3628  0657  120A  158A  200A  120A  118A  	fcall	stringdir
  3629  065C  00F0               	movwf	___lldiv@divisor
  3630  065D  120A  158A  200A  120A  118A  	fcall	stringdir
  3631  0662  00F1               	movwf	___lldiv@divisor+1
  3632  0663  120A  158A  200A  120A  118A  	fcall	stringdir
  3633  0668  00F2               	movwf	___lldiv@divisor+2
  3634  0669  120A  158A  200A  120A  118A  	fcall	stringdir
  3635  066E  00F3               	movwf	___lldiv@divisor+3
  3636  066F  0832               	movf	(sprintf@val+3)^(0+128),w
  3637  0670  00F7               	movwf	___lldiv@dividend+3
  3638  0671  0831               	movf	(sprintf@val+2)^(0+128),w
  3639  0672  00F6               	movwf	___lldiv@dividend+2
  3640  0673  0830               	movf	(sprintf@val+1)^(0+128),w
  3641  0674  00F5               	movwf	___lldiv@dividend+1
  3642  0675  082F               	movf	sprintf@val^(0+128),w
  3643  0676  00F4               	movwf	___lldiv@dividend
  3644  0677  120A  118A  2005  120A  118A  	fcall	___lldiv
  3645  067C  0873               	movf	?___lldiv+3,w
  3646  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3647  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3648  067F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3649  0680  0872               	movf	?___lldiv+2,w
  3650  0681  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3651  0682  0871               	movf	?___lldiv+1,w
  3652  0683  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3653  0684  0870               	movf	?___lldiv,w
  3654  0685  00B7               	movwf	sprintf@tmpval^(0+128)
  3655  0686                     l3370:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3658  0686  3000               	movlw	0
  3659  0687  00F3               	movwf	___llmod@divisor+3
  3660  0688  3000               	movlw	0
  3661  0689  00F2               	movwf	___llmod@divisor+2
  3662  068A  3000               	movlw	0
  3663  068B  00F1               	movwf	___llmod@divisor+1
  3664  068C  300A               	movlw	10
  3665  068D  00F0               	movwf	___llmod@divisor
  3666  068E  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3667  068F  00F7               	movwf	___llmod@dividend+3
  3668  0690  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3669  0691  00F6               	movwf	___llmod@dividend+2
  3670  0692  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3671  0693  00F5               	movwf	___llmod@dividend+1
  3672  0694  0837               	movf	sprintf@tmpval^(0+128),w
  3673  0695  00F4               	movwf	___llmod@dividend
  3674  0696  160A  158A  2538  120A  118A  	fcall	___llmod
  3675  069B  0873               	movf	?___llmod+3,w
  3676  069C  1683               	bsf	3,5	;RP0=1, select bank1
  3677  069D  1303               	bcf	3,6	;RP1=0, select bank1
  3678  069E  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3679  069F  0872               	movf	?___llmod+2,w
  3680  06A0  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3681  06A1  0871               	movf	?___llmod+1,w
  3682  06A2  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3683  06A3  0870               	movf	?___llmod,w
  3684  06A4  00B7               	movwf	sprintf@tmpval^(0+128)
  3685  06A5                     l3372:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3688  06A5  0837               	movf	sprintf@tmpval^(0+128),w
  3689  06A6  3E30               	addlw	48
  3690  06A7  00A5               	movwf	??_sprintf^(0+128)
  3691  06A8  0841               	movf	sprintf@sp^(0+128),w
  3692  06A9  0084               	movwf	4
  3693  06AA  0825               	movf	??_sprintf^(0+128),w
  3694  06AB  1783               	bsf	3,7	;select IRP bank2
  3695  06AC  0080               	movwf	0
  3696  06AD  3001               	movlw	1
  3697  06AE  00A5               	movwf	??_sprintf^(0+128)
  3698  06AF  0825               	movf	??_sprintf^(0+128),w
  3699  06B0  07C1               	addwf	sprintf@sp^(0+128),f
  3700  06B1                     l3374:
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3703  06B1  0844               	movf	sprintf@c^(0+128),w
  3704  06B2  00A5               	movwf	??_sprintf^(0+128)
  3705  06B3  3001               	movlw	1
  3706  06B4                     u5435:
  3707  06B4  1003               	clrc
  3708  06B5  0DA5               	rlf	??_sprintf^(0+128),f
  3709  06B6  3EFF               	addlw	-1
  3710  06B7  1D03               	skipz
  3711  06B8  2EB4               	goto	u5435
  3712  06B9  1003               	clrc
  3713  06BA  0D25               	rlf	??_sprintf^(0+128),w
  3714  06BB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3715  06BC  0084               	movwf	4
  3716  06BD  120A  158A  200A  120A  118A  	fcall	stringdir
  3717  06C2  00F0               	movwf	___llmod@divisor
  3718  06C3  120A  158A  200A  120A  118A  	fcall	stringdir
  3719  06C8  00F1               	movwf	___llmod@divisor+1
  3720  06C9  120A  158A  200A  120A  118A  	fcall	stringdir
  3721  06CE  00F2               	movwf	___llmod@divisor+2
  3722  06CF  120A  158A  200A  120A  118A  	fcall	stringdir
  3723  06D4  00F3               	movwf	___llmod@divisor+3
  3724  06D5  0832               	movf	(sprintf@val+3)^(0+128),w
  3725  06D6  00F7               	movwf	___llmod@dividend+3
  3726  06D7  0831               	movf	(sprintf@val+2)^(0+128),w
  3727  06D8  00F6               	movwf	___llmod@dividend+2
  3728  06D9  0830               	movf	(sprintf@val+1)^(0+128),w
  3729  06DA  00F5               	movwf	___llmod@dividend+1
  3730  06DB  082F               	movf	sprintf@val^(0+128),w
  3731  06DC  00F4               	movwf	___llmod@dividend
  3732  06DD  160A  158A  2538  120A  118A  	fcall	___llmod
  3733  06E2  0873               	movf	?___llmod+3,w
  3734  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3735  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3736  06E5  00B2               	movwf	(sprintf@val+3)^(0+128)
  3737  06E6  0872               	movf	?___llmod+2,w
  3738  06E7  00B1               	movwf	(sprintf@val+2)^(0+128)
  3739  06E8  0871               	movf	?___llmod+1,w
  3740  06E9  00B0               	movwf	(sprintf@val+1)^(0+128)
  3741  06EA  0870               	movf	?___llmod,w
  3742  06EB  00AF               	movwf	sprintf@val^(0+128)
  3743  06EC                     l3376:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3746  06EC  3001               	movlw	1
  3747  06ED  02C4               	subwf	sprintf@c^(0+128),f
  3748  06EE  0A44               	incf	sprintf@c^(0+128),w
  3749  06EF  1D03               	btfss	3,2
  3750  06F0  2EF2               	goto	u5441
  3751  06F1  2EF3               	goto	u5440
  3752  06F2                     u5441:
  3753  06F2  2E4B               	goto	l3368
  3754  06F3                     u5440:
  3755  06F3  2F05               	goto	l3384
  3756  06F4                     l3378:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3759  06F4  3030               	movlw	48
  3760  06F5  00A5               	movwf	??_sprintf^(0+128)
  3761  06F6  0841               	movf	sprintf@sp^(0+128),w
  3762  06F7  0084               	movwf	4
  3763  06F8  0825               	movf	??_sprintf^(0+128),w
  3764  06F9  1783               	bsf	3,7	;select IRP bank2
  3765  06FA  0080               	movwf	0
  3766  06FB                     l3380:
  3767  06FB  3001               	movlw	1
  3768  06FC  00A5               	movwf	??_sprintf^(0+128)
  3769  06FD  0825               	movf	??_sprintf^(0+128),w
  3770  06FE  07C1               	addwf	sprintf@sp^(0+128),f
  3771  06FF                     l3382:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3774  06FF  30FF               	movlw	255
  3775  0700  07C2               	addwf	sprintf@prec^(0+128),f
  3776  0701  1803               	skipnc
  3777  0702  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3778  0703  30FF               	movlw	255
  3779  0704  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3780  0705                     l3384:
  3781                           
  3782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3783  0705  0842               	movf	sprintf@prec^(0+128),w
  3784  0706  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3785  0707  1D03               	btfss	3,2
  3786  0708  2F0A               	goto	u5451
  3787  0709  2F0B               	goto	u5450
  3788  070A                     u5451:
  3789  070A  2EF4               	goto	l3378
  3790  070B                     u5450:
  3791  070B  2FCF               	goto	l3432
  3792  070C                     l3386:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3795  070C  0842               	movf	sprintf@prec^(0+128),w
  3796  070D  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3797  070E  1D03               	btfss	3,2
  3798  070F  2F11               	goto	u5461
  3799  0710  2F12               	goto	u5460
  3800  0711                     u5461:
  3801  0711  2F20               	goto	l330
  3802  0712                     u5460:
  3803  0712                     l3388:
  3804  0712  0832               	movf	(sprintf@val+3)^(0+128),w
  3805  0713  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3806  0714  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3807  0715  042F               	iorwf	sprintf@val^(0+128),w
  3808  0716  1D03               	skipz
  3809  0717  2F19               	goto	u5471
  3810  0718  2F1A               	goto	u5470
  3811  0719                     u5471:
  3812  0719  2F20               	goto	l330
  3813  071A                     u5470:
  3814  071A                     l3390:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3817  071A  3001               	movlw	1
  3818  071B  07C2               	addwf	sprintf@prec^(0+128),f
  3819  071C  1803               	skipnc
  3820  071D  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3821  071E  3000               	movlw	0
  3822  071F  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3823  0720                     l330:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3826  0720  0843               	movf	(sprintf@prec+1)^(0+128),w
  3827  0721  3A80               	xorlw	128
  3828  0722  3C80               	sublw	128
  3829  0723  1D03               	skipz
  3830  0724  2F27               	goto	u5485
  3831  0725  0842               	movf	sprintf@prec^(0+128),w
  3832  0726  0244               	subwf	sprintf@c^(0+128),w
  3833  0727                     u5485:
  3834  0727  1803               	skipnc
  3835  0728  2F2A               	goto	u5481
  3836  0729  2F2B               	goto	u5480
  3837  072A                     u5481:
  3838  072A  2F32               	goto	l3394
  3839  072B                     u5480:
  3840  072B                     l3392:
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3843  072B  1683               	bsf	3,5	;RP0=1, select bank1
  3844  072C  1303               	bcf	3,6	;RP1=0, select bank1
  3845  072D  0842               	movf	sprintf@prec^(0+128),w
  3846  072E  00A5               	movwf	??_sprintf^(0+128)
  3847  072F  0825               	movf	??_sprintf^(0+128),w
  3848  0730  00C4               	movwf	sprintf@c^(0+128)
  3849  0731  2F4A               	goto	l3398
  3850  0732                     l3394:
  3851  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3852  0733  1303               	bcf	3,6	;RP1=0, select bank1
  3853  0734  0843               	movf	(sprintf@prec+1)^(0+128),w
  3854  0735  3A80               	xorlw	128
  3855  0736  00A5               	movwf	??_sprintf^(0+128)
  3856  0737  3080               	movlw	128
  3857  0738  0225               	subwf	??_sprintf^(0+128),w
  3858  0739  1D03               	skipz
  3859  073A  2F3D               	goto	u5495
  3860  073B  0844               	movf	sprintf@c^(0+128),w
  3861  073C  0242               	subwf	sprintf@prec^(0+128),w
  3862  073D                     u5495:
  3863  073D  1803               	skipnc
  3864  073E  2F40               	goto	u5491
  3865  073F  2F41               	goto	u5490
  3866  0740                     u5491:
  3867  0740  2F4A               	goto	l3398
  3868  0741                     u5490:
  3869  0741                     l3396:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3872  0741  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0742  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0743  0844               	movf	sprintf@c^(0+128),w
  3875  0744  00A5               	movwf	??_sprintf^(0+128)
  3876  0745  01A6               	clrf	(??_sprintf^(0+128)+1)
  3877  0746  0825               	movf	??_sprintf^(0+128),w
  3878  0747  00C2               	movwf	sprintf@prec^(0+128)
  3879  0748  0826               	movf	(??_sprintf+1)^(0+128),w
  3880  0749  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3881  074A                     l3398:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3884  074A  1683               	bsf	3,5	;RP0=1, select bank1
  3885  074B  1303               	bcf	3,6	;RP1=0, select bank1
  3886  074C  0835               	movf	sprintf@width^(0+128),w
  3887  074D  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3888  074E  1903               	btfsc	3,2
  3889  074F  2F51               	goto	u5501
  3890  0750  2F52               	goto	u5500
  3891  0751                     u5501:
  3892  0751  2F64               	goto	l3404
  3893  0752                     u5500:
  3894  0752                     l3400:
  3895  0752  3003               	movlw	3
  3896  0753  0533               	andwf	sprintf@flag^(0+128),w
  3897  0754  00A5               	movwf	??_sprintf^(0+128)
  3898  0755  3000               	movlw	0
  3899  0756  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3900  0757  00A6               	movwf	(??_sprintf+1)^(0+128)
  3901  0758  0825               	movf	??_sprintf^(0+128),w
  3902  0759  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3903  075A  1903               	btfsc	3,2
  3904  075B  2F5D               	goto	u5511
  3905  075C  2F5E               	goto	u5510
  3906  075D                     u5511:
  3907  075D  2F64               	goto	l3404
  3908  075E                     u5510:
  3909  075E                     l3402:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3912  075E  30FF               	movlw	255
  3913  075F  07B5               	addwf	sprintf@width^(0+128),f
  3914  0760  1803               	skipnc
  3915  0761  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3916  0762  30FF               	movlw	255
  3917  0763  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3918  0764                     l3404:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3921  0764  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3922  0765  2F67               	goto	u5521
  3923  0766  2F68               	goto	u5520
  3924  0767                     u5521:
  3925  0767  2F83               	goto	l3412
  3926  0768                     u5520:
  3927  0768                     l3406:
  3928                           
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3930  0768  0843               	movf	(sprintf@prec+1)^(0+128),w
  3931  0769  3A80               	xorlw	128
  3932  076A  00A5               	movwf	??_sprintf^(0+128)
  3933  076B  0836               	movf	(sprintf@width+1)^(0+128),w
  3934  076C  3A80               	xorlw	128
  3935  076D  0225               	subwf	??_sprintf^(0+128),w
  3936  076E  1D03               	skipz
  3937  076F  2F72               	goto	u5535
  3938  0770  0835               	movf	sprintf@width^(0+128),w
  3939  0771  0242               	subwf	sprintf@prec^(0+128),w
  3940  0772                     u5535:
  3941  0772  1803               	skipnc
  3942  0773  2F75               	goto	u5531
  3943  0774  2F76               	goto	u5530
  3944  0775                     u5531:
  3945  0775  2F7F               	goto	l3410
  3946  0776                     u5530:
  3947  0776                     l3408:
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3950  0776  1683               	bsf	3,5	;RP0=1, select bank1
  3951  0777  1303               	bcf	3,6	;RP1=0, select bank1
  3952  0778  0842               	movf	sprintf@prec^(0+128),w
  3953  0779  02B5               	subwf	sprintf@width^(0+128),f
  3954  077A  0843               	movf	(sprintf@prec+1)^(0+128),w
  3955  077B  1C03               	skipc
  3956  077C  03B6               	decf	(sprintf@width+1)^(0+128),f
  3957  077D  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3958  077E  2F83               	goto	l3412
  3959  077F                     l3410:
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3962  077F  1683               	bsf	3,5	;RP0=1, select bank1
  3963  0780  1303               	bcf	3,6	;RP1=0, select bank1
  3964  0781  01B5               	clrf	sprintf@width^(0+128)
  3965  0782  01B6               	clrf	(sprintf@width+1)^(0+128)
  3966  0783                     l3412:
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3969  0783  0836               	movf	(sprintf@width+1)^(0+128),w
  3970  0784  3A80               	xorlw	128
  3971  0785  3C80               	sublw	128
  3972  0786  1D03               	skipz
  3973  0787  2F8A               	goto	u5545
  3974  0788  0835               	movf	sprintf@width^(0+128),w
  3975  0789  0244               	subwf	sprintf@c^(0+128),w
  3976  078A                     u5545:
  3977  078A  1803               	skipnc
  3978  078B  2F8D               	goto	u5541
  3979  078C  2F8E               	goto	u5540
  3980  078D                     u5541:
  3981  078D  2F9A               	goto	l3416
  3982  078E                     u5540:
  3983  078E                     l3414:
  3984                           
  3985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3986  078E  1683               	bsf	3,5	;RP0=1, select bank1
  3987  078F  1303               	bcf	3,6	;RP1=0, select bank1
  3988  0790  0844               	movf	sprintf@c^(0+128),w
  3989  0791  00A5               	movwf	??_sprintf^(0+128)
  3990  0792  01A6               	clrf	(??_sprintf^(0+128)+1)
  3991  0793  0825               	movf	??_sprintf^(0+128),w
  3992  0794  02B5               	subwf	sprintf@width^(0+128),f
  3993  0795  0826               	movf	(??_sprintf+1)^(0+128),w
  3994  0796  1C03               	skipc
  3995  0797  03B6               	decf	(sprintf@width+1)^(0+128),f
  3996  0798  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3997  0799  2F9E               	goto	l3418
  3998  079A                     l3416:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4001  079A  1683               	bsf	3,5	;RP0=1, select bank1
  4002  079B  1303               	bcf	3,6	;RP1=0, select bank1
  4003  079C  01B5               	clrf	sprintf@width^(0+128)
  4004  079D  01B6               	clrf	(sprintf@width+1)^(0+128)
  4005  079E                     l3418:
  4006                           
  4007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4008  079E  0835               	movf	sprintf@width^(0+128),w
  4009  079F  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4010  07A0  1903               	btfsc	3,2
  4011  07A1  2FA3               	goto	u5551
  4012  07A2  2FA4               	goto	u5550
  4013  07A3                     u5551:
  4014  07A3  2FBB               	goto	l3426
  4015  07A4                     u5550:
  4016  07A4                     l3420:
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4019  07A4  3020               	movlw	32
  4020  07A5  00A5               	movwf	??_sprintf^(0+128)
  4021  07A6  0841               	movf	sprintf@sp^(0+128),w
  4022  07A7  0084               	movwf	4
  4023  07A8  0825               	movf	??_sprintf^(0+128),w
  4024  07A9  1783               	bsf	3,7	;select IRP bank2
  4025  07AA  0080               	movwf	0
  4026  07AB                     l3422:
  4027  07AB  3001               	movlw	1
  4028  07AC  00A5               	movwf	??_sprintf^(0+128)
  4029  07AD  0825               	movf	??_sprintf^(0+128),w
  4030  07AE  07C1               	addwf	sprintf@sp^(0+128),f
  4031  07AF                     l3424:
  4032  07AF  30FF               	movlw	255
  4033  07B0  07B5               	addwf	sprintf@width^(0+128),f
  4034  07B1  1803               	skipnc
  4035  07B2  0AB6               	incf	(sprintf@width+1)^(0+128),f
  4036  07B3  30FF               	movlw	255
  4037  07B4  07B6               	addwf	(sprintf@width+1)^(0+128),f
  4038  07B5  0835               	movf	sprintf@width^(0+128),w
  4039  07B6  0436               	iorwf	(sprintf@width+1)^(0+128),w
  4040  07B7  1D03               	btfss	3,2
  4041  07B8  2FBA               	goto	u5561
  4042  07B9  2FBB               	goto	u5560
  4043  07BA                     u5561:
  4044  07BA  2FA4               	goto	l3420
  4045  07BB                     u5560:
  4046  07BB                     l3426:
  4047                           
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4049  07BB  3003               	movlw	3
  4050  07BC  0533               	andwf	sprintf@flag^(0+128),w
  4051  07BD  00A5               	movwf	??_sprintf^(0+128)
  4052  07BE  3000               	movlw	0
  4053  07BF  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4054  07C0  00A6               	movwf	(??_sprintf+1)^(0+128)
  4055  07C1  0825               	movf	??_sprintf^(0+128),w
  4056  07C2  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4057  07C3  1903               	btfsc	3,2
  4058  07C4  2FC6               	goto	u5571
  4059  07C5  2FC7               	goto	u5570
  4060  07C6                     u5571:
  4061  07C6  2FCF               	goto	l3432
  4062  07C7                     u5570:
  4063  07C7                     l3428:
  4064                           
  4065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4066  07C7  302D               	movlw	45
  4067  07C8  00A5               	movwf	??_sprintf^(0+128)
  4068  07C9  0841               	movf	sprintf@sp^(0+128),w
  4069  07CA  0084               	movwf	4
  4070  07CB  0825               	movf	??_sprintf^(0+128),w
  4071  07CC  1783               	bsf	3,7	;select IRP bank2
  4072  07CD  0080               	movwf	0
  4073  07CE  2880               	goto	l3188
  4074  07CF                     l3432:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4077  07CF  3001               	movlw	1
  4078  07D0  07A0               	addwf	sprintf@f^(0+128),f
  4079  07D1  30FF               	movlw	-1
  4080  07D2  0720               	addwf	sprintf@f^(0+128),w
  4081  07D3  0084               	movwf	4
  4082  07D4  120A  158A  200A  120A  118A  	fcall	stringdir
  4083  07D9  00A5               	movwf	??_sprintf^(0+128)
  4084  07DA  0825               	movf	??_sprintf^(0+128),w
  4085  07DB  00C4               	movwf	sprintf@c^(0+128)
  4086  07DC  0844               	movf	sprintf@c^(0+128),w
  4087  07DD  1D03               	btfss	3,2
  4088  07DE  2FE0               	goto	u5581
  4089  07DF  2FE1               	goto	u5580
  4090  07E0                     u5581:
  4091  07E0  2873               	goto	l3184
  4092  07E1                     u5580:
  4093  07E1                     l3434:
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4096  07E1  0841               	movf	sprintf@sp^(0+128),w
  4097  07E2  0084               	movwf	4
  4098  07E3  1783               	bsf	3,7	;select IRP bank2
  4099  07E4  0180               	clrf	0
  4100  07E5                     l345:
  4101  07E5  0008               	return
  4102  07E6                     __end_of_sprintf:
  4103                           
  4104                           	psect	text2
  4105  0940                     __ptext2:	
  4106 ;; *************** function _scale *****************
  4107 ;; Defined at:
  4108 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;  scl             1    wreg     char 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  scl             1   48[BANK0 ] char 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  4   30[BANK0 ] char 
  4115 ;; Registers used:
  4116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4122 ;;      Params:         0       4       0       0       0
  4123 ;;      Locals:         0       5       0       0       0
  4124 ;;      Temps:          0      10       0       0       0
  4125 ;;      Totals:         0      19       0       0       0
  4126 ;;Total ram usage:       19 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 2
  4129 ;; This function calls:
  4130 ;;		___awdiv
  4131 ;;		___awmod
  4132 ;;		___flmul
  4133 ;; This function is called by:
  4134 ;;		_sprintf
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function _scale
  4140  0940                     _scale:
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4144                           ;scale@scl stored from wreg
  4145  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0942  00D0               	movwf	scale@scl
  4148  0943                     l2798:
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4151  0943  1FD0               	btfss	scale@scl,7
  4152  0944  2946               	goto	u4161
  4153  0945  2947               	goto	u4160
  4154  0946                     u4161:
  4155  0946  2AF4               	goto	l2820
  4156  0947                     u4160:
  4157  0947                     l2800:
  4158                           
  4159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4160  0947  09D0               	comf	scale@scl,f
  4161  0948  0AD0               	incf	scale@scl,f
  4162  0949                     l2802:
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4165  0949  0850               	movf	scale@scl,w
  4166  094A  3A80               	xorlw	128
  4167  094B  3E12               	addlw	-238
  4168  094C  1C03               	skipc
  4169  094D  294F               	goto	u4171
  4170  094E  2950               	goto	u4170
  4171  094F                     u4171:
  4172  094F  2A38               	goto	l2810
  4173  0950                     u4170:
  4174  0950                     l2804:
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4177  0950  300A               	movlw	10
  4178  0951  00F7               	movwf	___awdiv@divisor
  4179  0952  3000               	movlw	0
  4180  0953  00F8               	movwf	___awdiv@divisor+1
  4181  0954  0850               	movf	scale@scl,w
  4182  0955  00F2               	movwf	___awmod@dividend
  4183  0956  01F3               	clrf	___awmod@dividend+1
  4184  0957  1BF2               	btfsc	___awmod@dividend,7
  4185  0958  03F3               	decf	___awmod@dividend+1,f
  4186  0959  3064               	movlw	100
  4187  095A  00F0               	movwf	___awmod@divisor
  4188  095B  3000               	movlw	0
  4189  095C  00F1               	movwf	___awmod@divisor+1
  4190  095D  160A  158A  258C  120A  158A  	fcall	___awmod
  4191  0962  0871               	movf	?___awmod+1,w
  4192  0963  00FA               	movwf	___awdiv@dividend+1
  4193  0964  0870               	movf	?___awmod,w
  4194  0965  00F9               	movwf	___awdiv@dividend
  4195  0966  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4196  096B  0877               	movf	?___awdiv,w
  4197  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4198  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4199  096E  00C2               	movwf	??_scale
  4200  096F  3001               	movlw	1
  4201  0970                     u4185:
  4202  0970  1003               	clrc
  4203  0971  0DC2               	rlf	??_scale,f
  4204  0972  3EFF               	addlw	-1
  4205  0973  1D03               	skipz
  4206  0974  2970               	goto	u4185
  4207  0975  1003               	clrc
  4208  0976  0D42               	rlf	??_scale,w
  4209  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4210  0978  0084               	movwf	4
  4211  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4212  097E  00C3               	movwf	??_scale+1
  4213  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4214  0984  00C4               	movwf	??_scale+2
  4215  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4216  098A  00C5               	movwf	??_scale+3
  4217  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4218  0990  00C6               	movwf	??_scale+4
  4219  0991  0846               	movf	??_scale+4,w
  4220  0992  00A7               	movwf	___flmul@b+3
  4221  0993  0845               	movf	??_scale+3,w
  4222  0994  00A6               	movwf	___flmul@b+2
  4223  0995  0844               	movf	??_scale+2,w
  4224  0996  00A5               	movwf	___flmul@b+1
  4225  0997  0843               	movf	??_scale+1,w
  4226  0998  00A4               	movwf	___flmul@b
  4227  0999  3064               	movlw	100
  4228  099A  00F7               	movwf	___awdiv@divisor
  4229  099B  3000               	movlw	0
  4230  099C  00F8               	movwf	___awdiv@divisor+1
  4231  099D  0850               	movf	scale@scl,w
  4232  099E  00F9               	movwf	___awdiv@dividend
  4233  099F  01FA               	clrf	___awdiv@dividend+1
  4234  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4235  09A1  03FA               	decf	___awdiv@dividend+1,f
  4236  09A2  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4237  09A7  0877               	movf	?___awdiv,w
  4238  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4239  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4240  09AA  00C7               	movwf	??_scale+5
  4241  09AB  3001               	movlw	1
  4242  09AC                     u4195:
  4243  09AC  1003               	clrc
  4244  09AD  0DC7               	rlf	??_scale+5,f
  4245  09AE  3EFF               	addlw	-1
  4246  09AF  1D03               	skipz
  4247  09B0  29AC               	goto	u4195
  4248  09B1  1003               	clrc
  4249  09B2  0D47               	rlf	??_scale+5,w
  4250  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4251  09B4  0084               	movwf	4
  4252  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4253  09BA  00C8               	movwf	??_scale+6
  4254  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4255  09C0  00C9               	movwf	??_scale+7
  4256  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4257  09C6  00CA               	movwf	??_scale+8
  4258  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4259  09CC  00CB               	movwf	??_scale+9
  4260  09CD  084B               	movf	??_scale+9,w
  4261  09CE  00AB               	movwf	___flmul@a+3
  4262  09CF  084A               	movf	??_scale+8,w
  4263  09D0  00AA               	movwf	___flmul@a+2
  4264  09D1  0849               	movf	??_scale+7,w
  4265  09D2  00A9               	movwf	___flmul@a+1
  4266  09D3  0848               	movf	??_scale+6,w
  4267  09D4  00A8               	movwf	___flmul@a
  4268  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4269  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4270  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4271  09DC  0827               	movf	?___flmul+3,w
  4272  09DD  00CF               	movwf	_scale$941+3
  4273  09DE  0826               	movf	?___flmul+2,w
  4274  09DF  00CE               	movwf	_scale$941+2
  4275  09E0  0825               	movf	?___flmul+1,w
  4276  09E1  00CD               	movwf	_scale$941+1
  4277  09E2  0824               	movf	?___flmul,w
  4278  09E3  00CC               	movwf	_scale$941
  4279                           
  4280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4281  09E4  300A               	movlw	10
  4282  09E5  00F0               	movwf	___awmod@divisor
  4283  09E6  3000               	movlw	0
  4284  09E7  00F1               	movwf	___awmod@divisor+1
  4285  09E8  0850               	movf	scale@scl,w
  4286  09E9  00F2               	movwf	___awmod@dividend
  4287  09EA  01F3               	clrf	___awmod@dividend+1
  4288  09EB  1BF2               	btfsc	___awmod@dividend,7
  4289  09EC  03F3               	decf	___awmod@dividend+1,f
  4290  09ED  160A  158A  258C  120A  158A  	fcall	___awmod
  4291  09F2  0870               	movf	?___awmod,w
  4292  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4293  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4294  09F5  00C2               	movwf	??_scale
  4295  09F6  3001               	movlw	1
  4296  09F7                     u4205:
  4297  09F7  1003               	clrc
  4298  09F8  0DC2               	rlf	??_scale,f
  4299  09F9  3EFF               	addlw	-1
  4300  09FA  1D03               	skipz
  4301  09FB  29F7               	goto	u4205
  4302  09FC  1003               	clrc
  4303  09FD  0D42               	rlf	??_scale,w
  4304  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4305  09FF  0084               	movwf	4
  4306  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4307  0A05  00C3               	movwf	??_scale+1
  4308  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4309  0A0B  00C4               	movwf	??_scale+2
  4310  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4311  0A11  00C5               	movwf	??_scale+3
  4312  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4313  0A17  00C6               	movwf	??_scale+4
  4314  0A18  0846               	movf	??_scale+4,w
  4315  0A19  00A7               	movwf	___flmul@b+3
  4316  0A1A  0845               	movf	??_scale+3,w
  4317  0A1B  00A6               	movwf	___flmul@b+2
  4318  0A1C  0844               	movf	??_scale+2,w
  4319  0A1D  00A5               	movwf	___flmul@b+1
  4320  0A1E  0843               	movf	??_scale+1,w
  4321  0A1F  00A4               	movwf	___flmul@b
  4322  0A20  084F               	movf	_scale$941+3,w
  4323  0A21  00AB               	movwf	___flmul@a+3
  4324  0A22  084E               	movf	_scale$941+2,w
  4325  0A23  00AA               	movwf	___flmul@a+2
  4326  0A24  084D               	movf	_scale$941+1,w
  4327  0A25  00A9               	movwf	___flmul@a+1
  4328  0A26  084C               	movf	_scale$941,w
  4329  0A27  00A8               	movwf	___flmul@a
  4330  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4331  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0A2F  0827               	movf	?___flmul+3,w
  4334  0A30  00C1               	movwf	?_scale+3
  4335  0A31  0826               	movf	?___flmul+2,w
  4336  0A32  00C0               	movwf	?_scale+2
  4337  0A33  0825               	movf	?___flmul+1,w
  4338  0A34  00BF               	movwf	?_scale+1
  4339  0A35  0824               	movf	?___flmul,w
  4340  0A36  00BE               	movwf	?_scale
  4341  0A37  2C9E               	goto	l262
  4342  0A38                     l2810:
  4343  0A38  0850               	movf	scale@scl,w
  4344  0A39  3A80               	xorlw	128
  4345  0A3A  3E75               	addlw	-139
  4346  0A3B  1C03               	skipc
  4347  0A3C  2A3E               	goto	u4211
  4348  0A3D  2A3F               	goto	u4210
  4349  0A3E                     u4211:
  4350  0A3E  2AC7               	goto	l2816
  4351  0A3F                     u4210:
  4352  0A3F                     l2812:
  4353                           
  4354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4355  0A3F  300A               	movlw	10
  4356  0A40  00F0               	movwf	___awmod@divisor
  4357  0A41  3000               	movlw	0
  4358  0A42  00F1               	movwf	___awmod@divisor+1
  4359  0A43  0850               	movf	scale@scl,w
  4360  0A44  00F2               	movwf	___awmod@dividend
  4361  0A45  01F3               	clrf	___awmod@dividend+1
  4362  0A46  1BF2               	btfsc	___awmod@dividend,7
  4363  0A47  03F3               	decf	___awmod@dividend+1,f
  4364  0A48  160A  158A  258C  120A  158A  	fcall	___awmod
  4365  0A4D  0870               	movf	?___awmod,w
  4366  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0A50  00C2               	movwf	??_scale
  4369  0A51  3001               	movlw	1
  4370  0A52                     u4225:
  4371  0A52  1003               	clrc
  4372  0A53  0DC2               	rlf	??_scale,f
  4373  0A54  3EFF               	addlw	-1
  4374  0A55  1D03               	skipz
  4375  0A56  2A52               	goto	u4225
  4376  0A57  1003               	clrc
  4377  0A58  0D42               	rlf	??_scale,w
  4378  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4379  0A5A  0084               	movwf	4
  4380  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4381  0A60  00C3               	movwf	??_scale+1
  4382  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4383  0A66  00C4               	movwf	??_scale+2
  4384  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4385  0A6C  00C5               	movwf	??_scale+3
  4386  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4387  0A72  00C6               	movwf	??_scale+4
  4388  0A73  0846               	movf	??_scale+4,w
  4389  0A74  00A7               	movwf	___flmul@b+3
  4390  0A75  0845               	movf	??_scale+3,w
  4391  0A76  00A6               	movwf	___flmul@b+2
  4392  0A77  0844               	movf	??_scale+2,w
  4393  0A78  00A5               	movwf	___flmul@b+1
  4394  0A79  0843               	movf	??_scale+1,w
  4395  0A7A  00A4               	movwf	___flmul@b
  4396  0A7B  300A               	movlw	10
  4397  0A7C  00F7               	movwf	___awdiv@divisor
  4398  0A7D  3000               	movlw	0
  4399  0A7E  00F8               	movwf	___awdiv@divisor+1
  4400  0A7F  0850               	movf	scale@scl,w
  4401  0A80  00F9               	movwf	___awdiv@dividend
  4402  0A81  01FA               	clrf	___awdiv@dividend+1
  4403  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4404  0A83  03FA               	decf	___awdiv@dividend+1,f
  4405  0A84  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4406  0A89  0877               	movf	?___awdiv,w
  4407  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0A8C  00C7               	movwf	??_scale+5
  4410  0A8D  3001               	movlw	1
  4411  0A8E                     u4235:
  4412  0A8E  1003               	clrc
  4413  0A8F  0DC7               	rlf	??_scale+5,f
  4414  0A90  3EFF               	addlw	-1
  4415  0A91  1D03               	skipz
  4416  0A92  2A8E               	goto	u4235
  4417  0A93  1003               	clrc
  4418  0A94  0D47               	rlf	??_scale+5,w
  4419  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4420  0A96  0084               	movwf	4
  4421  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4422  0A9C  00C8               	movwf	??_scale+6
  4423  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4424  0AA2  00C9               	movwf	??_scale+7
  4425  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4426  0AA8  00CA               	movwf	??_scale+8
  4427  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4428  0AAE  00CB               	movwf	??_scale+9
  4429  0AAF  084B               	movf	??_scale+9,w
  4430  0AB0  00AB               	movwf	___flmul@a+3
  4431  0AB1  084A               	movf	??_scale+8,w
  4432  0AB2  00AA               	movwf	___flmul@a+2
  4433  0AB3  0849               	movf	??_scale+7,w
  4434  0AB4  00A9               	movwf	___flmul@a+1
  4435  0AB5  0848               	movf	??_scale+6,w
  4436  0AB6  00A8               	movwf	___flmul@a
  4437  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4438  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4440  0ABE  0827               	movf	?___flmul+3,w
  4441  0ABF  00C1               	movwf	?_scale+3
  4442  0AC0  0826               	movf	?___flmul+2,w
  4443  0AC1  00C0               	movwf	?_scale+2
  4444  0AC2  0825               	movf	?___flmul+1,w
  4445  0AC3  00BF               	movwf	?_scale+1
  4446  0AC4  0824               	movf	?___flmul,w
  4447  0AC5  00BE               	movwf	?_scale
  4448  0AC6  2C9E               	goto	l262
  4449  0AC7                     l2816:
  4450                           
  4451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4452  0AC7  0850               	movf	scale@scl,w
  4453  0AC8  00C2               	movwf	??_scale
  4454  0AC9  3001               	movlw	1
  4455  0ACA                     u4245:
  4456  0ACA  1003               	clrc
  4457  0ACB  0DC2               	rlf	??_scale,f
  4458  0ACC  3EFF               	addlw	-1
  4459  0ACD  1D03               	skipz
  4460  0ACE  2ACA               	goto	u4245
  4461  0ACF  1003               	clrc
  4462  0AD0  0D42               	rlf	??_scale,w
  4463  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4464  0AD2  0084               	movwf	4
  4465  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4466  0AD8  00C3               	movwf	??_scale+1
  4467  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4468  0ADE  00C4               	movwf	??_scale+2
  4469  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4470  0AE4  00C5               	movwf	??_scale+3
  4471  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4472  0AEA  00C6               	movwf	??_scale+4
  4473  0AEB  0846               	movf	??_scale+4,w
  4474  0AEC  00C1               	movwf	?_scale+3
  4475  0AED  0845               	movf	??_scale+3,w
  4476  0AEE  00C0               	movwf	?_scale+2
  4477  0AEF  0844               	movf	??_scale+2,w
  4478  0AF0  00BF               	movwf	?_scale+1
  4479  0AF1  0843               	movf	??_scale+1,w
  4480  0AF2  00BE               	movwf	?_scale
  4481  0AF3  2C9E               	goto	l262
  4482  0AF4                     l2820:
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4485  0AF4  0850               	movf	scale@scl,w
  4486  0AF5  3A80               	xorlw	128
  4487  0AF6  3E12               	addlw	-238
  4488  0AF7  1C03               	skipc
  4489  0AF8  2AFA               	goto	u4251
  4490  0AF9  2AFB               	goto	u4250
  4491  0AFA                     u4251:
  4492  0AFA  2BE3               	goto	l2828
  4493  0AFB                     u4250:
  4494  0AFB                     l2822:
  4495                           
  4496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4497  0AFB  300A               	movlw	10
  4498  0AFC  00F7               	movwf	___awdiv@divisor
  4499  0AFD  3000               	movlw	0
  4500  0AFE  00F8               	movwf	___awdiv@divisor+1
  4501  0AFF  0850               	movf	scale@scl,w
  4502  0B00  00F2               	movwf	___awmod@dividend
  4503  0B01  01F3               	clrf	___awmod@dividend+1
  4504  0B02  1BF2               	btfsc	___awmod@dividend,7
  4505  0B03  03F3               	decf	___awmod@dividend+1,f
  4506  0B04  3064               	movlw	100
  4507  0B05  00F0               	movwf	___awmod@divisor
  4508  0B06  3000               	movlw	0
  4509  0B07  00F1               	movwf	___awmod@divisor+1
  4510  0B08  160A  158A  258C  120A  158A  	fcall	___awmod
  4511  0B0D  0871               	movf	?___awmod+1,w
  4512  0B0E  00FA               	movwf	___awdiv@dividend+1
  4513  0B0F  0870               	movf	?___awmod,w
  4514  0B10  00F9               	movwf	___awdiv@dividend
  4515  0B11  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4516  0B16  0877               	movf	?___awdiv,w
  4517  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4518  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4519  0B19  00C2               	movwf	??_scale
  4520  0B1A  3001               	movlw	1
  4521  0B1B                     u4265:
  4522  0B1B  1003               	clrc
  4523  0B1C  0DC2               	rlf	??_scale,f
  4524  0B1D  3EFF               	addlw	-1
  4525  0B1E  1D03               	skipz
  4526  0B1F  2B1B               	goto	u4265
  4527  0B20  1003               	clrc
  4528  0B21  0D42               	rlf	??_scale,w
  4529  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4530  0B23  0084               	movwf	4
  4531  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4532  0B29  00C3               	movwf	??_scale+1
  4533  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4534  0B2F  00C4               	movwf	??_scale+2
  4535  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4536  0B35  00C5               	movwf	??_scale+3
  4537  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4538  0B3B  00C6               	movwf	??_scale+4
  4539  0B3C  0846               	movf	??_scale+4,w
  4540  0B3D  00A7               	movwf	___flmul@b+3
  4541  0B3E  0845               	movf	??_scale+3,w
  4542  0B3F  00A6               	movwf	___flmul@b+2
  4543  0B40  0844               	movf	??_scale+2,w
  4544  0B41  00A5               	movwf	___flmul@b+1
  4545  0B42  0843               	movf	??_scale+1,w
  4546  0B43  00A4               	movwf	___flmul@b
  4547  0B44  3064               	movlw	100
  4548  0B45  00F7               	movwf	___awdiv@divisor
  4549  0B46  3000               	movlw	0
  4550  0B47  00F8               	movwf	___awdiv@divisor+1
  4551  0B48  0850               	movf	scale@scl,w
  4552  0B49  00F9               	movwf	___awdiv@dividend
  4553  0B4A  01FA               	clrf	___awdiv@dividend+1
  4554  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4555  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4556  0B4D  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4557  0B52  0877               	movf	?___awdiv,w
  4558  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4559  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4560  0B55  00C7               	movwf	??_scale+5
  4561  0B56  3001               	movlw	1
  4562  0B57                     u4275:
  4563  0B57  1003               	clrc
  4564  0B58  0DC7               	rlf	??_scale+5,f
  4565  0B59  3EFF               	addlw	-1
  4566  0B5A  1D03               	skipz
  4567  0B5B  2B57               	goto	u4275
  4568  0B5C  1003               	clrc
  4569  0B5D  0D47               	rlf	??_scale+5,w
  4570  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4571  0B5F  0084               	movwf	4
  4572  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4573  0B65  00C8               	movwf	??_scale+6
  4574  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4575  0B6B  00C9               	movwf	??_scale+7
  4576  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4577  0B71  00CA               	movwf	??_scale+8
  4578  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4579  0B77  00CB               	movwf	??_scale+9
  4580  0B78  084B               	movf	??_scale+9,w
  4581  0B79  00AB               	movwf	___flmul@a+3
  4582  0B7A  084A               	movf	??_scale+8,w
  4583  0B7B  00AA               	movwf	___flmul@a+2
  4584  0B7C  0849               	movf	??_scale+7,w
  4585  0B7D  00A9               	movwf	___flmul@a+1
  4586  0B7E  0848               	movf	??_scale+6,w
  4587  0B7F  00A8               	movwf	___flmul@a
  4588  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4589  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0B87  0827               	movf	?___flmul+3,w
  4592  0B88  00CF               	movwf	_scale$941+3
  4593  0B89  0826               	movf	?___flmul+2,w
  4594  0B8A  00CE               	movwf	_scale$941+2
  4595  0B8B  0825               	movf	?___flmul+1,w
  4596  0B8C  00CD               	movwf	_scale$941+1
  4597  0B8D  0824               	movf	?___flmul,w
  4598  0B8E  00CC               	movwf	_scale$941
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4601  0B8F  300A               	movlw	10
  4602  0B90  00F0               	movwf	___awmod@divisor
  4603  0B91  3000               	movlw	0
  4604  0B92  00F1               	movwf	___awmod@divisor+1
  4605  0B93  0850               	movf	scale@scl,w
  4606  0B94  00F2               	movwf	___awmod@dividend
  4607  0B95  01F3               	clrf	___awmod@dividend+1
  4608  0B96  1BF2               	btfsc	___awmod@dividend,7
  4609  0B97  03F3               	decf	___awmod@dividend+1,f
  4610  0B98  160A  158A  258C  120A  158A  	fcall	___awmod
  4611  0B9D  0870               	movf	?___awmod,w
  4612  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4613  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4614  0BA0  00C2               	movwf	??_scale
  4615  0BA1  3001               	movlw	1
  4616  0BA2                     u4285:
  4617  0BA2  1003               	clrc
  4618  0BA3  0DC2               	rlf	??_scale,f
  4619  0BA4  3EFF               	addlw	-1
  4620  0BA5  1D03               	skipz
  4621  0BA6  2BA2               	goto	u4285
  4622  0BA7  1003               	clrc
  4623  0BA8  0D42               	rlf	??_scale,w
  4624  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4625  0BAA  0084               	movwf	4
  4626  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4627  0BB0  00C3               	movwf	??_scale+1
  4628  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4629  0BB6  00C4               	movwf	??_scale+2
  4630  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4631  0BBC  00C5               	movwf	??_scale+3
  4632  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4633  0BC2  00C6               	movwf	??_scale+4
  4634  0BC3  0846               	movf	??_scale+4,w
  4635  0BC4  00A7               	movwf	___flmul@b+3
  4636  0BC5  0845               	movf	??_scale+3,w
  4637  0BC6  00A6               	movwf	___flmul@b+2
  4638  0BC7  0844               	movf	??_scale+2,w
  4639  0BC8  00A5               	movwf	___flmul@b+1
  4640  0BC9  0843               	movf	??_scale+1,w
  4641  0BCA  00A4               	movwf	___flmul@b
  4642  0BCB  084F               	movf	_scale$941+3,w
  4643  0BCC  00AB               	movwf	___flmul@a+3
  4644  0BCD  084E               	movf	_scale$941+2,w
  4645  0BCE  00AA               	movwf	___flmul@a+2
  4646  0BCF  084D               	movf	_scale$941+1,w
  4647  0BD0  00A9               	movwf	___flmul@a+1
  4648  0BD1  084C               	movf	_scale$941,w
  4649  0BD2  00A8               	movwf	___flmul@a
  4650  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4651  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4653  0BDA  0827               	movf	?___flmul+3,w
  4654  0BDB  00C1               	movwf	?_scale+3
  4655  0BDC  0826               	movf	?___flmul+2,w
  4656  0BDD  00C0               	movwf	?_scale+2
  4657  0BDE  0825               	movf	?___flmul+1,w
  4658  0BDF  00BF               	movwf	?_scale+1
  4659  0BE0  0824               	movf	?___flmul,w
  4660  0BE1  00BE               	movwf	?_scale
  4661  0BE2  2C9E               	goto	l262
  4662  0BE3                     l2828:
  4663  0BE3  0850               	movf	scale@scl,w
  4664  0BE4  3A80               	xorlw	128
  4665  0BE5  3E75               	addlw	-139
  4666  0BE6  1C03               	skipc
  4667  0BE7  2BE9               	goto	u4291
  4668  0BE8  2BEA               	goto	u4290
  4669  0BE9                     u4291:
  4670  0BE9  2C72               	goto	l2834
  4671  0BEA                     u4290:
  4672  0BEA                     l2830:
  4673                           
  4674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4675  0BEA  300A               	movlw	10
  4676  0BEB  00F0               	movwf	___awmod@divisor
  4677  0BEC  3000               	movlw	0
  4678  0BED  00F1               	movwf	___awmod@divisor+1
  4679  0BEE  0850               	movf	scale@scl,w
  4680  0BEF  00F2               	movwf	___awmod@dividend
  4681  0BF0  01F3               	clrf	___awmod@dividend+1
  4682  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4683  0BF2  03F3               	decf	___awmod@dividend+1,f
  4684  0BF3  160A  158A  258C  120A  158A  	fcall	___awmod
  4685  0BF8  0870               	movf	?___awmod,w
  4686  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4687  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4688  0BFB  00C2               	movwf	??_scale
  4689  0BFC  3001               	movlw	1
  4690  0BFD                     u4305:
  4691  0BFD  1003               	clrc
  4692  0BFE  0DC2               	rlf	??_scale,f
  4693  0BFF  3EFF               	addlw	-1
  4694  0C00  1D03               	skipz
  4695  0C01  2BFD               	goto	u4305
  4696  0C02  1003               	clrc
  4697  0C03  0D42               	rlf	??_scale,w
  4698  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4699  0C05  0084               	movwf	4
  4700  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4701  0C0B  00C3               	movwf	??_scale+1
  4702  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4703  0C11  00C4               	movwf	??_scale+2
  4704  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4705  0C17  00C5               	movwf	??_scale+3
  4706  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4707  0C1D  00C6               	movwf	??_scale+4
  4708  0C1E  0846               	movf	??_scale+4,w
  4709  0C1F  00A7               	movwf	___flmul@b+3
  4710  0C20  0845               	movf	??_scale+3,w
  4711  0C21  00A6               	movwf	___flmul@b+2
  4712  0C22  0844               	movf	??_scale+2,w
  4713  0C23  00A5               	movwf	___flmul@b+1
  4714  0C24  0843               	movf	??_scale+1,w
  4715  0C25  00A4               	movwf	___flmul@b
  4716  0C26  300A               	movlw	10
  4717  0C27  00F7               	movwf	___awdiv@divisor
  4718  0C28  3000               	movlw	0
  4719  0C29  00F8               	movwf	___awdiv@divisor+1
  4720  0C2A  0850               	movf	scale@scl,w
  4721  0C2B  00F9               	movwf	___awdiv@dividend
  4722  0C2C  01FA               	clrf	___awdiv@dividend+1
  4723  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4724  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4725  0C2F  120A  158A  20D7  120A  158A  	fcall	___awdiv
  4726  0C34  0877               	movf	?___awdiv,w
  4727  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4728  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4729  0C37  00C7               	movwf	??_scale+5
  4730  0C38  3001               	movlw	1
  4731  0C39                     u4315:
  4732  0C39  1003               	clrc
  4733  0C3A  0DC7               	rlf	??_scale+5,f
  4734  0C3B  3EFF               	addlw	-1
  4735  0C3C  1D03               	skipz
  4736  0C3D  2C39               	goto	u4315
  4737  0C3E  1003               	clrc
  4738  0C3F  0D47               	rlf	??_scale+5,w
  4739  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4740  0C41  0084               	movwf	4
  4741  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4742  0C47  00C8               	movwf	??_scale+6
  4743  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4744  0C4D  00C9               	movwf	??_scale+7
  4745  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4746  0C53  00CA               	movwf	??_scale+8
  4747  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4748  0C59  00CB               	movwf	??_scale+9
  4749  0C5A  084B               	movf	??_scale+9,w
  4750  0C5B  00AB               	movwf	___flmul@a+3
  4751  0C5C  084A               	movf	??_scale+8,w
  4752  0C5D  00AA               	movwf	___flmul@a+2
  4753  0C5E  0849               	movf	??_scale+7,w
  4754  0C5F  00A9               	movwf	___flmul@a+1
  4755  0C60  0848               	movf	??_scale+6,w
  4756  0C61  00A8               	movwf	___flmul@a
  4757  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4758  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4759  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4760  0C69  0827               	movf	?___flmul+3,w
  4761  0C6A  00C1               	movwf	?_scale+3
  4762  0C6B  0826               	movf	?___flmul+2,w
  4763  0C6C  00C0               	movwf	?_scale+2
  4764  0C6D  0825               	movf	?___flmul+1,w
  4765  0C6E  00BF               	movwf	?_scale+1
  4766  0C6F  0824               	movf	?___flmul,w
  4767  0C70  00BE               	movwf	?_scale
  4768  0C71  2C9E               	goto	l262
  4769  0C72                     l2834:
  4770                           
  4771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4772  0C72  0850               	movf	scale@scl,w
  4773  0C73  00C2               	movwf	??_scale
  4774  0C74  3001               	movlw	1
  4775  0C75                     u4325:
  4776  0C75  1003               	clrc
  4777  0C76  0DC2               	rlf	??_scale,f
  4778  0C77  3EFF               	addlw	-1
  4779  0C78  1D03               	skipz
  4780  0C79  2C75               	goto	u4325
  4781  0C7A  1003               	clrc
  4782  0C7B  0D42               	rlf	??_scale,w
  4783  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4784  0C7D  0084               	movwf	4
  4785  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4786  0C83  00C3               	movwf	??_scale+1
  4787  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4788  0C89  00C4               	movwf	??_scale+2
  4789  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4790  0C8F  00C5               	movwf	??_scale+3
  4791  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4792  0C95  00C6               	movwf	??_scale+4
  4793  0C96  0846               	movf	??_scale+4,w
  4794  0C97  00C1               	movwf	?_scale+3
  4795  0C98  0845               	movf	??_scale+3,w
  4796  0C99  00C0               	movwf	?_scale+2
  4797  0C9A  0844               	movf	??_scale+2,w
  4798  0C9B  00BF               	movwf	?_scale+1
  4799  0C9C  0843               	movf	??_scale+1,w
  4800  0C9D  00BE               	movwf	?_scale
  4801  0C9E                     l262:
  4802  0C9E  0008               	return
  4803  0C9F                     __end_of_scale:
  4804                           
  4805                           	psect	text3
  4806  1D8C                     __ptext3:	
  4807 ;; *************** function ___awmod *****************
  4808 ;; Defined at:
  4809 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  divisor         2    0[COMMON] int 
  4812 ;;  dividend        2    2[COMMON] int 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  sign            1    6[COMMON] unsigned char 
  4815 ;;  counter         1    5[COMMON] unsigned char 
  4816 ;; Return value:  Size  Location     Type
  4817 ;;                  2    0[COMMON] int 
  4818 ;; Registers used:
  4819 ;;		wreg, status,2, status,0
  4820 ;; Tracked objects:
  4821 ;;		On entry : 0/0
  4822 ;;		On exit  : 0/0
  4823 ;;		Unchanged: 0/0
  4824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4825 ;;      Params:         4       0       0       0       0
  4826 ;;      Locals:         2       0       0       0       0
  4827 ;;      Temps:          1       0       0       0       0
  4828 ;;      Totals:         7       0       0       0       0
  4829 ;;Total ram usage:        7 bytes
  4830 ;; Hardware stack levels used: 1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_scale
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function ___awmod
  4840  1D8C                     ___awmod:
  4841  1D8C                     l2322:	
  4842                           ;incstack = 0
  4843                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4844                           
  4845  1D8C  01F6               	clrf	___awmod@sign
  4846  1D8D                     l2324:
  4847  1D8D  1FF3               	btfss	___awmod@dividend+1,7
  4848  1D8E  2D90               	goto	u3001
  4849  1D8F  2D91               	goto	u3000
  4850  1D90                     u3001:
  4851  1D90  2D98               	goto	l2330
  4852  1D91                     u3000:
  4853  1D91                     l2326:
  4854  1D91  09F2               	comf	___awmod@dividend,f
  4855  1D92  09F3               	comf	___awmod@dividend+1,f
  4856  1D93  0AF2               	incf	___awmod@dividend,f
  4857  1D94  1903               	skipnz
  4858  1D95  0AF3               	incf	___awmod@dividend+1,f
  4859  1D96                     l2328:
  4860  1D96  01F6               	clrf	___awmod@sign
  4861  1D97  0AF6               	incf	___awmod@sign,f
  4862  1D98                     l2330:
  4863  1D98  1FF1               	btfss	___awmod@divisor+1,7
  4864  1D99  2D9B               	goto	u3011
  4865  1D9A  2D9C               	goto	u3010
  4866  1D9B                     u3011:
  4867  1D9B  2DA1               	goto	l2334
  4868  1D9C                     u3010:
  4869  1D9C                     l2332:
  4870  1D9C  09F0               	comf	___awmod@divisor,f
  4871  1D9D  09F1               	comf	___awmod@divisor+1,f
  4872  1D9E  0AF0               	incf	___awmod@divisor,f
  4873  1D9F  1903               	skipnz
  4874  1DA0  0AF1               	incf	___awmod@divisor+1,f
  4875  1DA1                     l2334:
  4876  1DA1  0870               	movf	___awmod@divisor,w
  4877  1DA2  0471               	iorwf	___awmod@divisor+1,w
  4878  1DA3  1903               	btfsc	3,2
  4879  1DA4  2DA6               	goto	u3021
  4880  1DA5  2DA7               	goto	u3020
  4881  1DA6                     u3021:
  4882  1DA6  2DD6               	goto	l2352
  4883  1DA7                     u3020:
  4884  1DA7                     l2336:
  4885  1DA7  01F5               	clrf	___awmod@counter
  4886  1DA8  0AF5               	incf	___awmod@counter,f
  4887  1DA9  2DB5               	goto	l2342
  4888  1DAA                     l2338:
  4889  1DAA  3001               	movlw	1
  4890  1DAB                     u3035:
  4891  1DAB  1003               	clrc
  4892  1DAC  0DF0               	rlf	___awmod@divisor,f
  4893  1DAD  0DF1               	rlf	___awmod@divisor+1,f
  4894  1DAE  3EFF               	addlw	-1
  4895  1DAF  1D03               	skipz
  4896  1DB0  2DAB               	goto	u3035
  4897  1DB1                     l2340:
  4898  1DB1  3001               	movlw	1
  4899  1DB2  00F4               	movwf	??___awmod
  4900  1DB3  0874               	movf	??___awmod,w
  4901  1DB4  07F5               	addwf	___awmod@counter,f
  4902  1DB5                     l2342:
  4903  1DB5  1FF1               	btfss	___awmod@divisor+1,7
  4904  1DB6  2DB8               	goto	u3041
  4905  1DB7  2DB9               	goto	u3040
  4906  1DB8                     u3041:
  4907  1DB8  2DAA               	goto	l2338
  4908  1DB9                     u3040:
  4909  1DB9                     l2344:
  4910  1DB9  0871               	movf	___awmod@divisor+1,w
  4911  1DBA  0273               	subwf	___awmod@dividend+1,w
  4912  1DBB  1D03               	skipz
  4913  1DBC  2DBF               	goto	u3055
  4914  1DBD  0870               	movf	___awmod@divisor,w
  4915  1DBE  0272               	subwf	___awmod@dividend,w
  4916  1DBF                     u3055:
  4917  1DBF  1C03               	skipc
  4918  1DC0  2DC2               	goto	u3051
  4919  1DC1  2DC3               	goto	u3050
  4920  1DC2                     u3051:
  4921  1DC2  2DC9               	goto	l2348
  4922  1DC3                     u3050:
  4923  1DC3                     l2346:
  4924  1DC3  0870               	movf	___awmod@divisor,w
  4925  1DC4  02F2               	subwf	___awmod@dividend,f
  4926  1DC5  0871               	movf	___awmod@divisor+1,w
  4927  1DC6  1C03               	skipc
  4928  1DC7  03F3               	decf	___awmod@dividend+1,f
  4929  1DC8  02F3               	subwf	___awmod@dividend+1,f
  4930  1DC9                     l2348:
  4931  1DC9  3001               	movlw	1
  4932  1DCA                     u3065:
  4933  1DCA  1003               	clrc
  4934  1DCB  0CF1               	rrf	___awmod@divisor+1,f
  4935  1DCC  0CF0               	rrf	___awmod@divisor,f
  4936  1DCD  3EFF               	addlw	-1
  4937  1DCE  1D03               	skipz
  4938  1DCF  2DCA               	goto	u3065
  4939  1DD0                     l2350:
  4940  1DD0  3001               	movlw	1
  4941  1DD1  02F5               	subwf	___awmod@counter,f
  4942  1DD2  1D03               	btfss	3,2
  4943  1DD3  2DD5               	goto	u3071
  4944  1DD4  2DD6               	goto	u3070
  4945  1DD5                     u3071:
  4946  1DD5  2DB9               	goto	l2344
  4947  1DD6                     u3070:
  4948  1DD6                     l2352:
  4949  1DD6  0876               	movf	___awmod@sign,w
  4950  1DD7  1903               	btfsc	3,2
  4951  1DD8  2DDA               	goto	u3081
  4952  1DD9  2DDB               	goto	u3080
  4953  1DDA                     u3081:
  4954  1DDA  2DE0               	goto	l2356
  4955  1DDB                     u3080:
  4956  1DDB                     l2354:
  4957  1DDB  09F2               	comf	___awmod@dividend,f
  4958  1DDC  09F3               	comf	___awmod@dividend+1,f
  4959  1DDD  0AF2               	incf	___awmod@dividend,f
  4960  1DDE  1903               	skipnz
  4961  1DDF  0AF3               	incf	___awmod@dividend+1,f
  4962  1DE0                     l2356:
  4963  1DE0  0873               	movf	___awmod@dividend+1,w
  4964  1DE1  00F1               	movwf	?___awmod+1
  4965  1DE2  0872               	movf	___awmod@dividend,w
  4966  1DE3  00F0               	movwf	?___awmod
  4967  1DE4                     l515:
  4968  1DE4  0008               	return
  4969  1DE5                     __end_of___awmod:
  4970                           
  4971                           	psect	text4
  4972  08D7                     __ptext4:	
  4973 ;; *************** function ___awdiv *****************
  4974 ;; Defined at:
  4975 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  divisor         2    7[COMMON] int 
  4978 ;;  dividend        2    9[COMMON] int 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  quotient        2    2[BANK0 ] int 
  4981 ;;  sign            1    1[BANK0 ] unsigned char 
  4982 ;;  counter         1    0[BANK0 ] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  2    7[COMMON] int 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4992 ;;      Params:         4       0       0       0       0
  4993 ;;      Locals:         0       4       0       0       0
  4994 ;;      Temps:          1       0       0       0       0
  4995 ;;      Totals:         5       4       0       0       0
  4996 ;;Total ram usage:        9 bytes
  4997 ;; Hardware stack levels used: 1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_scale
  5002 ;;		_sprintf
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           
  5007                           ;psect for function ___awdiv
  5008  08D7                     ___awdiv:
  5009  08D7                     l2278:	
  5010                           ;incstack = 0
  5011                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5012                           
  5013  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  5014  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  5015  08D9  01A1               	clrf	___awdiv@sign
  5016  08DA                     l2280:
  5017  08DA  1FF8               	btfss	___awdiv@divisor+1,7
  5018  08DB  28DD               	goto	u2901
  5019  08DC  28DE               	goto	u2900
  5020  08DD                     u2901:
  5021  08DD  28E5               	goto	l2286
  5022  08DE                     u2900:
  5023  08DE                     l2282:
  5024  08DE  09F7               	comf	___awdiv@divisor,f
  5025  08DF  09F8               	comf	___awdiv@divisor+1,f
  5026  08E0  0AF7               	incf	___awdiv@divisor,f
  5027  08E1  1903               	skipnz
  5028  08E2  0AF8               	incf	___awdiv@divisor+1,f
  5029  08E3                     l2284:
  5030  08E3  01A1               	clrf	___awdiv@sign
  5031  08E4  0AA1               	incf	___awdiv@sign,f
  5032  08E5                     l2286:
  5033  08E5  1FFA               	btfss	___awdiv@dividend+1,7
  5034  08E6  28E8               	goto	u2911
  5035  08E7  28E9               	goto	u2910
  5036  08E8                     u2911:
  5037  08E8  28F2               	goto	l2292
  5038  08E9                     u2910:
  5039  08E9                     l2288:
  5040  08E9  09F9               	comf	___awdiv@dividend,f
  5041  08EA  09FA               	comf	___awdiv@dividend+1,f
  5042  08EB  0AF9               	incf	___awdiv@dividend,f
  5043  08EC  1903               	skipnz
  5044  08ED  0AFA               	incf	___awdiv@dividend+1,f
  5045  08EE                     l2290:
  5046  08EE  3001               	movlw	1
  5047  08EF  00FB               	movwf	??___awdiv
  5048  08F0  087B               	movf	??___awdiv,w
  5049  08F1  06A1               	xorwf	___awdiv@sign,f
  5050  08F2                     l2292:
  5051  08F2  01A2               	clrf	___awdiv@quotient
  5052  08F3  01A3               	clrf	___awdiv@quotient+1
  5053  08F4                     l2294:
  5054  08F4  0877               	movf	___awdiv@divisor,w
  5055  08F5  0478               	iorwf	___awdiv@divisor+1,w
  5056  08F6  1903               	btfsc	3,2
  5057  08F7  28F9               	goto	u2921
  5058  08F8  28FA               	goto	u2920
  5059  08F9                     u2921:
  5060  08F9  2931               	goto	l2314
  5061  08FA                     u2920:
  5062  08FA                     l2296:
  5063  08FA  01A0               	clrf	___awdiv@counter
  5064  08FB  0AA0               	incf	___awdiv@counter,f
  5065  08FC  2908               	goto	l2302
  5066  08FD                     l2298:
  5067  08FD  3001               	movlw	1
  5068  08FE                     u2935:
  5069  08FE  1003               	clrc
  5070  08FF  0DF7               	rlf	___awdiv@divisor,f
  5071  0900  0DF8               	rlf	___awdiv@divisor+1,f
  5072  0901  3EFF               	addlw	-1
  5073  0902  1D03               	skipz
  5074  0903  28FE               	goto	u2935
  5075  0904                     l2300:
  5076  0904  3001               	movlw	1
  5077  0905  00FB               	movwf	??___awdiv
  5078  0906  087B               	movf	??___awdiv,w
  5079  0907  07A0               	addwf	___awdiv@counter,f
  5080  0908                     l2302:
  5081  0908  1FF8               	btfss	___awdiv@divisor+1,7
  5082  0909  290B               	goto	u2941
  5083  090A  290C               	goto	u2940
  5084  090B                     u2941:
  5085  090B  28FD               	goto	l2298
  5086  090C                     u2940:
  5087  090C                     l2304:
  5088  090C  3001               	movlw	1
  5089  090D                     u2955:
  5090  090D  1003               	clrc
  5091  090E  0DA2               	rlf	___awdiv@quotient,f
  5092  090F  0DA3               	rlf	___awdiv@quotient+1,f
  5093  0910  3EFF               	addlw	-1
  5094  0911  1D03               	skipz
  5095  0912  290D               	goto	u2955
  5096  0913  0878               	movf	___awdiv@divisor+1,w
  5097  0914  027A               	subwf	___awdiv@dividend+1,w
  5098  0915  1D03               	skipz
  5099  0916  2919               	goto	u2965
  5100  0917  0877               	movf	___awdiv@divisor,w
  5101  0918  0279               	subwf	___awdiv@dividend,w
  5102  0919                     u2965:
  5103  0919  1C03               	skipc
  5104  091A  291C               	goto	u2961
  5105  091B  291D               	goto	u2960
  5106  091C                     u2961:
  5107  091C  2924               	goto	l2310
  5108  091D                     u2960:
  5109  091D                     l2306:
  5110  091D  0877               	movf	___awdiv@divisor,w
  5111  091E  02F9               	subwf	___awdiv@dividend,f
  5112  091F  0878               	movf	___awdiv@divisor+1,w
  5113  0920  1C03               	skipc
  5114  0921  03FA               	decf	___awdiv@dividend+1,f
  5115  0922  02FA               	subwf	___awdiv@dividend+1,f
  5116  0923                     l2308:
  5117  0923  1422               	bsf	___awdiv@quotient,0
  5118  0924                     l2310:
  5119  0924  3001               	movlw	1
  5120  0925                     u2975:
  5121  0925  1003               	clrc
  5122  0926  0CF8               	rrf	___awdiv@divisor+1,f
  5123  0927  0CF7               	rrf	___awdiv@divisor,f
  5124  0928  3EFF               	addlw	-1
  5125  0929  1D03               	skipz
  5126  092A  2925               	goto	u2975
  5127  092B                     l2312:
  5128  092B  3001               	movlw	1
  5129  092C  02A0               	subwf	___awdiv@counter,f
  5130  092D  1D03               	btfss	3,2
  5131  092E  2930               	goto	u2981
  5132  092F  2931               	goto	u2980
  5133  0930                     u2981:
  5134  0930  290C               	goto	l2304
  5135  0931                     u2980:
  5136  0931                     l2314:
  5137  0931  0821               	movf	___awdiv@sign,w
  5138  0932  1903               	btfsc	3,2
  5139  0933  2935               	goto	u2991
  5140  0934  2936               	goto	u2990
  5141  0935                     u2991:
  5142  0935  293B               	goto	l2318
  5143  0936                     u2990:
  5144  0936                     l2316:
  5145  0936  09A2               	comf	___awdiv@quotient,f
  5146  0937  09A3               	comf	___awdiv@quotient+1,f
  5147  0938  0AA2               	incf	___awdiv@quotient,f
  5148  0939  1903               	skipnz
  5149  093A  0AA3               	incf	___awdiv@quotient+1,f
  5150  093B                     l2318:
  5151  093B  0823               	movf	___awdiv@quotient+1,w
  5152  093C  00F8               	movwf	?___awdiv+1
  5153  093D  0822               	movf	___awdiv@quotient,w
  5154  093E  00F7               	movwf	?___awdiv
  5155  093F                     l502:
  5156  093F  0008               	return
  5157  0940                     __end_of___awdiv:
  5158                           
  5159                           	psect	text5
  5160  1A88                     __ptext5:	
  5161 ;; *************** function _isdigit *****************
  5162 ;; Defined at:
  5163 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  c               1    wreg     unsigned char 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  c               1    1[COMMON] unsigned char 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;		None               void
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         0       0       0       0       0
  5178 ;;      Locals:         2       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0
  5180 ;;      Totals:         2       0       0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; This function calls:
  5184 ;;		Nothing
  5185 ;; This function is called by:
  5186 ;;		_sprintf
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           
  5191                           ;psect for function _isdigit
  5192  1A88                     _isdigit:
  5193                           
  5194                           ;incstack = 0
  5195                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5196                           ;isdigit@c stored from wreg
  5197  1A88  00F1               	movwf	isdigit@c
  5198  1A89                     l2838:
  5199  1A89  01F0               	clrf	_isdigit$759
  5200  1A8A                     l2840:
  5201  1A8A  303A               	movlw	58
  5202  1A8B  0271               	subwf	isdigit@c,w
  5203  1A8C  1803               	skipnc
  5204  1A8D  2A8F               	goto	u4331
  5205  1A8E  2A90               	goto	u4330
  5206  1A8F                     u4331:
  5207  1A8F  2A98               	goto	l2846
  5208  1A90                     u4330:
  5209  1A90                     l2842:
  5210  1A90  3030               	movlw	48
  5211  1A91  0271               	subwf	isdigit@c,w
  5212  1A92  1C03               	skipc
  5213  1A93  2A95               	goto	u4341
  5214  1A94  2A96               	goto	u4340
  5215  1A95                     u4341:
  5216  1A95  2A98               	goto	l2846
  5217  1A96                     u4340:
  5218  1A96                     l2844:
  5219  1A96  01F0               	clrf	_isdigit$759
  5220  1A97  0AF0               	incf	_isdigit$759,f
  5221  1A98                     l2846:
  5222  1A98  0C70               	rrf	_isdigit$759,w
  5223  1A99                     l836:
  5224  1A99  0008               	return
  5225  1A9A                     __end_of_isdigit:
  5226                           
  5227                           	psect	text6
  5228  1147                     __ptext6:	
  5229 ;; *************** function _fround *****************
  5230 ;; Defined at:
  5231 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  prec            1    wreg     unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  prec            1   49[BANK0 ] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  4   30[BANK0 ] unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       4       0       0       0
  5246 ;;      Locals:         0       9       0       0       0
  5247 ;;      Temps:          0       7       0       0       0
  5248 ;;      Totals:         0      20       0       0       0
  5249 ;;Total ram usage:       20 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 2
  5252 ;; This function calls:
  5253 ;;		___flmul
  5254 ;;		___lwdiv
  5255 ;;		___lwmod
  5256 ;; This function is called by:
  5257 ;;		_sprintf
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261                           
  5262                           ;psect for function _fround
  5263  1147                     _fround:
  5264                           
  5265                           ;incstack = 0
  5266                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5267                           ;fround@prec stored from wreg
  5268  1147  1283               	bcf	3,5	;RP0=0, select bank0
  5269  1148  1303               	bcf	3,6	;RP1=0, select bank0
  5270  1149  00D1               	movwf	fround@prec
  5271  114A                     l2780:
  5272                           
  5273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5274  114A  306E               	movlw	110
  5275  114B  0251               	subwf	fround@prec,w
  5276  114C  1C03               	skipc
  5277  114D  294F               	goto	u4081
  5278  114E  2950               	goto	u4080
  5279  114F                     u4081:
  5280  114F  2A5D               	goto	l2788
  5281  1150                     u4080:
  5282  1150                     l2782:
  5283                           
  5284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5285  1150  303F               	movlw	63
  5286  1151  00A7               	movwf	___flmul@b+3
  5287  1152  3000               	movlw	0
  5288  1153  00A6               	movwf	___flmul@b+2
  5289  1154  3000               	movlw	0
  5290  1155  00A5               	movwf	___flmul@b+1
  5291  1156  3000               	movlw	0
  5292  1157  00A4               	movwf	___flmul@b
  5293  1158  3064               	movlw	100
  5294  1159  00F6               	movwf	___lwdiv@divisor
  5295  115A  3000               	movlw	0
  5296  115B  00F7               	movwf	___lwdiv@divisor+1
  5297  115C  0851               	movf	fround@prec,w
  5298  115D  00C2               	movwf	??_fround
  5299  115E  01C3               	clrf	??_fround+1
  5300  115F  0842               	movf	??_fround,w
  5301  1160  00F8               	movwf	___lwdiv@dividend
  5302  1161  0843               	movf	??_fround+1,w
  5303  1162  00F9               	movwf	___lwdiv@dividend+1
  5304  1163  160A  158A  24A6  160A  118A  	fcall	___lwdiv
  5305  1168  0876               	movf	?___lwdiv,w
  5306  1169  1283               	bcf	3,5	;RP0=0, select bank0
  5307  116A  1303               	bcf	3,6	;RP1=0, select bank0
  5308  116B  00C4               	movwf	??_fround+2
  5309  116C  3001               	movlw	1
  5310  116D                     u4095:
  5311  116D  1003               	clrc
  5312  116E  0DC4               	rlf	??_fround+2,f
  5313  116F  3EFF               	addlw	-1
  5314  1170  1D03               	skipz
  5315  1171  296D               	goto	u4095
  5316  1172  1003               	clrc
  5317  1173  0D44               	rlf	??_fround+2,w
  5318  1174  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5319  1175  0084               	movwf	4
  5320  1176  120A  158A  200A  160A  118A  	fcall	stringdir
  5321  117B  00C5               	movwf	??_fround+3
  5322  117C  120A  158A  200A  160A  118A  	fcall	stringdir
  5323  1181  00C6               	movwf	??_fround+4
  5324  1182  120A  158A  200A  160A  118A  	fcall	stringdir
  5325  1187  00C7               	movwf	??_fround+5
  5326  1188  120A  158A  200A  160A  118A  	fcall	stringdir
  5327  118D  00C8               	movwf	??_fround+6
  5328  118E  0848               	movf	??_fround+6,w
  5329  118F  00AB               	movwf	___flmul@a+3
  5330  1190  0847               	movf	??_fround+5,w
  5331  1191  00AA               	movwf	___flmul@a+2
  5332  1192  0846               	movf	??_fround+4,w
  5333  1193  00A9               	movwf	___flmul@a+1
  5334  1194  0845               	movf	??_fround+3,w
  5335  1195  00A8               	movwf	___flmul@a
  5336  1196  120A  158A  249F  160A  118A  	fcall	___flmul
  5337  119B  1283               	bcf	3,5	;RP0=0, select bank0
  5338  119C  1303               	bcf	3,6	;RP1=0, select bank0
  5339  119D  0827               	movf	?___flmul+3,w
  5340  119E  00D0               	movwf	_fround$939+3
  5341  119F  0826               	movf	?___flmul+2,w
  5342  11A0  00CF               	movwf	_fround$939+2
  5343  11A1  0825               	movf	?___flmul+1,w
  5344  11A2  00CE               	movwf	_fround$939+1
  5345  11A3  0824               	movf	?___flmul,w
  5346  11A4  00CD               	movwf	_fround$939
  5347                           
  5348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5349  11A5  300A               	movlw	10
  5350  11A6  00F6               	movwf	___lwdiv@divisor
  5351  11A7  3000               	movlw	0
  5352  11A8  00F7               	movwf	___lwdiv@divisor+1
  5353  11A9  0851               	movf	fround@prec,w
  5354  11AA  00C2               	movwf	??_fround
  5355  11AB  01C3               	clrf	??_fround+1
  5356  11AC  0842               	movf	??_fround,w
  5357  11AD  00F2               	movwf	___lwmod@dividend
  5358  11AE  0843               	movf	??_fround+1,w
  5359  11AF  00F3               	movwf	___lwmod@dividend+1
  5360  11B0  3064               	movlw	100
  5361  11B1  00F0               	movwf	___lwmod@divisor
  5362  11B2  3000               	movlw	0
  5363  11B3  00F1               	movwf	___lwmod@divisor+1
  5364  11B4  160A  158A  23E9  160A  118A  	fcall	___lwmod
  5365  11B9  0871               	movf	?___lwmod+1,w
  5366  11BA  00F9               	movwf	___lwdiv@dividend+1
  5367  11BB  0870               	movf	?___lwmod,w
  5368  11BC  00F8               	movwf	___lwdiv@dividend
  5369  11BD  160A  158A  24A6  160A  118A  	fcall	___lwdiv
  5370  11C2  0876               	movf	?___lwdiv,w
  5371  11C3  1283               	bcf	3,5	;RP0=0, select bank0
  5372  11C4  1303               	bcf	3,6	;RP1=0, select bank0
  5373  11C5  00C4               	movwf	??_fround+2
  5374  11C6  3001               	movlw	1
  5375  11C7                     u4105:
  5376  11C7  1003               	clrc
  5377  11C8  0DC4               	rlf	??_fround+2,f
  5378  11C9  3EFF               	addlw	-1
  5379  11CA  1D03               	skipz
  5380  11CB  29C7               	goto	u4105
  5381  11CC  1003               	clrc
  5382  11CD  0D44               	rlf	??_fround+2,w
  5383  11CE  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5384  11CF  0084               	movwf	4
  5385  11D0  120A  158A  200A  160A  118A  	fcall	stringdir
  5386  11D5  00C5               	movwf	??_fround+3
  5387  11D6  120A  158A  200A  160A  118A  	fcall	stringdir
  5388  11DB  00C6               	movwf	??_fround+4
  5389  11DC  120A  158A  200A  160A  118A  	fcall	stringdir
  5390  11E1  00C7               	movwf	??_fround+5
  5391  11E2  120A  158A  200A  160A  118A  	fcall	stringdir
  5392  11E7  00C8               	movwf	??_fround+6
  5393  11E8  0848               	movf	??_fround+6,w
  5394  11E9  00A7               	movwf	___flmul@b+3
  5395  11EA  0847               	movf	??_fround+5,w
  5396  11EB  00A6               	movwf	___flmul@b+2
  5397  11EC  0846               	movf	??_fround+4,w
  5398  11ED  00A5               	movwf	___flmul@b+1
  5399  11EE  0845               	movf	??_fround+3,w
  5400  11EF  00A4               	movwf	___flmul@b
  5401  11F0  0850               	movf	_fround$939+3,w
  5402  11F1  00AB               	movwf	___flmul@a+3
  5403  11F2  084F               	movf	_fround$939+2,w
  5404  11F3  00AA               	movwf	___flmul@a+2
  5405  11F4  084E               	movf	_fround$939+1,w
  5406  11F5  00A9               	movwf	___flmul@a+1
  5407  11F6  084D               	movf	_fround$939,w
  5408  11F7  00A8               	movwf	___flmul@a
  5409  11F8  120A  158A  249F  160A  118A  	fcall	___flmul
  5410  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  5411  11FE  1303               	bcf	3,6	;RP1=0, select bank0
  5412  11FF  0827               	movf	?___flmul+3,w
  5413  1200  00CC               	movwf	_fround$940+3
  5414  1201  0826               	movf	?___flmul+2,w
  5415  1202  00CB               	movwf	_fround$940+2
  5416  1203  0825               	movf	?___flmul+1,w
  5417  1204  00CA               	movwf	_fround$940+1
  5418  1205  0824               	movf	?___flmul,w
  5419  1206  00C9               	movwf	_fround$940
  5420                           
  5421                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5422  1207  300A               	movlw	10
  5423  1208  00F0               	movwf	___lwmod@divisor
  5424  1209  3000               	movlw	0
  5425  120A  00F1               	movwf	___lwmod@divisor+1
  5426  120B  0851               	movf	fround@prec,w
  5427  120C  00C2               	movwf	??_fround
  5428  120D  01C3               	clrf	??_fround+1
  5429  120E  0842               	movf	??_fround,w
  5430  120F  00F2               	movwf	___lwmod@dividend
  5431  1210  0843               	movf	??_fround+1,w
  5432  1211  00F3               	movwf	___lwmod@dividend+1
  5433  1212  160A  158A  23E9  160A  118A  	fcall	___lwmod
  5434  1217  0870               	movf	?___lwmod,w
  5435  1218  1283               	bcf	3,5	;RP0=0, select bank0
  5436  1219  1303               	bcf	3,6	;RP1=0, select bank0
  5437  121A  00C4               	movwf	??_fround+2
  5438  121B  3001               	movlw	1
  5439  121C                     u4115:
  5440  121C  1003               	clrc
  5441  121D  0DC4               	rlf	??_fround+2,f
  5442  121E  3EFF               	addlw	-1
  5443  121F  1D03               	skipz
  5444  1220  2A1C               	goto	u4115
  5445  1221  1003               	clrc
  5446  1222  0D44               	rlf	??_fround+2,w
  5447  1223  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5448  1224  0084               	movwf	4
  5449  1225  120A  158A  200A  160A  118A  	fcall	stringdir
  5450  122A  00C5               	movwf	??_fround+3
  5451  122B  120A  158A  200A  160A  118A  	fcall	stringdir
  5452  1230  00C6               	movwf	??_fround+4
  5453  1231  120A  158A  200A  160A  118A  	fcall	stringdir
  5454  1236  00C7               	movwf	??_fround+5
  5455  1237  120A  158A  200A  160A  118A  	fcall	stringdir
  5456  123C  00C8               	movwf	??_fround+6
  5457  123D  0848               	movf	??_fround+6,w
  5458  123E  00A7               	movwf	___flmul@b+3
  5459  123F  0847               	movf	??_fround+5,w
  5460  1240  00A6               	movwf	___flmul@b+2
  5461  1241  0846               	movf	??_fround+4,w
  5462  1242  00A5               	movwf	___flmul@b+1
  5463  1243  0845               	movf	??_fround+3,w
  5464  1244  00A4               	movwf	___flmul@b
  5465  1245  084C               	movf	_fround$940+3,w
  5466  1246  00AB               	movwf	___flmul@a+3
  5467  1247  084B               	movf	_fround$940+2,w
  5468  1248  00AA               	movwf	___flmul@a+2
  5469  1249  084A               	movf	_fround$940+1,w
  5470  124A  00A9               	movwf	___flmul@a+1
  5471  124B  0849               	movf	_fround$940,w
  5472  124C  00A8               	movwf	___flmul@a
  5473  124D  120A  158A  249F  160A  118A  	fcall	___flmul
  5474  1252  1283               	bcf	3,5	;RP0=0, select bank0
  5475  1253  1303               	bcf	3,6	;RP1=0, select bank0
  5476  1254  0827               	movf	?___flmul+3,w
  5477  1255  00C1               	movwf	?_fround+3
  5478  1256  0826               	movf	?___flmul+2,w
  5479  1257  00C0               	movwf	?_fround+2
  5480  1258  0825               	movf	?___flmul+1,w
  5481  1259  00BF               	movwf	?_fround+1
  5482  125A  0824               	movf	?___flmul,w
  5483  125B  00BE               	movwf	?_fround
  5484  125C  2B51               	goto	l255
  5485  125D                     l2788:
  5486  125D  300B               	movlw	11
  5487  125E  0251               	subwf	fround@prec,w
  5488  125F  1C03               	skipc
  5489  1260  2A62               	goto	u4121
  5490  1261  2A63               	goto	u4120
  5491  1262                     u4121:
  5492  1262  2B0E               	goto	l2794
  5493  1263                     u4120:
  5494  1263                     l2790:
  5495                           
  5496                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5497  1263  303F               	movlw	63
  5498  1264  00A7               	movwf	___flmul@b+3
  5499  1265  3000               	movlw	0
  5500  1266  00A6               	movwf	___flmul@b+2
  5501  1267  3000               	movlw	0
  5502  1268  00A5               	movwf	___flmul@b+1
  5503  1269  3000               	movlw	0
  5504  126A  00A4               	movwf	___flmul@b
  5505  126B  300A               	movlw	10
  5506  126C  00F6               	movwf	___lwdiv@divisor
  5507  126D  3000               	movlw	0
  5508  126E  00F7               	movwf	___lwdiv@divisor+1
  5509  126F  0851               	movf	fround@prec,w
  5510  1270  00C2               	movwf	??_fround
  5511  1271  01C3               	clrf	??_fround+1
  5512  1272  0842               	movf	??_fround,w
  5513  1273  00F8               	movwf	___lwdiv@dividend
  5514  1274  0843               	movf	??_fround+1,w
  5515  1275  00F9               	movwf	___lwdiv@dividend+1
  5516  1276  160A  158A  24A6  160A  118A  	fcall	___lwdiv
  5517  127B  0876               	movf	?___lwdiv,w
  5518  127C  1283               	bcf	3,5	;RP0=0, select bank0
  5519  127D  1303               	bcf	3,6	;RP1=0, select bank0
  5520  127E  00C4               	movwf	??_fround+2
  5521  127F  3001               	movlw	1
  5522  1280                     u4135:
  5523  1280  1003               	clrc
  5524  1281  0DC4               	rlf	??_fround+2,f
  5525  1282  3EFF               	addlw	-1
  5526  1283  1D03               	skipz
  5527  1284  2A80               	goto	u4135
  5528  1285  1003               	clrc
  5529  1286  0D44               	rlf	??_fround+2,w
  5530  1287  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5531  1288  0084               	movwf	4
  5532  1289  120A  158A  200A  160A  118A  	fcall	stringdir
  5533  128E  00C5               	movwf	??_fround+3
  5534  128F  120A  158A  200A  160A  118A  	fcall	stringdir
  5535  1294  00C6               	movwf	??_fround+4
  5536  1295  120A  158A  200A  160A  118A  	fcall	stringdir
  5537  129A  00C7               	movwf	??_fround+5
  5538  129B  120A  158A  200A  160A  118A  	fcall	stringdir
  5539  12A0  00C8               	movwf	??_fround+6
  5540  12A1  0848               	movf	??_fround+6,w
  5541  12A2  00AB               	movwf	___flmul@a+3
  5542  12A3  0847               	movf	??_fround+5,w
  5543  12A4  00AA               	movwf	___flmul@a+2
  5544  12A5  0846               	movf	??_fround+4,w
  5545  12A6  00A9               	movwf	___flmul@a+1
  5546  12A7  0845               	movf	??_fround+3,w
  5547  12A8  00A8               	movwf	___flmul@a
  5548  12A9  120A  158A  249F  160A  118A  	fcall	___flmul
  5549  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  5550  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  5551  12B0  0827               	movf	?___flmul+3,w
  5552  12B1  00D0               	movwf	_fround$939+3
  5553  12B2  0826               	movf	?___flmul+2,w
  5554  12B3  00CF               	movwf	_fround$939+2
  5555  12B4  0825               	movf	?___flmul+1,w
  5556  12B5  00CE               	movwf	_fround$939+1
  5557  12B6  0824               	movf	?___flmul,w
  5558  12B7  00CD               	movwf	_fround$939
  5559                           
  5560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5561  12B8  300A               	movlw	10
  5562  12B9  00F0               	movwf	___lwmod@divisor
  5563  12BA  3000               	movlw	0
  5564  12BB  00F1               	movwf	___lwmod@divisor+1
  5565  12BC  0851               	movf	fround@prec,w
  5566  12BD  00C2               	movwf	??_fround
  5567  12BE  01C3               	clrf	??_fround+1
  5568  12BF  0842               	movf	??_fround,w
  5569  12C0  00F2               	movwf	___lwmod@dividend
  5570  12C1  0843               	movf	??_fround+1,w
  5571  12C2  00F3               	movwf	___lwmod@dividend+1
  5572  12C3  160A  158A  23E9  160A  118A  	fcall	___lwmod
  5573  12C8  0870               	movf	?___lwmod,w
  5574  12C9  1283               	bcf	3,5	;RP0=0, select bank0
  5575  12CA  1303               	bcf	3,6	;RP1=0, select bank0
  5576  12CB  00C4               	movwf	??_fround+2
  5577  12CC  3001               	movlw	1
  5578  12CD                     u4145:
  5579  12CD  1003               	clrc
  5580  12CE  0DC4               	rlf	??_fround+2,f
  5581  12CF  3EFF               	addlw	-1
  5582  12D0  1D03               	skipz
  5583  12D1  2ACD               	goto	u4145
  5584  12D2  1003               	clrc
  5585  12D3  0D44               	rlf	??_fround+2,w
  5586  12D4  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5587  12D5  0084               	movwf	4
  5588  12D6  120A  158A  200A  160A  118A  	fcall	stringdir
  5589  12DB  00C5               	movwf	??_fround+3
  5590  12DC  120A  158A  200A  160A  118A  	fcall	stringdir
  5591  12E1  00C6               	movwf	??_fround+4
  5592  12E2  120A  158A  200A  160A  118A  	fcall	stringdir
  5593  12E7  00C7               	movwf	??_fround+5
  5594  12E8  120A  158A  200A  160A  118A  	fcall	stringdir
  5595  12ED  00C8               	movwf	??_fround+6
  5596  12EE  0848               	movf	??_fround+6,w
  5597  12EF  00A7               	movwf	___flmul@b+3
  5598  12F0  0847               	movf	??_fround+5,w
  5599  12F1  00A6               	movwf	___flmul@b+2
  5600  12F2  0846               	movf	??_fround+4,w
  5601  12F3  00A5               	movwf	___flmul@b+1
  5602  12F4  0845               	movf	??_fround+3,w
  5603  12F5  00A4               	movwf	___flmul@b
  5604  12F6  0850               	movf	_fround$939+3,w
  5605  12F7  00AB               	movwf	___flmul@a+3
  5606  12F8  084F               	movf	_fround$939+2,w
  5607  12F9  00AA               	movwf	___flmul@a+2
  5608  12FA  084E               	movf	_fround$939+1,w
  5609  12FB  00A9               	movwf	___flmul@a+1
  5610  12FC  084D               	movf	_fround$939,w
  5611  12FD  00A8               	movwf	___flmul@a
  5612  12FE  120A  158A  249F  160A  118A  	fcall	___flmul
  5613  1303  1283               	bcf	3,5	;RP0=0, select bank0
  5614  1304  1303               	bcf	3,6	;RP1=0, select bank0
  5615  1305  0827               	movf	?___flmul+3,w
  5616  1306  00C1               	movwf	?_fround+3
  5617  1307  0826               	movf	?___flmul+2,w
  5618  1308  00C0               	movwf	?_fround+2
  5619  1309  0825               	movf	?___flmul+1,w
  5620  130A  00BF               	movwf	?_fround+1
  5621  130B  0824               	movf	?___flmul,w
  5622  130C  00BE               	movwf	?_fround
  5623  130D  2B51               	goto	l255
  5624  130E                     l2794:
  5625                           
  5626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5627  130E  303F               	movlw	63
  5628  130F  00A7               	movwf	___flmul@b+3
  5629  1310  3000               	movlw	0
  5630  1311  00A6               	movwf	___flmul@b+2
  5631  1312  3000               	movlw	0
  5632  1313  00A5               	movwf	___flmul@b+1
  5633  1314  3000               	movlw	0
  5634  1315  00A4               	movwf	___flmul@b
  5635  1316  0851               	movf	fround@prec,w
  5636  1317  00C2               	movwf	??_fround
  5637  1318  3001               	movlw	1
  5638  1319                     u4155:
  5639  1319  1003               	clrc
  5640  131A  0DC2               	rlf	??_fround,f
  5641  131B  3EFF               	addlw	-1
  5642  131C  1D03               	skipz
  5643  131D  2B19               	goto	u4155
  5644  131E  1003               	clrc
  5645  131F  0D42               	rlf	??_fround,w
  5646  1320  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5647  1321  0084               	movwf	4
  5648  1322  120A  158A  200A  160A  118A  	fcall	stringdir
  5649  1327  00C3               	movwf	??_fround+1
  5650  1328  120A  158A  200A  160A  118A  	fcall	stringdir
  5651  132D  00C4               	movwf	??_fround+2
  5652  132E  120A  158A  200A  160A  118A  	fcall	stringdir
  5653  1333  00C5               	movwf	??_fround+3
  5654  1334  120A  158A  200A  160A  118A  	fcall	stringdir
  5655  1339  00C6               	movwf	??_fround+4
  5656  133A  0846               	movf	??_fround+4,w
  5657  133B  00AB               	movwf	___flmul@a+3
  5658  133C  0845               	movf	??_fround+3,w
  5659  133D  00AA               	movwf	___flmul@a+2
  5660  133E  0844               	movf	??_fround+2,w
  5661  133F  00A9               	movwf	___flmul@a+1
  5662  1340  0843               	movf	??_fround+1,w
  5663  1341  00A8               	movwf	___flmul@a
  5664  1342  120A  158A  249F  160A  118A  	fcall	___flmul
  5665  1347  1283               	bcf	3,5	;RP0=0, select bank0
  5666  1348  1303               	bcf	3,6	;RP1=0, select bank0
  5667  1349  0827               	movf	?___flmul+3,w
  5668  134A  00C1               	movwf	?_fround+3
  5669  134B  0826               	movf	?___flmul+2,w
  5670  134C  00C0               	movwf	?_fround+2
  5671  134D  0825               	movf	?___flmul+1,w
  5672  134E  00BF               	movwf	?_fround+1
  5673  134F  0824               	movf	?___flmul,w
  5674  1350  00BE               	movwf	?_fround
  5675  1351                     l255:
  5676  1351  0008               	return
  5677  1352                     __end_of_fround:
  5678                           
  5679                           	psect	text7
  5680  1BE9                     __ptext7:	
  5681 ;; *************** function ___lwmod *****************
  5682 ;; Defined at:
  5683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  divisor         2    0[COMMON] unsigned int 
  5686 ;;  dividend        2    2[COMMON] unsigned int 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  counter         1    5[COMMON] unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  2    0[COMMON] unsigned int 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5698 ;;      Params:         4       0       0       0       0
  5699 ;;      Locals:         1       0       0       0       0
  5700 ;;      Temps:          1       0       0       0       0
  5701 ;;      Totals:         6       0       0       0       0
  5702 ;;Total ram usage:        6 bytes
  5703 ;; Hardware stack levels used: 1
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_fround
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           
  5712                           ;psect for function ___lwmod
  5713  1BE9                     ___lwmod:
  5714  1BE9                     l2386:	
  5715                           ;incstack = 0
  5716                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5717                           
  5718  1BE9  0870               	movf	___lwmod@divisor,w
  5719  1BEA  0471               	iorwf	___lwmod@divisor+1,w
  5720  1BEB  1903               	btfsc	3,2
  5721  1BEC  2BEE               	goto	u3161
  5722  1BED  2BEF               	goto	u3160
  5723  1BEE                     u3161:
  5724  1BEE  2C1E               	goto	l2404
  5725  1BEF                     u3160:
  5726  1BEF                     l2388:
  5727  1BEF  01F5               	clrf	___lwmod@counter
  5728  1BF0  0AF5               	incf	___lwmod@counter,f
  5729  1BF1  2BFD               	goto	l2394
  5730  1BF2                     l2390:
  5731  1BF2  3001               	movlw	1
  5732  1BF3                     u3175:
  5733  1BF3  1003               	clrc
  5734  1BF4  0DF0               	rlf	___lwmod@divisor,f
  5735  1BF5  0DF1               	rlf	___lwmod@divisor+1,f
  5736  1BF6  3EFF               	addlw	-1
  5737  1BF7  1D03               	skipz
  5738  1BF8  2BF3               	goto	u3175
  5739  1BF9                     l2392:
  5740  1BF9  3001               	movlw	1
  5741  1BFA  00F4               	movwf	??___lwmod
  5742  1BFB  0874               	movf	??___lwmod,w
  5743  1BFC  07F5               	addwf	___lwmod@counter,f
  5744  1BFD                     l2394:
  5745  1BFD  1FF1               	btfss	___lwmod@divisor+1,7
  5746  1BFE  2C00               	goto	u3181
  5747  1BFF  2C01               	goto	u3180
  5748  1C00                     u3181:
  5749  1C00  2BF2               	goto	l2390
  5750  1C01                     u3180:
  5751  1C01                     l2396:
  5752  1C01  0871               	movf	___lwmod@divisor+1,w
  5753  1C02  0273               	subwf	___lwmod@dividend+1,w
  5754  1C03  1D03               	skipz
  5755  1C04  2C07               	goto	u3195
  5756  1C05  0870               	movf	___lwmod@divisor,w
  5757  1C06  0272               	subwf	___lwmod@dividend,w
  5758  1C07                     u3195:
  5759  1C07  1C03               	skipc
  5760  1C08  2C0A               	goto	u3191
  5761  1C09  2C0B               	goto	u3190
  5762  1C0A                     u3191:
  5763  1C0A  2C11               	goto	l2400
  5764  1C0B                     u3190:
  5765  1C0B                     l2398:
  5766  1C0B  0870               	movf	___lwmod@divisor,w
  5767  1C0C  02F2               	subwf	___lwmod@dividend,f
  5768  1C0D  0871               	movf	___lwmod@divisor+1,w
  5769  1C0E  1C03               	skipc
  5770  1C0F  03F3               	decf	___lwmod@dividend+1,f
  5771  1C10  02F3               	subwf	___lwmod@dividend+1,f
  5772  1C11                     l2400:
  5773  1C11  3001               	movlw	1
  5774  1C12                     u3205:
  5775  1C12  1003               	clrc
  5776  1C13  0CF1               	rrf	___lwmod@divisor+1,f
  5777  1C14  0CF0               	rrf	___lwmod@divisor,f
  5778  1C15  3EFF               	addlw	-1
  5779  1C16  1D03               	skipz
  5780  1C17  2C12               	goto	u3205
  5781  1C18                     l2402:
  5782  1C18  3001               	movlw	1
  5783  1C19  02F5               	subwf	___lwmod@counter,f
  5784  1C1A  1D03               	btfss	3,2
  5785  1C1B  2C1D               	goto	u3211
  5786  1C1C  2C1E               	goto	u3210
  5787  1C1D                     u3211:
  5788  1C1D  2C01               	goto	l2396
  5789  1C1E                     u3210:
  5790  1C1E                     l2404:
  5791  1C1E  0873               	movf	___lwmod@dividend+1,w
  5792  1C1F  00F1               	movwf	?___lwmod+1
  5793  1C20  0872               	movf	___lwmod@dividend,w
  5794  1C21  00F0               	movwf	?___lwmod
  5795  1C22                     l665:
  5796  1C22  0008               	return
  5797  1C23                     __end_of___lwmod:
  5798                           
  5799                           	psect	text8
  5800  1CA6                     __ptext8:	
  5801 ;; *************** function ___lwdiv *****************
  5802 ;; Defined at:
  5803 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  divisor         2    6[COMMON] unsigned int 
  5806 ;;  dividend        2    8[COMMON] unsigned int 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  quotient        2   11[COMMON] unsigned int 
  5809 ;;  counter         1   13[COMMON] unsigned char 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  2    6[COMMON] unsigned int 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5819 ;;      Params:         4       0       0       0       0
  5820 ;;      Locals:         3       0       0       0       0
  5821 ;;      Temps:          1       0       0       0       0
  5822 ;;      Totals:         8       0       0       0       0
  5823 ;;Total ram usage:        8 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_fround
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function ___lwdiv
  5834  1CA6                     ___lwdiv:
  5835  1CA6                     l2360:	
  5836                           ;incstack = 0
  5837                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5838                           
  5839  1CA6  01FB               	clrf	___lwdiv@quotient
  5840  1CA7  01FC               	clrf	___lwdiv@quotient+1
  5841  1CA8                     l2362:
  5842  1CA8  0876               	movf	___lwdiv@divisor,w
  5843  1CA9  0477               	iorwf	___lwdiv@divisor+1,w
  5844  1CAA  1903               	btfsc	3,2
  5845  1CAB  2CAD               	goto	u3091
  5846  1CAC  2CAE               	goto	u3090
  5847  1CAD                     u3091:
  5848  1CAD  2CE5               	goto	l2382
  5849  1CAE                     u3090:
  5850  1CAE                     l2364:
  5851  1CAE  01FD               	clrf	___lwdiv@counter
  5852  1CAF  0AFD               	incf	___lwdiv@counter,f
  5853  1CB0  2CBC               	goto	l2370
  5854  1CB1                     l2366:
  5855  1CB1  3001               	movlw	1
  5856  1CB2                     u3105:
  5857  1CB2  1003               	clrc
  5858  1CB3  0DF6               	rlf	___lwdiv@divisor,f
  5859  1CB4  0DF7               	rlf	___lwdiv@divisor+1,f
  5860  1CB5  3EFF               	addlw	-1
  5861  1CB6  1D03               	skipz
  5862  1CB7  2CB2               	goto	u3105
  5863  1CB8                     l2368:
  5864  1CB8  3001               	movlw	1
  5865  1CB9  00FA               	movwf	??___lwdiv
  5866  1CBA  087A               	movf	??___lwdiv,w
  5867  1CBB  07FD               	addwf	___lwdiv@counter,f
  5868  1CBC                     l2370:
  5869  1CBC  1FF7               	btfss	___lwdiv@divisor+1,7
  5870  1CBD  2CBF               	goto	u3111
  5871  1CBE  2CC0               	goto	u3110
  5872  1CBF                     u3111:
  5873  1CBF  2CB1               	goto	l2366
  5874  1CC0                     u3110:
  5875  1CC0                     l2372:
  5876  1CC0  3001               	movlw	1
  5877  1CC1                     u3125:
  5878  1CC1  1003               	clrc
  5879  1CC2  0DFB               	rlf	___lwdiv@quotient,f
  5880  1CC3  0DFC               	rlf	___lwdiv@quotient+1,f
  5881  1CC4  3EFF               	addlw	-1
  5882  1CC5  1D03               	skipz
  5883  1CC6  2CC1               	goto	u3125
  5884  1CC7  0877               	movf	___lwdiv@divisor+1,w
  5885  1CC8  0279               	subwf	___lwdiv@dividend+1,w
  5886  1CC9  1D03               	skipz
  5887  1CCA  2CCD               	goto	u3135
  5888  1CCB  0876               	movf	___lwdiv@divisor,w
  5889  1CCC  0278               	subwf	___lwdiv@dividend,w
  5890  1CCD                     u3135:
  5891  1CCD  1C03               	skipc
  5892  1CCE  2CD0               	goto	u3131
  5893  1CCF  2CD1               	goto	u3130
  5894  1CD0                     u3131:
  5895  1CD0  2CD8               	goto	l2378
  5896  1CD1                     u3130:
  5897  1CD1                     l2374:
  5898  1CD1  0876               	movf	___lwdiv@divisor,w
  5899  1CD2  02F8               	subwf	___lwdiv@dividend,f
  5900  1CD3  0877               	movf	___lwdiv@divisor+1,w
  5901  1CD4  1C03               	skipc
  5902  1CD5  03F9               	decf	___lwdiv@dividend+1,f
  5903  1CD6  02F9               	subwf	___lwdiv@dividend+1,f
  5904  1CD7                     l2376:
  5905  1CD7  147B               	bsf	___lwdiv@quotient,0
  5906  1CD8                     l2378:
  5907  1CD8  3001               	movlw	1
  5908  1CD9                     u3145:
  5909  1CD9  1003               	clrc
  5910  1CDA  0CF7               	rrf	___lwdiv@divisor+1,f
  5911  1CDB  0CF6               	rrf	___lwdiv@divisor,f
  5912  1CDC  3EFF               	addlw	-1
  5913  1CDD  1D03               	skipz
  5914  1CDE  2CD9               	goto	u3145
  5915  1CDF                     l2380:
  5916  1CDF  3001               	movlw	1
  5917  1CE0  02FD               	subwf	___lwdiv@counter,f
  5918  1CE1  1D03               	btfss	3,2
  5919  1CE2  2CE4               	goto	u3151
  5920  1CE3  2CE5               	goto	u3150
  5921  1CE4                     u3151:
  5922  1CE4  2CC0               	goto	l2372
  5923  1CE5                     u3150:
  5924  1CE5                     l2382:
  5925  1CE5  087C               	movf	___lwdiv@quotient+1,w
  5926  1CE6  00F7               	movwf	?___lwdiv+1
  5927  1CE7  087B               	movf	___lwdiv@quotient,w
  5928  1CE8  00F6               	movwf	?___lwdiv
  5929  1CE9                     l655:
  5930  1CE9  0008               	return
  5931  1CEA                     __end_of___lwdiv:
  5932                           
  5933                           	psect	text9
  5934  0C9F                     __ptext9:	
  5935 ;; *************** function ___flmul *****************
  5936 ;; Defined at:
  5937 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  b               4    4[BANK0 ] unsigned int 
  5940 ;;  a               4    8[BANK0 ] unsigned int 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  prod            4   24[BANK0 ] struct .
  5943 ;;  grs             4   18[BANK0 ] unsigned long 
  5944 ;;  temp            2   28[BANK0 ] struct .
  5945 ;;  bexp            1   23[BANK0 ] unsigned char 
  5946 ;;  aexp            1   22[BANK0 ] unsigned char 
  5947 ;;  sign            1   17[BANK0 ] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  4    4[BANK0 ] unsigned char 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5957 ;;      Params:         0       8       0       0       0
  5958 ;;      Locals:         0      13       0       0       0
  5959 ;;      Temps:          0       5       0       0       0
  5960 ;;      Totals:         0      26       0       0       0
  5961 ;;Total ram usage:       26 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 1
  5964 ;; This function calls:
  5965 ;;		__Umul8_16
  5966 ;; This function is called by:
  5967 ;;		_main
  5968 ;;		_fround
  5969 ;;		_scale
  5970 ;;		_sprintf
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           
  5975                           ;psect for function ___flmul
  5976  0C9F                     ___flmul:
  5977  0C9F                     l2602:	
  5978                           ;incstack = 0
  5979                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5980                           
  5981  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5983  0CA1  0827               	movf	___flmul@b+3,w
  5984  0CA2  3980               	andlw	128
  5985  0CA3  00AC               	movwf	??___flmul
  5986  0CA4  082C               	movf	??___flmul,w
  5987  0CA5  00B1               	movwf	___flmul@sign
  5988  0CA6                     l2604:
  5989  0CA6  0827               	movf	___flmul@b+3,w
  5990  0CA7  00AC               	movwf	??___flmul
  5991  0CA8  072C               	addwf	??___flmul,w
  5992  0CA9  00AD               	movwf	??___flmul+1
  5993  0CAA  082D               	movf	??___flmul+1,w
  5994  0CAB  00B7               	movwf	___flmul@bexp
  5995  0CAC                     l2606:
  5996  0CAC  1FA6               	btfss	___flmul@b+2,7
  5997  0CAD  2CAF               	goto	u3681
  5998  0CAE  2CB0               	goto	u3680
  5999  0CAF                     u3681:
  6000  0CAF  2CB1               	goto	l2610
  6001  0CB0                     u3680:
  6002  0CB0                     l2608:
  6003  0CB0  1437               	bsf	___flmul@bexp,0
  6004  0CB1                     l2610:
  6005  0CB1  0837               	movf	___flmul@bexp,w
  6006  0CB2  1903               	btfsc	3,2
  6007  0CB3  2CB5               	goto	u3691
  6008  0CB4  2CB6               	goto	u3690
  6009  0CB5                     u3691:
  6010  0CB5  2CC5               	goto	l2618
  6011  0CB6                     u3690:
  6012  0CB6                     l2612:
  6013  0CB6  0A37               	incf	___flmul@bexp,w
  6014  0CB7  1D03               	btfss	3,2
  6015  0CB8  2CBA               	goto	u3701
  6016  0CB9  2CBB               	goto	u3700
  6017  0CBA                     u3701:
  6018  0CBA  2CC3               	goto	l2616
  6019  0CBB                     u3700:
  6020  0CBB                     l2614:
  6021  0CBB  3000               	movlw	0
  6022  0CBC  00A7               	movwf	___flmul@b+3
  6023  0CBD  3000               	movlw	0
  6024  0CBE  00A6               	movwf	___flmul@b+2
  6025  0CBF  3000               	movlw	0
  6026  0CC0  00A5               	movwf	___flmul@b+1
  6027  0CC1  3000               	movlw	0
  6028  0CC2  00A4               	movwf	___flmul@b
  6029  0CC3                     l2616:
  6030  0CC3  17A6               	bsf	___flmul@b+2,7
  6031  0CC4  2CCD               	goto	l2620
  6032  0CC5                     l2618:
  6033  0CC5  3000               	movlw	0
  6034  0CC6  00A7               	movwf	___flmul@b+3
  6035  0CC7  3000               	movlw	0
  6036  0CC8  00A6               	movwf	___flmul@b+2
  6037  0CC9  3000               	movlw	0
  6038  0CCA  00A5               	movwf	___flmul@b+1
  6039  0CCB  3000               	movlw	0
  6040  0CCC  00A4               	movwf	___flmul@b
  6041  0CCD                     l2620:
  6042  0CCD  082B               	movf	___flmul@a+3,w
  6043  0CCE  3980               	andlw	128
  6044  0CCF  00AC               	movwf	??___flmul
  6045  0CD0  082C               	movf	??___flmul,w
  6046  0CD1  06B1               	xorwf	___flmul@sign,f
  6047  0CD2                     l2622:
  6048  0CD2  082B               	movf	___flmul@a+3,w
  6049  0CD3  00AC               	movwf	??___flmul
  6050  0CD4  072C               	addwf	??___flmul,w
  6051  0CD5  00AD               	movwf	??___flmul+1
  6052  0CD6  082D               	movf	??___flmul+1,w
  6053  0CD7  00B6               	movwf	___flmul@aexp
  6054  0CD8                     l2624:
  6055  0CD8  1FAA               	btfss	___flmul@a+2,7
  6056  0CD9  2CDB               	goto	u3711
  6057  0CDA  2CDC               	goto	u3710
  6058  0CDB                     u3711:
  6059  0CDB  2CDD               	goto	l2628
  6060  0CDC                     u3710:
  6061  0CDC                     l2626:
  6062  0CDC  1436               	bsf	___flmul@aexp,0
  6063  0CDD                     l2628:
  6064  0CDD  0836               	movf	___flmul@aexp,w
  6065  0CDE  1903               	btfsc	3,2
  6066  0CDF  2CE1               	goto	u3721
  6067  0CE0  2CE2               	goto	u3720
  6068  0CE1                     u3721:
  6069  0CE1  2CF1               	goto	l2636
  6070  0CE2                     u3720:
  6071  0CE2                     l2630:
  6072  0CE2  0A36               	incf	___flmul@aexp,w
  6073  0CE3  1D03               	btfss	3,2
  6074  0CE4  2CE6               	goto	u3731
  6075  0CE5  2CE7               	goto	u3730
  6076  0CE6                     u3731:
  6077  0CE6  2CEF               	goto	l2634
  6078  0CE7                     u3730:
  6079  0CE7                     l2632:
  6080  0CE7  3000               	movlw	0
  6081  0CE8  00AB               	movwf	___flmul@a+3
  6082  0CE9  3000               	movlw	0
  6083  0CEA  00AA               	movwf	___flmul@a+2
  6084  0CEB  3000               	movlw	0
  6085  0CEC  00A9               	movwf	___flmul@a+1
  6086  0CED  3000               	movlw	0
  6087  0CEE  00A8               	movwf	___flmul@a
  6088  0CEF                     l2634:
  6089  0CEF  17AA               	bsf	___flmul@a+2,7
  6090  0CF0  2CF9               	goto	l2638
  6091  0CF1                     l2636:
  6092  0CF1  3000               	movlw	0
  6093  0CF2  00AB               	movwf	___flmul@a+3
  6094  0CF3  3000               	movlw	0
  6095  0CF4  00AA               	movwf	___flmul@a+2
  6096  0CF5  3000               	movlw	0
  6097  0CF6  00A9               	movwf	___flmul@a+1
  6098  0CF7  3000               	movlw	0
  6099  0CF8  00A8               	movwf	___flmul@a
  6100  0CF9                     l2638:
  6101  0CF9  0836               	movf	___flmul@aexp,w
  6102  0CFA  1903               	btfsc	3,2
  6103  0CFB  2CFD               	goto	u3741
  6104  0CFC  2CFE               	goto	u3740
  6105  0CFD                     u3741:
  6106  0CFD  2D03               	goto	l2642
  6107  0CFE                     u3740:
  6108  0CFE                     l2640:
  6109  0CFE  0837               	movf	___flmul@bexp,w
  6110  0CFF  1D03               	btfss	3,2
  6111  0D00  2D02               	goto	u3751
  6112  0D01  2D03               	goto	u3750
  6113  0D02                     u3751:
  6114  0D02  2D0C               	goto	l2646
  6115  0D03                     u3750:
  6116  0D03                     l2642:
  6117  0D03  3000               	movlw	0
  6118  0D04  00A7               	movwf	?___flmul+3
  6119  0D05  3000               	movlw	0
  6120  0D06  00A6               	movwf	?___flmul+2
  6121  0D07  3000               	movlw	0
  6122  0D08  00A5               	movwf	?___flmul+1
  6123  0D09  3000               	movlw	0
  6124  0D0A  00A4               	movwf	?___flmul
  6125  0D0B  2FFF               	goto	l772
  6126  0D0C                     l2646:
  6127  0D0C  0824               	movf	___flmul@b,w
  6128  0D0D  00AC               	movwf	??___flmul
  6129  0D0E  082C               	movf	??___flmul,w
  6130  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  6131  0D10  082A               	movf	___flmul@a+2,w
  6132  0D11  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6133  0D16  0871               	movf	?__Umul8_16+1,w
  6134  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6135  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6136  0D19  00BD               	movwf	___flmul@temp+1
  6137  0D1A  0870               	movf	?__Umul8_16,w
  6138  0D1B  00BC               	movwf	___flmul@temp
  6139  0D1C                     l2648:
  6140  0D1C  083C               	movf	___flmul@temp,w
  6141  0D1D  00AC               	movwf	??___flmul
  6142  0D1E  01AD               	clrf	??___flmul+1
  6143  0D1F  01AE               	clrf	??___flmul+2
  6144  0D20  01AF               	clrf	??___flmul+3
  6145  0D21  082F               	movf	??___flmul+3,w
  6146  0D22  00B5               	movwf	___flmul@grs+3
  6147  0D23  082E               	movf	??___flmul+2,w
  6148  0D24  00B4               	movwf	___flmul@grs+2
  6149  0D25  082D               	movf	??___flmul+1,w
  6150  0D26  00B3               	movwf	___flmul@grs+1
  6151  0D27  082C               	movf	??___flmul,w
  6152  0D28  00B2               	movwf	___flmul@grs
  6153  0D29                     l2650:
  6154  0D29  083D               	movf	___flmul@temp+1,w
  6155  0D2A  00AC               	movwf	??___flmul
  6156  0D2B  01AD               	clrf	??___flmul+1
  6157  0D2C  01AE               	clrf	??___flmul+2
  6158  0D2D  01AF               	clrf	??___flmul+3
  6159  0D2E  082F               	movf	??___flmul+3,w
  6160  0D2F  00BB               	movwf	___flmul@prod+3
  6161  0D30  082E               	movf	??___flmul+2,w
  6162  0D31  00BA               	movwf	___flmul@prod+2
  6163  0D32  082D               	movf	??___flmul+1,w
  6164  0D33  00B9               	movwf	___flmul@prod+1
  6165  0D34  082C               	movf	??___flmul,w
  6166  0D35  00B8               	movwf	___flmul@prod
  6167  0D36  0825               	movf	___flmul@b+1,w
  6168  0D37  00AC               	movwf	??___flmul
  6169  0D38  082C               	movf	??___flmul,w
  6170  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6171  0D3A  0829               	movf	___flmul@a+1,w
  6172  0D3B  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6173  0D40  0871               	movf	?__Umul8_16+1,w
  6174  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0D43  00BD               	movwf	___flmul@temp+1
  6177  0D44  0870               	movf	?__Umul8_16,w
  6178  0D45  00BC               	movwf	___flmul@temp
  6179  0D46                     l2652:
  6180  0D46  083C               	movf	___flmul@temp,w
  6181  0D47  00AC               	movwf	??___flmul
  6182  0D48  01AD               	clrf	??___flmul+1
  6183  0D49  01AE               	clrf	??___flmul+2
  6184  0D4A  01AF               	clrf	??___flmul+3
  6185  0D4B  082C               	movf	??___flmul,w
  6186  0D4C  07B2               	addwf	___flmul@grs,f
  6187  0D4D  082D               	movf	??___flmul+1,w
  6188  0D4E  1103               	clrz
  6189  0D4F  1803               	skipnc
  6190  0D50  3E01               	addlw	1
  6191  0D51  1903               	skipnz
  6192  0D52  2D54               	goto	u3761
  6193  0D53  07B3               	addwf	___flmul@grs+1,f
  6194  0D54                     u3761:
  6195  0D54  082E               	movf	??___flmul+2,w
  6196  0D55  1103               	clrz
  6197  0D56  1803               	skipnc
  6198  0D57  3E01               	addlw	1
  6199  0D58  1903               	skipnz
  6200  0D59  2D5B               	goto	u3762
  6201  0D5A  07B4               	addwf	___flmul@grs+2,f
  6202  0D5B                     u3762:
  6203  0D5B  082F               	movf	??___flmul+3,w
  6204  0D5C  1103               	clrz
  6205  0D5D  1803               	skipnc
  6206  0D5E  3E01               	addlw	1
  6207  0D5F  1903               	skipnz
  6208  0D60  2D62               	goto	u3763
  6209  0D61  07B5               	addwf	___flmul@grs+3,f
  6210  0D62                     u3763:
  6211  0D62                     l2654:
  6212  0D62  083D               	movf	___flmul@temp+1,w
  6213  0D63  00AC               	movwf	??___flmul
  6214  0D64  01AD               	clrf	??___flmul+1
  6215  0D65  01AE               	clrf	??___flmul+2
  6216  0D66  01AF               	clrf	??___flmul+3
  6217  0D67  082C               	movf	??___flmul,w
  6218  0D68  07B8               	addwf	___flmul@prod,f
  6219  0D69  082D               	movf	??___flmul+1,w
  6220  0D6A  1103               	clrz
  6221  0D6B  1803               	skipnc
  6222  0D6C  3E01               	addlw	1
  6223  0D6D  1903               	skipnz
  6224  0D6E  2D70               	goto	u3771
  6225  0D6F  07B9               	addwf	___flmul@prod+1,f
  6226  0D70                     u3771:
  6227  0D70  082E               	movf	??___flmul+2,w
  6228  0D71  1103               	clrz
  6229  0D72  1803               	skipnc
  6230  0D73  3E01               	addlw	1
  6231  0D74  1903               	skipnz
  6232  0D75  2D77               	goto	u3772
  6233  0D76  07BA               	addwf	___flmul@prod+2,f
  6234  0D77                     u3772:
  6235  0D77  082F               	movf	??___flmul+3,w
  6236  0D78  1103               	clrz
  6237  0D79  1803               	skipnc
  6238  0D7A  3E01               	addlw	1
  6239  0D7B  1903               	skipnz
  6240  0D7C  2D7E               	goto	u3773
  6241  0D7D  07BB               	addwf	___flmul@prod+3,f
  6242  0D7E                     u3773:
  6243  0D7E  0826               	movf	___flmul@b+2,w
  6244  0D7F  00AC               	movwf	??___flmul
  6245  0D80  082C               	movf	??___flmul,w
  6246  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6247  0D82  0828               	movf	___flmul@a,w
  6248  0D83  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6249  0D88  0871               	movf	?__Umul8_16+1,w
  6250  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6251  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6252  0D8B  00BD               	movwf	___flmul@temp+1
  6253  0D8C  0870               	movf	?__Umul8_16,w
  6254  0D8D  00BC               	movwf	___flmul@temp
  6255  0D8E                     l2656:
  6256  0D8E  083C               	movf	___flmul@temp,w
  6257  0D8F  00AC               	movwf	??___flmul
  6258  0D90  01AD               	clrf	??___flmul+1
  6259  0D91  01AE               	clrf	??___flmul+2
  6260  0D92  01AF               	clrf	??___flmul+3
  6261  0D93  082C               	movf	??___flmul,w
  6262  0D94  07B2               	addwf	___flmul@grs,f
  6263  0D95  082D               	movf	??___flmul+1,w
  6264  0D96  1103               	clrz
  6265  0D97  1803               	skipnc
  6266  0D98  3E01               	addlw	1
  6267  0D99  1903               	skipnz
  6268  0D9A  2D9C               	goto	u3781
  6269  0D9B  07B3               	addwf	___flmul@grs+1,f
  6270  0D9C                     u3781:
  6271  0D9C  082E               	movf	??___flmul+2,w
  6272  0D9D  1103               	clrz
  6273  0D9E  1803               	skipnc
  6274  0D9F  3E01               	addlw	1
  6275  0DA0  1903               	skipnz
  6276  0DA1  2DA3               	goto	u3782
  6277  0DA2  07B4               	addwf	___flmul@grs+2,f
  6278  0DA3                     u3782:
  6279  0DA3  082F               	movf	??___flmul+3,w
  6280  0DA4  1103               	clrz
  6281  0DA5  1803               	skipnc
  6282  0DA6  3E01               	addlw	1
  6283  0DA7  1903               	skipnz
  6284  0DA8  2DAA               	goto	u3783
  6285  0DA9  07B5               	addwf	___flmul@grs+3,f
  6286  0DAA                     u3783:
  6287  0DAA                     l2658:
  6288  0DAA  083D               	movf	___flmul@temp+1,w
  6289  0DAB  00AC               	movwf	??___flmul
  6290  0DAC  01AD               	clrf	??___flmul+1
  6291  0DAD  01AE               	clrf	??___flmul+2
  6292  0DAE  01AF               	clrf	??___flmul+3
  6293  0DAF  082C               	movf	??___flmul,w
  6294  0DB0  07B8               	addwf	___flmul@prod,f
  6295  0DB1  082D               	movf	??___flmul+1,w
  6296  0DB2  1103               	clrz
  6297  0DB3  1803               	skipnc
  6298  0DB4  3E01               	addlw	1
  6299  0DB5  1903               	skipnz
  6300  0DB6  2DB8               	goto	u3791
  6301  0DB7  07B9               	addwf	___flmul@prod+1,f
  6302  0DB8                     u3791:
  6303  0DB8  082E               	movf	??___flmul+2,w
  6304  0DB9  1103               	clrz
  6305  0DBA  1803               	skipnc
  6306  0DBB  3E01               	addlw	1
  6307  0DBC  1903               	skipnz
  6308  0DBD  2DBF               	goto	u3792
  6309  0DBE  07BA               	addwf	___flmul@prod+2,f
  6310  0DBF                     u3792:
  6311  0DBF  082F               	movf	??___flmul+3,w
  6312  0DC0  1103               	clrz
  6313  0DC1  1803               	skipnc
  6314  0DC2  3E01               	addlw	1
  6315  0DC3  1903               	skipnz
  6316  0DC4  2DC6               	goto	u3793
  6317  0DC5  07BB               	addwf	___flmul@prod+3,f
  6318  0DC6                     u3793:
  6319  0DC6                     l2660:
  6320  0DC6  3008               	movlw	8
  6321  0DC7  00AC               	movwf	??___flmul
  6322  0DC8                     u3805:
  6323  0DC8  1003               	clrc
  6324  0DC9  0DB2               	rlf	___flmul@grs,f
  6325  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6326  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6327  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6328  0DCD  0BAC               	decfsz	??___flmul,f
  6329  0DCE  2DC8               	goto	u3805
  6330  0DCF                     l2662:
  6331  0DCF  0825               	movf	___flmul@b+1,w
  6332  0DD0  00AC               	movwf	??___flmul
  6333  0DD1  082C               	movf	??___flmul,w
  6334  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6335  0DD3  0828               	movf	___flmul@a,w
  6336  0DD4  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6337  0DD9  0871               	movf	?__Umul8_16+1,w
  6338  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6339  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6340  0DDC  00BD               	movwf	___flmul@temp+1
  6341  0DDD  0870               	movf	?__Umul8_16,w
  6342  0DDE  00BC               	movwf	___flmul@temp
  6343  0DDF                     l2664:
  6344  0DDF  083C               	movf	___flmul@temp,w
  6345  0DE0  00AC               	movwf	??___flmul
  6346  0DE1  083D               	movf	___flmul@temp+1,w
  6347  0DE2  00AD               	movwf	??___flmul+1
  6348  0DE3  01AE               	clrf	??___flmul+2
  6349  0DE4  01AF               	clrf	??___flmul+3
  6350  0DE5  082C               	movf	??___flmul,w
  6351  0DE6  07B2               	addwf	___flmul@grs,f
  6352  0DE7  082D               	movf	??___flmul+1,w
  6353  0DE8  1103               	clrz
  6354  0DE9  1803               	skipnc
  6355  0DEA  3E01               	addlw	1
  6356  0DEB  1903               	skipnz
  6357  0DEC  2DEE               	goto	u3811
  6358  0DED  07B3               	addwf	___flmul@grs+1,f
  6359  0DEE                     u3811:
  6360  0DEE  082E               	movf	??___flmul+2,w
  6361  0DEF  1103               	clrz
  6362  0DF0  1803               	skipnc
  6363  0DF1  3E01               	addlw	1
  6364  0DF2  1903               	skipnz
  6365  0DF3  2DF5               	goto	u3812
  6366  0DF4  07B4               	addwf	___flmul@grs+2,f
  6367  0DF5                     u3812:
  6368  0DF5  082F               	movf	??___flmul+3,w
  6369  0DF6  1103               	clrz
  6370  0DF7  1803               	skipnc
  6371  0DF8  3E01               	addlw	1
  6372  0DF9  1903               	skipnz
  6373  0DFA  2DFC               	goto	u3813
  6374  0DFB  07B5               	addwf	___flmul@grs+3,f
  6375  0DFC                     u3813:
  6376  0DFC                     l2666:
  6377  0DFC  0824               	movf	___flmul@b,w
  6378  0DFD  00AC               	movwf	??___flmul
  6379  0DFE  082C               	movf	??___flmul,w
  6380  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6381  0E00  0829               	movf	___flmul@a+1,w
  6382  0E01  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6383  0E06  0871               	movf	?__Umul8_16+1,w
  6384  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6385  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6386  0E09  00BD               	movwf	___flmul@temp+1
  6387  0E0A  0870               	movf	?__Umul8_16,w
  6388  0E0B  00BC               	movwf	___flmul@temp
  6389  0E0C                     l2668:
  6390  0E0C  083C               	movf	___flmul@temp,w
  6391  0E0D  00AC               	movwf	??___flmul
  6392  0E0E  083D               	movf	___flmul@temp+1,w
  6393  0E0F  00AD               	movwf	??___flmul+1
  6394  0E10  01AE               	clrf	??___flmul+2
  6395  0E11  01AF               	clrf	??___flmul+3
  6396  0E12  082C               	movf	??___flmul,w
  6397  0E13  07B2               	addwf	___flmul@grs,f
  6398  0E14  082D               	movf	??___flmul+1,w
  6399  0E15  1103               	clrz
  6400  0E16  1803               	skipnc
  6401  0E17  3E01               	addlw	1
  6402  0E18  1903               	skipnz
  6403  0E19  2E1B               	goto	u3821
  6404  0E1A  07B3               	addwf	___flmul@grs+1,f
  6405  0E1B                     u3821:
  6406  0E1B  082E               	movf	??___flmul+2,w
  6407  0E1C  1103               	clrz
  6408  0E1D  1803               	skipnc
  6409  0E1E  3E01               	addlw	1
  6410  0E1F  1903               	skipnz
  6411  0E20  2E22               	goto	u3822
  6412  0E21  07B4               	addwf	___flmul@grs+2,f
  6413  0E22                     u3822:
  6414  0E22  082F               	movf	??___flmul+3,w
  6415  0E23  1103               	clrz
  6416  0E24  1803               	skipnc
  6417  0E25  3E01               	addlw	1
  6418  0E26  1903               	skipnz
  6419  0E27  2E29               	goto	u3823
  6420  0E28  07B5               	addwf	___flmul@grs+3,f
  6421  0E29                     u3823:
  6422  0E29                     l2670:
  6423  0E29  3008               	movlw	8
  6424  0E2A  00AC               	movwf	??___flmul
  6425  0E2B                     u3835:
  6426  0E2B  1003               	clrc
  6427  0E2C  0DB2               	rlf	___flmul@grs,f
  6428  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6429  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6430  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6431  0E30  0BAC               	decfsz	??___flmul,f
  6432  0E31  2E2B               	goto	u3835
  6433  0E32  0824               	movf	___flmul@b,w
  6434  0E33  00AC               	movwf	??___flmul
  6435  0E34  082C               	movf	??___flmul,w
  6436  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6437  0E36  0828               	movf	___flmul@a,w
  6438  0E37  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6439  0E3C  0871               	movf	?__Umul8_16+1,w
  6440  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6441  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6442  0E3F  00BD               	movwf	___flmul@temp+1
  6443  0E40  0870               	movf	?__Umul8_16,w
  6444  0E41  00BC               	movwf	___flmul@temp
  6445  0E42                     l2672:
  6446  0E42  083C               	movf	___flmul@temp,w
  6447  0E43  00AC               	movwf	??___flmul
  6448  0E44  083D               	movf	___flmul@temp+1,w
  6449  0E45  00AD               	movwf	??___flmul+1
  6450  0E46  01AE               	clrf	??___flmul+2
  6451  0E47  01AF               	clrf	??___flmul+3
  6452  0E48  082C               	movf	??___flmul,w
  6453  0E49  07B2               	addwf	___flmul@grs,f
  6454  0E4A  082D               	movf	??___flmul+1,w
  6455  0E4B  1103               	clrz
  6456  0E4C  1803               	skipnc
  6457  0E4D  3E01               	addlw	1
  6458  0E4E  1903               	skipnz
  6459  0E4F  2E51               	goto	u3841
  6460  0E50  07B3               	addwf	___flmul@grs+1,f
  6461  0E51                     u3841:
  6462  0E51  082E               	movf	??___flmul+2,w
  6463  0E52  1103               	clrz
  6464  0E53  1803               	skipnc
  6465  0E54  3E01               	addlw	1
  6466  0E55  1903               	skipnz
  6467  0E56  2E58               	goto	u3842
  6468  0E57  07B4               	addwf	___flmul@grs+2,f
  6469  0E58                     u3842:
  6470  0E58  082F               	movf	??___flmul+3,w
  6471  0E59  1103               	clrz
  6472  0E5A  1803               	skipnc
  6473  0E5B  3E01               	addlw	1
  6474  0E5C  1903               	skipnz
  6475  0E5D  2E5F               	goto	u3843
  6476  0E5E  07B5               	addwf	___flmul@grs+3,f
  6477  0E5F                     u3843:
  6478  0E5F                     l2674:
  6479  0E5F  0825               	movf	___flmul@b+1,w
  6480  0E60  00AC               	movwf	??___flmul
  6481  0E61  082C               	movf	??___flmul,w
  6482  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6483  0E63  082A               	movf	___flmul@a+2,w
  6484  0E64  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6485  0E69  0871               	movf	?__Umul8_16+1,w
  6486  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6487  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6488  0E6C  00BD               	movwf	___flmul@temp+1
  6489  0E6D  0870               	movf	?__Umul8_16,w
  6490  0E6E  00BC               	movwf	___flmul@temp
  6491  0E6F  083C               	movf	___flmul@temp,w
  6492  0E70  00AC               	movwf	??___flmul
  6493  0E71  083D               	movf	___flmul@temp+1,w
  6494  0E72  00AD               	movwf	??___flmul+1
  6495  0E73  01AE               	clrf	??___flmul+2
  6496  0E74  01AF               	clrf	??___flmul+3
  6497  0E75  082C               	movf	??___flmul,w
  6498  0E76  07B8               	addwf	___flmul@prod,f
  6499  0E77  082D               	movf	??___flmul+1,w
  6500  0E78  1103               	clrz
  6501  0E79  1803               	skipnc
  6502  0E7A  3E01               	addlw	1
  6503  0E7B  1903               	skipnz
  6504  0E7C  2E7E               	goto	u3851
  6505  0E7D  07B9               	addwf	___flmul@prod+1,f
  6506  0E7E                     u3851:
  6507  0E7E  082E               	movf	??___flmul+2,w
  6508  0E7F  1103               	clrz
  6509  0E80  1803               	skipnc
  6510  0E81  3E01               	addlw	1
  6511  0E82  1903               	skipnz
  6512  0E83  2E85               	goto	u3852
  6513  0E84  07BA               	addwf	___flmul@prod+2,f
  6514  0E85                     u3852:
  6515  0E85  082F               	movf	??___flmul+3,w
  6516  0E86  1103               	clrz
  6517  0E87  1803               	skipnc
  6518  0E88  3E01               	addlw	1
  6519  0E89  1903               	skipnz
  6520  0E8A  2E8C               	goto	u3853
  6521  0E8B  07BB               	addwf	___flmul@prod+3,f
  6522  0E8C                     u3853:
  6523  0E8C                     l2676:
  6524  0E8C  0826               	movf	___flmul@b+2,w
  6525  0E8D  00AC               	movwf	??___flmul
  6526  0E8E  082C               	movf	??___flmul,w
  6527  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6528  0E90  0829               	movf	___flmul@a+1,w
  6529  0E91  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6530  0E96  0871               	movf	?__Umul8_16+1,w
  6531  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6532  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6533  0E99  00BD               	movwf	___flmul@temp+1
  6534  0E9A  0870               	movf	?__Umul8_16,w
  6535  0E9B  00BC               	movwf	___flmul@temp
  6536  0E9C                     l2678:
  6537  0E9C  083C               	movf	___flmul@temp,w
  6538  0E9D  00AC               	movwf	??___flmul
  6539  0E9E  083D               	movf	___flmul@temp+1,w
  6540  0E9F  00AD               	movwf	??___flmul+1
  6541  0EA0  01AE               	clrf	??___flmul+2
  6542  0EA1  01AF               	clrf	??___flmul+3
  6543  0EA2  082C               	movf	??___flmul,w
  6544  0EA3  07B8               	addwf	___flmul@prod,f
  6545  0EA4  082D               	movf	??___flmul+1,w
  6546  0EA5  1103               	clrz
  6547  0EA6  1803               	skipnc
  6548  0EA7  3E01               	addlw	1
  6549  0EA8  1903               	skipnz
  6550  0EA9  2EAB               	goto	u3861
  6551  0EAA  07B9               	addwf	___flmul@prod+1,f
  6552  0EAB                     u3861:
  6553  0EAB  082E               	movf	??___flmul+2,w
  6554  0EAC  1103               	clrz
  6555  0EAD  1803               	skipnc
  6556  0EAE  3E01               	addlw	1
  6557  0EAF  1903               	skipnz
  6558  0EB0  2EB2               	goto	u3862
  6559  0EB1  07BA               	addwf	___flmul@prod+2,f
  6560  0EB2                     u3862:
  6561  0EB2  082F               	movf	??___flmul+3,w
  6562  0EB3  1103               	clrz
  6563  0EB4  1803               	skipnc
  6564  0EB5  3E01               	addlw	1
  6565  0EB6  1903               	skipnz
  6566  0EB7  2EB9               	goto	u3863
  6567  0EB8  07BB               	addwf	___flmul@prod+3,f
  6568  0EB9                     u3863:
  6569  0EB9  0826               	movf	___flmul@b+2,w
  6570  0EBA  00AC               	movwf	??___flmul
  6571  0EBB  082C               	movf	??___flmul,w
  6572  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6573  0EBD  082A               	movf	___flmul@a+2,w
  6574  0EBE  160A  158A  235C  120A  158A  	fcall	__Umul8_16
  6575  0EC3  0871               	movf	?__Umul8_16+1,w
  6576  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6578  0EC6  00BD               	movwf	___flmul@temp+1
  6579  0EC7  0870               	movf	?__Umul8_16,w
  6580  0EC8  00BC               	movwf	___flmul@temp
  6581  0EC9                     l2680:
  6582  0EC9  083C               	movf	___flmul@temp,w
  6583  0ECA  00AC               	movwf	??___flmul
  6584  0ECB  083D               	movf	___flmul@temp+1,w
  6585  0ECC  00AD               	movwf	??___flmul+1
  6586  0ECD  01AE               	clrf	??___flmul+2
  6587  0ECE  01AF               	clrf	??___flmul+3
  6588  0ECF  3008               	movlw	8
  6589  0ED0                     u3875:
  6590  0ED0  1003               	clrc
  6591  0ED1  0DAC               	rlf	??___flmul,f
  6592  0ED2  0DAD               	rlf	??___flmul+1,f
  6593  0ED3  0DAE               	rlf	??___flmul+2,f
  6594  0ED4  0DAF               	rlf	??___flmul+3,f
  6595  0ED5                     u3870:
  6596  0ED5  3EFF               	addlw	-1
  6597  0ED6  1D03               	skipz
  6598  0ED7  2ED0               	goto	u3875
  6599  0ED8  082C               	movf	??___flmul,w
  6600  0ED9  07B8               	addwf	___flmul@prod,f
  6601  0EDA  082D               	movf	??___flmul+1,w
  6602  0EDB  1103               	clrz
  6603  0EDC  1803               	skipnc
  6604  0EDD  3E01               	addlw	1
  6605  0EDE  1903               	skipnz
  6606  0EDF  2EE1               	goto	u3881
  6607  0EE0  07B9               	addwf	___flmul@prod+1,f
  6608  0EE1                     u3881:
  6609  0EE1  082E               	movf	??___flmul+2,w
  6610  0EE2  1103               	clrz
  6611  0EE3  1803               	skipnc
  6612  0EE4  3E01               	addlw	1
  6613  0EE5  1903               	skipnz
  6614  0EE6  2EE8               	goto	u3882
  6615  0EE7  07BA               	addwf	___flmul@prod+2,f
  6616  0EE8                     u3882:
  6617  0EE8  082F               	movf	??___flmul+3,w
  6618  0EE9  1103               	clrz
  6619  0EEA  1803               	skipnc
  6620  0EEB  3E01               	addlw	1
  6621  0EEC  1903               	skipnz
  6622  0EED  2EEF               	goto	u3883
  6623  0EEE  07BB               	addwf	___flmul@prod+3,f
  6624  0EEF                     u3883:
  6625  0EEF                     l2682:
  6626  0EEF  0832               	movf	___flmul@grs,w
  6627  0EF0  00AC               	movwf	??___flmul
  6628  0EF1  0833               	movf	___flmul@grs+1,w
  6629  0EF2  00AD               	movwf	??___flmul+1
  6630  0EF3  0834               	movf	___flmul@grs+2,w
  6631  0EF4  00AE               	movwf	??___flmul+2
  6632  0EF5  0835               	movf	___flmul@grs+3,w
  6633  0EF6  00AF               	movwf	??___flmul+3
  6634  0EF7  3018               	movlw	24
  6635  0EF8                     u3895:
  6636  0EF8  1003               	clrc
  6637  0EF9  0CAF               	rrf	??___flmul+3,f
  6638  0EFA  0CAE               	rrf	??___flmul+2,f
  6639  0EFB  0CAD               	rrf	??___flmul+1,f
  6640  0EFC  0CAC               	rrf	??___flmul,f
  6641  0EFD                     u3890:
  6642  0EFD  3EFF               	addlw	-1
  6643  0EFE  1D03               	skipz
  6644  0EFF  2EF8               	goto	u3895
  6645  0F00  082C               	movf	??___flmul,w
  6646  0F01  07B8               	addwf	___flmul@prod,f
  6647  0F02  082D               	movf	??___flmul+1,w
  6648  0F03  1103               	clrz
  6649  0F04  1803               	skipnc
  6650  0F05  3E01               	addlw	1
  6651  0F06  1903               	skipnz
  6652  0F07  2F09               	goto	u3901
  6653  0F08  07B9               	addwf	___flmul@prod+1,f
  6654  0F09                     u3901:
  6655  0F09  082E               	movf	??___flmul+2,w
  6656  0F0A  1103               	clrz
  6657  0F0B  1803               	skipnc
  6658  0F0C  3E01               	addlw	1
  6659  0F0D  1903               	skipnz
  6660  0F0E  2F10               	goto	u3902
  6661  0F0F  07BA               	addwf	___flmul@prod+2,f
  6662  0F10                     u3902:
  6663  0F10  082F               	movf	??___flmul+3,w
  6664  0F11  1103               	clrz
  6665  0F12  1803               	skipnc
  6666  0F13  3E01               	addlw	1
  6667  0F14  1903               	skipnz
  6668  0F15  2F17               	goto	u3903
  6669  0F16  07BB               	addwf	___flmul@prod+3,f
  6670  0F17                     u3903:
  6671  0F17                     l2684:
  6672  0F17  3008               	movlw	8
  6673  0F18  00AC               	movwf	??___flmul
  6674  0F19                     u3915:
  6675  0F19  1003               	clrc
  6676  0F1A  0DB2               	rlf	___flmul@grs,f
  6677  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6678  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6679  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6680  0F1E  0BAC               	decfsz	??___flmul,f
  6681  0F1F  2F19               	goto	u3915
  6682  0F20                     l2686:
  6683  0F20  0837               	movf	___flmul@bexp,w
  6684  0F21  0736               	addwf	___flmul@aexp,w
  6685  0F22  00AC               	movwf	??___flmul
  6686  0F23  01AD               	clrf	??___flmul+1
  6687  0F24  0DAD               	rlf	??___flmul+1,f
  6688  0F25  082C               	movf	??___flmul,w
  6689  0F26  3E82               	addlw	130
  6690  0F27  00BC               	movwf	___flmul@temp
  6691  0F28  082D               	movf	??___flmul+1,w
  6692  0F29  1803               	skipnc
  6693  0F2A  3E01               	addlw	1
  6694  0F2B  3EFF               	addlw	255
  6695  0F2C  00BD               	movwf	___flmul@temp+1
  6696  0F2D  2F4B               	goto	l2698
  6697  0F2E                     l2688:
  6698  0F2E  3001               	movlw	1
  6699  0F2F  00AC               	movwf	??___flmul
  6700  0F30                     u3925:
  6701  0F30  1003               	clrc
  6702  0F31  0DB8               	rlf	___flmul@prod,f
  6703  0F32  0DB9               	rlf	___flmul@prod+1,f
  6704  0F33  0DBA               	rlf	___flmul@prod+2,f
  6705  0F34  0DBB               	rlf	___flmul@prod+3,f
  6706  0F35  0BAC               	decfsz	??___flmul,f
  6707  0F36  2F30               	goto	u3925
  6708  0F37                     l2690:
  6709  0F37  1FB5               	btfss	___flmul@grs+3,7
  6710  0F38  2F3A               	goto	u3931
  6711  0F39  2F3B               	goto	u3930
  6712  0F3A                     u3931:
  6713  0F3A  2F3C               	goto	l2694
  6714  0F3B                     u3930:
  6715  0F3B                     l2692:
  6716  0F3B  1438               	bsf	___flmul@prod,0
  6717  0F3C                     l2694:
  6718  0F3C  3001               	movlw	1
  6719  0F3D  00AC               	movwf	??___flmul
  6720  0F3E                     u3945:
  6721  0F3E  1003               	clrc
  6722  0F3F  0DB2               	rlf	___flmul@grs,f
  6723  0F40  0DB3               	rlf	___flmul@grs+1,f
  6724  0F41  0DB4               	rlf	___flmul@grs+2,f
  6725  0F42  0DB5               	rlf	___flmul@grs+3,f
  6726  0F43  0BAC               	decfsz	??___flmul,f
  6727  0F44  2F3E               	goto	u3945
  6728  0F45                     l2696:
  6729  0F45  30FF               	movlw	255
  6730  0F46  07BC               	addwf	___flmul@temp,f
  6731  0F47  1803               	skipnc
  6732  0F48  0ABD               	incf	___flmul@temp+1,f
  6733  0F49  30FF               	movlw	255
  6734  0F4A  07BD               	addwf	___flmul@temp+1,f
  6735  0F4B                     l2698:
  6736  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6737  0F4C  2F4E               	goto	u3951
  6738  0F4D  2F4F               	goto	u3950
  6739  0F4E                     u3951:
  6740  0F4E  2F2E               	goto	l2688
  6741  0F4F                     u3950:
  6742  0F4F                     l2700:
  6743  0F4F  01B6               	clrf	___flmul@aexp
  6744  0F50                     l2702:
  6745  0F50  1FB5               	btfss	___flmul@grs+3,7
  6746  0F51  2F53               	goto	u3961
  6747  0F52  2F54               	goto	u3960
  6748  0F53                     u3961:
  6749  0F53  2F70               	goto	l2710
  6750  0F54                     u3960:
  6751  0F54                     l2704:
  6752  0F54  30FF               	movlw	255
  6753  0F55  0532               	andwf	___flmul@grs,w
  6754  0F56  00AC               	movwf	??___flmul
  6755  0F57  30FF               	movlw	255
  6756  0F58  0533               	andwf	___flmul@grs+1,w
  6757  0F59  00AD               	movwf	??___flmul+1
  6758  0F5A  30FF               	movlw	255
  6759  0F5B  0534               	andwf	___flmul@grs+2,w
  6760  0F5C  00AE               	movwf	??___flmul+2
  6761  0F5D  307F               	movlw	127
  6762  0F5E  0535               	andwf	___flmul@grs+3,w
  6763  0F5F  00AF               	movwf	??___flmul+3
  6764  0F60  082F               	movf	??___flmul+3,w
  6765  0F61  042E               	iorwf	??___flmul+2,w
  6766  0F62  042D               	iorwf	??___flmul+1,w
  6767  0F63  042C               	iorwf	??___flmul,w
  6768  0F64  1903               	skipnz
  6769  0F65  2F67               	goto	u3971
  6770  0F66  2F68               	goto	u3970
  6771  0F67                     u3971:
  6772  0F67  2F6B               	goto	l778
  6773  0F68                     u3970:
  6774  0F68                     l2706:
  6775  0F68  01B6               	clrf	___flmul@aexp
  6776  0F69  0AB6               	incf	___flmul@aexp,f
  6777  0F6A  2F70               	goto	l2710
  6778  0F6B                     l778:
  6779  0F6B  1C38               	btfss	___flmul@prod,0
  6780  0F6C  2F6E               	goto	u3981
  6781  0F6D  2F6F               	goto	u3980
  6782  0F6E                     u3981:
  6783  0F6E  2F70               	goto	l2710
  6784  0F6F                     u3980:
  6785  0F6F  2F68               	goto	l2706
  6786  0F70                     l2710:
  6787  0F70  0836               	movf	___flmul@aexp,w
  6788  0F71  1903               	btfsc	3,2
  6789  0F72  2F74               	goto	u3991
  6790  0F73  2F75               	goto	u3990
  6791  0F74                     u3991:
  6792  0F74  2FA6               	goto	l2720
  6793  0F75                     u3990:
  6794  0F75                     l2712:
  6795  0F75  3001               	movlw	1
  6796  0F76  07B8               	addwf	___flmul@prod,f
  6797  0F77  3000               	movlw	0
  6798  0F78  1803               	skipnc
  6799  0F79  3001               	movlw	1
  6800  0F7A  07B9               	addwf	___flmul@prod+1,f
  6801  0F7B  3000               	movlw	0
  6802  0F7C  1803               	skipnc
  6803  0F7D  3001               	movlw	1
  6804  0F7E  07BA               	addwf	___flmul@prod+2,f
  6805  0F7F  3000               	movlw	0
  6806  0F80  1803               	skipnc
  6807  0F81  3001               	movlw	1
  6808  0F82  07BB               	addwf	___flmul@prod+3,f
  6809  0F83                     l2714:
  6810  0F83  1C3B               	btfss	___flmul@prod+3,0
  6811  0F84  2F86               	goto	u4001
  6812  0F85  2F87               	goto	u4000
  6813  0F86                     u4001:
  6814  0F86  2FA6               	goto	l2720
  6815  0F87                     u4000:
  6816  0F87                     l2716:
  6817  0F87  0838               	movf	___flmul@prod,w
  6818  0F88  00AC               	movwf	??___flmul
  6819  0F89  0839               	movf	___flmul@prod+1,w
  6820  0F8A  00AD               	movwf	??___flmul+1
  6821  0F8B  083A               	movf	___flmul@prod+2,w
  6822  0F8C  00AE               	movwf	??___flmul+2
  6823  0F8D  083B               	movf	___flmul@prod+3,w
  6824  0F8E  00AF               	movwf	??___flmul+3
  6825  0F8F  3001               	movlw	1
  6826  0F90  00B0               	movwf	??___flmul+4
  6827  0F91                     u4015:
  6828  0F91  0D2F               	rlf	??___flmul+3,w
  6829  0F92  0CAF               	rrf	??___flmul+3,f
  6830  0F93  0CAE               	rrf	??___flmul+2,f
  6831  0F94  0CAD               	rrf	??___flmul+1,f
  6832  0F95  0CAC               	rrf	??___flmul,f
  6833  0F96                     u4010:
  6834  0F96  0BB0               	decfsz	??___flmul+4,f
  6835  0F97  2F91               	goto	u4015
  6836  0F98  082F               	movf	??___flmul+3,w
  6837  0F99  00BB               	movwf	___flmul@prod+3
  6838  0F9A  082E               	movf	??___flmul+2,w
  6839  0F9B  00BA               	movwf	___flmul@prod+2
  6840  0F9C  082D               	movf	??___flmul+1,w
  6841  0F9D  00B9               	movwf	___flmul@prod+1
  6842  0F9E  082C               	movf	??___flmul,w
  6843  0F9F  00B8               	movwf	___flmul@prod
  6844  0FA0                     l2718:
  6845  0FA0  3001               	movlw	1
  6846  0FA1  07BC               	addwf	___flmul@temp,f
  6847  0FA2  1803               	skipnc
  6848  0FA3  0ABD               	incf	___flmul@temp+1,f
  6849  0FA4  3000               	movlw	0
  6850  0FA5  07BD               	addwf	___flmul@temp+1,f
  6851  0FA6                     l2720:
  6852  0FA6  083D               	movf	___flmul@temp+1,w
  6853  0FA7  3A80               	xorlw	128
  6854  0FA8  00FF               	movwf	btemp+1
  6855  0FA9  3080               	movlw	128
  6856  0FAA  027F               	subwf	btemp+1,w
  6857  0FAB  1D03               	skipz
  6858  0FAC  2FAF               	goto	u4025
  6859  0FAD  30FF               	movlw	255
  6860  0FAE  023C               	subwf	___flmul@temp,w
  6861  0FAF                     u4025:
  6862  0FAF  1C03               	skipc
  6863  0FB0  2FB2               	goto	u4021
  6864  0FB1  2FB3               	goto	u4020
  6865  0FB2                     u4021:
  6866  0FB2  2FBE               	goto	l2724
  6867  0FB3                     u4020:
  6868  0FB3                     l2722:
  6869  0FB3  307F               	movlw	127
  6870  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6871  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6872  0FB6  00BB               	movwf	___flmul@prod+3
  6873  0FB7  3080               	movlw	128
  6874  0FB8  00BA               	movwf	___flmul@prod+2
  6875  0FB9  3000               	movlw	0
  6876  0FBA  00B9               	movwf	___flmul@prod+1
  6877  0FBB  3000               	movlw	0
  6878  0FBC  00B8               	movwf	___flmul@prod
  6879  0FBD  2FF3               	goto	l784
  6880  0FBE                     l2724:
  6881  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6882  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6883  0FC0  083D               	movf	___flmul@temp+1,w
  6884  0FC1  3A80               	xorlw	128
  6885  0FC2  00FF               	movwf	btemp+1
  6886  0FC3  3080               	movlw	128
  6887  0FC4  027F               	subwf	btemp+1,w
  6888  0FC5  1D03               	skipz
  6889  0FC6  2FC9               	goto	u4035
  6890  0FC7  3001               	movlw	1
  6891  0FC8  023C               	subwf	___flmul@temp,w
  6892  0FC9                     u4035:
  6893  0FC9  1803               	skipnc
  6894  0FCA  2FCC               	goto	u4031
  6895  0FCB  2FCD               	goto	u4030
  6896  0FCC                     u4031:
  6897  0FCC  2FD9               	goto	l2730
  6898  0FCD                     u4030:
  6899  0FCD                     l2726:
  6900  0FCD  3000               	movlw	0
  6901  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6902  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6903  0FD0  00BB               	movwf	___flmul@prod+3
  6904  0FD1  3000               	movlw	0
  6905  0FD2  00BA               	movwf	___flmul@prod+2
  6906  0FD3  3000               	movlw	0
  6907  0FD4  00B9               	movwf	___flmul@prod+1
  6908  0FD5  3000               	movlw	0
  6909  0FD6  00B8               	movwf	___flmul@prod
  6910  0FD7                     l2728:
  6911  0FD7  01B1               	clrf	___flmul@sign
  6912  0FD8  2FF3               	goto	l784
  6913  0FD9                     l2730:
  6914  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6915  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6916  0FDB  083C               	movf	___flmul@temp,w
  6917  0FDC  00AC               	movwf	??___flmul
  6918  0FDD  082C               	movf	??___flmul,w
  6919  0FDE  00B7               	movwf	___flmul@bexp
  6920  0FDF  30FF               	movlw	255
  6921  0FE0  05B8               	andwf	___flmul@prod,f
  6922  0FE1  30FF               	movlw	255
  6923  0FE2  05B9               	andwf	___flmul@prod+1,f
  6924  0FE3  307F               	movlw	127
  6925  0FE4  05BA               	andwf	___flmul@prod+2,f
  6926  0FE5  3000               	movlw	0
  6927  0FE6  05BB               	andwf	___flmul@prod+3,f
  6928  0FE7                     l2732:
  6929  0FE7  1C37               	btfss	___flmul@bexp,0
  6930  0FE8  2FEA               	goto	u4041
  6931  0FE9  2FEB               	goto	u4040
  6932  0FEA                     u4041:
  6933  0FEA  2FEC               	goto	l2736
  6934  0FEB                     u4040:
  6935  0FEB                     l2734:
  6936  0FEB  17BA               	bsf	___flmul@prod+2,7
  6937  0FEC                     l2736:
  6938  0FEC  0837               	movf	___flmul@bexp,w
  6939  0FED  00AC               	movwf	??___flmul
  6940  0FEE  1003               	clrc
  6941  0FEF  0C2C               	rrf	??___flmul,w
  6942  0FF0  00AD               	movwf	??___flmul+1
  6943  0FF1  082D               	movf	??___flmul+1,w
  6944  0FF2  00BB               	movwf	___flmul@prod+3
  6945  0FF3                     l784:
  6946  0FF3  0831               	movf	___flmul@sign,w
  6947  0FF4  00AC               	movwf	??___flmul
  6948  0FF5  082C               	movf	??___flmul,w
  6949  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6950  0FF7                     l2738:
  6951  0FF7  083B               	movf	___flmul@prod+3,w
  6952  0FF8  00A7               	movwf	?___flmul+3
  6953  0FF9  083A               	movf	___flmul@prod+2,w
  6954  0FFA  00A6               	movwf	?___flmul+2
  6955  0FFB  0839               	movf	___flmul@prod+1,w
  6956  0FFC  00A5               	movwf	?___flmul+1
  6957  0FFD  0838               	movf	___flmul@prod,w
  6958  0FFE  00A4               	movwf	?___flmul
  6959  0FFF                     l772:
  6960  0FFF  0008               	return
  6961  1000                     __end_of___flmul:
  6962                           
  6963                           	psect	text10
  6964  1B5C                     __ptext10:	
  6965 ;; *************** function __Umul8_16 *****************
  6966 ;; Defined at:
  6967 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  multiplier      1    wreg     unsigned char 
  6970 ;;  multiplicand    1    0[COMMON] unsigned char 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  multiplier      1    8[COMMON] unsigned char 
  6973 ;;  word_mpld       2    6[COMMON] unsigned int 
  6974 ;;  product         2    4[COMMON] unsigned int 
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  2    0[COMMON] unsigned int 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2, status,0
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6984 ;;      Params:         2       0       0       0       0
  6985 ;;      Locals:         5       0       0       0       0
  6986 ;;      Temps:          2       0       0       0       0
  6987 ;;      Totals:         9       0       0       0       0
  6988 ;;Total ram usage:        9 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		___flmul
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           
  6998                           ;psect for function __Umul8_16
  6999  1B5C                     __Umul8_16:
  7000                           
  7001                           ;incstack = 0
  7002                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7003                           ;__Umul8_16@multiplier stored from wreg
  7004  1B5C  00F8               	movwf	__Umul8_16@multiplier
  7005  1B5D                     l2238:
  7006  1B5D  01F4               	clrf	__Umul8_16@product
  7007  1B5E  01F5               	clrf	__Umul8_16@product+1
  7008  1B5F                     l2240:
  7009  1B5F  0870               	movf	__Umul8_16@multiplicand,w
  7010  1B60  00F2               	movwf	??__Umul8_16
  7011  1B61  01F3               	clrf	??__Umul8_16+1
  7012  1B62  0872               	movf	??__Umul8_16,w
  7013  1B63  00F6               	movwf	__Umul8_16@word_mpld
  7014  1B64  0873               	movf	??__Umul8_16+1,w
  7015  1B65  00F7               	movwf	__Umul8_16@word_mpld+1
  7016  1B66                     l2242:
  7017  1B66  1C78               	btfss	__Umul8_16@multiplier,0
  7018  1B67  2B69               	goto	u2801
  7019  1B68  2B6A               	goto	u2800
  7020  1B69                     u2801:
  7021  1B69  2B70               	goto	l791
  7022  1B6A                     u2800:
  7023  1B6A                     l2244:
  7024  1B6A  0876               	movf	__Umul8_16@word_mpld,w
  7025  1B6B  07F4               	addwf	__Umul8_16@product,f
  7026  1B6C  1803               	skipnc
  7027  1B6D  0AF5               	incf	__Umul8_16@product+1,f
  7028  1B6E  0877               	movf	__Umul8_16@word_mpld+1,w
  7029  1B6F  07F5               	addwf	__Umul8_16@product+1,f
  7030  1B70                     l791:
  7031  1B70  3001               	movlw	1
  7032  1B71                     u2815:
  7033  1B71  1003               	clrc
  7034  1B72  0DF6               	rlf	__Umul8_16@word_mpld,f
  7035  1B73  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7036  1B74  3EFF               	addlw	-1
  7037  1B75  1D03               	skipz
  7038  1B76  2B71               	goto	u2815
  7039  1B77  1003               	clrc
  7040  1B78  0CF8               	rrf	__Umul8_16@multiplier,f
  7041  1B79                     l2246:
  7042  1B79  0878               	movf	__Umul8_16@multiplier,w
  7043  1B7A  1D03               	btfss	3,2
  7044  1B7B  2B7D               	goto	u2821
  7045  1B7C  2B7E               	goto	u2820
  7046  1B7D                     u2821:
  7047  1B7D  2B66               	goto	l2242
  7048  1B7E                     u2820:
  7049  1B7E                     l2248:
  7050  1B7E  0875               	movf	__Umul8_16@product+1,w
  7051  1B7F  00F1               	movwf	?__Umul8_16+1
  7052  1B80  0874               	movf	__Umul8_16@product,w
  7053  1B81  00F0               	movwf	?__Umul8_16
  7054  1B82                     l793:
  7055  1B82  0008               	return
  7056  1B83                     __end_of__Umul8_16:
  7057                           
  7058                           	psect	text11
  7059  1F43                     __ptext11:	
  7060 ;; *************** function __tdiv_to_l_ *****************
  7061 ;; Defined at:
  7062 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  f1              4    0[COMMON] float 
  7065 ;;  f2              4    4[COMMON] float 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;  quot            4    0[BANK0 ] unsigned long 
  7068 ;;  exp1            1    5[BANK0 ] unsigned char 
  7069 ;;  cntr            1    4[BANK0 ] unsigned char 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  4    0[COMMON] unsigned long 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7079 ;;      Params:         8       0       0       0       0
  7080 ;;      Locals:         0       6       0       0       0
  7081 ;;      Temps:          4       0       0       0       0
  7082 ;;      Totals:        12       6       0       0       0
  7083 ;;Total ram usage:       18 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_sprintf
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           
  7093                           ;psect for function __tdiv_to_l_
  7094  1F43                     __tdiv_to_l_:
  7095  1F43                     l2850:	
  7096                           ;incstack = 0
  7097                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7098                           
  7099  1F43  0870               	movf	__tdiv_to_l_@f1,w
  7100  1F44  00F8               	movwf	??__tdiv_to_l_
  7101  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  7102  1F46  00F9               	movwf	??__tdiv_to_l_+1
  7103  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  7104  1F48  00FA               	movwf	??__tdiv_to_l_+2
  7105  1F49  1003               	clrc
  7106  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  7107  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  7108  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  7109  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  7110  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  7111  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  7112  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  7113  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  7114  1F52  1D03               	btfss	3,2
  7115  1F53  2F55               	goto	u4351
  7116  1F54  2F56               	goto	u4350
  7117  1F55                     u4351:
  7118  1F55  2F5F               	goto	l2856
  7119  1F56                     u4350:
  7120  1F56                     l2852:
  7121  1F56  3000               	movlw	0
  7122  1F57  00F3               	movwf	?__tdiv_to_l_+3
  7123  1F58  3000               	movlw	0
  7124  1F59  00F2               	movwf	?__tdiv_to_l_+2
  7125  1F5A  3000               	movlw	0
  7126  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  7127  1F5C  3000               	movlw	0
  7128  1F5D  00F0               	movwf	?__tdiv_to_l_
  7129  1F5E  2FFF               	goto	l566
  7130  1F5F                     l2856:
  7131  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  7132  1F60  00F8               	movwf	??__tdiv_to_l_
  7133  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  7134  1F62  00F9               	movwf	??__tdiv_to_l_+1
  7135  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  7136  1F64  00FA               	movwf	??__tdiv_to_l_+2
  7137  1F65  1003               	clrc
  7138  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  7139  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  7140  1F68  00FB               	movwf	??__tdiv_to_l_+3
  7141  1F69  087B               	movf	??__tdiv_to_l_+3,w
  7142  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  7143  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  7144  1F6C  1D03               	btfss	3,2
  7145  1F6D  2F6F               	goto	u4361
  7146  1F6E  2F70               	goto	u4360
  7147  1F6F                     u4361:
  7148  1F6F  2F71               	goto	l567
  7149  1F70                     u4360:
  7150  1F70  2F56               	goto	l2852
  7151  1F71                     l567:
  7152  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7153  1F72                     l2862:
  7154  1F72  30FF               	movlw	255
  7155  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  7156  1F74  30FF               	movlw	255
  7157  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7158  1F76  3000               	movlw	0
  7159  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7160  1F78                     l2864:
  7161  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7162  1F79  30FF               	movlw	255
  7163  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  7164  1F7B  30FF               	movlw	255
  7165  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7166  1F7D  3000               	movlw	0
  7167  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7168  1F7F  3000               	movlw	0
  7169  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  7170  1F81  3000               	movlw	0
  7171  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  7172  1F83  3000               	movlw	0
  7173  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  7174  1F85  3000               	movlw	0
  7175  1F86  00A0               	movwf	__tdiv_to_l_@quot
  7176  1F87                     l2866:
  7177  1F87  307F               	movlw	127
  7178  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  7179  1F89                     l2868:
  7180  1F89  3098               	movlw	152
  7181  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  7182  1F8B  00F8               	movwf	??__tdiv_to_l_
  7183  1F8C  0878               	movf	??__tdiv_to_l_,w
  7184  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  7185  1F8E  3018               	movlw	24
  7186  1F8F  00F8               	movwf	??__tdiv_to_l_
  7187  1F90  0878               	movf	??__tdiv_to_l_,w
  7188  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  7189  1F92                     l2870:
  7190  1F92  3001               	movlw	1
  7191  1F93  00F8               	movwf	??__tdiv_to_l_
  7192  1F94                     u4375:
  7193  1F94  1003               	clrc
  7194  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  7195  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7196  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7197  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7198  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  7199  1F9A  2F94               	goto	u4375
  7200  1F9B                     l2872:
  7201  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  7202  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  7203  1F9D  1D03               	skipz
  7204  1F9E  2FA5               	goto	u4385
  7205  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  7206  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  7207  1FA1  1D03               	skipz
  7208  1FA2  2FA5               	goto	u4385
  7209  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  7210  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  7211  1FA5                     u4385:
  7212  1FA5  1C03               	skipc
  7213  1FA6  2FA8               	goto	u4381
  7214  1FA7  2FA9               	goto	u4380
  7215  1FA8                     u4381:
  7216  1FA8  2FB4               	goto	l2878
  7217  1FA9                     u4380:
  7218  1FA9                     l2874:
  7219  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  7220  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  7221  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  7222  1FAC  1C03               	skipc
  7223  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7224  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7225  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  7226  1FB0  1C03               	skipc
  7227  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  7228  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7229  1FB3                     l2876:
  7230  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  7231  1FB4                     l2878:
  7232  1FB4  3001               	movlw	1
  7233  1FB5                     u4395:
  7234  1FB5  1003               	clrc
  7235  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  7236  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7237  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7238  1FB9  3EFF               	addlw	-1
  7239  1FBA  1D03               	skipz
  7240  1FBB  2FB5               	goto	u4395
  7241  1FBC                     l2880:
  7242  1FBC  3001               	movlw	1
  7243  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  7244  1FBE  1D03               	btfss	3,2
  7245  1FBF  2FC1               	goto	u4401
  7246  1FC0  2FC2               	goto	u4400
  7247  1FC1                     u4401:
  7248  1FC1  2F92               	goto	l2870
  7249  1FC2                     u4400:
  7250  1FC2                     l570:
  7251  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7252  1FC3  2FC5               	goto	u4411
  7253  1FC4  2FC6               	goto	u4410
  7254  1FC5                     u4411:
  7255  1FC5  2FE0               	goto	l2890
  7256  1FC6                     u4410:
  7257  1FC6                     l2882:
  7258  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  7259  1FC7  3A80               	xorlw	128
  7260  1FC8  3E97               	addlw	151
  7261  1FC9  1803               	skipnc
  7262  1FCA  2FCC               	goto	u4421
  7263  1FCB  2FCD               	goto	u4420
  7264  1FCC                     u4421:
  7265  1FCC  2FCE               	goto	l2888
  7266  1FCD                     u4420:
  7267  1FCD  2F56               	goto	l2852
  7268  1FCE                     l2888:
  7269  1FCE  3001               	movlw	1
  7270  1FCF                     u4435:
  7271  1FCF  1003               	clrc
  7272  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7273  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7274  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7275  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  7276  1FD4  3EFF               	addlw	-1
  7277  1FD5  1D03               	skipz
  7278  1FD6  2FCF               	goto	u4435
  7279  1FD7  3001               	movlw	1
  7280  1FD8  00F8               	movwf	??__tdiv_to_l_
  7281  1FD9  0878               	movf	??__tdiv_to_l_,w
  7282  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  7283  1FDB  1D03               	btfss	3,2
  7284  1FDC  2FDE               	goto	u4441
  7285  1FDD  2FDF               	goto	u4440
  7286  1FDE                     u4441:
  7287  1FDE  2FCE               	goto	l2888
  7288  1FDF                     u4440:
  7289  1FDF  2FF7               	goto	l2898
  7290  1FE0                     l2890:
  7291  1FE0  3018               	movlw	24
  7292  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  7293  1FE2  1C03               	skipc
  7294  1FE3  2FE5               	goto	u4451
  7295  1FE4  2FE6               	goto	u4450
  7296  1FE5                     u4451:
  7297  1FE5  2FF2               	goto	l577
  7298  1FE6                     u4450:
  7299  1FE6  2F56               	goto	l2852
  7300  1FE7                     l2896:
  7301  1FE7  3001               	movlw	1
  7302  1FE8  00F8               	movwf	??__tdiv_to_l_
  7303  1FE9                     u4465:
  7304  1FE9  1003               	clrc
  7305  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  7306  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7307  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7308  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7309  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  7310  1FEF  2FE9               	goto	u4465
  7311  1FF0  3001               	movlw	1
  7312  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  7313  1FF2                     l577:
  7314  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  7315  1FF3  1D03               	btfss	3,2
  7316  1FF4  2FF6               	goto	u4471
  7317  1FF5  2FF7               	goto	u4470
  7318  1FF6                     u4471:
  7319  1FF6  2FE7               	goto	l2896
  7320  1FF7                     u4470:
  7321  1FF7                     l2898:
  7322  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  7323  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  7324  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  7325  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  7326  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  7327  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  7328  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  7329  1FFE  00F0               	movwf	?__tdiv_to_l_
  7330  1FFF                     l566:
  7331  1FFF  0008               	return
  7332  2000                     __end_of__tdiv_to_l_:
  7333                           
  7334                           	psect	text12
  7335  1089                     __ptext12:	
  7336 ;; *************** function __div_to_l_ *****************
  7337 ;; Defined at:
  7338 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  f1              4    0[COMMON] unsigned long 
  7341 ;;  f2              4    4[COMMON] unsigned long 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  quot            4    0[BANK0 ] unsigned long 
  7344 ;;  exp1            1    5[BANK0 ] unsigned char 
  7345 ;;  cntr            1    4[BANK0 ] unsigned char 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  4    0[COMMON] unsigned long 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7355 ;;      Params:         8       0       0       0       0
  7356 ;;      Locals:         0       6       0       0       0
  7357 ;;      Temps:          1       0       0       0       0
  7358 ;;      Totals:         9       6       0       0       0
  7359 ;;Total ram usage:       15 bytes
  7360 ;; Hardware stack levels used: 1
  7361 ;; This function calls:
  7362 ;;		Nothing
  7363 ;; This function is called by:
  7364 ;;		_sprintf
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           
  7369                           ;psect for function __div_to_l_
  7370  1089                     __div_to_l_:
  7371  1089                     l2902:	
  7372                           ;incstack = 0
  7373                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7374                           
  7375  1089  1003               	clrc
  7376  108A  0D72               	rlf	__div_to_l_@f1+2,w
  7377  108B  0D73               	rlf	__div_to_l_@f1+3,w
  7378  108C  00F8               	movwf	??__div_to_l_
  7379  108D  0878               	movf	??__div_to_l_,w
  7380  108E  1283               	bcf	3,5	;RP0=0, select bank0
  7381  108F  1303               	bcf	3,6	;RP1=0, select bank0
  7382  1090  00A5               	movwf	__div_to_l_@exp1
  7383  1091  0825               	movf	__div_to_l_@exp1,w
  7384  1092  1D03               	btfss	3,2
  7385  1093  2895               	goto	u4481
  7386  1094  2896               	goto	u4480
  7387  1095                     u4481:
  7388  1095  289F               	goto	l2908
  7389  1096                     u4480:
  7390  1096                     l2904:
  7391  1096  3000               	movlw	0
  7392  1097  00F3               	movwf	?__div_to_l_+3
  7393  1098  3000               	movlw	0
  7394  1099  00F2               	movwf	?__div_to_l_+2
  7395  109A  3000               	movlw	0
  7396  109B  00F1               	movwf	?__div_to_l_+1
  7397  109C  3000               	movlw	0
  7398  109D  00F0               	movwf	?__div_to_l_
  7399  109E  2946               	goto	l519
  7400  109F                     l2908:
  7401  109F  1003               	clrc
  7402  10A0  0D76               	rlf	__div_to_l_@f2+2,w
  7403  10A1  0D77               	rlf	__div_to_l_@f2+3,w
  7404  10A2  00F8               	movwf	??__div_to_l_
  7405  10A3  0878               	movf	??__div_to_l_,w
  7406  10A4  00A4               	movwf	__div_to_l_@cntr
  7407  10A5  0824               	movf	__div_to_l_@cntr,w
  7408  10A6  1D03               	btfss	3,2
  7409  10A7  28A9               	goto	u4491
  7410  10A8  28AA               	goto	u4490
  7411  10A9                     u4491:
  7412  10A9  28AB               	goto	l520
  7413  10AA                     u4490:
  7414  10AA  2896               	goto	l2904
  7415  10AB                     l520:
  7416  10AB  17F2               	bsf	__div_to_l_@f1+2,7
  7417  10AC                     l2914:
  7418  10AC  30FF               	movlw	255
  7419  10AD  05F0               	andwf	__div_to_l_@f1,f
  7420  10AE  30FF               	movlw	255
  7421  10AF  05F1               	andwf	__div_to_l_@f1+1,f
  7422  10B0  30FF               	movlw	255
  7423  10B1  05F2               	andwf	__div_to_l_@f1+2,f
  7424  10B2  3000               	movlw	0
  7425  10B3  05F3               	andwf	__div_to_l_@f1+3,f
  7426  10B4                     l2916:
  7427  10B4  17F6               	bsf	__div_to_l_@f2+2,7
  7428  10B5  30FF               	movlw	255
  7429  10B6  05F4               	andwf	__div_to_l_@f2,f
  7430  10B7  30FF               	movlw	255
  7431  10B8  05F5               	andwf	__div_to_l_@f2+1,f
  7432  10B9  30FF               	movlw	255
  7433  10BA  05F6               	andwf	__div_to_l_@f2+2,f
  7434  10BB  3000               	movlw	0
  7435  10BC  05F7               	andwf	__div_to_l_@f2+3,f
  7436  10BD  3000               	movlw	0
  7437  10BE  00A3               	movwf	__div_to_l_@quot+3
  7438  10BF  3000               	movlw	0
  7439  10C0  00A2               	movwf	__div_to_l_@quot+2
  7440  10C1  3000               	movlw	0
  7441  10C2  00A1               	movwf	__div_to_l_@quot+1
  7442  10C3  3000               	movlw	0
  7443  10C4  00A0               	movwf	__div_to_l_@quot
  7444  10C5                     l2918:
  7445  10C5  307F               	movlw	127
  7446  10C6  02A5               	subwf	__div_to_l_@exp1,f
  7447  10C7                     l2920:
  7448  10C7  30A0               	movlw	160
  7449  10C8  0724               	addwf	__div_to_l_@cntr,w
  7450  10C9  00F8               	movwf	??__div_to_l_
  7451  10CA  0878               	movf	??__div_to_l_,w
  7452  10CB  02A5               	subwf	__div_to_l_@exp1,f
  7453  10CC  3020               	movlw	32
  7454  10CD  00F8               	movwf	??__div_to_l_
  7455  10CE  0878               	movf	??__div_to_l_,w
  7456  10CF  00A4               	movwf	__div_to_l_@cntr
  7457  10D0                     l2922:
  7458  10D0  3001               	movlw	1
  7459  10D1  00F8               	movwf	??__div_to_l_
  7460  10D2                     u4505:
  7461  10D2  1003               	clrc
  7462  10D3  0DA0               	rlf	__div_to_l_@quot,f
  7463  10D4  0DA1               	rlf	__div_to_l_@quot+1,f
  7464  10D5  0DA2               	rlf	__div_to_l_@quot+2,f
  7465  10D6  0DA3               	rlf	__div_to_l_@quot+3,f
  7466  10D7  0BF8               	decfsz	??__div_to_l_,f
  7467  10D8  28D2               	goto	u4505
  7468  10D9                     l2924:
  7469  10D9  0877               	movf	__div_to_l_@f2+3,w
  7470  10DA  0273               	subwf	__div_to_l_@f1+3,w
  7471  10DB  1D03               	skipz
  7472  10DC  28E7               	goto	u4515
  7473  10DD  0876               	movf	__div_to_l_@f2+2,w
  7474  10DE  0272               	subwf	__div_to_l_@f1+2,w
  7475  10DF  1D03               	skipz
  7476  10E0  28E7               	goto	u4515
  7477  10E1  0875               	movf	__div_to_l_@f2+1,w
  7478  10E2  0271               	subwf	__div_to_l_@f1+1,w
  7479  10E3  1D03               	skipz
  7480  10E4  28E7               	goto	u4515
  7481  10E5  0874               	movf	__div_to_l_@f2,w
  7482  10E6  0270               	subwf	__div_to_l_@f1,w
  7483  10E7                     u4515:
  7484  10E7  1C03               	skipc
  7485  10E8  28EA               	goto	u4511
  7486  10E9  28EB               	goto	u4510
  7487  10EA                     u4511:
  7488  10EA  28FA               	goto	l2930
  7489  10EB                     u4510:
  7490  10EB                     l2926:
  7491  10EB  0874               	movf	__div_to_l_@f2,w
  7492  10EC  02F0               	subwf	__div_to_l_@f1,f
  7493  10ED  0875               	movf	__div_to_l_@f2+1,w
  7494  10EE  1C03               	skipc
  7495  10EF  0F75               	incfsz	__div_to_l_@f2+1,w
  7496  10F0  02F1               	subwf	__div_to_l_@f1+1,f
  7497  10F1  0876               	movf	__div_to_l_@f2+2,w
  7498  10F2  1C03               	skipc
  7499  10F3  0F76               	incfsz	__div_to_l_@f2+2,w
  7500  10F4  02F2               	subwf	__div_to_l_@f1+2,f
  7501  10F5  0877               	movf	__div_to_l_@f2+3,w
  7502  10F6  1C03               	skipc
  7503  10F7  0F77               	incfsz	__div_to_l_@f2+3,w
  7504  10F8  02F3               	subwf	__div_to_l_@f1+3,f
  7505  10F9                     l2928:
  7506  10F9  1420               	bsf	__div_to_l_@quot,0
  7507  10FA                     l2930:
  7508  10FA  3001               	movlw	1
  7509  10FB  00F8               	movwf	??__div_to_l_
  7510  10FC                     u4525:
  7511  10FC  1003               	clrc
  7512  10FD  0DF0               	rlf	__div_to_l_@f1,f
  7513  10FE  0DF1               	rlf	__div_to_l_@f1+1,f
  7514  10FF  0DF2               	rlf	__div_to_l_@f1+2,f
  7515  1100  0DF3               	rlf	__div_to_l_@f1+3,f
  7516  1101  0BF8               	decfsz	??__div_to_l_,f
  7517  1102  28FC               	goto	u4525
  7518  1103                     l2932:
  7519  1103  3001               	movlw	1
  7520  1104  02A4               	subwf	__div_to_l_@cntr,f
  7521  1105  1D03               	btfss	3,2
  7522  1106  2908               	goto	u4531
  7523  1107  2909               	goto	u4530
  7524  1108                     u4531:
  7525  1108  28D0               	goto	l2922
  7526  1109                     u4530:
  7527  1109                     l523:
  7528  1109  1FA5               	btfss	__div_to_l_@exp1,7
  7529  110A  290C               	goto	u4541
  7530  110B  290D               	goto	u4540
  7531  110C                     u4541:
  7532  110C  2927               	goto	l2942
  7533  110D                     u4540:
  7534  110D                     l2934:
  7535  110D  0825               	movf	__div_to_l_@exp1,w
  7536  110E  3A80               	xorlw	128
  7537  110F  3E9F               	addlw	159
  7538  1110  1803               	skipnc
  7539  1111  2913               	goto	u4551
  7540  1112  2914               	goto	u4550
  7541  1113                     u4551:
  7542  1113  2915               	goto	l2940
  7543  1114                     u4550:
  7544  1114  2896               	goto	l2904
  7545  1115                     l2940:
  7546  1115  3001               	movlw	1
  7547  1116                     u4565:
  7548  1116  1003               	clrc
  7549  1117  0CA3               	rrf	__div_to_l_@quot+3,f
  7550  1118  0CA2               	rrf	__div_to_l_@quot+2,f
  7551  1119  0CA1               	rrf	__div_to_l_@quot+1,f
  7552  111A  0CA0               	rrf	__div_to_l_@quot,f
  7553  111B  3EFF               	addlw	-1
  7554  111C  1D03               	skipz
  7555  111D  2916               	goto	u4565
  7556  111E  3001               	movlw	1
  7557  111F  00F8               	movwf	??__div_to_l_
  7558  1120  0878               	movf	??__div_to_l_,w
  7559  1121  07A5               	addwf	__div_to_l_@exp1,f
  7560  1122  1D03               	btfss	3,2
  7561  1123  2925               	goto	u4571
  7562  1124  2926               	goto	u4570
  7563  1125                     u4571:
  7564  1125  2915               	goto	l2940
  7565  1126                     u4570:
  7566  1126  293E               	goto	l2950
  7567  1127                     l2942:
  7568  1127  3020               	movlw	32
  7569  1128  0225               	subwf	__div_to_l_@exp1,w
  7570  1129  1C03               	skipc
  7571  112A  292C               	goto	u4581
  7572  112B  292D               	goto	u4580
  7573  112C                     u4581:
  7574  112C  2939               	goto	l530
  7575  112D                     u4580:
  7576  112D  2896               	goto	l2904
  7577  112E                     l2948:
  7578  112E  3001               	movlw	1
  7579  112F  00F8               	movwf	??__div_to_l_
  7580  1130                     u4595:
  7581  1130  1003               	clrc
  7582  1131  0DA0               	rlf	__div_to_l_@quot,f
  7583  1132  0DA1               	rlf	__div_to_l_@quot+1,f
  7584  1133  0DA2               	rlf	__div_to_l_@quot+2,f
  7585  1134  0DA3               	rlf	__div_to_l_@quot+3,f
  7586  1135  0BF8               	decfsz	??__div_to_l_,f
  7587  1136  2930               	goto	u4595
  7588  1137  3001               	movlw	1
  7589  1138  02A5               	subwf	__div_to_l_@exp1,f
  7590  1139                     l530:
  7591  1139  0825               	movf	__div_to_l_@exp1,w
  7592  113A  1D03               	btfss	3,2
  7593  113B  293D               	goto	u4601
  7594  113C  293E               	goto	u4600
  7595  113D                     u4601:
  7596  113D  292E               	goto	l2948
  7597  113E                     u4600:
  7598  113E                     l2950:
  7599  113E  0823               	movf	__div_to_l_@quot+3,w
  7600  113F  00F3               	movwf	?__div_to_l_+3
  7601  1140  0822               	movf	__div_to_l_@quot+2,w
  7602  1141  00F2               	movwf	?__div_to_l_+2
  7603  1142  0821               	movf	__div_to_l_@quot+1,w
  7604  1143  00F1               	movwf	?__div_to_l_+1
  7605  1144  0820               	movf	__div_to_l_@quot,w
  7606  1145  00F0               	movwf	?__div_to_l_
  7607  1146                     l519:
  7608  1146  0008               	return
  7609  1147                     __end_of__div_to_l_:
  7610                           
  7611                           	psect	text13
  7612  1E87                     __ptext13:	
  7613 ;; *************** function ___xxtofl *****************
  7614 ;; Defined at:
  7615 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  sign            1    wreg     unsigned char 
  7618 ;;  val             4    6[COMMON] long 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  sign            1    0[BANK0 ] unsigned char 
  7621 ;;  arg             4    2[BANK0 ] unsigned long 
  7622 ;;  exp             1    1[BANK0 ] unsigned char 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  4    6[COMMON] unsigned char 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7632 ;;      Params:         4       0       0       0       0
  7633 ;;      Locals:         0       6       0       0       0
  7634 ;;      Temps:          4       0       0       0       0
  7635 ;;      Totals:         8       6       0       0       0
  7636 ;;Total ram usage:       14 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;;		_sprintf
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function ___xxtofl
  7648  1E87                     ___xxtofl:
  7649                           
  7650                           ;incstack = 0
  7651                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7652                           ;___xxtofl@sign stored from wreg
  7653  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7654  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7655  1E89  00A0               	movwf	___xxtofl@sign
  7656  1E8A                     l3070:
  7657  1E8A  0820               	movf	___xxtofl@sign,w
  7658  1E8B  1903               	btfsc	3,2
  7659  1E8C  2E8E               	goto	u4921
  7660  1E8D  2E8F               	goto	u4920
  7661  1E8E                     u4921:
  7662  1E8E  2EA3               	goto	l3076
  7663  1E8F                     u4920:
  7664  1E8F                     l3072:
  7665  1E8F  1FF9               	btfss	___xxtofl@val+3,7
  7666  1E90  2E92               	goto	u4931
  7667  1E91  2E93               	goto	u4930
  7668  1E92                     u4931:
  7669  1E92  2EA3               	goto	l3076
  7670  1E93                     u4930:
  7671  1E93                     l3074:
  7672  1E93  0976               	comf	___xxtofl@val,w
  7673  1E94  00A2               	movwf	___xxtofl@arg
  7674  1E95  0977               	comf	___xxtofl@val+1,w
  7675  1E96  00A3               	movwf	___xxtofl@arg+1
  7676  1E97  0978               	comf	___xxtofl@val+2,w
  7677  1E98  00A4               	movwf	___xxtofl@arg+2
  7678  1E99  0979               	comf	___xxtofl@val+3,w
  7679  1E9A  00A5               	movwf	___xxtofl@arg+3
  7680  1E9B  0AA2               	incf	___xxtofl@arg,f
  7681  1E9C  1903               	skipnz
  7682  1E9D  0AA3               	incf	___xxtofl@arg+1,f
  7683  1E9E  1903               	skipnz
  7684  1E9F  0AA4               	incf	___xxtofl@arg+2,f
  7685  1EA0  1903               	skipnz
  7686  1EA1  0AA5               	incf	___xxtofl@arg+3,f
  7687  1EA2  2EAB               	goto	l816
  7688  1EA3                     l3076:
  7689  1EA3  0879               	movf	___xxtofl@val+3,w
  7690  1EA4  00A5               	movwf	___xxtofl@arg+3
  7691  1EA5  0878               	movf	___xxtofl@val+2,w
  7692  1EA6  00A4               	movwf	___xxtofl@arg+2
  7693  1EA7  0877               	movf	___xxtofl@val+1,w
  7694  1EA8  00A3               	movwf	___xxtofl@arg+1
  7695  1EA9  0876               	movf	___xxtofl@val,w
  7696  1EAA  00A2               	movwf	___xxtofl@arg
  7697  1EAB                     l816:
  7698  1EAB  0879               	movf	___xxtofl@val+3,w
  7699  1EAC  0478               	iorwf	___xxtofl@val+2,w
  7700  1EAD  0477               	iorwf	___xxtofl@val+1,w
  7701  1EAE  0476               	iorwf	___xxtofl@val,w
  7702  1EAF  1D03               	skipz
  7703  1EB0  2EB2               	goto	u4941
  7704  1EB1  2EB3               	goto	u4940
  7705  1EB2                     u4941:
  7706  1EB2  2EBC               	goto	l3082
  7707  1EB3                     u4940:
  7708  1EB3                     l3078:
  7709  1EB3  3000               	movlw	0
  7710  1EB4  00F9               	movwf	?___xxtofl+3
  7711  1EB5  3000               	movlw	0
  7712  1EB6  00F8               	movwf	?___xxtofl+2
  7713  1EB7  3000               	movlw	0
  7714  1EB8  00F7               	movwf	?___xxtofl+1
  7715  1EB9  3000               	movlw	0
  7716  1EBA  00F6               	movwf	?___xxtofl
  7717  1EBB  2F42               	goto	l818
  7718  1EBC                     l3082:
  7719  1EBC  3096               	movlw	150
  7720  1EBD  00FA               	movwf	??___xxtofl
  7721  1EBE  087A               	movf	??___xxtofl,w
  7722  1EBF  00A1               	movwf	___xxtofl@exp
  7723  1EC0  2ECE               	goto	l3086
  7724  1EC1                     l3084:
  7725  1EC1  3001               	movlw	1
  7726  1EC2  00FA               	movwf	??___xxtofl
  7727  1EC3  087A               	movf	??___xxtofl,w
  7728  1EC4  07A1               	addwf	___xxtofl@exp,f
  7729  1EC5  3001               	movlw	1
  7730  1EC6                     u4955:
  7731  1EC6  1003               	clrc
  7732  1EC7  0CA5               	rrf	___xxtofl@arg+3,f
  7733  1EC8  0CA4               	rrf	___xxtofl@arg+2,f
  7734  1EC9  0CA3               	rrf	___xxtofl@arg+1,f
  7735  1ECA  0CA2               	rrf	___xxtofl@arg,f
  7736  1ECB  3EFF               	addlw	-1
  7737  1ECC  1D03               	skipz
  7738  1ECD  2EC6               	goto	u4955
  7739  1ECE                     l3086:
  7740  1ECE  30FE               	movlw	254
  7741  1ECF  0525               	andwf	___xxtofl@arg+3,w
  7742  1ED0  1D03               	btfss	3,2
  7743  1ED1  2ED3               	goto	u4961
  7744  1ED2  2ED4               	goto	u4960
  7745  1ED3                     u4961:
  7746  1ED3  2EC1               	goto	l3084
  7747  1ED4                     u4960:
  7748  1ED4  2EF0               	goto	l822
  7749  1ED5                     l3088:
  7750  1ED5  3001               	movlw	1
  7751  1ED6  00FA               	movwf	??___xxtofl
  7752  1ED7  087A               	movf	??___xxtofl,w
  7753  1ED8  07A1               	addwf	___xxtofl@exp,f
  7754  1ED9                     l3090:
  7755  1ED9  3001               	movlw	1
  7756  1EDA  07A2               	addwf	___xxtofl@arg,f
  7757  1EDB  3000               	movlw	0
  7758  1EDC  1803               	skipnc
  7759  1EDD  3001               	movlw	1
  7760  1EDE  07A3               	addwf	___xxtofl@arg+1,f
  7761  1EDF  3000               	movlw	0
  7762  1EE0  1803               	skipnc
  7763  1EE1  3001               	movlw	1
  7764  1EE2  07A4               	addwf	___xxtofl@arg+2,f
  7765  1EE3  3000               	movlw	0
  7766  1EE4  1803               	skipnc
  7767  1EE5  3001               	movlw	1
  7768  1EE6  07A5               	addwf	___xxtofl@arg+3,f
  7769  1EE7                     l3092:
  7770  1EE7  3001               	movlw	1
  7771  1EE8                     u4975:
  7772  1EE8  1003               	clrc
  7773  1EE9  0CA5               	rrf	___xxtofl@arg+3,f
  7774  1EEA  0CA4               	rrf	___xxtofl@arg+2,f
  7775  1EEB  0CA3               	rrf	___xxtofl@arg+1,f
  7776  1EEC  0CA2               	rrf	___xxtofl@arg,f
  7777  1EED  3EFF               	addlw	-1
  7778  1EEE  1D03               	skipz
  7779  1EEF  2EE8               	goto	u4975
  7780  1EF0                     l822:
  7781  1EF0  30FF               	movlw	255
  7782  1EF1  0525               	andwf	___xxtofl@arg+3,w
  7783  1EF2  1D03               	btfss	3,2
  7784  1EF3  2EF5               	goto	u4981
  7785  1EF4  2EF6               	goto	u4980
  7786  1EF5                     u4981:
  7787  1EF5  2ED5               	goto	l3088
  7788  1EF6                     u4980:
  7789  1EF6  2F02               	goto	l3096
  7790  1EF7                     l3094:
  7791  1EF7  3001               	movlw	1
  7792  1EF8  02A1               	subwf	___xxtofl@exp,f
  7793  1EF9  3001               	movlw	1
  7794  1EFA  00FA               	movwf	??___xxtofl
  7795  1EFB                     u4995:
  7796  1EFB  1003               	clrc
  7797  1EFC  0DA2               	rlf	___xxtofl@arg,f
  7798  1EFD  0DA3               	rlf	___xxtofl@arg+1,f
  7799  1EFE  0DA4               	rlf	___xxtofl@arg+2,f
  7800  1EFF  0DA5               	rlf	___xxtofl@arg+3,f
  7801  1F00  0BFA               	decfsz	??___xxtofl,f
  7802  1F01  2EFB               	goto	u4995
  7803  1F02                     l3096:
  7804  1F02  1BA4               	btfsc	___xxtofl@arg+2,7
  7805  1F03  2F05               	goto	u5001
  7806  1F04  2F06               	goto	u5000
  7807  1F05                     u5001:
  7808  1F05  2F0C               	goto	l829
  7809  1F06                     u5000:
  7810  1F06                     l3098:
  7811  1F06  3002               	movlw	2
  7812  1F07  0221               	subwf	___xxtofl@exp,w
  7813  1F08  1803               	skipnc
  7814  1F09  2F0B               	goto	u5011
  7815  1F0A  2F0C               	goto	u5010
  7816  1F0B                     u5011:
  7817  1F0B  2EF7               	goto	l3094
  7818  1F0C                     u5010:
  7819  1F0C                     l829:
  7820  1F0C  1821               	btfsc	___xxtofl@exp,0
  7821  1F0D  2F0F               	goto	u5021
  7822  1F0E  2F10               	goto	u5020
  7823  1F0F                     u5021:
  7824  1F0F  2F18               	goto	l830
  7825  1F10                     u5020:
  7826  1F10                     l3100:
  7827  1F10  30FF               	movlw	255
  7828  1F11  05A2               	andwf	___xxtofl@arg,f
  7829  1F12  30FF               	movlw	255
  7830  1F13  05A3               	andwf	___xxtofl@arg+1,f
  7831  1F14  307F               	movlw	127
  7832  1F15  05A4               	andwf	___xxtofl@arg+2,f
  7833  1F16  30FF               	movlw	255
  7834  1F17  05A5               	andwf	___xxtofl@arg+3,f
  7835  1F18                     l830:
  7836  1F18  1003               	clrc
  7837  1F19  0CA1               	rrf	___xxtofl@exp,f
  7838  1F1A                     l3102:
  7839  1F1A  0821               	movf	___xxtofl@exp,w
  7840  1F1B  00FA               	movwf	??___xxtofl
  7841  1F1C  01FB               	clrf	??___xxtofl+1
  7842  1F1D  01FC               	clrf	??___xxtofl+2
  7843  1F1E  01FD               	clrf	??___xxtofl+3
  7844  1F1F  3018               	movlw	24
  7845  1F20                     u5035:
  7846  1F20  1003               	clrc
  7847  1F21  0DFA               	rlf	??___xxtofl,f
  7848  1F22  0DFB               	rlf	??___xxtofl+1,f
  7849  1F23  0DFC               	rlf	??___xxtofl+2,f
  7850  1F24  0DFD               	rlf	??___xxtofl+3,f
  7851  1F25                     u5030:
  7852  1F25  3EFF               	addlw	-1
  7853  1F26  1D03               	skipz
  7854  1F27  2F20               	goto	u5035
  7855  1F28  087A               	movf	??___xxtofl,w
  7856  1F29  04A2               	iorwf	___xxtofl@arg,f
  7857  1F2A  087B               	movf	??___xxtofl+1,w
  7858  1F2B  04A3               	iorwf	___xxtofl@arg+1,f
  7859  1F2C  087C               	movf	??___xxtofl+2,w
  7860  1F2D  04A4               	iorwf	___xxtofl@arg+2,f
  7861  1F2E  087D               	movf	??___xxtofl+3,w
  7862  1F2F  04A5               	iorwf	___xxtofl@arg+3,f
  7863  1F30                     l3104:
  7864  1F30  0820               	movf	___xxtofl@sign,w
  7865  1F31  1903               	btfsc	3,2
  7866  1F32  2F34               	goto	u5041
  7867  1F33  2F35               	goto	u5040
  7868  1F34                     u5041:
  7869  1F34  2F3A               	goto	l3110
  7870  1F35                     u5040:
  7871  1F35                     l3106:
  7872  1F35  1FF9               	btfss	___xxtofl@val+3,7
  7873  1F36  2F38               	goto	u5051
  7874  1F37  2F39               	goto	u5050
  7875  1F38                     u5051:
  7876  1F38  2F3A               	goto	l3110
  7877  1F39                     u5050:
  7878  1F39                     l3108:
  7879  1F39  17A5               	bsf	___xxtofl@arg+3,7
  7880  1F3A                     l3110:
  7881  1F3A  0825               	movf	___xxtofl@arg+3,w
  7882  1F3B  00F9               	movwf	?___xxtofl+3
  7883  1F3C  0824               	movf	___xxtofl@arg+2,w
  7884  1F3D  00F8               	movwf	?___xxtofl+2
  7885  1F3E  0823               	movf	___xxtofl@arg+1,w
  7886  1F3F  00F7               	movwf	?___xxtofl+1
  7887  1F40  0822               	movf	___xxtofl@arg,w
  7888  1F41  00F6               	movwf	?___xxtofl
  7889  1F42                     l818:
  7890  1F42  0008               	return
  7891  1F43                     __end_of___xxtofl:
  7892                           
  7893                           	psect	text14
  7894  1B37                     __ptext14:	
  7895 ;; *************** function ___wmul *****************
  7896 ;; Defined at:
  7897 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  multiplier      2    0[COMMON] unsigned int 
  7900 ;;  multiplicand    2    2[COMMON] unsigned int 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;  product         2    4[COMMON] unsigned int 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  2    0[COMMON] unsigned int 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7912 ;;      Params:         4       0       0       0       0
  7913 ;;      Locals:         2       0       0       0       0
  7914 ;;      Temps:          0       0       0       0       0
  7915 ;;      Totals:         6       0       0       0       0
  7916 ;;Total ram usage:        6 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_sprintf
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           
  7926                           ;psect for function ___wmul
  7927  1B37                     ___wmul:
  7928  1B37                     l2954:	
  7929                           ;incstack = 0
  7930                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7931                           
  7932  1B37  01F4               	clrf	___wmul@product
  7933  1B38  01F5               	clrf	___wmul@product+1
  7934  1B39                     l2956:
  7935  1B39  1C70               	btfss	___wmul@multiplier,0
  7936  1B3A  2B3C               	goto	u4611
  7937  1B3B  2B3D               	goto	u4610
  7938  1B3C                     u4611:
  7939  1B3C  2B43               	goto	l349
  7940  1B3D                     u4610:
  7941  1B3D                     l2958:
  7942  1B3D  0872               	movf	___wmul@multiplicand,w
  7943  1B3E  07F4               	addwf	___wmul@product,f
  7944  1B3F  1803               	skipnc
  7945  1B40  0AF5               	incf	___wmul@product+1,f
  7946  1B41  0873               	movf	___wmul@multiplicand+1,w
  7947  1B42  07F5               	addwf	___wmul@product+1,f
  7948  1B43                     l349:
  7949  1B43  3001               	movlw	1
  7950  1B44                     u4625:
  7951  1B44  1003               	clrc
  7952  1B45  0DF2               	rlf	___wmul@multiplicand,f
  7953  1B46  0DF3               	rlf	___wmul@multiplicand+1,f
  7954  1B47  3EFF               	addlw	-1
  7955  1B48  1D03               	skipz
  7956  1B49  2B44               	goto	u4625
  7957  1B4A                     l2960:
  7958  1B4A  3001               	movlw	1
  7959  1B4B                     u4635:
  7960  1B4B  1003               	clrc
  7961  1B4C  0CF1               	rrf	___wmul@multiplier+1,f
  7962  1B4D  0CF0               	rrf	___wmul@multiplier,f
  7963  1B4E  3EFF               	addlw	-1
  7964  1B4F  1D03               	skipz
  7965  1B50  2B4B               	goto	u4635
  7966  1B51                     l2962:
  7967  1B51  0870               	movf	___wmul@multiplier,w
  7968  1B52  0471               	iorwf	___wmul@multiplier+1,w
  7969  1B53  1D03               	btfss	3,2
  7970  1B54  2B56               	goto	u4641
  7971  1B55  2B57               	goto	u4640
  7972  1B56                     u4641:
  7973  1B56  2B39               	goto	l2956
  7974  1B57                     u4640:
  7975  1B57                     l2964:
  7976  1B57  0875               	movf	___wmul@product+1,w
  7977  1B58  00F1               	movwf	?___wmul+1
  7978  1B59  0874               	movf	___wmul@product,w
  7979  1B5A  00F0               	movwf	?___wmul
  7980  1B5B                     l351:
  7981  1B5B  0008               	return
  7982  1B5C                     __end_of___wmul:
  7983                           
  7984                           	psect	text15
  7985  1D38                     __ptext15:	
  7986 ;; *************** function ___llmod *****************
  7987 ;; Defined at:
  7988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  divisor         4    0[COMMON] unsigned long 
  7991 ;;  dividend        4    4[COMMON] unsigned long 
  7992 ;; Auto vars:     Size  Location     Type
  7993 ;;  counter         1    9[COMMON] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  4    0[COMMON] unsigned long 
  7996 ;; Registers used:
  7997 ;;		wreg, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8003 ;;      Params:         8       0       0       0       0
  8004 ;;      Locals:         1       0       0       0       0
  8005 ;;      Temps:          1       0       0       0       0
  8006 ;;      Totals:        10       0       0       0       0
  8007 ;;Total ram usage:       10 bytes
  8008 ;; Hardware stack levels used: 1
  8009 ;; This function calls:
  8010 ;;		Nothing
  8011 ;; This function is called by:
  8012 ;;		_sprintf
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function ___llmod
  8018  1D38                     ___llmod:
  8019  1D38                     l3044:	
  8020                           ;incstack = 0
  8021                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8022                           
  8023  1D38  0873               	movf	___llmod@divisor+3,w
  8024  1D39  0472               	iorwf	___llmod@divisor+2,w
  8025  1D3A  0471               	iorwf	___llmod@divisor+1,w
  8026  1D3B  0470               	iorwf	___llmod@divisor,w
  8027  1D3C  1903               	skipnz
  8028  1D3D  2D3F               	goto	u4861
  8029  1D3E  2D40               	goto	u4860
  8030  1D3F                     u4861:
  8031  1D3F  2D83               	goto	l3060
  8032  1D40                     u4860:
  8033  1D40                     l3046:
  8034  1D40  01F9               	clrf	___llmod@counter
  8035  1D41  0AF9               	incf	___llmod@counter,f
  8036  1D42  2D50               	goto	l3050
  8037  1D43                     l3048:
  8038  1D43  3001               	movlw	1
  8039  1D44  00F8               	movwf	??___llmod
  8040  1D45                     u4875:
  8041  1D45  1003               	clrc
  8042  1D46  0DF0               	rlf	___llmod@divisor,f
  8043  1D47  0DF1               	rlf	___llmod@divisor+1,f
  8044  1D48  0DF2               	rlf	___llmod@divisor+2,f
  8045  1D49  0DF3               	rlf	___llmod@divisor+3,f
  8046  1D4A  0BF8               	decfsz	??___llmod,f
  8047  1D4B  2D45               	goto	u4875
  8048  1D4C  3001               	movlw	1
  8049  1D4D  00F8               	movwf	??___llmod
  8050  1D4E  0878               	movf	??___llmod,w
  8051  1D4F  07F9               	addwf	___llmod@counter,f
  8052  1D50                     l3050:
  8053  1D50  1FF3               	btfss	___llmod@divisor+3,7
  8054  1D51  2D53               	goto	u4881
  8055  1D52  2D54               	goto	u4880
  8056  1D53                     u4881:
  8057  1D53  2D43               	goto	l3048
  8058  1D54                     u4880:
  8059  1D54                     l3052:
  8060  1D54  0873               	movf	___llmod@divisor+3,w
  8061  1D55  0277               	subwf	___llmod@dividend+3,w
  8062  1D56  1D03               	skipz
  8063  1D57  2D62               	goto	u4895
  8064  1D58  0872               	movf	___llmod@divisor+2,w
  8065  1D59  0276               	subwf	___llmod@dividend+2,w
  8066  1D5A  1D03               	skipz
  8067  1D5B  2D62               	goto	u4895
  8068  1D5C  0871               	movf	___llmod@divisor+1,w
  8069  1D5D  0275               	subwf	___llmod@dividend+1,w
  8070  1D5E  1D03               	skipz
  8071  1D5F  2D62               	goto	u4895
  8072  1D60  0870               	movf	___llmod@divisor,w
  8073  1D61  0274               	subwf	___llmod@dividend,w
  8074  1D62                     u4895:
  8075  1D62  1C03               	skipc
  8076  1D63  2D65               	goto	u4891
  8077  1D64  2D66               	goto	u4890
  8078  1D65                     u4891:
  8079  1D65  2D74               	goto	l3056
  8080  1D66                     u4890:
  8081  1D66                     l3054:
  8082  1D66  0870               	movf	___llmod@divisor,w
  8083  1D67  02F4               	subwf	___llmod@dividend,f
  8084  1D68  0871               	movf	___llmod@divisor+1,w
  8085  1D69  1C03               	skipc
  8086  1D6A  0F71               	incfsz	___llmod@divisor+1,w
  8087  1D6B  02F5               	subwf	___llmod@dividend+1,f
  8088  1D6C  0872               	movf	___llmod@divisor+2,w
  8089  1D6D  1C03               	skipc
  8090  1D6E  0F72               	incfsz	___llmod@divisor+2,w
  8091  1D6F  02F6               	subwf	___llmod@dividend+2,f
  8092  1D70  0873               	movf	___llmod@divisor+3,w
  8093  1D71  1C03               	skipc
  8094  1D72  0F73               	incfsz	___llmod@divisor+3,w
  8095  1D73  02F7               	subwf	___llmod@dividend+3,f
  8096  1D74                     l3056:
  8097  1D74  3001               	movlw	1
  8098  1D75                     u4905:
  8099  1D75  1003               	clrc
  8100  1D76  0CF3               	rrf	___llmod@divisor+3,f
  8101  1D77  0CF2               	rrf	___llmod@divisor+2,f
  8102  1D78  0CF1               	rrf	___llmod@divisor+1,f
  8103  1D79  0CF0               	rrf	___llmod@divisor,f
  8104  1D7A  3EFF               	addlw	-1
  8105  1D7B  1D03               	skipz
  8106  1D7C  2D75               	goto	u4905
  8107  1D7D                     l3058:
  8108  1D7D  3001               	movlw	1
  8109  1D7E  02F9               	subwf	___llmod@counter,f
  8110  1D7F  1D03               	btfss	3,2
  8111  1D80  2D82               	goto	u4911
  8112  1D81  2D83               	goto	u4910
  8113  1D82                     u4911:
  8114  1D82  2D54               	goto	l3052
  8115  1D83                     u4910:
  8116  1D83                     l3060:
  8117  1D83  0877               	movf	___llmod@dividend+3,w
  8118  1D84  00F3               	movwf	?___llmod+3
  8119  1D85  0876               	movf	___llmod@dividend+2,w
  8120  1D86  00F2               	movwf	?___llmod+2
  8121  1D87  0875               	movf	___llmod@dividend+1,w
  8122  1D88  00F1               	movwf	?___llmod+1
  8123  1D89  0874               	movf	___llmod@dividend,w
  8124  1D8A  00F0               	movwf	?___llmod
  8125  1D8B                     l605:
  8126  1D8B  0008               	return
  8127  1D8C                     __end_of___llmod:
  8128                           
  8129                           	psect	text16
  8130  100D                     __ptext16:	
  8131 ;; *************** function ___fltol *****************
  8132 ;; Defined at:
  8133 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  f1              4   49[BANK0 ] unsigned long 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  exp1            1   59[BANK0 ] unsigned char 
  8138 ;;  sign1           1   58[BANK0 ] unsigned char 
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  4   49[BANK0 ] long 
  8141 ;; Registers used:
  8142 ;;		wreg, status,2, status,0
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8148 ;;      Params:         0       4       0       0       0
  8149 ;;      Locals:         0       2       0       0       0
  8150 ;;      Temps:          0       5       0       0       0
  8151 ;;      Totals:         0      11       0       0       0
  8152 ;;Total ram usage:       11 bytes
  8153 ;; Hardware stack levels used: 1
  8154 ;; This function calls:
  8155 ;;		Nothing
  8156 ;; This function is called by:
  8157 ;;		_sprintf
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           
  8162                           ;psect for function ___fltol
  8163  100D                     ___fltol:
  8164  100D                     l3008:	
  8165                           ;incstack = 0
  8166                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8167                           
  8168  100D  1003               	clrc
  8169  100E  1283               	bcf	3,5	;RP0=0, select bank0
  8170  100F  1303               	bcf	3,6	;RP1=0, select bank0
  8171  1010  0D53               	rlf	___fltol@f1+2,w
  8172  1011  0D54               	rlf	___fltol@f1+3,w
  8173  1012  00D5               	movwf	??___fltol
  8174  1013  0855               	movf	??___fltol,w
  8175  1014  00DB               	movwf	___fltol@exp1
  8176  1015  085B               	movf	___fltol@exp1,w
  8177  1016  1D03               	btfss	3,2
  8178  1017  2819               	goto	u4761
  8179  1018  281A               	goto	u4760
  8180  1019                     u4761:
  8181  1019  2823               	goto	l3014
  8182  101A                     u4760:
  8183  101A                     l3010:
  8184  101A  3000               	movlw	0
  8185  101B  00D4               	movwf	?___fltol+3
  8186  101C  3000               	movlw	0
  8187  101D  00D3               	movwf	?___fltol+2
  8188  101E  3000               	movlw	0
  8189  101F  00D2               	movwf	?___fltol+1
  8190  1020  3000               	movlw	0
  8191  1021  00D1               	movwf	?___fltol
  8192  1022  2888               	goto	l552
  8193  1023                     l3014:
  8194  1023  0851               	movf	___fltol@f1,w
  8195  1024  00D5               	movwf	??___fltol
  8196  1025  0852               	movf	___fltol@f1+1,w
  8197  1026  00D6               	movwf	??___fltol+1
  8198  1027  0853               	movf	___fltol@f1+2,w
  8199  1028  00D7               	movwf	??___fltol+2
  8200  1029  0854               	movf	___fltol@f1+3,w
  8201  102A  00D8               	movwf	??___fltol+3
  8202  102B  301F               	movlw	31
  8203  102C                     u4775:
  8204  102C  1003               	clrc
  8205  102D  0CD8               	rrf	??___fltol+3,f
  8206  102E  0CD7               	rrf	??___fltol+2,f
  8207  102F  0CD6               	rrf	??___fltol+1,f
  8208  1030  0CD5               	rrf	??___fltol,f
  8209  1031                     u4770:
  8210  1031  3EFF               	addlw	-1
  8211  1032  1D03               	skipz
  8212  1033  282C               	goto	u4775
  8213  1034  0855               	movf	??___fltol,w
  8214  1035  00D9               	movwf	??___fltol+4
  8215  1036  0859               	movf	??___fltol+4,w
  8216  1037  00DA               	movwf	___fltol@sign1
  8217  1038                     l3016:
  8218  1038  17D3               	bsf	___fltol@f1+2,7
  8219  1039                     l3018:
  8220  1039  30FF               	movlw	255
  8221  103A  05D1               	andwf	___fltol@f1,f
  8222  103B  30FF               	movlw	255
  8223  103C  05D2               	andwf	___fltol@f1+1,f
  8224  103D  30FF               	movlw	255
  8225  103E  05D3               	andwf	___fltol@f1+2,f
  8226  103F  3000               	movlw	0
  8227  1040  05D4               	andwf	___fltol@f1+3,f
  8228  1041                     l3020:
  8229  1041  3096               	movlw	150
  8230  1042  02DB               	subwf	___fltol@exp1,f
  8231  1043                     l3022:
  8232  1043  1FDB               	btfss	___fltol@exp1,7
  8233  1044  2846               	goto	u4781
  8234  1045  2847               	goto	u4780
  8235  1046                     u4781:
  8236  1046  2861               	goto	l3032
  8237  1047                     u4780:
  8238  1047                     l3024:
  8239  1047  085B               	movf	___fltol@exp1,w
  8240  1048  3A80               	xorlw	128
  8241  1049  3E97               	addlw	151
  8242  104A  1803               	skipnc
  8243  104B  284D               	goto	u4791
  8244  104C  284E               	goto	u4790
  8245  104D                     u4791:
  8246  104D  284F               	goto	l3030
  8247  104E                     u4790:
  8248  104E  281A               	goto	l3010
  8249  104F                     l3030:
  8250  104F  3001               	movlw	1
  8251  1050                     u4805:
  8252  1050  1003               	clrc
  8253  1051  0CD4               	rrf	___fltol@f1+3,f
  8254  1052  0CD3               	rrf	___fltol@f1+2,f
  8255  1053  0CD2               	rrf	___fltol@f1+1,f
  8256  1054  0CD1               	rrf	___fltol@f1,f
  8257  1055  3EFF               	addlw	-1
  8258  1056  1D03               	skipz
  8259  1057  2850               	goto	u4805
  8260  1058  3001               	movlw	1
  8261  1059  00D5               	movwf	??___fltol
  8262  105A  0855               	movf	??___fltol,w
  8263  105B  07DB               	addwf	___fltol@exp1,f
  8264  105C  1D03               	btfss	3,2
  8265  105D  285F               	goto	u4811
  8266  105E  2860               	goto	u4810
  8267  105F                     u4811:
  8268  105F  284F               	goto	l3030
  8269  1060                     u4810:
  8270  1060  2878               	goto	l3040
  8271  1061                     l3032:
  8272  1061  3020               	movlw	32
  8273  1062  025B               	subwf	___fltol@exp1,w
  8274  1063  1C03               	skipc
  8275  1064  2866               	goto	u4821
  8276  1065  2867               	goto	u4820
  8277  1066                     u4821:
  8278  1066  2873               	goto	l559
  8279  1067                     u4820:
  8280  1067  281A               	goto	l3010
  8281  1068                     l3038:
  8282  1068  3001               	movlw	1
  8283  1069  00D5               	movwf	??___fltol
  8284  106A                     u4835:
  8285  106A  1003               	clrc
  8286  106B  0DD1               	rlf	___fltol@f1,f
  8287  106C  0DD2               	rlf	___fltol@f1+1,f
  8288  106D  0DD3               	rlf	___fltol@f1+2,f
  8289  106E  0DD4               	rlf	___fltol@f1+3,f
  8290  106F  0BD5               	decfsz	??___fltol,f
  8291  1070  286A               	goto	u4835
  8292  1071  3001               	movlw	1
  8293  1072  02DB               	subwf	___fltol@exp1,f
  8294  1073                     l559:
  8295  1073  085B               	movf	___fltol@exp1,w
  8296  1074  1D03               	btfss	3,2
  8297  1075  2877               	goto	u4841
  8298  1076  2878               	goto	u4840
  8299  1077                     u4841:
  8300  1077  2868               	goto	l3038
  8301  1078                     u4840:
  8302  1078                     l3040:
  8303  1078  085A               	movf	___fltol@sign1,w
  8304  1079  1903               	btfsc	3,2
  8305  107A  287C               	goto	u4851
  8306  107B  287D               	goto	u4850
  8307  107C                     u4851:
  8308  107C  2888               	goto	l562
  8309  107D                     u4850:
  8310  107D                     l3042:
  8311  107D  09D1               	comf	___fltol@f1,f
  8312  107E  09D2               	comf	___fltol@f1+1,f
  8313  107F  09D3               	comf	___fltol@f1+2,f
  8314  1080  09D4               	comf	___fltol@f1+3,f
  8315  1081  0AD1               	incf	___fltol@f1,f
  8316  1082  1903               	skipnz
  8317  1083  0AD2               	incf	___fltol@f1+1,f
  8318  1084  1903               	skipnz
  8319  1085  0AD3               	incf	___fltol@f1+2,f
  8320  1086  1903               	skipnz
  8321  1087  0AD4               	incf	___fltol@f1+3,f
  8322  1088                     l562:
  8323  1088                     l552:
  8324  1088  0008               	return
  8325  1089                     __end_of___fltol:
  8326                           
  8327                           	psect	text17
  8328  1B13                     __ptext17:	
  8329 ;; *************** function ___flsub *****************
  8330 ;; Defined at:
  8331 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;  a               4   70[BANK0 ] long 
  8334 ;;  b               4   74[BANK0 ] long 
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  4   70[BANK0 ] long 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8346 ;;      Params:         0       8       0       0       0
  8347 ;;      Locals:         0       0       0       0       0
  8348 ;;      Temps:          0       0       0       0       0
  8349 ;;      Totals:         0       8       0       0       0
  8350 ;;Total ram usage:        8 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 1
  8353 ;; This function calls:
  8354 ;;		___fladd
  8355 ;; This function is called by:
  8356 ;;		_sprintf
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function ___flsub
  8362  1B13                     ___flsub:
  8363  1B13                     l3064:	
  8364                           ;incstack = 0
  8365                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8366                           
  8367  1B13  3080               	movlw	128
  8368  1B14  1283               	bcf	3,5	;RP0=0, select bank0
  8369  1B15  1303               	bcf	3,6	;RP1=0, select bank0
  8370  1B16  06E9               	xorwf	___flsub@a+3,f
  8371  1B17                     l3066:
  8372  1B17  086D               	movf	___flsub@b+3,w
  8373  1B18  00D5               	movwf	___fladd@b+3
  8374  1B19  086C               	movf	___flsub@b+2,w
  8375  1B1A  00D4               	movwf	___fladd@b+2
  8376  1B1B  086B               	movf	___flsub@b+1,w
  8377  1B1C  00D3               	movwf	___fladd@b+1
  8378  1B1D  086A               	movf	___flsub@b,w
  8379  1B1E  00D2               	movwf	___fladd@b
  8380  1B1F  0869               	movf	___flsub@a+3,w
  8381  1B20  00D9               	movwf	___fladd@a+3
  8382  1B21  0868               	movf	___flsub@a+2,w
  8383  1B22  00D8               	movwf	___fladd@a+2
  8384  1B23  0867               	movf	___flsub@a+1,w
  8385  1B24  00D7               	movwf	___fladd@a+1
  8386  1B25  0866               	movf	___flsub@a,w
  8387  1B26  00D6               	movwf	___fladd@a
  8388  1B27  160A  118A  2578  160A  158A  	fcall	___fladd
  8389  1B2C  1283               	bcf	3,5	;RP0=0, select bank0
  8390  1B2D  1303               	bcf	3,6	;RP1=0, select bank0
  8391  1B2E  0855               	movf	?___fladd+3,w
  8392  1B2F  00E9               	movwf	?___flsub+3
  8393  1B30  0854               	movf	?___fladd+2,w
  8394  1B31  00E8               	movwf	?___flsub+2
  8395  1B32  0853               	movf	?___fladd+1,w
  8396  1B33  00E7               	movwf	?___flsub+1
  8397  1B34  0852               	movf	?___fladd,w
  8398  1B35  00E6               	movwf	?___flsub
  8399  1B36                     l722:
  8400  1B36  0008               	return
  8401  1B37                     __end_of___flsub:
  8402                           
  8403                           	psect	text18
  8404  1578                     __ptext18:	
  8405 ;; *************** function ___fladd *****************
  8406 ;; Defined at:
  8407 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  b               4   50[BANK0 ] long 
  8410 ;;  a               4   54[BANK0 ] long 
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  grs             1   69[BANK0 ] unsigned char 
  8413 ;;  bexp            1   68[BANK0 ] unsigned char 
  8414 ;;  aexp            1   67[BANK0 ] unsigned char 
  8415 ;;  signs           1   66[BANK0 ] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  4   50[BANK0 ] unsigned char 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0, btemp+1
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8425 ;;      Params:         0       8       0       0       0
  8426 ;;      Locals:         0       4       0       0       0
  8427 ;;      Temps:          0       8       0       0       0
  8428 ;;      Totals:         0      20       0       0       0
  8429 ;;Total ram usage:       20 bytes
  8430 ;; Hardware stack levels used: 1
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_main
  8435 ;;		_sprintf
  8436 ;;		___flsub
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           
  8441                           ;psect for function ___fladd
  8442  1578                     ___fladd:
  8443  1578                     l2408:	
  8444                           ;incstack = 0
  8445                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8446                           
  8447  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8448  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8449  157A  0855               	movf	___fladd@b+3,w
  8450  157B  3980               	andlw	128
  8451  157C  00DA               	movwf	??___fladd
  8452  157D  085A               	movf	??___fladd,w
  8453  157E  00E2               	movwf	___fladd@signs
  8454  157F                     l2410:
  8455  157F  0855               	movf	___fladd@b+3,w
  8456  1580  00DA               	movwf	??___fladd
  8457  1581  075A               	addwf	??___fladd,w
  8458  1582  00DB               	movwf	??___fladd+1
  8459  1583  085B               	movf	??___fladd+1,w
  8460  1584  00E4               	movwf	___fladd@bexp
  8461  1585                     l2412:
  8462  1585  1FD4               	btfss	___fladd@b+2,7
  8463  1586  2D88               	goto	u3221
  8464  1587  2D89               	goto	u3220
  8465  1588                     u3221:
  8466  1588  2D8A               	goto	l2416
  8467  1589                     u3220:
  8468  1589                     l2414:
  8469  1589  1464               	bsf	___fladd@bexp,0
  8470  158A                     l2416:
  8471  158A  0864               	movf	___fladd@bexp,w
  8472  158B  1903               	btfsc	3,2
  8473  158C  2D8E               	goto	u3231
  8474  158D  2D8F               	goto	u3230
  8475  158E                     u3231:
  8476  158E  2D9F               	goto	l2426
  8477  158F                     u3230:
  8478  158F                     l2418:
  8479  158F  0A64               	incf	___fladd@bexp,w
  8480  1590  1D03               	btfss	3,2
  8481  1591  2D93               	goto	u3241
  8482  1592  2D94               	goto	u3240
  8483  1593                     u3241:
  8484  1593  2D9C               	goto	l2422
  8485  1594                     u3240:
  8486  1594                     l2420:
  8487  1594  3000               	movlw	0
  8488  1595  00D5               	movwf	___fladd@b+3
  8489  1596  3000               	movlw	0
  8490  1597  00D4               	movwf	___fladd@b+2
  8491  1598  3000               	movlw	0
  8492  1599  00D3               	movwf	___fladd@b+1
  8493  159A  3000               	movlw	0
  8494  159B  00D2               	movwf	___fladd@b
  8495  159C                     l2422:
  8496  159C  17D4               	bsf	___fladd@b+2,7
  8497  159D                     l2424:
  8498  159D  01D5               	clrf	___fladd@b+3
  8499  159E  2DA7               	goto	l2428
  8500  159F                     l2426:
  8501  159F  3000               	movlw	0
  8502  15A0  00D5               	movwf	___fladd@b+3
  8503  15A1  3000               	movlw	0
  8504  15A2  00D4               	movwf	___fladd@b+2
  8505  15A3  3000               	movlw	0
  8506  15A4  00D3               	movwf	___fladd@b+1
  8507  15A5  3000               	movlw	0
  8508  15A6  00D2               	movwf	___fladd@b
  8509  15A7                     l2428:
  8510  15A7  0859               	movf	___fladd@a+3,w
  8511  15A8  3980               	andlw	128
  8512  15A9  00DA               	movwf	??___fladd
  8513  15AA  085A               	movf	??___fladd,w
  8514  15AB  00E3               	movwf	___fladd@aexp
  8515  15AC                     l2430:
  8516  15AC  0863               	movf	___fladd@aexp,w
  8517  15AD  0662               	xorwf	___fladd@signs,w
  8518  15AE  1903               	skipnz
  8519  15AF  2DB1               	goto	u3251
  8520  15B0  2DB2               	goto	u3250
  8521  15B1                     u3251:
  8522  15B1  2DB3               	goto	l2434
  8523  15B2                     u3250:
  8524  15B2                     l2432:
  8525  15B2  1762               	bsf	___fladd@signs,6
  8526  15B3                     l2434:
  8527  15B3  0859               	movf	___fladd@a+3,w
  8528  15B4  00DA               	movwf	??___fladd
  8529  15B5  075A               	addwf	??___fladd,w
  8530  15B6  00DB               	movwf	??___fladd+1
  8531  15B7  085B               	movf	??___fladd+1,w
  8532  15B8  00E3               	movwf	___fladd@aexp
  8533  15B9                     l2436:
  8534  15B9  1FD8               	btfss	___fladd@a+2,7
  8535  15BA  2DBC               	goto	u3261
  8536  15BB  2DBD               	goto	u3260
  8537  15BC                     u3261:
  8538  15BC  2DBE               	goto	l2440
  8539  15BD                     u3260:
  8540  15BD                     l2438:
  8541  15BD  1463               	bsf	___fladd@aexp,0
  8542  15BE                     l2440:
  8543  15BE  0863               	movf	___fladd@aexp,w
  8544  15BF  1903               	btfsc	3,2
  8545  15C0  2DC2               	goto	u3271
  8546  15C1  2DC3               	goto	u3270
  8547  15C2                     u3271:
  8548  15C2  2DD3               	goto	l2450
  8549  15C3                     u3270:
  8550  15C3                     l2442:
  8551  15C3  0A63               	incf	___fladd@aexp,w
  8552  15C4  1D03               	btfss	3,2
  8553  15C5  2DC7               	goto	u3281
  8554  15C6  2DC8               	goto	u3280
  8555  15C7                     u3281:
  8556  15C7  2DD0               	goto	l2446
  8557  15C8                     u3280:
  8558  15C8                     l2444:
  8559  15C8  3000               	movlw	0
  8560  15C9  00D9               	movwf	___fladd@a+3
  8561  15CA  3000               	movlw	0
  8562  15CB  00D8               	movwf	___fladd@a+2
  8563  15CC  3000               	movlw	0
  8564  15CD  00D7               	movwf	___fladd@a+1
  8565  15CE  3000               	movlw	0
  8566  15CF  00D6               	movwf	___fladd@a
  8567  15D0                     l2446:
  8568  15D0  17D8               	bsf	___fladd@a+2,7
  8569  15D1                     l2448:
  8570  15D1  01D9               	clrf	___fladd@a+3
  8571  15D2  2DDB               	goto	l676
  8572  15D3                     l2450:
  8573  15D3  3000               	movlw	0
  8574  15D4  00D9               	movwf	___fladd@a+3
  8575  15D5  3000               	movlw	0
  8576  15D6  00D8               	movwf	___fladd@a+2
  8577  15D7  3000               	movlw	0
  8578  15D8  00D7               	movwf	___fladd@a+1
  8579  15D9  3000               	movlw	0
  8580  15DA  00D6               	movwf	___fladd@a
  8581  15DB                     l676:
  8582  15DB  0864               	movf	___fladd@bexp,w
  8583  15DC  0263               	subwf	___fladd@aexp,w
  8584  15DD  1803               	skipnc
  8585  15DE  2DE0               	goto	u3291
  8586  15DF  2DE1               	goto	u3290
  8587  15E0                     u3291:
  8588  15E0  2E25               	goto	l2486
  8589  15E1                     u3290:
  8590  15E1                     l2452:
  8591  15E1  1F62               	btfss	___fladd@signs,6
  8592  15E2  2DE4               	goto	u3301
  8593  15E3  2DE5               	goto	u3300
  8594  15E4                     u3301:
  8595  15E4  2DE9               	goto	l2456
  8596  15E5                     u3300:
  8597  15E5                     l2454:
  8598  15E5  3080               	movlw	128
  8599  15E6  00DA               	movwf	??___fladd
  8600  15E7  085A               	movf	??___fladd,w
  8601  15E8  06E2               	xorwf	___fladd@signs,f
  8602  15E9                     l2456:
  8603  15E9  0864               	movf	___fladd@bexp,w
  8604  15EA  00DA               	movwf	??___fladd
  8605  15EB  085A               	movf	??___fladd,w
  8606  15EC  00E5               	movwf	___fladd@grs
  8607  15ED                     l2458:
  8608  15ED  0863               	movf	___fladd@aexp,w
  8609  15EE  00DA               	movwf	??___fladd
  8610  15EF  085A               	movf	??___fladd,w
  8611  15F0  00E4               	movwf	___fladd@bexp
  8612  15F1                     l2460:
  8613  15F1  0865               	movf	___fladd@grs,w
  8614  15F2  00DA               	movwf	??___fladd
  8615  15F3  085A               	movf	??___fladd,w
  8616  15F4  00E3               	movwf	___fladd@aexp
  8617  15F5                     l2462:
  8618  15F5  0852               	movf	___fladd@b,w
  8619  15F6  00DA               	movwf	??___fladd
  8620  15F7  085A               	movf	??___fladd,w
  8621  15F8  00E5               	movwf	___fladd@grs
  8622  15F9                     l2464:
  8623  15F9  0856               	movf	___fladd@a,w
  8624  15FA  00DA               	movwf	??___fladd
  8625  15FB  085A               	movf	??___fladd,w
  8626  15FC  00D2               	movwf	___fladd@b
  8627  15FD                     l2466:
  8628  15FD  0865               	movf	___fladd@grs,w
  8629  15FE  00DA               	movwf	??___fladd
  8630  15FF  085A               	movf	??___fladd,w
  8631  1600  00D6               	movwf	___fladd@a
  8632  1601                     l2468:
  8633  1601  0853               	movf	___fladd@b+1,w
  8634  1602  00DA               	movwf	??___fladd
  8635  1603  085A               	movf	??___fladd,w
  8636  1604  00E5               	movwf	___fladd@grs
  8637  1605                     l2470:
  8638  1605  0857               	movf	___fladd@a+1,w
  8639  1606  00DA               	movwf	??___fladd
  8640  1607  085A               	movf	??___fladd,w
  8641  1608  00D3               	movwf	___fladd@b+1
  8642  1609                     l2472:
  8643  1609  0865               	movf	___fladd@grs,w
  8644  160A  00DA               	movwf	??___fladd
  8645  160B  085A               	movf	??___fladd,w
  8646  160C  00D7               	movwf	___fladd@a+1
  8647  160D                     l2474:
  8648  160D  0854               	movf	___fladd@b+2,w
  8649  160E  00DA               	movwf	??___fladd
  8650  160F  085A               	movf	??___fladd,w
  8651  1610  00E5               	movwf	___fladd@grs
  8652  1611                     l2476:
  8653  1611  0858               	movf	___fladd@a+2,w
  8654  1612  00DA               	movwf	??___fladd
  8655  1613  085A               	movf	??___fladd,w
  8656  1614  00D4               	movwf	___fladd@b+2
  8657  1615                     l2478:
  8658  1615  0865               	movf	___fladd@grs,w
  8659  1616  00DA               	movwf	??___fladd
  8660  1617  085A               	movf	??___fladd,w
  8661  1618  00D8               	movwf	___fladd@a+2
  8662  1619                     l2480:
  8663  1619  0855               	movf	___fladd@b+3,w
  8664  161A  00DA               	movwf	??___fladd
  8665  161B  085A               	movf	??___fladd,w
  8666  161C  00E5               	movwf	___fladd@grs
  8667  161D                     l2482:
  8668  161D  0859               	movf	___fladd@a+3,w
  8669  161E  00DA               	movwf	??___fladd
  8670  161F  085A               	movf	??___fladd,w
  8671  1620  00D5               	movwf	___fladd@b+3
  8672  1621                     l2484:
  8673  1621  0865               	movf	___fladd@grs,w
  8674  1622  00DA               	movwf	??___fladd
  8675  1623  085A               	movf	??___fladd,w
  8676  1624  00D9               	movwf	___fladd@a+3
  8677  1625                     l2486:
  8678  1625  01E5               	clrf	___fladd@grs
  8679  1626                     l2488:
  8680  1626  0863               	movf	___fladd@aexp,w
  8681  1627  00DA               	movwf	??___fladd
  8682  1628  01DB               	clrf	??___fladd+1
  8683  1629  085B               	movf	??___fladd+1,w
  8684  162A  00DD               	movwf	??___fladd+3
  8685  162B  0864               	movf	___fladd@bexp,w
  8686  162C  025A               	subwf	??___fladd,w
  8687  162D  00DC               	movwf	??___fladd+2
  8688  162E  1C03               	skipc
  8689  162F  03DD               	decf	??___fladd+3,f
  8690  1630  085D               	movf	??___fladd+3,w
  8691  1631  3A80               	xorlw	128
  8692  1632  00FF               	movwf	btemp+1
  8693  1633  3080               	movlw	128
  8694  1634  027F               	subwf	btemp+1,w
  8695  1635  1D03               	skipz
  8696  1636  2E39               	goto	u3315
  8697  1637  301A               	movlw	26
  8698  1638  025C               	subwf	??___fladd+2,w
  8699  1639                     u3315:
  8700  1639  1C03               	skipc
  8701  163A  2E3C               	goto	u3311
  8702  163B  2E3D               	goto	u3310
  8703  163C                     u3311:
  8704  163C  2E7A               	goto	l2504
  8705  163D                     u3310:
  8706  163D                     l2490:
  8707  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8708  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8709  163F  0855               	movf	___fladd@b+3,w
  8710  1640  0454               	iorwf	___fladd@b+2,w
  8711  1641  0453               	iorwf	___fladd@b+1,w
  8712  1642  0452               	iorwf	___fladd@b,w
  8713  1643  1D03               	skipz
  8714  1644  2E46               	goto	u3321
  8715  1645  2E48               	goto	u3320
  8716  1646                     u3321:
  8717  1646  3001               	movlw	1
  8718  1647  2E49               	goto	u3330
  8719  1648                     u3320:
  8720  1648  3000               	movlw	0
  8721  1649                     u3330:
  8722  1649  00DA               	movwf	??___fladd
  8723  164A  085A               	movf	??___fladd,w
  8724  164B  00E5               	movwf	___fladd@grs
  8725  164C  3000               	movlw	0
  8726  164D  00D5               	movwf	___fladd@b+3
  8727  164E  3000               	movlw	0
  8728  164F  00D4               	movwf	___fladd@b+2
  8729  1650  3000               	movlw	0
  8730  1651  00D3               	movwf	___fladd@b+1
  8731  1652  3000               	movlw	0
  8732  1653  00D2               	movwf	___fladd@b
  8733  1654  0863               	movf	___fladd@aexp,w
  8734  1655  00DA               	movwf	??___fladd
  8735  1656  085A               	movf	??___fladd,w
  8736  1657  00E4               	movwf	___fladd@bexp
  8737  1658  2E82               	goto	l680
  8738  1659                     l682:
  8739  1659  1C65               	btfss	___fladd@grs,0
  8740  165A  2E5C               	goto	u3341
  8741  165B  2E5D               	goto	u3340
  8742  165C                     u3341:
  8743  165C  2E66               	goto	l2494
  8744  165D                     u3340:
  8745  165D                     l2492:
  8746  165D  0865               	movf	___fladd@grs,w
  8747  165E  00DA               	movwf	??___fladd
  8748  165F  1003               	clrc
  8749  1660  0C5A               	rrf	??___fladd,w
  8750  1661  3801               	iorlw	1
  8751  1662  00DB               	movwf	??___fladd+1
  8752  1663  085B               	movf	??___fladd+1,w
  8753  1664  00E5               	movwf	___fladd@grs
  8754  1665  2E68               	goto	l2496
  8755  1666                     l2494:
  8756  1666  1003               	clrc
  8757  1667  0CE5               	rrf	___fladd@grs,f
  8758  1668                     l2496:
  8759  1668  1C52               	btfss	___fladd@b,0
  8760  1669  2E6B               	goto	u3351
  8761  166A  2E6C               	goto	u3350
  8762  166B                     u3351:
  8763  166B  2E6D               	goto	l2500
  8764  166C                     u3350:
  8765  166C                     l2498:
  8766  166C  17E5               	bsf	___fladd@grs,7
  8767  166D                     l2500:
  8768  166D  3001               	movlw	1
  8769  166E  00DA               	movwf	??___fladd
  8770  166F                     u3365:
  8771  166F  0D55               	rlf	___fladd@b+3,w
  8772  1670  0CD5               	rrf	___fladd@b+3,f
  8773  1671  0CD4               	rrf	___fladd@b+2,f
  8774  1672  0CD3               	rrf	___fladd@b+1,f
  8775  1673  0CD2               	rrf	___fladd@b,f
  8776  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8777  1675  2E6F               	goto	u3365
  8778  1676                     l2502:
  8779  1676  3001               	movlw	1
  8780  1677  00DA               	movwf	??___fladd
  8781  1678  085A               	movf	??___fladd,w
  8782  1679  07E4               	addwf	___fladd@bexp,f
  8783  167A                     l2504:
  8784  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8785  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8786  167C  0863               	movf	___fladd@aexp,w
  8787  167D  0264               	subwf	___fladd@bexp,w
  8788  167E  1C03               	skipc
  8789  167F  2E81               	goto	u3371
  8790  1680  2E82               	goto	u3370
  8791  1681                     u3371:
  8792  1681  2E59               	goto	l682
  8793  1682                     u3370:
  8794  1682                     l680:
  8795  1682  1B62               	btfsc	___fladd@signs,6
  8796  1683  2E85               	goto	u3381
  8797  1684  2E86               	goto	u3380
  8798  1685                     u3381:
  8799  1685  2ED1               	goto	l2530
  8800  1686                     u3380:
  8801  1686                     l2506:
  8802  1686  0864               	movf	___fladd@bexp,w
  8803  1687  1D03               	btfss	3,2
  8804  1688  2E8A               	goto	u3391
  8805  1689  2E8B               	goto	u3390
  8806  168A                     u3391:
  8807  168A  2E94               	goto	l2512
  8808  168B                     u3390:
  8809  168B                     l2508:
  8810  168B  3000               	movlw	0
  8811  168C  00D5               	movwf	?___fladd+3
  8812  168D  3000               	movlw	0
  8813  168E  00D4               	movwf	?___fladd+2
  8814  168F  3000               	movlw	0
  8815  1690  00D3               	movwf	?___fladd+1
  8816  1691  3000               	movlw	0
  8817  1692  00D2               	movwf	?___fladd
  8818  1693  2FFF               	goto	l689
  8819  1694                     l2512:
  8820  1694  0856               	movf	___fladd@a,w
  8821  1695  07D2               	addwf	___fladd@b,f
  8822  1696  0857               	movf	___fladd@a+1,w
  8823  1697  1103               	clrz
  8824  1698  1803               	skipnc
  8825  1699  3E01               	addlw	1
  8826  169A  1903               	skipnz
  8827  169B  2E9D               	goto	u3401
  8828  169C  07D3               	addwf	___fladd@b+1,f
  8829  169D                     u3401:
  8830  169D  0858               	movf	___fladd@a+2,w
  8831  169E  1103               	clrz
  8832  169F  1803               	skipnc
  8833  16A0  3E01               	addlw	1
  8834  16A1  1903               	skipnz
  8835  16A2  2EA4               	goto	u3402
  8836  16A3  07D4               	addwf	___fladd@b+2,f
  8837  16A4                     u3402:
  8838  16A4  0859               	movf	___fladd@a+3,w
  8839  16A5  1103               	clrz
  8840  16A6  1803               	skipnc
  8841  16A7  3E01               	addlw	1
  8842  16A8  1903               	skipnz
  8843  16A9  2EAB               	goto	u3403
  8844  16AA  07D5               	addwf	___fladd@b+3,f
  8845  16AB                     u3403:
  8846  16AB                     l2514:
  8847  16AB  1C55               	btfss	___fladd@b+3,0
  8848  16AC  2EAE               	goto	u3411
  8849  16AD  2EAF               	goto	u3410
  8850  16AE                     u3411:
  8851  16AE  2F85               	goto	l2564
  8852  16AF                     u3410:
  8853  16AF                     l2516:
  8854  16AF  1C65               	btfss	___fladd@grs,0
  8855  16B0  2EB2               	goto	u3421
  8856  16B1  2EB3               	goto	u3420
  8857  16B2                     u3421:
  8858  16B2  2EBC               	goto	l2520
  8859  16B3                     u3420:
  8860  16B3                     l2518:
  8861  16B3  0865               	movf	___fladd@grs,w
  8862  16B4  00DA               	movwf	??___fladd
  8863  16B5  1003               	clrc
  8864  16B6  0C5A               	rrf	??___fladd,w
  8865  16B7  3801               	iorlw	1
  8866  16B8  00DB               	movwf	??___fladd+1
  8867  16B9  085B               	movf	??___fladd+1,w
  8868  16BA  00E5               	movwf	___fladd@grs
  8869  16BB  2EBE               	goto	l2522
  8870  16BC                     l2520:
  8871  16BC  1003               	clrc
  8872  16BD  0CE5               	rrf	___fladd@grs,f
  8873  16BE                     l2522:
  8874  16BE  1C52               	btfss	___fladd@b,0
  8875  16BF  2EC1               	goto	u3431
  8876  16C0  2EC2               	goto	u3430
  8877  16C1                     u3431:
  8878  16C1  2EC3               	goto	l2526
  8879  16C2                     u3430:
  8880  16C2                     l2524:
  8881  16C2  17E5               	bsf	___fladd@grs,7
  8882  16C3                     l2526:
  8883  16C3  3001               	movlw	1
  8884  16C4  00DA               	movwf	??___fladd
  8885  16C5                     u3445:
  8886  16C5  0D55               	rlf	___fladd@b+3,w
  8887  16C6  0CD5               	rrf	___fladd@b+3,f
  8888  16C7  0CD4               	rrf	___fladd@b+2,f
  8889  16C8  0CD3               	rrf	___fladd@b+1,f
  8890  16C9  0CD2               	rrf	___fladd@b,f
  8891  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8892  16CB  2EC5               	goto	u3445
  8893  16CC                     l2528:
  8894  16CC  3001               	movlw	1
  8895  16CD  00DA               	movwf	??___fladd
  8896  16CE  085A               	movf	??___fladd,w
  8897  16CF  07E4               	addwf	___fladd@bexp,f
  8898  16D0  2F85               	goto	l2564
  8899  16D1                     l2530:
  8900  16D1  0855               	movf	___fladd@b+3,w
  8901  16D2  3A80               	xorlw	128
  8902  16D3  00FF               	movwf	btemp+1
  8903  16D4  0859               	movf	___fladd@a+3,w
  8904  16D5  3A80               	xorlw	128
  8905  16D6  027F               	subwf	btemp+1,w
  8906  16D7  1D03               	skipz
  8907  16D8  2EE3               	goto	u3453
  8908  16D9  0858               	movf	___fladd@a+2,w
  8909  16DA  0254               	subwf	___fladd@b+2,w
  8910  16DB  1D03               	skipz
  8911  16DC  2EE3               	goto	u3453
  8912  16DD  0857               	movf	___fladd@a+1,w
  8913  16DE  0253               	subwf	___fladd@b+1,w
  8914  16DF  1D03               	skipz
  8915  16E0  2EE3               	goto	u3453
  8916  16E1  0856               	movf	___fladd@a,w
  8917  16E2  0252               	subwf	___fladd@b,w
  8918  16E3                     u3453:
  8919  16E3  1803               	skipnc
  8920  16E4  2EE6               	goto	u3451
  8921  16E5  2EE7               	goto	u3450
  8922  16E6                     u3451:
  8923  16E6  2F3F               	goto	l2540
  8924  16E7                     u3450:
  8925  16E7                     l2532:
  8926  16E7  30FF               	movlw	255
  8927  16E8  00DA               	movwf	??___fladd
  8928  16E9  30FF               	movlw	255
  8929  16EA  00DB               	movwf	??___fladd+1
  8930  16EB  30FF               	movlw	255
  8931  16EC  00DC               	movwf	??___fladd+2
  8932  16ED  30FF               	movlw	255
  8933  16EE  00DD               	movwf	??___fladd+3
  8934  16EF  0856               	movf	___fladd@a,w
  8935  16F0  00DE               	movwf	??___fladd+4
  8936  16F1  0857               	movf	___fladd@a+1,w
  8937  16F2  00DF               	movwf	??___fladd+5
  8938  16F3  0858               	movf	___fladd@a+2,w
  8939  16F4  00E0               	movwf	??___fladd+6
  8940  16F5  0859               	movf	___fladd@a+3,w
  8941  16F6  00E1               	movwf	??___fladd+7
  8942  16F7  0852               	movf	___fladd@b,w
  8943  16F8  02DE               	subwf	??___fladd+4,f
  8944  16F9  0853               	movf	___fladd@b+1,w
  8945  16FA  1C03               	skipc
  8946  16FB  0F53               	incfsz	___fladd@b+1,w
  8947  16FC  2EFE               	goto	u3461
  8948  16FD  2EFF               	goto	u3462
  8949  16FE                     u3461:
  8950  16FE  02DF               	subwf	??___fladd+5,f
  8951  16FF                     u3462:
  8952  16FF  0854               	movf	___fladd@b+2,w
  8953  1700  1C03               	skipc
  8954  1701  0F54               	incfsz	___fladd@b+2,w
  8955  1702  2F04               	goto	u3463
  8956  1703  2F05               	goto	u3464
  8957  1704                     u3463:
  8958  1704  02E0               	subwf	??___fladd+6,f
  8959  1705                     u3464:
  8960  1705  0855               	movf	___fladd@b+3,w
  8961  1706  1C03               	skipc
  8962  1707  0F55               	incfsz	___fladd@b+3,w
  8963  1708  2F0A               	goto	u3465
  8964  1709  2F0B               	goto	u3466
  8965  170A                     u3465:
  8966  170A  02E1               	subwf	??___fladd+7,f
  8967  170B                     u3466:
  8968  170B  085E               	movf	??___fladd+4,w
  8969  170C  07DA               	addwf	??___fladd,f
  8970  170D  085F               	movf	??___fladd+5,w
  8971  170E  1803               	skipnc
  8972  170F  0F5F               	incfsz	??___fladd+5,w
  8973  1710  2F12               	goto	u3470
  8974  1711  2F13               	goto	u3471
  8975  1712                     u3470:
  8976  1712  07DB               	addwf	??___fladd+1,f
  8977  1713                     u3471:
  8978  1713  0860               	movf	??___fladd+6,w
  8979  1714  1803               	skipnc
  8980  1715  0F60               	incfsz	??___fladd+6,w
  8981  1716  2F18               	goto	u3472
  8982  1717  2F19               	goto	u3473
  8983  1718                     u3472:
  8984  1718  07DC               	addwf	??___fladd+2,f
  8985  1719                     u3473:
  8986  1719  0861               	movf	??___fladd+7,w
  8987  171A  1803               	skipnc
  8988  171B  0A61               	incf	??___fladd+7,w
  8989  171C  07DD               	addwf	??___fladd+3,f
  8990  171D  085D               	movf	??___fladd+3,w
  8991  171E  00D5               	movwf	___fladd@b+3
  8992  171F  085C               	movf	??___fladd+2,w
  8993  1720  00D4               	movwf	___fladd@b+2
  8994  1721  085B               	movf	??___fladd+1,w
  8995  1722  00D3               	movwf	___fladd@b+1
  8996  1723  085A               	movf	??___fladd,w
  8997  1724  00D2               	movwf	___fladd@b
  8998  1725                     l2534:
  8999  1725  3080               	movlw	128
  9000  1726  00DA               	movwf	??___fladd
  9001  1727  085A               	movf	??___fladd,w
  9002  1728  06E2               	xorwf	___fladd@signs,f
  9003  1729  09E5               	comf	___fladd@grs,f
  9004  172A  0AE5               	incf	___fladd@grs,f
  9005  172B                     l2536:
  9006  172B  0865               	movf	___fladd@grs,w
  9007  172C  1D03               	btfss	3,2
  9008  172D  2F2F               	goto	u3481
  9009  172E  2F30               	goto	u3480
  9010  172F                     u3481:
  9011  172F  2F4D               	goto	l697
  9012  1730                     u3480:
  9013  1730                     l2538:
  9014  1730  3001               	movlw	1
  9015  1731  07D2               	addwf	___fladd@b,f
  9016  1732  3000               	movlw	0
  9017  1733  1803               	skipnc
  9018  1734  3001               	movlw	1
  9019  1735  07D3               	addwf	___fladd@b+1,f
  9020  1736  3000               	movlw	0
  9021  1737  1803               	skipnc
  9022  1738  3001               	movlw	1
  9023  1739  07D4               	addwf	___fladd@b+2,f
  9024  173A  3000               	movlw	0
  9025  173B  1803               	skipnc
  9026  173C  3001               	movlw	1
  9027  173D  07D5               	addwf	___fladd@b+3,f
  9028  173E  2F4D               	goto	l697
  9029  173F                     l2540:
  9030  173F  0856               	movf	___fladd@a,w
  9031  1740  02D2               	subwf	___fladd@b,f
  9032  1741  0857               	movf	___fladd@a+1,w
  9033  1742  1C03               	skipc
  9034  1743  0F57               	incfsz	___fladd@a+1,w
  9035  1744  02D3               	subwf	___fladd@b+1,f
  9036  1745  0858               	movf	___fladd@a+2,w
  9037  1746  1C03               	skipc
  9038  1747  0F58               	incfsz	___fladd@a+2,w
  9039  1748  02D4               	subwf	___fladd@b+2,f
  9040  1749  0859               	movf	___fladd@a+3,w
  9041  174A  1C03               	skipc
  9042  174B  0F59               	incfsz	___fladd@a+3,w
  9043  174C  02D5               	subwf	___fladd@b+3,f
  9044  174D                     l697:
  9045  174D  0855               	movf	___fladd@b+3,w
  9046  174E  0454               	iorwf	___fladd@b+2,w
  9047  174F  0453               	iorwf	___fladd@b+1,w
  9048  1750  0452               	iorwf	___fladd@b,w
  9049  1751  1D03               	skipz
  9050  1752  2F54               	goto	u3491
  9051  1753  2F55               	goto	u3490
  9052  1754                     u3491:
  9053  1754  2F81               	goto	l2562
  9054  1755                     u3490:
  9055  1755                     l2542:
  9056  1755  0865               	movf	___fladd@grs,w
  9057  1756  1D03               	btfss	3,2
  9058  1757  2F59               	goto	u3501
  9059  1758  2F5A               	goto	u3500
  9060  1759                     u3501:
  9061  1759  2F81               	goto	l2562
  9062  175A                     u3500:
  9063  175A                     l2544:
  9064  175A  3000               	movlw	0
  9065  175B  00D5               	movwf	?___fladd+3
  9066  175C  3000               	movlw	0
  9067  175D  00D4               	movwf	?___fladd+2
  9068  175E  3000               	movlw	0
  9069  175F  00D3               	movwf	?___fladd+1
  9070  1760  3000               	movlw	0
  9071  1761  00D2               	movwf	?___fladd
  9072  1762  2FFF               	goto	l689
  9073  1763                     l2548:
  9074  1763  3001               	movlw	1
  9075  1764  00DA               	movwf	??___fladd
  9076  1765                     u3515:
  9077  1765  1003               	clrc
  9078  1766  0DD2               	rlf	___fladd@b,f
  9079  1767  0DD3               	rlf	___fladd@b+1,f
  9080  1768  0DD4               	rlf	___fladd@b+2,f
  9081  1769  0DD5               	rlf	___fladd@b+3,f
  9082  176A  0BDA               	decfsz	??___fladd,f
  9083  176B  2F65               	goto	u3515
  9084  176C                     l2550:
  9085  176C  1FE5               	btfss	___fladd@grs,7
  9086  176D  2F6F               	goto	u3521
  9087  176E  2F70               	goto	u3520
  9088  176F                     u3521:
  9089  176F  2F71               	goto	l701
  9090  1770                     u3520:
  9091  1770                     l2552:
  9092  1770  1452               	bsf	___fladd@b,0
  9093  1771                     l701:
  9094  1771  1C65               	btfss	___fladd@grs,0
  9095  1772  2F74               	goto	u3531
  9096  1773  2F75               	goto	u3530
  9097  1774                     u3531:
  9098  1774  2F78               	goto	l2556
  9099  1775                     u3530:
  9100  1775                     l2554:
  9101  1775  1403               	setc
  9102  1776  0DE5               	rlf	___fladd@grs,f
  9103  1777  2F7A               	goto	l2558
  9104  1778                     l2556:
  9105  1778  1003               	clrc
  9106  1779  0DE5               	rlf	___fladd@grs,f
  9107  177A                     l2558:
  9108  177A  0864               	movf	___fladd@bexp,w
  9109  177B  1903               	btfsc	3,2
  9110  177C  2F7E               	goto	u3541
  9111  177D  2F7F               	goto	u3540
  9112  177E                     u3541:
  9113  177E  2F81               	goto	l2562
  9114  177F                     u3540:
  9115  177F                     l2560:
  9116  177F  3001               	movlw	1
  9117  1780  02E4               	subwf	___fladd@bexp,f
  9118  1781                     l2562:
  9119  1781  1FD4               	btfss	___fladd@b+2,7
  9120  1782  2F84               	goto	u3551
  9121  1783  2F85               	goto	u3550
  9122  1784                     u3551:
  9123  1784  2F63               	goto	l2548
  9124  1785                     u3550:
  9125  1785                     l2564:
  9126  1785  01E3               	clrf	___fladd@aexp
  9127  1786                     l2566:
  9128  1786  1FE5               	btfss	___fladd@grs,7
  9129  1787  2F89               	goto	u3561
  9130  1788  2F8A               	goto	u3560
  9131  1789                     u3561:
  9132  1789  2F98               	goto	l2574
  9133  178A                     u3560:
  9134  178A                     l2568:
  9135  178A  0865               	movf	___fladd@grs,w
  9136  178B  397F               	andlw	127
  9137  178C  1903               	btfsc	3,2
  9138  178D  2F8F               	goto	u3571
  9139  178E  2F90               	goto	u3570
  9140  178F                     u3571:
  9141  178F  2F93               	goto	l707
  9142  1790                     u3570:
  9143  1790                     l2570:
  9144  1790  01E3               	clrf	___fladd@aexp
  9145  1791  0AE3               	incf	___fladd@aexp,f
  9146  1792  2F98               	goto	l2574
  9147  1793                     l707:
  9148  1793  1C52               	btfss	___fladd@b,0
  9149  1794  2F96               	goto	u3581
  9150  1795  2F97               	goto	u3580
  9151  1796                     u3581:
  9152  1796  2F98               	goto	l2574
  9153  1797                     u3580:
  9154  1797  2F90               	goto	l2570
  9155  1798                     l2574:
  9156  1798  0863               	movf	___fladd@aexp,w
  9157  1799  1903               	btfsc	3,2
  9158  179A  2F9C               	goto	u3591
  9159  179B  2F9D               	goto	u3590
  9160  179C                     u3591:
  9161  179C  2FD1               	goto	l710
  9162  179D                     u3590:
  9163  179D                     l2576:
  9164  179D  3001               	movlw	1
  9165  179E  07D2               	addwf	___fladd@b,f
  9166  179F  3000               	movlw	0
  9167  17A0  1803               	skipnc
  9168  17A1  3001               	movlw	1
  9169  17A2  07D3               	addwf	___fladd@b+1,f
  9170  17A3  3000               	movlw	0
  9171  17A4  1803               	skipnc
  9172  17A5  3001               	movlw	1
  9173  17A6  07D4               	addwf	___fladd@b+2,f
  9174  17A7  3000               	movlw	0
  9175  17A8  1803               	skipnc
  9176  17A9  3001               	movlw	1
  9177  17AA  07D5               	addwf	___fladd@b+3,f
  9178  17AB                     l2578:
  9179  17AB  1C55               	btfss	___fladd@b+3,0
  9180  17AC  2FAE               	goto	u3601
  9181  17AD  2FAF               	goto	u3600
  9182  17AE                     u3601:
  9183  17AE  2FD1               	goto	l710
  9184  17AF                     u3600:
  9185  17AF                     l2580:
  9186  17AF  0852               	movf	___fladd@b,w
  9187  17B0  00DA               	movwf	??___fladd
  9188  17B1  0853               	movf	___fladd@b+1,w
  9189  17B2  00DB               	movwf	??___fladd+1
  9190  17B3  0854               	movf	___fladd@b+2,w
  9191  17B4  00DC               	movwf	??___fladd+2
  9192  17B5  0855               	movf	___fladd@b+3,w
  9193  17B6  00DD               	movwf	??___fladd+3
  9194  17B7  3001               	movlw	1
  9195  17B8  00DE               	movwf	??___fladd+4
  9196  17B9                     u3615:
  9197  17B9  0D5D               	rlf	??___fladd+3,w
  9198  17BA  0CDD               	rrf	??___fladd+3,f
  9199  17BB  0CDC               	rrf	??___fladd+2,f
  9200  17BC  0CDB               	rrf	??___fladd+1,f
  9201  17BD  0CDA               	rrf	??___fladd,f
  9202  17BE                     u3610:
  9203  17BE  0BDE               	decfsz	??___fladd+4,f
  9204  17BF  2FB9               	goto	u3615
  9205  17C0  085D               	movf	??___fladd+3,w
  9206  17C1  00D5               	movwf	___fladd@b+3
  9207  17C2  085C               	movf	??___fladd+2,w
  9208  17C3  00D4               	movwf	___fladd@b+2
  9209  17C4  085B               	movf	??___fladd+1,w
  9210  17C5  00D3               	movwf	___fladd@b+1
  9211  17C6  085A               	movf	??___fladd,w
  9212  17C7  00D2               	movwf	___fladd@b
  9213  17C8  0A64               	incf	___fladd@bexp,w
  9214  17C9  1903               	btfsc	3,2
  9215  17CA  2FCC               	goto	u3621
  9216  17CB  2FCD               	goto	u3620
  9217  17CC                     u3621:
  9218  17CC  2FD1               	goto	l710
  9219  17CD                     u3620:
  9220  17CD                     l2582:
  9221  17CD  3001               	movlw	1
  9222  17CE  00DA               	movwf	??___fladd
  9223  17CF  085A               	movf	??___fladd,w
  9224  17D0  07E4               	addwf	___fladd@bexp,f
  9225  17D1                     l710:
  9226  17D1  0A64               	incf	___fladd@bexp,w
  9227  17D2  1903               	btfsc	3,2
  9228  17D3  2FD5               	goto	u3631
  9229  17D4  2FD6               	goto	u3630
  9230  17D5                     u3631:
  9231  17D5  2FDB               	goto	l2586
  9232  17D6                     u3630:
  9233  17D6                     l2584:
  9234  17D6  0864               	movf	___fladd@bexp,w
  9235  17D7  1D03               	btfss	3,2
  9236  17D8  2FDA               	goto	u3641
  9237  17D9  2FDB               	goto	u3640
  9238  17DA                     u3641:
  9239  17DA  2FE9               	goto	l2592
  9240  17DB                     u3640:
  9241  17DB                     l2586:
  9242  17DB  3000               	movlw	0
  9243  17DC  00D5               	movwf	___fladd@b+3
  9244  17DD  3000               	movlw	0
  9245  17DE  00D4               	movwf	___fladd@b+2
  9246  17DF  3000               	movlw	0
  9247  17E0  00D3               	movwf	___fladd@b+1
  9248  17E1  3000               	movlw	0
  9249  17E2  00D2               	movwf	___fladd@b
  9250  17E3                     l2588:
  9251  17E3  0864               	movf	___fladd@bexp,w
  9252  17E4  1D03               	btfss	3,2
  9253  17E5  2FE7               	goto	u3651
  9254  17E6  2FE8               	goto	u3650
  9255  17E7                     u3651:
  9256  17E7  2FE9               	goto	l2592
  9257  17E8                     u3650:
  9258  17E8                     l2590:
  9259  17E8  01E2               	clrf	___fladd@signs
  9260  17E9                     l2592:
  9261  17E9  1C64               	btfss	___fladd@bexp,0
  9262  17EA  2FEC               	goto	u3661
  9263  17EB  2FED               	goto	u3660
  9264  17EC                     u3661:
  9265  17EC  2FEF               	goto	l2596
  9266  17ED                     u3660:
  9267  17ED                     l2594:
  9268  17ED  17D4               	bsf	___fladd@b+2,7
  9269  17EE  2FF3               	goto	l718
  9270  17EF                     l2596:
  9271  17EF  307F               	movlw	127
  9272  17F0  00DA               	movwf	??___fladd
  9273  17F1  085A               	movf	??___fladd,w
  9274  17F2  05D4               	andwf	___fladd@b+2,f
  9275  17F3                     l718:
  9276  17F3  0864               	movf	___fladd@bexp,w
  9277  17F4  00DA               	movwf	??___fladd
  9278  17F5  1003               	clrc
  9279  17F6  0C5A               	rrf	??___fladd,w
  9280  17F7  00DB               	movwf	??___fladd+1
  9281  17F8  085B               	movf	??___fladd+1,w
  9282  17F9  00D5               	movwf	___fladd@b+3
  9283  17FA                     l2598:
  9284  17FA  1FE2               	btfss	___fladd@signs,7
  9285  17FB  2FFD               	goto	u3671
  9286  17FC  2FFE               	goto	u3670
  9287  17FD                     u3671:
  9288  17FD  2FFF               	goto	l719
  9289  17FE                     u3670:
  9290  17FE                     l2600:
  9291  17FE  17D5               	bsf	___fladd@b+3,7
  9292  17FF                     l719:
  9293  17FF                     l689:
  9294  17FF  0008               	return
  9295  1800                     __end_of___fladd:
  9296                           
  9297                           	psect	text19
  9298  1A7D                     __ptext19:	
  9299 ;; *************** function ___flneg *****************
  9300 ;; Defined at:
  9301 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  f1              4    0[COMMON] unsigned char 
  9304 ;; Auto vars:     Size  Location     Type
  9305 ;;		None
  9306 ;; Return value:  Size  Location     Type
  9307 ;;                  4    0[COMMON] unsigned char 
  9308 ;; Registers used:
  9309 ;;		wreg
  9310 ;; Tracked objects:
  9311 ;;		On entry : 0/0
  9312 ;;		On exit  : 0/0
  9313 ;;		Unchanged: 0/0
  9314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9315 ;;      Params:         4       0       0       0       0
  9316 ;;      Locals:         0       0       0       0       0
  9317 ;;      Temps:          0       0       0       0       0
  9318 ;;      Totals:         4       0       0       0       0
  9319 ;;Total ram usage:        4 bytes
  9320 ;; Hardware stack levels used: 1
  9321 ;; This function calls:
  9322 ;;		Nothing
  9323 ;; This function is called by:
  9324 ;;		_sprintf
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function ___flneg
  9330  1A7D                     ___flneg:
  9331  1A7D                     l3000:	
  9332                           ;incstack = 0
  9333                           ; Regs used in ___flneg: [wreg]
  9334                           
  9335  1A7D  0873               	movf	___flneg@f1+3,w
  9336  1A7E  0472               	iorwf	___flneg@f1+2,w
  9337  1A7F  0471               	iorwf	___flneg@f1+1,w
  9338  1A80  0470               	iorwf	___flneg@f1,w
  9339  1A81  1903               	skipnz
  9340  1A82  2A84               	goto	u4751
  9341  1A83  2A85               	goto	u4750
  9342  1A84                     u4751:
  9343  1A84  2A87               	goto	l3004
  9344  1A85                     u4750:
  9345  1A85                     l3002:
  9346  1A85  3080               	movlw	128
  9347  1A86  06F3               	xorwf	___flneg@f1+3,f
  9348  1A87                     l3004:
  9349  1A87                     l548:
  9350  1A87  0008               	return
  9351  1A88                     __end_of___flneg:
  9352                           
  9353                           	psect	text20
  9354  1DE5                     __ptext20:	
  9355 ;; *************** function ___flge *****************
  9356 ;; Defined at:
  9357 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  ff1             4    0[COMMON] unsigned char 
  9360 ;;  ff2             4    4[COMMON] unsigned char 
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;		None
  9363 ;; Return value:  Size  Location     Type
  9364 ;;		None               void
  9365 ;; Registers used:
  9366 ;;		wreg, status,2, status,0
  9367 ;; Tracked objects:
  9368 ;;		On entry : 0/0
  9369 ;;		On exit  : 0/0
  9370 ;;		Unchanged: 0/0
  9371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9372 ;;      Params:         8       0       0       0       0
  9373 ;;      Locals:         0       0       0       0       0
  9374 ;;      Temps:          4       0       0       0       0
  9375 ;;      Totals:        12       0       0       0       0
  9376 ;;Total ram usage:       12 bytes
  9377 ;; Hardware stack levels used: 1
  9378 ;; This function calls:
  9379 ;;		Nothing
  9380 ;; This function is called by:
  9381 ;;		_sprintf
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385                           
  9386                           ;psect for function ___flge
  9387  1DE5                     ___flge:
  9388  1DE5                     l2980:	
  9389                           ;incstack = 0
  9390                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9391                           
  9392  1DE5  3000               	movlw	0
  9393  1DE6  0570               	andwf	___flge@ff1,w
  9394  1DE7  00F8               	movwf	??___flge
  9395  1DE8  3000               	movlw	0
  9396  1DE9  0571               	andwf	___flge@ff1+1,w
  9397  1DEA  00F9               	movwf	??___flge+1
  9398  1DEB  3080               	movlw	128
  9399  1DEC  0572               	andwf	___flge@ff1+2,w
  9400  1DED  00FA               	movwf	??___flge+2
  9401  1DEE  307F               	movlw	127
  9402  1DEF  0573               	andwf	___flge@ff1+3,w
  9403  1DF0  00FB               	movwf	??___flge+3
  9404  1DF1  087B               	movf	??___flge+3,w
  9405  1DF2  047A               	iorwf	??___flge+2,w
  9406  1DF3  0479               	iorwf	??___flge+1,w
  9407  1DF4  0478               	iorwf	??___flge,w
  9408  1DF5  1D03               	skipz
  9409  1DF6  2DF8               	goto	u4681
  9410  1DF7  2DF9               	goto	u4680
  9411  1DF8                     u4681:
  9412  1DF8  2E01               	goto	l540
  9413  1DF9                     u4680:
  9414  1DF9                     l2982:
  9415  1DF9  3000               	movlw	0
  9416  1DFA  00F3               	movwf	___flge@ff1+3
  9417  1DFB  3000               	movlw	0
  9418  1DFC  00F2               	movwf	___flge@ff1+2
  9419  1DFD  3000               	movlw	0
  9420  1DFE  00F1               	movwf	___flge@ff1+1
  9421  1DFF  3000               	movlw	0
  9422  1E00  00F0               	movwf	___flge@ff1
  9423  1E01                     l540:
  9424  1E01  3000               	movlw	0
  9425  1E02  0574               	andwf	___flge@ff2,w
  9426  1E03  00F8               	movwf	??___flge
  9427  1E04  3000               	movlw	0
  9428  1E05  0575               	andwf	___flge@ff2+1,w
  9429  1E06  00F9               	movwf	??___flge+1
  9430  1E07  3080               	movlw	128
  9431  1E08  0576               	andwf	___flge@ff2+2,w
  9432  1E09  00FA               	movwf	??___flge+2
  9433  1E0A  307F               	movlw	127
  9434  1E0B  0577               	andwf	___flge@ff2+3,w
  9435  1E0C  00FB               	movwf	??___flge+3
  9436  1E0D  087B               	movf	??___flge+3,w
  9437  1E0E  047A               	iorwf	??___flge+2,w
  9438  1E0F  0479               	iorwf	??___flge+1,w
  9439  1E10  0478               	iorwf	??___flge,w
  9440  1E11  1D03               	skipz
  9441  1E12  2E14               	goto	u4691
  9442  1E13  2E15               	goto	u4690
  9443  1E14                     u4691:
  9444  1E14  2E1D               	goto	l2986
  9445  1E15                     u4690:
  9446  1E15                     l2984:
  9447  1E15  3000               	movlw	0
  9448  1E16  00F7               	movwf	___flge@ff2+3
  9449  1E17  3000               	movlw	0
  9450  1E18  00F6               	movwf	___flge@ff2+2
  9451  1E19  3000               	movlw	0
  9452  1E1A  00F5               	movwf	___flge@ff2+1
  9453  1E1B  3000               	movlw	0
  9454  1E1C  00F4               	movwf	___flge@ff2
  9455  1E1D                     l2986:
  9456  1E1D  1FF3               	btfss	___flge@ff1+3,7
  9457  1E1E  2E20               	goto	u4701
  9458  1E1F  2E21               	goto	u4700
  9459  1E20                     u4701:
  9460  1E20  2E45               	goto	l2990
  9461  1E21                     u4700:
  9462  1E21                     l2988:
  9463  1E21  3000               	movlw	0
  9464  1E22  00F8               	movwf	??___flge
  9465  1E23  3000               	movlw	0
  9466  1E24  00F9               	movwf	??___flge+1
  9467  1E25  3000               	movlw	0
  9468  1E26  00FA               	movwf	??___flge+2
  9469  1E27  3080               	movlw	128
  9470  1E28  00FB               	movwf	??___flge+3
  9471  1E29  0870               	movf	___flge@ff1,w
  9472  1E2A  02F8               	subwf	??___flge,f
  9473  1E2B  0871               	movf	___flge@ff1+1,w
  9474  1E2C  1C03               	skipc
  9475  1E2D  0F71               	incfsz	___flge@ff1+1,w
  9476  1E2E  2E30               	goto	u4711
  9477  1E2F  2E31               	goto	u4712
  9478  1E30                     u4711:
  9479  1E30  02F9               	subwf	??___flge+1,f
  9480  1E31                     u4712:
  9481  1E31  0872               	movf	___flge@ff1+2,w
  9482  1E32  1C03               	skipc
  9483  1E33  0F72               	incfsz	___flge@ff1+2,w
  9484  1E34  2E36               	goto	u4713
  9485  1E35  2E37               	goto	u4714
  9486  1E36                     u4713:
  9487  1E36  02FA               	subwf	??___flge+2,f
  9488  1E37                     u4714:
  9489  1E37  0873               	movf	___flge@ff1+3,w
  9490  1E38  1C03               	skipc
  9491  1E39  0F73               	incfsz	___flge@ff1+3,w
  9492  1E3A  2E3C               	goto	u4715
  9493  1E3B  2E3D               	goto	u4716
  9494  1E3C                     u4715:
  9495  1E3C  02FB               	subwf	??___flge+3,f
  9496  1E3D                     u4716:
  9497  1E3D  087B               	movf	??___flge+3,w
  9498  1E3E  00F3               	movwf	___flge@ff1+3
  9499  1E3F  087A               	movf	??___flge+2,w
  9500  1E40  00F2               	movwf	___flge@ff1+2
  9501  1E41  0879               	movf	??___flge+1,w
  9502  1E42  00F1               	movwf	___flge@ff1+1
  9503  1E43  0878               	movf	??___flge,w
  9504  1E44  00F0               	movwf	___flge@ff1
  9505  1E45                     l2990:
  9506  1E45  1FF7               	btfss	___flge@ff2+3,7
  9507  1E46  2E48               	goto	u4721
  9508  1E47  2E49               	goto	u4720
  9509  1E48                     u4721:
  9510  1E48  2E6D               	goto	l543
  9511  1E49                     u4720:
  9512  1E49                     l2992:
  9513  1E49  3000               	movlw	0
  9514  1E4A  00F8               	movwf	??___flge
  9515  1E4B  3000               	movlw	0
  9516  1E4C  00F9               	movwf	??___flge+1
  9517  1E4D  3000               	movlw	0
  9518  1E4E  00FA               	movwf	??___flge+2
  9519  1E4F  3080               	movlw	128
  9520  1E50  00FB               	movwf	??___flge+3
  9521  1E51  0874               	movf	___flge@ff2,w
  9522  1E52  02F8               	subwf	??___flge,f
  9523  1E53  0875               	movf	___flge@ff2+1,w
  9524  1E54  1C03               	skipc
  9525  1E55  0F75               	incfsz	___flge@ff2+1,w
  9526  1E56  2E58               	goto	u4731
  9527  1E57  2E59               	goto	u4732
  9528  1E58                     u4731:
  9529  1E58  02F9               	subwf	??___flge+1,f
  9530  1E59                     u4732:
  9531  1E59  0876               	movf	___flge@ff2+2,w
  9532  1E5A  1C03               	skipc
  9533  1E5B  0F76               	incfsz	___flge@ff2+2,w
  9534  1E5C  2E5E               	goto	u4733
  9535  1E5D  2E5F               	goto	u4734
  9536  1E5E                     u4733:
  9537  1E5E  02FA               	subwf	??___flge+2,f
  9538  1E5F                     u4734:
  9539  1E5F  0877               	movf	___flge@ff2+3,w
  9540  1E60  1C03               	skipc
  9541  1E61  0F77               	incfsz	___flge@ff2+3,w
  9542  1E62  2E64               	goto	u4735
  9543  1E63  2E65               	goto	u4736
  9544  1E64                     u4735:
  9545  1E64  02FB               	subwf	??___flge+3,f
  9546  1E65                     u4736:
  9547  1E65  087B               	movf	??___flge+3,w
  9548  1E66  00F7               	movwf	___flge@ff2+3
  9549  1E67  087A               	movf	??___flge+2,w
  9550  1E68  00F6               	movwf	___flge@ff2+2
  9551  1E69  0879               	movf	??___flge+1,w
  9552  1E6A  00F5               	movwf	___flge@ff2+1
  9553  1E6B  0878               	movf	??___flge,w
  9554  1E6C  00F4               	movwf	___flge@ff2
  9555  1E6D                     l543:
  9556  1E6D  3080               	movlw	128
  9557  1E6E  06F3               	xorwf	___flge@ff1+3,f
  9558  1E6F  3080               	movlw	128
  9559  1E70  06F7               	xorwf	___flge@ff2+3,f
  9560  1E71  0877               	movf	___flge@ff2+3,w
  9561  1E72  0273               	subwf	___flge@ff1+3,w
  9562  1E73  1D03               	skipz
  9563  1E74  2E7F               	goto	u4745
  9564  1E75  0876               	movf	___flge@ff2+2,w
  9565  1E76  0272               	subwf	___flge@ff1+2,w
  9566  1E77  1D03               	skipz
  9567  1E78  2E7F               	goto	u4745
  9568  1E79  0875               	movf	___flge@ff2+1,w
  9569  1E7A  0271               	subwf	___flge@ff1+1,w
  9570  1E7B  1D03               	skipz
  9571  1E7C  2E7F               	goto	u4745
  9572  1E7D  0874               	movf	___flge@ff2,w
  9573  1E7E  0270               	subwf	___flge@ff1,w
  9574  1E7F                     u4745:
  9575  1E7F  1803               	skipnc
  9576  1E80  2E82               	goto	u4741
  9577  1E81  2E83               	goto	u4740
  9578  1E82                     u4741:
  9579  1E82  2E85               	goto	l2996
  9580  1E83                     u4740:
  9581  1E83                     l2994:
  9582  1E83  1003               	clrc
  9583  1E84  2E86               	goto	l544
  9584  1E85                     l2996:
  9585  1E85  1403               	setc
  9586  1E86                     l544:
  9587  1E86  0008               	return
  9588  1E87                     __end_of___flge:
  9589                           
  9590                           	psect	text21
  9591  1CEA                     __ptext21:	
  9592 ;; *************** function ___fleq *****************
  9593 ;; Defined at:
  9594 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  ff1             4    0[COMMON] unsigned char 
  9597 ;;  ff2             4    4[COMMON] unsigned char 
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;		None
  9600 ;; Return value:  Size  Location     Type
  9601 ;;		None               void
  9602 ;; Registers used:
  9603 ;;		wreg, status,2, status,0
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9609 ;;      Params:         8       0       0       0       0
  9610 ;;      Locals:         0       0       0       0       0
  9611 ;;      Temps:          4       0       0       0       0
  9612 ;;      Totals:        12       0       0       0       0
  9613 ;;Total ram usage:       12 bytes
  9614 ;; Hardware stack levels used: 1
  9615 ;; This function calls:
  9616 ;;		Nothing
  9617 ;; This function is called by:
  9618 ;;		_sprintf
  9619 ;; This function uses a non-reentrant model
  9620 ;;
  9621                           
  9622                           
  9623                           ;psect for function ___fleq
  9624  1CEA                     ___fleq:
  9625  1CEA                     l2968:	
  9626                           ;incstack = 0
  9627                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9628                           
  9629  1CEA  3000               	movlw	0
  9630  1CEB  0570               	andwf	___fleq@ff1,w
  9631  1CEC  00F8               	movwf	??___fleq
  9632  1CED  3000               	movlw	0
  9633  1CEE  0571               	andwf	___fleq@ff1+1,w
  9634  1CEF  00F9               	movwf	??___fleq+1
  9635  1CF0  3080               	movlw	128
  9636  1CF1  0572               	andwf	___fleq@ff1+2,w
  9637  1CF2  00FA               	movwf	??___fleq+2
  9638  1CF3  307F               	movlw	127
  9639  1CF4  0573               	andwf	___fleq@ff1+3,w
  9640  1CF5  00FB               	movwf	??___fleq+3
  9641  1CF6  087B               	movf	??___fleq+3,w
  9642  1CF7  047A               	iorwf	??___fleq+2,w
  9643  1CF8  0479               	iorwf	??___fleq+1,w
  9644  1CF9  0478               	iorwf	??___fleq,w
  9645  1CFA  1D03               	skipz
  9646  1CFB  2CFD               	goto	u4651
  9647  1CFC  2CFE               	goto	u4650
  9648  1CFD                     u4651:
  9649  1CFD  2D06               	goto	l535
  9650  1CFE                     u4650:
  9651  1CFE                     l2970:
  9652  1CFE  3000               	movlw	0
  9653  1CFF  00F3               	movwf	___fleq@ff1+3
  9654  1D00  3000               	movlw	0
  9655  1D01  00F2               	movwf	___fleq@ff1+2
  9656  1D02  3000               	movlw	0
  9657  1D03  00F1               	movwf	___fleq@ff1+1
  9658  1D04  3000               	movlw	0
  9659  1D05  00F0               	movwf	___fleq@ff1
  9660  1D06                     l535:
  9661  1D06  3000               	movlw	0
  9662  1D07  0574               	andwf	___fleq@ff2,w
  9663  1D08  00F8               	movwf	??___fleq
  9664  1D09  3000               	movlw	0
  9665  1D0A  0575               	andwf	___fleq@ff2+1,w
  9666  1D0B  00F9               	movwf	??___fleq+1
  9667  1D0C  3080               	movlw	128
  9668  1D0D  0576               	andwf	___fleq@ff2+2,w
  9669  1D0E  00FA               	movwf	??___fleq+2
  9670  1D0F  307F               	movlw	127
  9671  1D10  0577               	andwf	___fleq@ff2+3,w
  9672  1D11  00FB               	movwf	??___fleq+3
  9673  1D12  087B               	movf	??___fleq+3,w
  9674  1D13  047A               	iorwf	??___fleq+2,w
  9675  1D14  0479               	iorwf	??___fleq+1,w
  9676  1D15  0478               	iorwf	??___fleq,w
  9677  1D16  1D03               	skipz
  9678  1D17  2D19               	goto	u4661
  9679  1D18  2D1A               	goto	u4660
  9680  1D19                     u4661:
  9681  1D19  2D22               	goto	l536
  9682  1D1A                     u4660:
  9683  1D1A                     l2972:
  9684  1D1A  3000               	movlw	0
  9685  1D1B  00F7               	movwf	___fleq@ff2+3
  9686  1D1C  3000               	movlw	0
  9687  1D1D  00F6               	movwf	___fleq@ff2+2
  9688  1D1E  3000               	movlw	0
  9689  1D1F  00F5               	movwf	___fleq@ff2+1
  9690  1D20  3000               	movlw	0
  9691  1D21  00F4               	movwf	___fleq@ff2
  9692  1D22                     l536:
  9693  1D22  0877               	movf	___fleq@ff2+3,w
  9694  1D23  0673               	xorwf	___fleq@ff1+3,w
  9695  1D24  1D03               	skipz
  9696  1D25  2D30               	goto	u4675
  9697  1D26  0876               	movf	___fleq@ff2+2,w
  9698  1D27  0672               	xorwf	___fleq@ff1+2,w
  9699  1D28  1D03               	skipz
  9700  1D29  2D30               	goto	u4675
  9701  1D2A  0875               	movf	___fleq@ff2+1,w
  9702  1D2B  0671               	xorwf	___fleq@ff1+1,w
  9703  1D2C  1D03               	skipz
  9704  1D2D  2D30               	goto	u4675
  9705  1D2E  0874               	movf	___fleq@ff2,w
  9706  1D2F  0670               	xorwf	___fleq@ff1,w
  9707  1D30                     u4675:
  9708  1D30  1903               	skipnz
  9709  1D31  2D33               	goto	u4671
  9710  1D32  2D34               	goto	u4670
  9711  1D33                     u4671:
  9712  1D33  2D36               	goto	l2976
  9713  1D34                     u4670:
  9714  1D34                     l2974:
  9715  1D34  1003               	clrc
  9716  1D35  2D37               	goto	l537
  9717  1D36                     l2976:
  9718  1D36  1403               	setc
  9719  1D37                     l537:
  9720  1D37  0008               	return
  9721  1D38                     __end_of___fleq:
  9722                           
  9723                           	psect	text22
  9724  1ACF                     __ptext22:	
  9725 ;; *************** function _setup *****************
  9726 ;; Defined at:
  9727 ;;		line 129 in file "Master.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;		None
  9730 ;; Auto vars:     Size  Location     Type
  9731 ;;		None
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  1    wreg      void 
  9734 ;; Registers used:
  9735 ;;		wreg, status,2, status,0, pclath, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9741 ;;      Params:         0       0       0       0       0
  9742 ;;      Locals:         0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0
  9744 ;;      Totals:         0       0       0       0       0
  9745 ;;Total ram usage:        0 bytes
  9746 ;; Hardware stack levels used: 1
  9747 ;; Hardware stack levels required when called: 2
  9748 ;; This function calls:
  9749 ;;		_I2C_Master_Init
  9750 ;; This function is called by:
  9751 ;;		_main
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function _setup
  9757  1ACF                     _setup:
  9758  1ACF                     l3114:	
  9759                           ;incstack = 0
  9760                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9761                           
  9762                           
  9763                           ;Master.c: 131:     ANSEL = 0b00;
  9764  1ACF  1683               	bsf	3,5	;RP0=1, select bank3
  9765  1AD0  1703               	bsf	3,6	;RP1=1, select bank3
  9766  1AD1  0188               	clrf	8	;volatile
  9767                           
  9768                           ;Master.c: 132:     ANSELH = 0x00;
  9769  1AD2  0189               	clrf	9	;volatile
  9770  1AD3                     l3116:
  9771                           
  9772                           ;Master.c: 135:     TRISCbits.TRISC0= 0;
  9773  1AD3  1683               	bsf	3,5	;RP0=1, select bank1
  9774  1AD4  1303               	bcf	3,6	;RP1=0, select bank1
  9775  1AD5  1007               	bcf	7,0	;volatile
  9776  1AD6                     l3118:
  9777                           
  9778                           ;Master.c: 136:     TRISCbits.TRISC1= 0;
  9779  1AD6  1087               	bcf	7,1	;volatile
  9780                           
  9781                           ;Master.c: 137:     TRISB = 0x00;
  9782  1AD7  0186               	clrf	6	;volatile
  9783                           
  9784                           ;Master.c: 138:     PORTB = 0x00;
  9785  1AD8  1283               	bcf	3,5	;RP0=0, select bank0
  9786  1AD9  1303               	bcf	3,6	;RP1=0, select bank0
  9787  1ADA  0186               	clrf	6	;volatile
  9788                           
  9789                           ;Master.c: 139:     TRISD = 0x00;
  9790  1ADB  1683               	bsf	3,5	;RP0=1, select bank1
  9791  1ADC  1303               	bcf	3,6	;RP1=0, select bank1
  9792  1ADD  0188               	clrf	8	;volatile
  9793                           
  9794                           ;Master.c: 140:     PORTD = 0x00;
  9795  1ADE  1283               	bcf	3,5	;RP0=0, select bank0
  9796  1ADF  1303               	bcf	3,6	;RP1=0, select bank0
  9797  1AE0  0188               	clrf	8	;volatile
  9798  1AE1                     l3120:
  9799                           
  9800                           ;Master.c: 142:     I2C_Master_Init(100000);
  9801  1AE1  3000               	movlw	0
  9802  1AE2  00A3               	movwf	I2C_Master_Init@c+3
  9803  1AE3  3001               	movlw	1
  9804  1AE4  00A2               	movwf	I2C_Master_Init@c+2
  9805  1AE5  3086               	movlw	134
  9806  1AE6  00A1               	movwf	I2C_Master_Init@c+1
  9807  1AE7  30A0               	movlw	160
  9808  1AE8  00A0               	movwf	I2C_Master_Init@c
  9809  1AE9  160A  158A  23B1  160A  158A  	fcall	_I2C_Master_Init
  9810  1AEE                     l65:
  9811  1AEE  0008               	return
  9812  1AEF                     __end_of_setup:
  9813                           
  9814                           	psect	text23
  9815  1BB1                     __ptext23:	
  9816 ;; *************** function _I2C_Master_Init *****************
  9817 ;; Defined at:
  9818 ;;		line 12 in file "I2C.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  c               4    0[BANK0 ] const unsigned long 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, status,2, status,0, pclath, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9832 ;;      Params:         0       4       0       0       0
  9833 ;;      Locals:         0       0       0       0       0
  9834 ;;      Temps:          0       4       0       0       0
  9835 ;;      Totals:         0       8       0       0       0
  9836 ;;Total ram usage:        8 bytes
  9837 ;; Hardware stack levels used: 1
  9838 ;; Hardware stack levels required when called: 1
  9839 ;; This function calls:
  9840 ;;		___lldiv
  9841 ;; This function is called by:
  9842 ;;		_setup
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           
  9847                           ;psect for function _I2C_Master_Init
  9848  1BB1                     _I2C_Master_Init:
  9849  1BB1                     l2742:	
  9850                           ;incstack = 0
  9851                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9852                           
  9853                           
  9854                           ;I2C.c: 12: void I2C_Master_Init(const unsigned long c);I2C.c: 13: {;I2C.c: 14:     SSPC
      +                          ON = 0b00101000;
  9855  1BB1  3028               	movlw	40
  9856  1BB2  1283               	bcf	3,5	;RP0=0, select bank0
  9857  1BB3  1303               	bcf	3,6	;RP1=0, select bank0
  9858  1BB4  0094               	movwf	20	;volatile
  9859  1BB5                     l2744:
  9860                           
  9861                           ;I2C.c: 15:     SSPCON2 = 0;
  9862  1BB5  1683               	bsf	3,5	;RP0=1, select bank1
  9863  1BB6  1303               	bcf	3,6	;RP1=0, select bank1
  9864  1BB7  0191               	clrf	17	;volatile
  9865  1BB8                     l2746:
  9866                           
  9867                           ;I2C.c: 16:     SSPADD = (8000000/(4*c))-1;
  9868  1BB8  1283               	bcf	3,5	;RP0=0, select bank0
  9869  1BB9  1303               	bcf	3,6	;RP1=0, select bank0
  9870  1BBA  0820               	movf	I2C_Master_Init@c,w
  9871  1BBB  00A4               	movwf	??_I2C_Master_Init
  9872  1BBC  0821               	movf	I2C_Master_Init@c+1,w
  9873  1BBD  00A5               	movwf	??_I2C_Master_Init+1
  9874  1BBE  0822               	movf	I2C_Master_Init@c+2,w
  9875  1BBF  00A6               	movwf	??_I2C_Master_Init+2
  9876  1BC0  0823               	movf	I2C_Master_Init@c+3,w
  9877  1BC1  00A7               	movwf	??_I2C_Master_Init+3
  9878  1BC2  3002               	movlw	2
  9879  1BC3                     u4055:
  9880  1BC3  1003               	clrc
  9881  1BC4  0DA4               	rlf	??_I2C_Master_Init,f
  9882  1BC5  0DA5               	rlf	??_I2C_Master_Init+1,f
  9883  1BC6  0DA6               	rlf	??_I2C_Master_Init+2,f
  9884  1BC7  0DA7               	rlf	??_I2C_Master_Init+3,f
  9885  1BC8                     u4050:
  9886  1BC8  3EFF               	addlw	-1
  9887  1BC9  1D03               	skipz
  9888  1BCA  2BC3               	goto	u4055
  9889  1BCB  0827               	movf	??_I2C_Master_Init+3,w
  9890  1BCC  00F3               	movwf	___lldiv@divisor+3
  9891  1BCD  0826               	movf	??_I2C_Master_Init+2,w
  9892  1BCE  00F2               	movwf	___lldiv@divisor+2
  9893  1BCF  0825               	movf	??_I2C_Master_Init+1,w
  9894  1BD0  00F1               	movwf	___lldiv@divisor+1
  9895  1BD1  0824               	movf	??_I2C_Master_Init,w
  9896  1BD2  00F0               	movwf	___lldiv@divisor
  9897  1BD3  3000               	movlw	0
  9898  1BD4  00F7               	movwf	___lldiv@dividend+3
  9899  1BD5  307A               	movlw	122
  9900  1BD6  00F6               	movwf	___lldiv@dividend+2
  9901  1BD7  3012               	movlw	18
  9902  1BD8  00F5               	movwf	___lldiv@dividend+1
  9903  1BD9  3000               	movlw	0
  9904  1BDA  00F4               	movwf	___lldiv@dividend
  9905  1BDB  120A  118A  2005  160A  158A  	fcall	___lldiv
  9906  1BE0  0870               	movf	?___lldiv,w
  9907  1BE1  3EFF               	addlw	255
  9908  1BE2  1683               	bsf	3,5	;RP0=1, select bank1
  9909  1BE3  1303               	bcf	3,6	;RP1=0, select bank1
  9910  1BE4  0093               	movwf	19	;volatile
  9911  1BE5                     l2748:
  9912                           
  9913                           ;I2C.c: 17:     SSPSTAT = 0;
  9914  1BE5  0194               	clrf	20	;volatile
  9915  1BE6                     l2750:
  9916                           
  9917                           ;I2C.c: 18:     TRISCbits.TRISC3 = 1;
  9918  1BE6  1587               	bsf	7,3	;volatile
  9919  1BE7                     l2752:
  9920                           
  9921                           ;I2C.c: 19:     TRISCbits.TRISC4 = 1;
  9922  1BE7  1607               	bsf	7,4	;volatile
  9923  1BE8                     l94:
  9924  1BE8  0008               	return
  9925  1BE9                     __end_of_I2C_Master_Init:
  9926                           
  9927                           	psect	text24
  9928  0005                     __ptext24:	
  9929 ;; *************** function ___lldiv *****************
  9930 ;; Defined at:
  9931 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  divisor         4    0[COMMON] unsigned long 
  9934 ;;  dividend        4    4[COMMON] unsigned long 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;  quotient        4    9[COMMON] unsigned long 
  9937 ;;  counter         1   13[COMMON] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  4    0[COMMON] unsigned long 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9947 ;;      Params:         8       0       0       0       0
  9948 ;;      Locals:         5       0       0       0       0
  9949 ;;      Temps:          1       0       0       0       0
  9950 ;;      Totals:        14       0       0       0       0
  9951 ;;Total ram usage:       14 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; This function calls:
  9954 ;;		Nothing
  9955 ;; This function is called by:
  9956 ;;		_I2C_Master_Init
  9957 ;;		_sprintf
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           
  9962                           ;psect for function ___lldiv
  9963  0005                     ___lldiv:
  9964  0005                     l2254:	
  9965                           ;incstack = 0
  9966                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9967                           
  9968  0005  3000               	movlw	0
  9969  0006  00FC               	movwf	___lldiv@quotient+3
  9970  0007  3000               	movlw	0
  9971  0008  00FB               	movwf	___lldiv@quotient+2
  9972  0009  3000               	movlw	0
  9973  000A  00FA               	movwf	___lldiv@quotient+1
  9974  000B  3000               	movlw	0
  9975  000C  00F9               	movwf	___lldiv@quotient
  9976  000D  0873               	movf	___lldiv@divisor+3,w
  9977  000E  0472               	iorwf	___lldiv@divisor+2,w
  9978  000F  0471               	iorwf	___lldiv@divisor+1,w
  9979  0010  0470               	iorwf	___lldiv@divisor,w
  9980  0011  1903               	skipnz
  9981  0012  2814               	goto	u2831
  9982  0013  2815               	goto	u2830
  9983  0014                     u2831:
  9984  0014  2862               	goto	l2274
  9985  0015                     u2830:
  9986  0015                     l2256:
  9987  0015  01FD               	clrf	___lldiv@counter
  9988  0016  0AFD               	incf	___lldiv@counter,f
  9989  0017  2825               	goto	l2260
  9990  0018                     l2258:
  9991  0018  3001               	movlw	1
  9992  0019  00F8               	movwf	??___lldiv
  9993  001A                     u2845:
  9994  001A  1003               	clrc
  9995  001B  0DF0               	rlf	___lldiv@divisor,f
  9996  001C  0DF1               	rlf	___lldiv@divisor+1,f
  9997  001D  0DF2               	rlf	___lldiv@divisor+2,f
  9998  001E  0DF3               	rlf	___lldiv@divisor+3,f
  9999  001F  0BF8               	decfsz	??___lldiv,f
 10000  0020  281A               	goto	u2845
 10001  0021  3001               	movlw	1
 10002  0022  00F8               	movwf	??___lldiv
 10003  0023  0878               	movf	??___lldiv,w
 10004  0024  07FD               	addwf	___lldiv@counter,f
 10005  0025                     l2260:
 10006  0025  1FF3               	btfss	___lldiv@divisor+3,7
 10007  0026  2828               	goto	u2851
 10008  0027  2829               	goto	u2850
 10009  0028                     u2851:
 10010  0028  2818               	goto	l2258
 10011  0029                     u2850:
 10012  0029                     l2262:
 10013  0029  3001               	movlw	1
 10014  002A  00F8               	movwf	??___lldiv
 10015  002B                     u2865:
 10016  002B  1003               	clrc
 10017  002C  0DF9               	rlf	___lldiv@quotient,f
 10018  002D  0DFA               	rlf	___lldiv@quotient+1,f
 10019  002E  0DFB               	rlf	___lldiv@quotient+2,f
 10020  002F  0DFC               	rlf	___lldiv@quotient+3,f
 10021  0030  0BF8               	decfsz	??___lldiv,f
 10022  0031  282B               	goto	u2865
 10023  0032                     l2264:
 10024  0032  0873               	movf	___lldiv@divisor+3,w
 10025  0033  0277               	subwf	___lldiv@dividend+3,w
 10026  0034  1D03               	skipz
 10027  0035  2840               	goto	u2875
 10028  0036  0872               	movf	___lldiv@divisor+2,w
 10029  0037  0276               	subwf	___lldiv@dividend+2,w
 10030  0038  1D03               	skipz
 10031  0039  2840               	goto	u2875
 10032  003A  0871               	movf	___lldiv@divisor+1,w
 10033  003B  0275               	subwf	___lldiv@dividend+1,w
 10034  003C  1D03               	skipz
 10035  003D  2840               	goto	u2875
 10036  003E  0870               	movf	___lldiv@divisor,w
 10037  003F  0274               	subwf	___lldiv@dividend,w
 10038  0040                     u2875:
 10039  0040  1C03               	skipc
 10040  0041  2843               	goto	u2871
 10041  0042  2844               	goto	u2870
 10042  0043                     u2871:
 10043  0043  2853               	goto	l2270
 10044  0044                     u2870:
 10045  0044                     l2266:
 10046  0044  0870               	movf	___lldiv@divisor,w
 10047  0045  02F4               	subwf	___lldiv@dividend,f
 10048  0046  0871               	movf	___lldiv@divisor+1,w
 10049  0047  1C03               	skipc
 10050  0048  0F71               	incfsz	___lldiv@divisor+1,w
 10051  0049  02F5               	subwf	___lldiv@dividend+1,f
 10052  004A  0872               	movf	___lldiv@divisor+2,w
 10053  004B  1C03               	skipc
 10054  004C  0F72               	incfsz	___lldiv@divisor+2,w
 10055  004D  02F6               	subwf	___lldiv@dividend+2,f
 10056  004E  0873               	movf	___lldiv@divisor+3,w
 10057  004F  1C03               	skipc
 10058  0050  0F73               	incfsz	___lldiv@divisor+3,w
 10059  0051  02F7               	subwf	___lldiv@dividend+3,f
 10060  0052                     l2268:
 10061  0052  1479               	bsf	___lldiv@quotient,0
 10062  0053                     l2270:
 10063  0053  3001               	movlw	1
 10064  0054                     u2885:
 10065  0054  1003               	clrc
 10066  0055  0CF3               	rrf	___lldiv@divisor+3,f
 10067  0056  0CF2               	rrf	___lldiv@divisor+2,f
 10068  0057  0CF1               	rrf	___lldiv@divisor+1,f
 10069  0058  0CF0               	rrf	___lldiv@divisor,f
 10070  0059  3EFF               	addlw	-1
 10071  005A  1D03               	skipz
 10072  005B  2854               	goto	u2885
 10073  005C                     l2272:
 10074  005C  3001               	movlw	1
 10075  005D  02FD               	subwf	___lldiv@counter,f
 10076  005E  1D03               	btfss	3,2
 10077  005F  2861               	goto	u2891
 10078  0060  2862               	goto	u2890
 10079  0061                     u2891:
 10080  0061  2829               	goto	l2262
 10081  0062                     u2890:
 10082  0062                     l2274:
 10083  0062  087C               	movf	___lldiv@quotient+3,w
 10084  0063  00F3               	movwf	?___lldiv+3
 10085  0064  087B               	movf	___lldiv@quotient+2,w
 10086  0065  00F2               	movwf	?___lldiv+2
 10087  0066  087A               	movf	___lldiv@quotient+1,w
 10088  0067  00F1               	movwf	?___lldiv+1
 10089  0068  0879               	movf	___lldiv@quotient,w
 10090  0069  00F0               	movwf	?___lldiv
 10091  006A                     l385:
 10092  006A  0008               	return
 10093  006B                     __end_of___lldiv:
 10094                           
 10095                           	psect	text25
 10096  1C64                     __ptext25:	
 10097 ;; *************** function _Lcd_Write_String *****************
 10098 ;; Defined at:
 10099 ;;		line 76 in file "LCD.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  a               2    3[COMMON] PTR unsigned char 
 10102 ;;		 -> s(30), STR_1(19), 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  i               2    8[COMMON] int 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      void 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10114 ;;      Params:         2       0       0       0       0
 10115 ;;      Locals:         2       0       0       0       0
 10116 ;;      Temps:          3       0       0       0       0
 10117 ;;      Totals:         7       0       0       0       0
 10118 ;;Total ram usage:        7 bytes
 10119 ;; Hardware stack levels used: 1
 10120 ;; Hardware stack levels required when called: 2
 10121 ;; This function calls:
 10122 ;;		_Lcd_Write_Char
 10123 ;; This function is called by:
 10124 ;;		_main
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           
 10129                           ;psect for function _Lcd_Write_String
 10130  1C64                     _Lcd_Write_String:
 10131  1C64                     l3174:	
 10132                           ;incstack = 0
 10133                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10134                           
 10135                           
 10136                           ;LCD.c: 77:     int i;;LCD.c: 78:     for (i = 0; a[i] != '\0'; i++)
 10137  1C64  01F8               	clrf	Lcd_Write_String@i
 10138  1C65  01F9               	clrf	Lcd_Write_String@i+1
 10139  1C66  2C89               	goto	l3180
 10140  1C67                     l3176:
 10141                           
 10142                           ;LCD.c: 79:         Lcd_Write_Char(a[i]);
 10143  1C67  0878               	movf	Lcd_Write_String@i,w
 10144  1C68  0773               	addwf	Lcd_Write_String@a,w
 10145  1C69  00F6               	movwf	??_Lcd_Write_String+1
 10146  1C6A  0874               	movf	Lcd_Write_String@a+1,w
 10147  1C6B  00F5               	movwf	??_Lcd_Write_String
 10148  1C6C  1803               	skipnc
 10149  1C6D  0AF5               	incf	??_Lcd_Write_String,f
 10150  1C6E  1FF8               	btfss	Lcd_Write_String@i,7
 10151  1C6F  2C71               	goto	u5090
 10152  1C70  03F5               	decf	??_Lcd_Write_String,f
 10153  1C71                     u5090:
 10154  1C71  0875               	movf	??_Lcd_Write_String,w
 10155  1C72  00F7               	movwf	??_Lcd_Write_String+2
 10156  1C73  0877               	movf	??_Lcd_Write_String+2,w
 10157  1C74  1283               	bcf	3,5	;RP0=0, select bank0
 10158  1C75  1303               	bcf	3,6	;RP1=0, select bank0
 10159  1C76  00FF               	movwf	btemp+1
 10160  1C77  0876               	movf	??_Lcd_Write_String+1,w
 10161  1C78  0084               	movwf	4
 10162  1C79  120A  158A  2000  160A  158A  	fcall	stringtab
 10163  1C7E  160A  158A  22B4  160A  158A  	fcall	_Lcd_Write_Char
 10164  1C83                     l3178:
 10165  1C83  3001               	movlw	1
 10166  1C84  07F8               	addwf	Lcd_Write_String@i,f
 10167  1C85  1803               	skipnc
 10168  1C86  0AF9               	incf	Lcd_Write_String@i+1,f
 10169  1C87  3000               	movlw	0
 10170  1C88  07F9               	addwf	Lcd_Write_String@i+1,f
 10171  1C89                     l3180:
 10172  1C89  0878               	movf	Lcd_Write_String@i,w
 10173  1C8A  0773               	addwf	Lcd_Write_String@a,w
 10174  1C8B  00F6               	movwf	??_Lcd_Write_String+1
 10175  1C8C  0874               	movf	Lcd_Write_String@a+1,w
 10176  1C8D  00F5               	movwf	??_Lcd_Write_String
 10177  1C8E  1803               	skipnc
 10178  1C8F  0AF5               	incf	??_Lcd_Write_String,f
 10179  1C90  1FF8               	btfss	Lcd_Write_String@i,7
 10180  1C91  2C93               	goto	u5100
 10181  1C92  03F5               	decf	??_Lcd_Write_String,f
 10182  1C93                     u5100:
 10183  1C93  0875               	movf	??_Lcd_Write_String,w
 10184  1C94  00F7               	movwf	??_Lcd_Write_String+2
 10185  1C95  0877               	movf	??_Lcd_Write_String+2,w
 10186  1C96  1283               	bcf	3,5	;RP0=0, select bank0
 10187  1C97  1303               	bcf	3,6	;RP1=0, select bank0
 10188  1C98  00FF               	movwf	btemp+1
 10189  1C99  0876               	movf	??_Lcd_Write_String+1,w
 10190  1C9A  0084               	movwf	4
 10191  1C9B  120A  158A  2000  160A  158A  	fcall	stringtab
 10192  1CA0  3A00               	xorlw	0
 10193  1CA1  1D03               	skipz
 10194  1CA2  2CA4               	goto	u5111
 10195  1CA3  2CA5               	goto	u5110
 10196  1CA4                     u5111:
 10197  1CA4  2C67               	goto	l3176
 10198  1CA5                     u5110:
 10199  1CA5                     l153:
 10200  1CA5  0008               	return
 10201  1CA6                     __end_of_Lcd_Write_String:
 10202                           
 10203                           	psect	text26
 10204  1AB4                     __ptext26:	
 10205 ;; *************** function _Lcd_Write_Char *****************
 10206 ;; Defined at:
 10207 ;;		line 67 in file "LCD.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  a               1    wreg     unsigned char 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;  a               1    2[COMMON] unsigned char 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, status,2, status,0, pclath, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10221 ;;      Params:         0       0       0       0       0
 10222 ;;      Locals:         1       0       0       0       0
 10223 ;;      Temps:          1       0       0       0       0
 10224 ;;      Totals:         2       0       0       0       0
 10225 ;;Total ram usage:        2 bytes
 10226 ;; Hardware stack levels used: 1
 10227 ;; Hardware stack levels required when called: 1
 10228 ;; This function calls:
 10229 ;;		_Lcd_Port
 10230 ;; This function is called by:
 10231 ;;		_Lcd_Write_String
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           
 10236                           ;psect for function _Lcd_Write_Char
 10237  1AB4                     _Lcd_Write_Char:
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10241                           ;Lcd_Write_Char@a stored from wreg
 10242  1AB4  00F2               	movwf	Lcd_Write_Char@a
 10243  1AB5                     l2768:
 10244                           
 10245                           ;LCD.c: 68:     PORTCbits.RC0 = 1;
 10246  1AB5  1283               	bcf	3,5	;RP0=0, select bank0
 10247  1AB6  1303               	bcf	3,6	;RP1=0, select bank0
 10248  1AB7  1407               	bsf	7,0	;volatile
 10249  1AB8                     l2770:
 10250                           
 10251                           ;LCD.c: 69:     Lcd_Port(a);
 10252  1AB8  0872               	movf	Lcd_Write_Char@a,w
 10253  1AB9  160A  158A  2253  160A  158A  	fcall	_Lcd_Port
 10254  1ABE                     l2772:
 10255                           
 10256                           ;LCD.c: 70:     PORTCbits.RC1 = 1;
 10257  1ABE  1283               	bcf	3,5	;RP0=0, select bank0
 10258  1ABF  1303               	bcf	3,6	;RP1=0, select bank0
 10259  1AC0  1487               	bsf	7,1	;volatile
 10260  1AC1                     l2774:
 10261                           
 10262                           ;LCD.c: 71:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10263  1AC1  301A               	movlw	26
 10264  1AC2  00F1               	movwf	??_Lcd_Write_Char
 10265  1AC3                     u5637:
 10266  1AC3  0BF1               	decfsz	??_Lcd_Write_Char,f
 10267  1AC4  2AC3               	goto	u5637
 10268  1AC5  0000               	nop
 10269  1AC6                     l2776:
 10270                           
 10271                           ;LCD.c: 72:     PORTCbits.RC1 = 0;
 10272  1AC6  1283               	bcf	3,5	;RP0=0, select bank0
 10273  1AC7  1303               	bcf	3,6	;RP1=0, select bank0
 10274  1AC8  1087               	bcf	7,1	;volatile
 10275  1AC9                     l2778:
 10276                           
 10277                           ;LCD.c: 73:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10278  1AC9  301A               	movlw	26
 10279  1ACA  00F1               	movwf	??_Lcd_Write_Char
 10280  1ACB                     u5647:
 10281  1ACB  0BF1               	decfsz	??_Lcd_Write_Char,f
 10282  1ACC  2ACB               	goto	u5647
 10283  1ACD  0000               	nop
 10284  1ACE                     l147:
 10285  1ACE  0008               	return
 10286  1ACF                     __end_of_Lcd_Write_Char:
 10287                           
 10288                           	psect	text27
 10289  1AEF                     __ptext27:	
 10290 ;; *************** function _Lcd_Set_Cursor *****************
 10291 ;; Defined at:
 10292 ;;		line 43 in file "LCD.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;  a               1    wreg     unsigned char 
 10295 ;;  b               1    4[COMMON] unsigned char 
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;  a               1    6[COMMON] unsigned char 
 10298 ;;  temp            1    7[COMMON] unsigned char 
 10299 ;; Return value:  Size  Location     Type
 10300 ;;                  1    wreg      void 
 10301 ;; Registers used:
 10302 ;;		wreg, status,2, status,0, pclath, cstack
 10303 ;; Tracked objects:
 10304 ;;		On entry : 0/0
 10305 ;;		On exit  : 0/0
 10306 ;;		Unchanged: 0/0
 10307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10308 ;;      Params:         1       0       0       0       0
 10309 ;;      Locals:         2       0       0       0       0
 10310 ;;      Temps:          1       0       0       0       0
 10311 ;;      Totals:         4       0       0       0       0
 10312 ;;Total ram usage:        4 bytes
 10313 ;; Hardware stack levels used: 1
 10314 ;; Hardware stack levels required when called: 2
 10315 ;; This function calls:
 10316 ;;		_Lcd_Cmd
 10317 ;; This function is called by:
 10318 ;;		_main
 10319 ;; This function uses a non-reentrant model
 10320 ;;
 10321                           
 10322                           
 10323                           ;psect for function _Lcd_Set_Cursor
 10324  1AEF                     _Lcd_Set_Cursor:
 10325                           
 10326                           ;incstack = 0
 10327                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10328                           ;Lcd_Set_Cursor@a stored from wreg
 10329  1AEF  00F6               	movwf	Lcd_Set_Cursor@a
 10330  1AF0                     l3162:
 10331                           
 10332                           ;LCD.c: 44:     char temp;;LCD.c: 45:     if (a == 1) {
 10333  1AF0  0376               	decf	Lcd_Set_Cursor@a,w
 10334  1AF1  1D03               	btfss	3,2
 10335  1AF2  2AF4               	goto	u5071
 10336  1AF3  2AF5               	goto	u5070
 10337  1AF4                     u5071:
 10338  1AF4  2B01               	goto	l3168
 10339  1AF5                     u5070:
 10340  1AF5                     l3164:
 10341                           
 10342                           ;LCD.c: 46:         temp = 0x80 + b - 1;
 10343  1AF5  0874               	movf	Lcd_Set_Cursor@b,w
 10344  1AF6  3E7F               	addlw	127
 10345  1AF7  00F5               	movwf	??_Lcd_Set_Cursor
 10346  1AF8  0875               	movf	??_Lcd_Set_Cursor,w
 10347  1AF9  00F7               	movwf	Lcd_Set_Cursor@temp
 10348  1AFA                     l3166:
 10349                           
 10350                           ;LCD.c: 47:         Lcd_Cmd(temp);
 10351  1AFA  0877               	movf	Lcd_Set_Cursor@temp,w
 10352  1AFB  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10353                           
 10354                           ;LCD.c: 48:     } else if (a == 2) {
 10355  1B00  2B12               	goto	l141
 10356  1B01                     l3168:
 10357  1B01  3002               	movlw	2
 10358  1B02  0676               	xorwf	Lcd_Set_Cursor@a,w
 10359  1B03  1D03               	btfss	3,2
 10360  1B04  2B06               	goto	u5081
 10361  1B05  2B07               	goto	u5080
 10362  1B06                     u5081:
 10363  1B06  2B12               	goto	l141
 10364  1B07                     u5080:
 10365  1B07                     l3170:
 10366                           
 10367                           ;LCD.c: 49:         temp = 0xC0 + b - 1;
 10368  1B07  0874               	movf	Lcd_Set_Cursor@b,w
 10369  1B08  3EBF               	addlw	191
 10370  1B09  00F5               	movwf	??_Lcd_Set_Cursor
 10371  1B0A  0875               	movf	??_Lcd_Set_Cursor,w
 10372  1B0B  00F7               	movwf	Lcd_Set_Cursor@temp
 10373  1B0C                     l3172:
 10374                           
 10375                           ;LCD.c: 50:         Lcd_Cmd(temp);
 10376  1B0C  0877               	movf	Lcd_Set_Cursor@temp,w
 10377  1B0D  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10378  1B12                     l141:
 10379  1B12  0008               	return
 10380  1B13                     __end_of_Lcd_Set_Cursor:
 10381                           
 10382                           	psect	text28
 10383  1C23                     __ptext28:	
 10384 ;; *************** function _Lcd_Init *****************
 10385 ;; Defined at:
 10386 ;;		line 54 in file "LCD.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;		None
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;		None
 10391 ;; Return value:  Size  Location     Type
 10392 ;;                  1    wreg      void 
 10393 ;; Registers used:
 10394 ;;		wreg, status,2, status,0, pclath, cstack
 10395 ;; Tracked objects:
 10396 ;;		On entry : 0/0
 10397 ;;		On exit  : 0/0
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10400 ;;      Params:         0       0       0       0       0
 10401 ;;      Locals:         0       0       0       0       0
 10402 ;;      Temps:          2       0       0       0       0
 10403 ;;      Totals:         2       0       0       0       0
 10404 ;;Total ram usage:        2 bytes
 10405 ;; Hardware stack levels used: 1
 10406 ;; Hardware stack levels required when called: 2
 10407 ;; This function calls:
 10408 ;;		_Lcd_Cmd
 10409 ;;		_Lcd_Port
 10410 ;; This function is called by:
 10411 ;;		_main
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           
 10416                           ;psect for function _Lcd_Init
 10417  1C23                     _Lcd_Init:
 10418  1C23                     l3122:	
 10419                           ;incstack = 0
 10420                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10421                           
 10422                           
 10423                           ;LCD.c: 55:     Lcd_Port(0x00);
 10424  1C23  3000               	movlw	0
 10425  1C24  160A  158A  2253  160A  158A  	fcall	_Lcd_Port
 10426  1C29                     l3124:
 10427                           
 10428                           ;LCD.c: 56:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10429  1C29  3034               	movlw	52
 10430  1C2A  00F5               	movwf	??_Lcd_Init+1
 10431  1C2B  30F1               	movlw	241
 10432  1C2C  00F4               	movwf	??_Lcd_Init
 10433  1C2D                     u5657:
 10434  1C2D  0BF4               	decfsz	??_Lcd_Init,f
 10435  1C2E  2C2D               	goto	u5657
 10436  1C2F  0BF5               	decfsz	??_Lcd_Init+1,f
 10437  1C30  2C2D               	goto	u5657
 10438  1C31  2C32               	nop2
 10439  1C32                     l3126:
 10440                           
 10441                           ;LCD.c: 57:     Lcd_Cmd(0x3F);
 10442  1C32  303F               	movlw	63
 10443  1C33  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10444                           
 10445                           ;LCD.c: 58:     _delay((unsigned long)((10)*(8000000/4000.0)));
 10446  1C38  301A               	movlw	26
 10447  1C39  00F5               	movwf	??_Lcd_Init+1
 10448  1C3A  30F8               	movlw	248
 10449  1C3B  00F4               	movwf	??_Lcd_Init
 10450  1C3C                     u5667:
 10451  1C3C  0BF4               	decfsz	??_Lcd_Init,f
 10452  1C3D  2C3C               	goto	u5667
 10453  1C3E  0BF5               	decfsz	??_Lcd_Init+1,f
 10454  1C3F  2C3C               	goto	u5667
 10455  1C40  0000               	nop
 10456  1C41                     l3128:
 10457                           
 10458                           ;LCD.c: 59:     Lcd_Cmd(0x3F);
 10459  1C41  303F               	movlw	63
 10460  1C42  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10461  1C47                     l3130:
 10462                           
 10463                           ;LCD.c: 60:     _delay((unsigned long)((200)*(8000000/4000000.0)));
 10464  1C47  3085               	movlw	133
 10465  1C48  00F4               	movwf	??_Lcd_Init
 10466  1C49                     u5677:
 10467  1C49  0BF4               	decfsz	??_Lcd_Init,f
 10468  1C4A  2C49               	goto	u5677
 10469                           
 10470                           ;LCD.c: 61:     Lcd_Cmd(0x3F);
 10471  1C4B  303F               	movlw	63
 10472  1C4C  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10473                           
 10474                           ;LCD.c: 62:     Lcd_Cmd(0x38);
 10475  1C51  3038               	movlw	56
 10476  1C52  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10477                           
 10478                           ;LCD.c: 63:     Lcd_Cmd(0x0C);
 10479  1C57  300C               	movlw	12
 10480  1C58  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10481                           
 10482                           ;LCD.c: 64:     Lcd_Cmd(0x06);
 10483  1C5D  3006               	movlw	6
 10484  1C5E  160A  158A  229A  160A  158A  	fcall	_Lcd_Cmd
 10485  1C63                     l144:
 10486  1C63  0008               	return
 10487  1C64                     __end_of_Lcd_Init:
 10488                           
 10489                           	psect	text29
 10490  08CA                     __ptext29:	
 10491 ;; *************** function _Lcd_Clear *****************
 10492 ;; Defined at:
 10493 ;;		line 38 in file "LCD.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  1    wreg      void 
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0, pclath, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10507 ;;      Params:         0       0       0       0       0
 10508 ;;      Locals:         0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0
 10510 ;;      Totals:         0       0       0       0       0
 10511 ;;Total ram usage:        0 bytes
 10512 ;; Hardware stack levels used: 1
 10513 ;; Hardware stack levels required when called: 2
 10514 ;; This function calls:
 10515 ;;		_Lcd_Cmd
 10516 ;; This function is called by:
 10517 ;;		_main
 10518 ;; This function uses a non-reentrant model
 10519 ;;
 10520                           
 10521                           
 10522                           ;psect for function _Lcd_Clear
 10523  08CA                     _Lcd_Clear:
 10524  08CA                     l3132:	
 10525                           ;incstack = 0
 10526                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10527                           
 10528                           
 10529                           ;LCD.c: 39:     Lcd_Cmd(0);
 10530  08CA  3000               	movlw	0
 10531  08CB  160A  158A  229A  120A  158A  	fcall	_Lcd_Cmd
 10532                           
 10533                           ;LCD.c: 40:     Lcd_Cmd(1);
 10534  08D0  3001               	movlw	1
 10535  08D1  160A  158A  229A  120A  158A  	fcall	_Lcd_Cmd
 10536  08D6                     l135:
 10537  08D6  0008               	return
 10538  08D7                     __end_of_Lcd_Clear:
 10539                           
 10540                           	psect	text30
 10541  1A9A                     __ptext30:	
 10542 ;; *************** function _Lcd_Cmd *****************
 10543 ;; Defined at:
 10544 ;;		line 30 in file "LCD.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  a               1    wreg     unsigned char 
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  a               1    3[COMMON] unsigned char 
 10549 ;; Return value:  Size  Location     Type
 10550 ;;                  1    wreg      void 
 10551 ;; Registers used:
 10552 ;;		wreg, status,2, status,0, pclath, cstack
 10553 ;; Tracked objects:
 10554 ;;		On entry : 0/0
 10555 ;;		On exit  : 0/0
 10556 ;;		Unchanged: 0/0
 10557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10558 ;;      Params:         0       0       0       0       0
 10559 ;;      Locals:         1       0       0       0       0
 10560 ;;      Temps:          2       0       0       0       0
 10561 ;;      Totals:         3       0       0       0       0
 10562 ;;Total ram usage:        3 bytes
 10563 ;; Hardware stack levels used: 1
 10564 ;; Hardware stack levels required when called: 1
 10565 ;; This function calls:
 10566 ;;		_Lcd_Port
 10567 ;; This function is called by:
 10568 ;;		_Lcd_Clear
 10569 ;;		_Lcd_Set_Cursor
 10570 ;;		_Lcd_Init
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function _Lcd_Cmd
 10576  1A9A                     _Lcd_Cmd:
 10577                           
 10578                           ;incstack = 0
 10579                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10580                           ;Lcd_Cmd@a stored from wreg
 10581  1A9A  00F3               	movwf	Lcd_Cmd@a
 10582  1A9B                     l2758:
 10583                           
 10584                           ;LCD.c: 31:     PORTCbits.RC0 = 0;
 10585  1A9B  1283               	bcf	3,5	;RP0=0, select bank0
 10586  1A9C  1303               	bcf	3,6	;RP1=0, select bank0
 10587  1A9D  1007               	bcf	7,0	;volatile
 10588  1A9E                     l2760:
 10589                           
 10590                           ;LCD.c: 32:     Lcd_Port(a);
 10591  1A9E  0873               	movf	Lcd_Cmd@a,w
 10592  1A9F  160A  158A  2253  160A  158A  	fcall	_Lcd_Port
 10593  1AA4                     l2762:
 10594                           
 10595                           ;LCD.c: 33:     PORTCbits.RC1 = 1;
 10596  1AA4  1283               	bcf	3,5	;RP0=0, select bank0
 10597  1AA5  1303               	bcf	3,6	;RP1=0, select bank0
 10598  1AA6  1487               	bsf	7,1	;volatile
 10599  1AA7                     l2764:
 10600                           
 10601                           ;LCD.c: 34:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10602  1AA7  300B               	movlw	11
 10603  1AA8  00F2               	movwf	??_Lcd_Cmd+1
 10604  1AA9  3062               	movlw	98
 10605  1AAA  00F1               	movwf	??_Lcd_Cmd
 10606  1AAB                     u5687:
 10607  1AAB  0BF1               	decfsz	??_Lcd_Cmd,f
 10608  1AAC  2AAB               	goto	u5687
 10609  1AAD  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10610  1AAE  2AAB               	goto	u5687
 10611  1AAF  0000               	nop
 10612  1AB0                     l2766:
 10613                           
 10614                           ;LCD.c: 35:     PORTCbits.RC1 = 0;
 10615  1AB0  1283               	bcf	3,5	;RP0=0, select bank0
 10616  1AB1  1303               	bcf	3,6	;RP1=0, select bank0
 10617  1AB2  1087               	bcf	7,1	;volatile
 10618  1AB3                     l132:
 10619  1AB3  0008               	return
 10620  1AB4                     __end_of_Lcd_Cmd:
 10621                           
 10622                           	psect	text31
 10623  1A53                     __ptext31:	
 10624 ;; *************** function _Lcd_Port *****************
 10625 ;; Defined at:
 10626 ;;		line 26 in file "LCD.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;  a               1    wreg     unsigned char 
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;  a               1    0[COMMON] unsigned char 
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10640 ;;      Params:         0       0       0       0       0
 10641 ;;      Locals:         1       0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0
 10643 ;;      Totals:         1       0       0       0       0
 10644 ;;Total ram usage:        1 bytes
 10645 ;; Hardware stack levels used: 1
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_Lcd_Cmd
 10650 ;;		_Lcd_Init
 10651 ;;		_Lcd_Write_Char
 10652 ;; This function uses a non-reentrant model
 10653 ;;
 10654                           
 10655                           
 10656                           ;psect for function _Lcd_Port
 10657  1A53                     _Lcd_Port:
 10658                           
 10659                           ;incstack = 0
 10660                           ; Regs used in _Lcd_Port: [wreg]
 10661                           ;Lcd_Port@a stored from wreg
 10662  1A53  00F0               	movwf	Lcd_Port@a
 10663  1A54                     l2252:
 10664                           
 10665                           ;LCD.c: 27:     PORTB = a;
 10666  1A54  0870               	movf	Lcd_Port@a,w
 10667  1A55  1283               	bcf	3,5	;RP0=0, select bank0
 10668  1A56  1303               	bcf	3,6	;RP1=0, select bank0
 10669  1A57  0086               	movwf	6	;volatile
 10670  1A58                     l129:
 10671  1A58  0008               	return
 10672  1A59                     __end_of_Lcd_Port:
 10673                           
 10674                           	psect	text32
 10675  1A73                     __ptext32:	
 10676 ;; *************** function _I2C_Master_Write *****************
 10677 ;; Defined at:
 10678 ;;		line 61 in file "I2C.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;  d               2    0[COMMON] unsigned int 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg, status,2, status,0, pclath, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10692 ;;      Params:         2       0       0       0       0
 10693 ;;      Locals:         0       0       0       0       0
 10694 ;;      Temps:          0       0       0       0       0
 10695 ;;      Totals:         2       0       0       0       0
 10696 ;;Total ram usage:        2 bytes
 10697 ;; Hardware stack levels used: 1
 10698 ;; Hardware stack levels required when called: 1
 10699 ;; This function calls:
 10700 ;;		_I2C_Master_Wait
 10701 ;; This function is called by:
 10702 ;;		_main
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           
 10707                           ;psect for function _I2C_Master_Write
 10708  1A73                     _I2C_Master_Write:
 10709  1A73                     l3138:	
 10710                           ;incstack = 0
 10711                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10712                           
 10713                           
 10714                           ;I2C.c: 61: void I2C_Master_Write(unsigned d);I2C.c: 62: {;I2C.c: 63:     I2C_Master_Wai
      +                          t();
 10715  1A73  160A  118A  2000  160A  158A  	fcall	_I2C_Master_Wait
 10716  1A78                     l3140:
 10717                           
 10718                           ;I2C.c: 64:     SSPBUF = d;
 10719  1A78  0870               	movf	I2C_Master_Write@d,w
 10720  1A79  1283               	bcf	3,5	;RP0=0, select bank0
 10721  1A7A  1303               	bcf	3,6	;RP1=0, select bank0
 10722  1A7B  0093               	movwf	19	;volatile
 10723  1A7C                     l112:
 10724  1A7C  0008               	return
 10725  1A7D                     __end_of_I2C_Master_Write:
 10726                           
 10727                           	psect	text33
 10728  1A6A                     __ptext33:	
 10729 ;; *************** function _I2C_Master_Stop *****************
 10730 ;; Defined at:
 10731 ;;		line 51 in file "I2C.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2, status,0, pclath, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10745 ;;      Params:         0       0       0       0       0
 10746 ;;      Locals:         0       0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0
 10748 ;;      Totals:         0       0       0       0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; Hardware stack levels required when called: 1
 10752 ;; This function calls:
 10753 ;;		_I2C_Master_Wait
 10754 ;; This function is called by:
 10755 ;;		_main
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           
 10760                           ;psect for function _I2C_Master_Stop
 10761  1A6A                     _I2C_Master_Stop:
 10762  1A6A                     l3158:	
 10763                           ;incstack = 0
 10764                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10765                           
 10766                           
 10767                           ;I2C.c: 53:     I2C_Master_Wait();
 10768  1A6A  160A  118A  2000  160A  158A  	fcall	_I2C_Master_Wait
 10769  1A6F                     l3160:
 10770                           
 10771                           ;I2C.c: 54:     SSPCON2bits.PEN = 1;
 10772  1A6F  1683               	bsf	3,5	;RP0=1, select bank1
 10773  1A70  1303               	bcf	3,6	;RP1=0, select bank1
 10774  1A71  1511               	bsf	17,2	;volatile
 10775  1A72                     l109:
 10776  1A72  0008               	return
 10777  1A73                     __end_of_I2C_Master_Stop:
 10778                           
 10779                           	psect	text34
 10780  1A61                     __ptext34:	
 10781 ;; *************** function _I2C_Master_Start *****************
 10782 ;; Defined at:
 10783 ;;		line 35 in file "I2C.c"
 10784 ;; Parameters:    Size  Location     Type
 10785 ;;		None
 10786 ;; Auto vars:     Size  Location     Type
 10787 ;;		None
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  1    wreg      void 
 10790 ;; Registers used:
 10791 ;;		wreg, status,2, status,0, pclath, cstack
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10797 ;;      Params:         0       0       0       0       0
 10798 ;;      Locals:         0       0       0       0       0
 10799 ;;      Temps:          0       0       0       0       0
 10800 ;;      Totals:         0       0       0       0       0
 10801 ;;Total ram usage:        0 bytes
 10802 ;; Hardware stack levels used: 1
 10803 ;; Hardware stack levels required when called: 1
 10804 ;; This function calls:
 10805 ;;		_I2C_Master_Wait
 10806 ;; This function is called by:
 10807 ;;		_main
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           
 10812                           ;psect for function _I2C_Master_Start
 10813  1A61                     _I2C_Master_Start:
 10814  1A61                     l3134:	
 10815                           ;incstack = 0
 10816                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10817                           
 10818                           
 10819                           ;I2C.c: 37:     I2C_Master_Wait();
 10820  1A61  160A  118A  2000  160A  158A  	fcall	_I2C_Master_Wait
 10821  1A66                     l3136:
 10822                           
 10823                           ;I2C.c: 38:     SSPCON2bits.SEN = 1;
 10824  1A66  1683               	bsf	3,5	;RP0=1, select bank1
 10825  1A67  1303               	bcf	3,6	;RP1=0, select bank1
 10826  1A68  1411               	bsf	17,0	;volatile
 10827  1A69                     l103:
 10828  1A69  0008               	return
 10829  1A6A                     __end_of_I2C_Master_Start:
 10830                           
 10831                           	psect	text35
 10832  1B83                     __ptext35:	
 10833 ;; *************** function _I2C_Master_Read *****************
 10834 ;; Defined at:
 10835 ;;		line 70 in file "I2C.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;  a               2    0[COMMON] unsigned short 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  temp            2    4[COMMON] unsigned short 
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  2    0[COMMON] unsigned short 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2, status,0, pclath, cstack
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10849 ;;      Params:         2       0       0       0       0
 10850 ;;      Locals:         2       0       0       0       0
 10851 ;;      Temps:          2       0       0       0       0
 10852 ;;      Totals:         6       0       0       0       0
 10853 ;;Total ram usage:        6 bytes
 10854 ;; Hardware stack levels used: 1
 10855 ;; Hardware stack levels required when called: 1
 10856 ;; This function calls:
 10857 ;;		_I2C_Master_Wait
 10858 ;; This function is called by:
 10859 ;;		_main
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           
 10863                           
 10864                           ;psect for function _I2C_Master_Read
 10865  1B83                     _I2C_Master_Read:
 10866  1B83                     l3142:	
 10867                           ;incstack = 0
 10868                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10869                           
 10870                           
 10871                           ;I2C.c: 70: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 71: {;I2C.c: 72:    
      +                           unsigned short temp;;I2C.c: 73:     I2C_Master_Wait();
 10872  1B83  160A  118A  2000  160A  158A  	fcall	_I2C_Master_Wait
 10873  1B88                     l3144:
 10874                           
 10875                           ;I2C.c: 74:     SSPCON2bits.RCEN = 1;
 10876  1B88  1683               	bsf	3,5	;RP0=1, select bank1
 10877  1B89  1303               	bcf	3,6	;RP1=0, select bank1
 10878  1B8A  1591               	bsf	17,3	;volatile
 10879                           
 10880                           ;I2C.c: 75:     I2C_Master_Wait();
 10881  1B8B  160A  118A  2000  160A  158A  	fcall	_I2C_Master_Wait
 10882  1B90                     l3146:
 10883                           
 10884                           ;I2C.c: 76:     temp = SSPBUF;
 10885  1B90  1283               	bcf	3,5	;RP0=0, select bank0
 10886  1B91  1303               	bcf	3,6	;RP1=0, select bank0
 10887  1B92  0813               	movf	19,w	;volatile
 10888  1B93  00F2               	movwf	??_I2C_Master_Read
 10889  1B94  01F3               	clrf	??_I2C_Master_Read+1
 10890  1B95  0872               	movf	??_I2C_Master_Read,w
 10891  1B96  00F4               	movwf	I2C_Master_Read@temp
 10892  1B97  0873               	movf	??_I2C_Master_Read+1,w
 10893  1B98  00F5               	movwf	I2C_Master_Read@temp+1
 10894  1B99                     l3148:
 10895                           
 10896                           ;I2C.c: 77:     I2C_Master_Wait();
 10897  1B99  160A  118A  2000  160A  158A  	fcall	_I2C_Master_Wait
 10898  1B9E                     l3150:
 10899                           
 10900                           ;I2C.c: 78:     if(a == 1){
 10901  1B9E  0370               	decf	I2C_Master_Read@a,w
 10902  1B9F  0471               	iorwf	I2C_Master_Read@a+1,w
 10903  1BA0  1D03               	btfss	3,2
 10904  1BA1  2BA3               	goto	u5061
 10905  1BA2  2BA4               	goto	u5060
 10906  1BA3                     u5061:
 10907  1BA3  2BA8               	goto	l115
 10908  1BA4                     u5060:
 10909  1BA4                     l3152:
 10910                           
 10911                           ;I2C.c: 79:         SSPCON2bits.ACKDT = 0;
 10912  1BA4  1683               	bsf	3,5	;RP0=1, select bank1
 10913  1BA5  1303               	bcf	3,6	;RP1=0, select bank1
 10914  1BA6  1291               	bcf	17,5	;volatile
 10915                           
 10916                           ;I2C.c: 80:     }else{
 10917  1BA7  2BAB               	goto	l116
 10918  1BA8                     l115:
 10919                           
 10920                           ;I2C.c: 81:         SSPCON2bits.ACKDT = 1;
 10921  1BA8  1683               	bsf	3,5	;RP0=1, select bank1
 10922  1BA9  1303               	bcf	3,6	;RP1=0, select bank1
 10923  1BAA  1691               	bsf	17,5	;volatile
 10924  1BAB                     l116:	
 10925                           ;I2C.c: 82:     }
 10926                           
 10927                           
 10928                           ;I2C.c: 83:     SSPCON2bits.ACKEN = 1;
 10929  1BAB  1611               	bsf	17,4	;volatile
 10930  1BAC                     l3154:
 10931                           
 10932                           ;I2C.c: 84:     return temp;
 10933  1BAC  0875               	movf	I2C_Master_Read@temp+1,w
 10934  1BAD  00F1               	movwf	?_I2C_Master_Read+1
 10935  1BAE  0874               	movf	I2C_Master_Read@temp,w
 10936  1BAF  00F0               	movwf	?_I2C_Master_Read
 10937  1BB0                     l117:
 10938  1BB0  0008               	return
 10939  1BB1                     __end_of_I2C_Master_Read:
 10940                           
 10941                           	psect	text36
 10942  1000                     __ptext36:	
 10943 ;; *************** function _I2C_Master_Wait *****************
 10944 ;; Defined at:
 10945 ;;		line 28 in file "I2C.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10959 ;;      Params:         0       0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0
 10962 ;;      Totals:         0       0       0       0       0
 10963 ;;Total ram usage:        0 bytes
 10964 ;; Hardware stack levels used: 1
 10965 ;; This function calls:
 10966 ;;		Nothing
 10967 ;; This function is called by:
 10968 ;;		_I2C_Master_Start
 10969 ;;		_I2C_Master_Stop
 10970 ;;		_I2C_Master_Write
 10971 ;;		_I2C_Master_Read
 10972 ;;		_I2C_Master_RepeatedStart
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _I2C_Master_Wait
 10978  1000                     _I2C_Master_Wait:
 10979  1000                     l2754:	
 10980                           ;incstack = 0
 10981                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10982                           
 10983  1000                     l97:	
 10984                           ;I2C.c: 30:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 10985                           
 10986  1000  1683               	bsf	3,5	;RP0=1, select bank1
 10987  1001  1303               	bcf	3,6	;RP1=0, select bank1
 10988  1002  1914               	btfsc	20,2	;volatile
 10989  1003  2805               	goto	u4061
 10990  1004  2806               	goto	u4060
 10991  1005                     u4061:
 10992  1005  2800               	goto	l97
 10993  1006                     u4060:
 10994  1006                     l2756:
 10995  1006  0811               	movf	17,w	;volatile
 10996  1007  391F               	andlw	31
 10997  1008  1D03               	btfss	3,2
 10998  1009  280B               	goto	u4071
 10999  100A  280C               	goto	u4070
 11000  100B                     u4071:
 11001  100B  2800               	goto	l97
 11002  100C                     u4070:
 11003  100C                     l100:
 11004  100C  0008               	return
 11005  100D                     __end_of_I2C_Master_Wait:
 11006  007E                     btemp	set	126	;btemp
 11007  007E                     wtemp0	set	126
 11008                           
 11009                           	psect	config
 11010                           
 11011                           ;Config register CONFIG1 @ 0x2007
 11012                           ;	Oscillator Selection bits
 11013                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
 11014                           ;	Watchdog Timer Enable bit
 11015                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11016                           ;	Power-up Timer Enable bit
 11017                           ;	PWRTE = OFF, PWRT disabled
 11018                           ;	RE3/MCLR pin function select bit
 11019                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11020                           ;	Code Protection bit
 11021                           ;	CP = OFF, Program memory code protection is disabled
 11022                           ;	Data Code Protection bit
 11023                           ;	CPD = OFF, Data memory code protection is disabled
 11024                           ;	Brown Out Reset Selection bits
 11025                           ;	BOREN = OFF, BOR disabled
 11026                           ;	Internal External Switchover bit
 11027                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11028                           ;	Fail-Safe Clock Monitor Enabled bit
 11029                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11030                           ;	Low Voltage Programming Enable bit
 11031                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
 11032                           ;	In-Circuit Debugger Mode bit
 11033                           ;	DEBUG = 0x1, unprogrammed default
 11034  2007                     	org	8199
 11035  2007  30D6               	dw	12502
 11036                           
 11037                           ;Config register CONFIG2 @ 0x2008
 11038                           ;	Brown-out Reset Selection bit
 11039                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11040                           ;	Flash Program Memory Self Write Enable bits
 11041                           ;	WRT = OFF, Write protection off
 11042  2008                     	org	8200
 11043  2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    144
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     41      55
    BANK3            96      0      30
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> s(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 30
		 -> s(BANK3[30]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_I2C_Master_Read
    ___flsub->___xxtofl
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   42486
                                             37 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___flmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32454
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                    _I2C_Master_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
   ___flmul
   ___xxtofl
     _I2C_Master_Read (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      37       7       68.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      1E       9       31.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B3      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Aug 09 22:26:04 2021

                        _s 0190                          pc 0002                         l65 1AEE  
                       l94 1BE8                         l97 1000               ___awdiv@sign 0021  
                       _op 00D5                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l100 100C                        l103 1A69  
                      l112 1A7C                        l115 1BA8                        l116 1BAB  
                      l132 1AB3                        l117 1BB0                        l109 1A72  
                      l141 1B12                        l135 08D6                        l144 1C63  
                      l129 1A58                        l153 1CA5                        l330 0720  
                      l322 05B9                        l147 1ACE                        l315 0575  
                      l502 093F                        l262 0C9E                        l351 1B5B  
                      l255 1351                        l520 10AB                        l345 07E5  
                      l530 1139                        l523 1109                        l515 1DE4  
                      l540 1E01                        l284 0130                        l701 1771  
                      l605 1D8B                        l349 1B43                        l710 17D1  
                      l535 1D06                        l543 1E6D                        l519 1146  
                      l536 1D22                        l544 1E86                        l552 1088  
                      l385 006A                        l537 1D37                        l722 1B36  
                      l562 1088                        l570 1FC2                        l707 1793  
                      l548 1A87                        l718 17F3                        l830 1F18  
                      l822 1EF0                        l566 1FFF                        l719 17FF  
                      l559 1073                        l567 1F71                        l655 1CE9  
                      l680 1682                        l816 1EAB                        l577 1FF2  
                      l665 1C22                        l682 1659                        l818 1F42  
                      l676 15DB                        l772 0FFF                        l836 1A99  
                      l829 1F0C                        l791 1B70                        l784 0FF3  
                      l697 174D                        l689 17FF                        l793 1B82  
                      l778 0F6B                        _GIE 005F                        _dig 006F  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037                _sprintf$942 00AA  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3000 1A7D                       l3002 1A85  
                     l3010 101A                       l3004 1A87                       l3020 1041  
                     l3100 1F10                       l2300 0904                       l3030 104F  
                     l3022 1043                       l3014 1023                       l3110 1F3A  
                     l3102 1F1A                       l2310 0924                       l2302 0908  
                     l3120 1AE1                       l3040 1078                       l3024 1047  
                     l3032 1061                       l3016 1038                       l3008 100D  
                     l3104 1F30                       l2240 1B5F                       l2400 1C11  
                     l2312 092B                       l2304 090C                       l3200 00C5  
                     l3130 1C47                       l3122 1C23                       l3114 1ACF  
                     l2410 157F                       l3042 107D                       l3018 1039  
                     l3050 1D50                       l3106 1F35                       l2242 1B66  
                     l2402 1C18                       l2306 091D                       l2314 0931  
                     l2330 1D98                       l2322 1D8C                       l3210 00EC  
                     l3202 00C9                       l3140 1A78                       l2252 1A54  
                     l3132 08CA                       l3124 1C29                       l2260 0025  
                     l3116 1AD3                       l2500 166D                       l2420 1594  
                     l2412 1585                       l3052 1D54                       l3060 1D83  
                     l3044 1D38                       l3108 1F39                       l2244 1B6A  
                     l2404 1C1E                       l2316 0936                       l2308 0923  
                     l2340 1DB1                       l2332 1D9C                       l2324 1D8D  
                     l3300 0414                       l3212 00EF                       l3220 012C  
                     l3204 00D9                       l3150 1B9E                       l3142 1B83  
                     l3134 1A61                       l3126 1C32                       l2270 0053  
                     l2262 0029                       l2254 0005                       l3118 1AD6  
                     l2502 1676                       l2430 15AC                       l2422 159C  
                     l2414 1589                       l3038 1068                       l3054 1D66  
                     l3046 1D40                       l3070 1E8A                       l2246 1B79  
                     l2238 1B5D                       l2318 093B                       l2350 1DD0  
                     l2342 1DB5                       l2334 1DA1                       l2326 1D91  
                     l3310 0465                       l3302 0461                       l3230 015A  
                     l3222 012E                       l3214 0104                       l3206 00E7  
                     l3152 1BA4                       l3144 1B88                       l3136 1A66  
                     l3160 1A6F                       l3128 1C41                       l2272 005C  
                     l2264 0032                       l2256 0015                       l2600 17FE  
                     l2520 16BC                       l2512 1694                       l2504 167A  
                     l2440 15BE                       l2432 15B2                       l2424 159D  
                     l2416 158A                       l2408 1578                       l3064 1B13  
                     l3056 1D74                       l3048 1D43                       l3072 1E8F  
                     l2248 1B7E                       l2360 1CA6                       l2280 08DA  
                     l2344 1DB9                       l2336 1DA7                       l2352 1DD6  
                     l2328 1D96                       l3400 0752                       l3320 04C7  
                     l3304 0463                       l3240 018D                       l3232 015E  
                     l3216 0117                       l3208 00E8                       l3154 1BAC  
                     l3146 1B90                       l3138 1A73                       l3170 1B07  
                     l3162 1AF0                       l2266 0044                       l2258 0018  
                     l2274 0062                       l2522 16BE                       l2514 16AB  
                     l2506 1686                       l2530 16D1                       l2442 15C3  
                     l2450 15D3                       l2434 15B3                       l2418 158F  
                     l2426 159F                       l3066 1B17                       l3058 1D7D  
                     l3090 1ED9                       l3082 1EBC                       l3074 1E93  
                     l2610 0CB1                       l2602 0C9F                       l2370 1CBC  
                     l2362 1CA8                       l2290 08EE                       l2282 08DE  
                     l2354 1DDB                       l2346 1DC3                       l2338 1DAA  
                     l3410 077F                       l3402 075E                       l3322 04D3  
                     l3330 04E8                       l3314 049C                       l3250 01D2  
                     l3242 01A6                       l3234 0162                       l3226 0132  
                     l3218 011B                       l3148 1B99                       l3172 1B0C  
                     l3164 1AF5                       l3180 1C89                       l2268 0052  
                     l2532 16E7                       l2540 173F                       l2524 16C2  
                     l2516 16AF                       l2508 168B                       l2460 15F1  
                     l2452 15E1                       l2444 15C8                       l2436 15B9  
                     l2428 15A7                       l3092 1EE7                       l3084 1EC1  
                     l3076 1EA3                       l2700 0F4F                       l2620 0CCD  
                     l2612 0CB6                       l2604 0CA6                       l2380 1CDF  
                     l2372 1CC0                       l2364 1CAE                       l2292 08F2  
                     l2284 08E3                       l2356 1DE0                       l2348 1DC9  
                     l3420 07A4                       l3412 0783                       l3404 0764  
                     l3340 054A                       l3332 04F5                       l3324 04DA  
                     l3316 04A6                       l3260 0208                       l3252 01D8  
                     l3244 01AA                       l3236 0170                       l3228 014E  
                     l3158 1A6A                       l3166 1AFA                       l3174 1C64  
                     l2550 176C                       l2542 1755                       l2534 1725  
                     l2526 16C3                       l2518 16B3                       l2470 1605  
                     l2462 15F5                       l2454 15E5                       l2446 15D0  
                     l2438 15BD                       l3094 1EF7                       l3086 1ECE  
                     l3078 1EB3                       l2710 0F70                       l2702 0F50  
                     l2630 0CE2                       l2622 0CD2                       l2614 0CBB  
                     l2606 0CAC                       l2374 1CD1                       l2366 1CB1  
                     l2382 1CE5                       l2390 1BF2                       l2294 08F4  
                     l2286 08E5                       l2278 08D7                       l3422 07AB  
                     l3414 078E                       l3406 0768                       l3350 0590  
                     l3342 0569                       l3334 0503                       l3326 04E3  
                     l3318 04C1                       l3270 02AF                       l3262 0227  
                     l3254 01EB                       l3246 01AE                       l3238 0174  
                     l3190 0085                       l3182 006E                       l3168 1B01  
                     l3176 1C67                       l2560 177F                       l2552 1770  
                     l2544 175A                       l2536 172B                       l2528 16CC  
                     l2480 1619                       l2472 1609                       l2464 15F9  
                     l2456 15E9                       l2448 15D1                       l3096 1F02  
                     l3088 1ED5                       l2712 0F75                       l2720 0FA6  
                     l2704 0F54                       l2640 0CFE                       l2632 0CE7  
                     l2624 0CD8                       l2616 0CC3                       l2608 0CB0  
                     l2376 1CD7                       l2368 1CB8                       l2392 1BF9  
                     l2296 08FA                       l2288 08E9                       l2800 0947  
                     l3424 07AF                       l3416 079A                       l3408 0776  
                     l3360 05C7                       l3352 059D                       l3344 057D  
                     l3336 050A                       l3280 0337                       l3264 0272  
                     l3256 01FE                       l3248 01C7                       l3272 02B7  
                     l3192 0089                       l3184 0073                       l3432 07CF  
                     l3178 1C83                       l2570 1790                       l2554 1775  
                     l2562 1781                       l2538 1730                       l2490 163D  
                     l2482 161D                       l2474 160D                       l2466 15FD  
                     l2458 15ED                       l3098 1F06                       l2730 0FD9  
                     l2722 0FB3                       l2714 0F83                       l2706 0F68  
                     l2650 0D29                       l2642 0D03                       l2634 0CEF  
                     l2626 0CDC                       l2618 0CC5                       l2378 1CD8  
                     l2394 1BFD                       l2386 1BE9                       l2298 08FD  
                     l2810 0A38                       l2802 0949                       l3426 07BB  
                     l3418 079E                       l3370 0686                       l3362 05CE  
                     l3354 05AC                       l3346 0586                       l3338 050F  
                     l3290 0399                       l3282 035E                       l3274 02C6  
                     l3266 028B                       l3258 0202                       l3434 07E1  
                     l3194 0099                       l3186 0079                       l3450 136C  
                     l2580 17AF                       l2556 1778                       l2548 1763  
                     l2564 1785                       l2492 165D                       l2484 1621  
                     l2476 1611                       l2468 1601                       l2732 0FE7  
                     l2724 0FBE                       l2716 0F87                       l2660 0DC6  
                     l2652 0D46                       l2636 0CF1                       l2628 0CDD  
                     l2396 1C01                       l2388 1BEF                       l2812 0A3F  
                     l2804 0950                       l2820 0AF4                       l3428 07C7  
                     l3380 06FB                       l3372 06A5                       l3364 05D2  
                     l3356 05B3                       l3348 058A                       l3292 03B7  
                     l3284 036D                       l3276 030D                       l3268 0294  
                     l3532 0146                       l3196 009D                       l3188 0080  
                     l3460 13FB                       l3452 1375                       l3444 1352  
                     l2750 1BE6                       l2742 1BB1                       l2590 17E8  
                     l2582 17CD                       l2574 1798                       l2566 1786  
                     l2558 177A                       l2494 1666                       l2478 1615  
                     l2486 1625                       l2902 1089                       l2734 0FEB  
                     l2726 0FCD                       l2718 0FA0                       l2670 0E29  
                     l2662 0DCF                       l2654 0D62                       l2646 0D0C  
                     l2638 0CF9                       l2398 1C0B                       l2830 0BEA  
                     l2822 0AFB                       l3390 071A                       l3382 06FF  
                     l3374 06B1                       l3366 05F0                       l3358 05C2  
                     l3286 0388                       l3278 031C                       l3198 00B2  
                     l3470 1461                       l3462 1400                       l3454 139D  
                     l3446 1361                       l2760 1A9E                       l2752 1BE7  
                     l2744 1BB5                       l2592 17E9                       l2584 17D6  
                     l2576 179D                       l2568 178A                       l2496 1668  
                     l2488 1626                       l2920 10C7                       l2904 1096  
                     l2736 0FEC                       l2728 0FD7                       l2680 0EC9  
                     l2672 0E42                       l2664 0DDF                       l2656 0D8E  
                     l2648 0D1C                       l2840 1A8A                       l2816 0AC7  
                     l3392 072B                       l3384 0705                       l3368 064B  
                     l3376 06EC                       l3296 03D6                       l3288 0391  
                     l3480 14C8                       l3472 1470                       l3464 1409  
                     l3456 13A2                       l3448 1367                       l2754 1000  
                     l2762 1AA4                       l2770 1AB8                       l2746 1BB8  
                     l2594 17ED                       l2586 17DB                       l2578 17AB  
                     l2498 166C                       l2930 10FA                       l2922 10D0  
                     l2914 10AC                       l2850 1F43                       l2738 0FF7  
                     l2690 0F37                       l2682 0EEF                       l2674 0E5F  
                     l2666 0DFC                       l2658 0DAA                       l2842 1A90  
                     l2834 0C72                       l3394 0732                       l3378 06F4  
                     l3298 03DF                       l3386 070C                       l3490 150E  
                     l3482 14DC                       l3474 1478                       l3466 1412  
                     l3458 13EC                       l2756 1006                       l2764 1AA7  
                     l2772 1ABE                       l2748 1BE5                       l2596 17EF  
                     l2588 17E3                       l2940 1115                       l2932 1103  
                     l2924 10D9                       l2916 10B4                       l2908 109F  
                     l2852 1F56                       l2692 0F3B                       l2684 0F17  
                     l2676 0E8C                       l2668 0E0C                       l2780 114A  
                     l2844 1A96                       l2828 0BE3                       l3396 0741  
                     l3388 0712                       l3492 154D                       l3484 14E5  
                     l3476 1481                       l3468 1417                       l2766 1AB0  
                     l2758 1A9B                       l2774 1AC1                       l2598 17FA  
                     l2950 113E                       l2934 110D                       l2942 1127  
                     l2926 10EB                       l2918 10C5                       l2870 1F92  
                     l2862 1F72                       l2694 0F3C                       l2686 0F20  
                     l2678 0E9C                       l2790 1263                       l2782 1150  
                     l2846 1A98                       l2838 1A89                       l3398 074A  
                     l3494 1557                       l3486 14F1                       l3478 14C0  
                     l2776 1AC6                       l2768 1AB5                       l2960 1B4A  
                     l2928 10F9                       l2880 1FBC                       l2872 1F9B  
                     l2864 1F78                       l2856 1F5F                       l2696 0F45  
                     l2688 0F2E                       l3496 156B                       l3488 1505  
                     l2778 1AC9                       l2970 1CFE                       l2962 1B51  
                     l2954 1B37                       l2882 1FC6                       l2890 1FE0  
                     l2874 1FA9                       l2866 1F87                       l2698 0F4B  
                     l2794 130E                       l2972 1D1A                       l2980 1DE5  
                     l2964 1B57                       l2956 1B39                       l2948 112E  
                     l2876 1FB3                       l2868 1F89                       l2788 125D  
                     l2974 1D34                       l2990 1E45                       l2982 1DF9  
                     l2958 1B3D                       l2878 1FB4                       l2798 0943  
                     l2976 1D36                       l2968 1CEA                       l2992 1E49  
                     l2984 1E15                       l2896 1FE7                       l2888 1FCE  
                     l2994 1E83                       l2986 1E1D                       l2898 1FF7  
                     l2996 1E85                       l2988 1E21                       STR_1 08A0  
                     STR_2 08C1                       STR_3 08BA                       STR_4 08B3  
                     u3000 1D91                       u3001 1D90                       u3010 1D9C  
                     u3011 1D9B                       u3020 1DA7                       u3021 1DA6  
                     u3110 1CC0                       u3111 1CBF                       u4000 0F87  
                     u3040 1DB9                       u4001 0F86                       u3105 1CB2  
                     u3041 1DB8                       u4010 0F96                       u3130 1CD1  
                     u3210 1C1E                       u3050 1DC3                       u3131 1CD0  
                     u3211 1C1D                       u3051 1DC2                       u3035 1DAB  
                     u3300 15E5                       u3220 1589                       u4020 0FB3  
                     u3301 15E4                       u3221 1588                       u4021 0FB2  
                     u3125 1CC1                       u3205 1C12                       u3310 163D  
                     u3230 158F                       u4030 0FCD                       u3150 1CE5  
                     u3070 1DD6                       u3311 163C                       u3231 158E  
                     u4031 0FCC                       u4015 0F91                       u3151 1CE4  
                     u3135 1CCD                       u3071 1DD5                       u3055 1DBF  
                     u3320 1648                       u3240 1594                       u5000 1F06  
                     u4040 0FEB                       u3160 1BEF                       u4120 1263  
                     u3080 1DDB                       u3401 169D                       u3321 1646  
                     u3241 1593                       u5001 1F05                       u4041 0FEA  
                     u4025 0FAF                       u3145 1CD9                       u3161 1BEE  
                     u4121 1262                       u4105 11C7                       u3081 1DDA  
                     u3065 1DCA                       u4050 1BC8                       u3410 16AF  
                     u3402 16A4                       u3330 1649                       u3250 15B2  
                     u5010 1F0C                       u3090 1CAE                       u4210 0A3F  
                     u3411 16AE                       u3403 16AB                       u3315 1639  
                     u3251 15B1                       u5011 1F0B                       u4035 0FC9  
                     u3091 1CAD                       u4115 121C                       u4211 0A3E  
                     u4060 1006                       u5100 1C93                       u3500 175A  
                     u3420 16B3                       u3340 165D                       u3260 15BD  
                     u5020 1F10                       u3180 1C01                       u4061 1005  
                     u3501 1759                       u3421 16B2                       u3341 165C  
                     u3261 15BC                       u5021 1F0F                       u3181 1C00  
                     u4205 09F7                       u4070 100C                       u5110 1CA5  
                     u3430 16C2                       u3350 166C                       u3270 15C3  
                     u5030 1F25                       u3190 1C0B                       u4071 100B  
                     u5111 1CA4                       u4055 1BC3                       u3431 16C1  
                     u3351 166B                       u3271 15C2                       u3191 1C0A  
                     u3175 1BF3                       u4135 1280                       u3600 17AF  
                     u3520 1770                       u3280 15C8                       u5040 1F35  
                     u4400 1FC2                       u2800 1B6A                       u4080 1150  
                     u4160 0947                       u5200 01C7                       u5120 0079  
                     u3601 17AE                       u3521 176F                       u3281 15C7  
                     u5041 1F34                       u4401 1FC1                       u2801 1B69  
                     u4145 12CD                       u4081 114F                       u4305 0BFD  
                     u4225 0A52                       u4161 0946                       u5201 01C6  
                     u5121 0078                       u3610 17BE                       u3530 1775  
                     u3450 16E7                       u3370 1682                       u3290 15E1  
                     u5050 1F39                       u4410 1FC6                       u4330 1A90  
                     u4250 0AFB                       u4170 0950                       u5210 0202  
                     u5130 0099                       u3531 1774                       u3515 1765  
                     u3451 16E6                       u3371 1681                       u3291 15E0  
                     u5051 1F38                       u5035 1F20                       u4411 1FC5  
                     u3195 1C07                       u4155 1319                       u4331 1A8F  
                     u4315 0C39                       u4251 0AFA                       u4235 0A8E  
                     u4171 094F                       u5211 0201                       u5131 0098  
                     u5060 1BA4                       u3620 17CD                       u3540 177F  
                     u3380 1686                       u4420 1FCD                       u2820 1B7E  
                     u3700 0CBB                       u4340 1A96                       u2900 08DE  
                     u5220 028B                       u5140 00D9                       u5061 1BA3  
                     u3621 17CC                       u3541 177E                       u3461 16FE  
                     u3453 16E3                       u3445 16C5                       u3381 1685  
                     u3365 166F                       u4421 1FCC                       u2821 1B7D  
                     u3701 0CBA                       u4341 1A95                       u2901 08DD  
                     u4325 0C75                       u4245 0ACA                       u5221 028A  
                     u5141 00D8                       u5070 1AF5                       u2830 0015  
                     u3630 17D6                       u3550 1785                       u3470 1712  
                     u3462 16FF                       u3390 168B                       u4510 10EB  
                     u4350 1F56                       u3710 0CDC                       u2910 08E9  
                     u5310 049B                       u5230 02AF                       u5150 00E7  
                     u5071 1AF4                       u2831 0014                       u3631 17D5  
                     u3615 17B9                       u3551 1784                       u3471 1713  
                     u3463 1704                       u3391 168A                       u4511 10EA  
                     u4351 1F55                       u2815 1B71                       u3711 0CDB  
                     u4095 116D                       u2911 08E8                       u5311 049A  
                     u5231 02AE                       u5151 00E6                       u5080 1B07  
                     u3640 17DB                       u3560 178A                       u3480 1730  
                     u3472 1718                       u3464 1705                       u4600 113E  
                     u4440 1FDF                       u4360 1F70                       u3720 0CE2  
                     u2920 08FA                       u5400 05AC                       u5320 04A6  
                     u5240 02C6                       u5160 012B                       u5081 1B06  
                     u3641 17DA                       u3561 1789                       u3481 172F  
                     u3473 1719                       u3465 170A                       u4601 113D  
                     u4505 10D2                       u4441 1FDE                       u4361 1F6F  
                     u3721 0CE1                       u2921 08F9                       u4265 0B1B  
                     u4185 0970                       u5401 05AB                       u5321 04A5  
                     u5305 0468                       u5241 02C5                       u5161 012A  
                     u5090 1C71                       u2850 0029                       u3650 17E8  
                     u3570 1790                       u3490 1755                       u3466 170B  
                     u4610 1B3D                       u4530 1109                       u4450 1FE6  
                     u3730 0CE7                       u4290 0BEA                       u5410 05C7  
                     u5330 04C1                       u5250 031C                       u5170 015A  
                     u2851 0028                       u3651 17E7                       u3571 178F  
                     u3491 1754                       u4611 1B3C                       u4531 1108  
                     u4515 10E7                       u4451 1FE5                       u4435 1FCF  
                     u3811 0DEE                       u3731 0CE6                       u4291 0BE9  
                     u4275 0B57                       u4195 09AC                       u5411 05C6  
                     u5331 04C0                       u5315 0497                       u5251 031B  
                     u5171 0159                       _PEIE 005E                       u4700 1E21  
                     u3660 17ED                       u3580 1797                       u4540 110D  
                     u4380 1FA9                       u3812 0DF5                       u3740 0CFE  
                     u2940 090C                       u5500 0752                       u5340 04D3  
                     u5260 0337                       u5180 015E                       u2845 001A  
                     u4701 1E20                       u3661 17EC                       u3581 1796  
                     u4541 110C                       u4525 10FC                       u4381 1FA8  
                     u3901 0F09                       u3821 0E1B                       u3813 0DFC  
                     u3805 0DC8                       u3741 0CFD                       u2941 090B  
                     u4285 0BA2                       u5501 0751                       u5405 05A8  
                     u5341 04D2                       u5261 0336                       u5245 02C2  
                     u5181 015D                       u2870 0044                       u3670 17FE  
                     u3590 179D                       u4550 1114                       u4470 1FF7  
                     u3902 0F10                       u3822 0E22                       u3750 0D03  
                     u5510 075E                       u5350 04F5                       u5270 035E  
                     u5190 018D                       u2871 0043                       u4711 1E30  
                     u3671 17FD                       u3591 179C                       u4551 1113  
                     u4471 1FF6                       u4375 1F94                       u3903 0F17  
                     u3823 0E29                       u3751 0D02                       u2935 08FE  
                     u5511 075D                       u5351 04F4                       u5271 035D  
                     u5255 0318                       u5191 018C                       u4720 1E49  
                     u4712 1E31                       u4640 1B57                       u4480 1096  
                     u3680 0CB0                       u2960 091D                       u5520 0768  
                     u5440 06F3                       u5360 0503                       u5280 036D  
                     u2865 002B                       u4721 1E48                       u4713 1E36  
                     u4641 1B56                       u4625 1B44                       u4481 1095  
                     u4465 1FE9                       u4385 1FA5                       u3841 0E51  
                     u3761 0D54                       u3681 0CAF                       u2961 091C  
                     u5521 0767                       u5441 06F2                       u5425 064E  
                     u5361 0502                       u5281 036C                       u2890 0062  
                     u4650 1CFE                       u4714 1E37                       u4810 1060  
                     u4570 1126                       u4490 10AA                       u3930 0F3B  
                     u3842 0E58                       u3762 0D5B                       u3690 0CB6  
                     u5530 0776                       u5450 070B                       u5290 0388  
                     u2891 0061                       u2875 0040                       u4651 1CFD  
                     u4731 1E58                       u4715 1E3C                       u4811 105F  
                     u4635 1B4B                       u4571 1125                       u4491 10A9  
                     u4395 1FB5                       u3931 0F3A                       u3915 0F19  
                     u3851 0E7E                       u3843 0E5F                       u3835 0E2B  
                     u3771 0D70                       u3763 0D62                       u3691 0CB5  
                     u2955 090D                       u5531 0775                       u5451 070A  
                     u5435 06B4                       u5355 04F1                       u5291 0387  
                     u4660 1D1A                       u4740 1E83                       u4732 1E59  
                     u4716 1E3D                       u4820 1067                       u4580 112D  
                     u3852 0E85                       u3772 0D77                       u2980 0931  
                     u5540 078E                       u5460 0712                       u5380 057C  
                     u2885 0054                       u4661 1D19                       u4741 1E82  
                     u4733 1E5E                       u4821 1066                       u4805 1050  
                     u4581 112C                       u4565 1116                       u3925 0F30  
                     u3861 0EAB                       u3853 0E8C                       u3781 0D9C  
                     u3773 0D7E                       u2981 0930                       u2965 0919  
                     u5541 078D                       u5461 0711                       u5381 057B  
                     u5285 0369                       u4670 1D34                       u4734 1E5F  
                     u4750 1A85                       u4910 1D83                       u3950 0F4F  
                     u3870 0ED5                       u3862 0EB2                       u3782 0DA3  
                     u2990 0936                       u5550 07A4                       u5470 071A  
                     u5390 059D                       u4671 1D33                       u4735 1E64  
                     u4751 1A84                       u4911 1D82                       u3951 0F4E  
                     u3863 0EB9                       u3791 0DB8                       u3783 0DAA  
                     u2991 0935                       u2975 0925                       u5551 07A3  
                     u5535 0772                       u5471 0719                       u5391 059C  
                     u5375 0512                       u5607 13F4                       u4736 1E65  
                     u4680 1DF9                       u4840 1078                       u4760 101A  
                     u4920 1E8F                       u3960 0F54                       u3792 0DBF  
                     u5560 07BB                       u5480 072B                       u4745 1E7F  
                     u4681 1DF8                       u4841 1077                       u4761 1019  
                     u4905 1D75                       u4921 1E8E                       u3961 0F53  
                     u3945 0F3E                       u3881 0EE1                       u3793 0DC6  
                     u5561 07BA                       u5545 078A                       u5481 072A  
                     u5617 141F                       u4690 1E15                       u4850 107D  
                     u4770 1031                       u4930 1E93                       u3970 0F68  
                     u3890 0EFD                       u3882 0EE8                       u5570 07C7  
                     u5490 0741                       u4675 1D30                       u4691 1E14  
                     u4851 107C                       u4835 106A                       u4931 1E92  
                     u4595 1130                       u3971 0F67                       u3883 0EEF  
                     u3875 0ED0                       u5571 07C6                       u5491 0740  
                     u5395 0599                       u5627 1469                       u4780 1047  
                     u4860 1D40                       u4940 1EB3                       u3980 0F6F  
                     u5580 07E1                       u5637 1AC3                       u4781 1046  
                     u4861 1D3F                       u4941 1EB2                       u3981 0F6E  
                     u5581 07E0                       u5485 0727                       u4790 104E  
                     u3990 0F75                       u5647 1ACB                       u4791 104D  
                     u4775 102C                       u3991 0F74                       u3895 0EF8  
                     u5495 073D                       u4880 1D54                       u4960 1ED4  
                     u5657 1C2D                       u4881 1D53                       u4961 1ED3  
                     u4890 1D66                       u5667 1C3C                       u4891 1D65  
                     u4875 1D45                       u4955 1EC6                       u4980 1EF6  
                     u5677 1C49                       u4981 1EF5                       u5597 13AA  
                     u5687 1AAB                       u4895 1D62                       u4975 1EE8  
                     u4995 1EFB                       _dig1 00D1                       _dig2 00CD  
                     _dig3 00C9          ?_Lcd_Write_String 0073                       _main 1352  
                     _val1 006E                       _val2 00D6                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 1AB4  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070              ___fltol@sign1 005A            __end_of___fladd 1800  
                    ?_main 0070            __end_of___awdiv 0940            __end_of___flneg 1A88  
          __end_of___awmod 1DE5            __end_of___flmul 1000            __end_of___flsub 1B37  
          __end_of___fltol 1089                      _ANSEL 0188            __end_of___lldiv 006B  
          ___awdiv@divisor 0077            __end_of___llmod 1D8C            __end_of___lwdiv 1CEA  
          __end_of___lwmod 1C23            ___awdiv@counter 0020                      _PORTB 0006  
                    _PORTD 0008    __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
          __end_of_dpowers 08A0                      _scale 0940            __end_of_isdigit 1A9A  
                    _setup 1ACF                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07E6           __end_of_Lcd_Init 1C64  
         __end_of_Lcd_Port 1A59            __initialization 07E6               __end_of_main 1578  
                   ??_main 00C5         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___llmod@dividend 0074                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001B                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 1F43           __end_of__powers_ 0844  
                   ___flge 1DE5                     ___fleq 1CEA                  ??___fladd 005A  
                   ___wmul 1B37                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 1147  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_sprintf 00A5  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
             ___xxtofl@val 0076                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 08D7  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 0C9F  
            __end_of_setup 1AEF             _Lcd_Set_Cursor 1AEF                 __div_to_l_ 1089  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0042            __div_to_l_@quot 0020  
             sprintf@width 00B5                    ??_setup 007E                 __pbssBANK0 006E  
               __pbssBANK1 00C9                 __pbssBANK3 0190              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1B83                 __pmaintext 1352  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1B13  
                ?___xxtofl 0076                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0800  
           _Lcd_Write_Char 1AB4                    _Lcd_Cmd 1A9A          __end_of__npowers_ 0878  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 1578  
                  ___awdiv 08D7                    ___flneg 1A7D                    ___awmod 1D8C  
                  ___flmul 0C9F                    ___flsub 1B13                    ___fltol 100D  
                  ___lldiv 0005            __size_of___wmul 0025                    ___llmod 1D38  
                  ___lwdiv 1CA6                 _fround$940 0049                 _fround$939 004D  
                  ___lwmod 1BE9            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 006B                    __ptext2 0940                    __ptext3 1D8C  
                  __ptext4 08D7                    __ptext5 1A88                    __ptext6 1147  
                  __ptext7 1BE9                    __ptext8 1CA6                    __ptext9 0C9F  
              ?__div_to_l_ 0070                    _dpowers 0878                    _isdigit 1A88  
               ??___xxtofl 007A           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 006B                    clrloop0 1A5A     __end_of_Lcd_Write_Char 1ACF  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  Lcd_Port@a 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                  _PORTCbits 0007  
              ___fladd@grs 0065              ___xxtofl@sign 0020                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032        __size_of__div_to_l_ 00BE                  _Lcd_Clear 08CA  
           __end_of___flge 1E87             __end_of___fleq 1D38             __end_of___wmul 1B5C  
         _Lcd_Write_String 1C64             __end_of_fround 1352        start_initialization 07E6  
      __end_of__tdiv_to_l_ 2000          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070            ___llmod@divisor 0070            ___llmod@counter 0079  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1B5C            Lcd_Write_Char@a 0072  
                 ??_fround 0042              sprintf@tmpval 00B7                  ___fladd@a 0056  
                ___fladd@b 0052                 fround@prec 0051                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 00B3  
              sprintf@eexp 00BB                sprintf@fval 00BD                sprintf@prec 00C2  
         _I2C_Master_Start 1A61           _I2C_Master_Write 1A73           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0052                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 0844                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 0800  
              __tdiv_to_l_ 1F43               ??__div_to_l_ 0078                   ?_isdigit 0070  
                _scale$941 004C           ___lwdiv@quotient 007B                   ?_sprintf 00A0  
           __size_of_scale 035F             __size_of_setup 0020             ___wmul@product 0074  
                clear_ram0 1A59                   Lcd_Cmd@a 0073         __end_of__div_to_l_ 1147  
              ??_Lcd_Clear 0074                __stringbase 080F          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 1C23                   _Lcd_Port 1A53  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 1CA6           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0810                _isdigit$759 0070                 sprintf@val 00AF  
          _I2C_Master_Init 1BB1            _I2C_Master_Read 1B83                   ___xxtofl 1E87  
          _I2C_Master_Wait 1000            _I2C_Master_Stop 1A6A           __size_of_isdigit 0012  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 1B5C  
                 __ptext11 1F43                   __ptext20 1DE5                   __ptext12 1089  
                 __ptext21 1CEA                   __ptext13 1E87                   __ptext30 1A9A  
                 __ptext22 1ACF                   __ptext14 1B37                   __ptext31 1A53  
                 __ptext23 1BB1                   __ptext15 1D38                   __ptext32 1A73  
                 __ptext24 0005                   __ptext16 100D                   __ptext33 1A6A  
                 __ptext25 1C64                   __ptext17 1B13                   __ptext34 1A61  
                 __ptext26 1AB4                   __ptext18 1578                   __ptext35 1B83  
                 __ptext27 1AEF                   __ptext19 1A7D                   __ptext36 1000  
                 __ptext28 1C23                   __ptext29 08CA                   __powers_ 0810  
         __size_of_sprintf 077B              __size_of_main 0226   __end_of_I2C_Master_Start 1A6A  
 __end_of_I2C_Master_Write 1A7D                   isdigit@c 0071                   scale@scl 0050  
                sprintf@ap 00AE           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00C1           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 080A    __end_of_I2C_Master_Init 1BE9  
  __end_of_I2C_Master_Read 1BB1    __end_of_I2C_Master_Wait 100D    __end_of_I2C_Master_Stop 1A73  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C4                   sprintf@f 00A0           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 080A                   stringtab 0800                _SSPCON2bits 0091  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
