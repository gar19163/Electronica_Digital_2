

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jul 19 00:23:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  001E                     _ADRESH	set	30
   366  0007                     _PORTC	set	7
   367  0006                     _PORTB	set	6
   368  0008                     _PORTD	set	8
   369  001F                     _ADCON0bits	set	31
   370  000B                     _INTCONbits	set	11
   371  0005                     _PORTA	set	5
   372  0006                     _PORTBbits	set	6
   373  0058                     _RBIF	set	88
   374  009F                     _ADCON1bits	set	159
   375  008F                     _OSCCONbits	set	143
   376  0088                     _TRISD	set	136
   377  0087                     _TRISC	set	135
   378  0085                     _TRISA	set	133
   379  0089                     _TRISE	set	137
   380  0086                     _TRISBbits	set	134
   381  0089                     _TRISEbits	set	137
   382  0189                     _ANSELH	set	393
   383  0188                     _ANSEL	set	392
   384                           
   385                           	psect	cinit
   386  000F                     start_initialization:	
   387                           ; #config settings
   388                           
   389  000F                     __initialization:
   390                           
   391                           ; Clear objects allocated to COMMON
   392  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   393  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   394  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397  0012  1283               	bcf	3,5	;RP0=0, select bank0
   398  0013  1303               	bcf	3,6	;RP1=0, select bank0
   399  0014  01A7               	clrf	__pbssBANK0& (0+127)
   400  0015  01A8               	clrf	(__pbssBANK0+1)& (0+127)
   401  0016                     end_of_initialization:	
   402                           ;End of C runtime variable initialization code
   403                           
   404  0016                     __end_of__initialization:
   405  0016  0183               	clrf	3
   406  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   407                           
   408                           	psect	bssCOMMON
   409  0078                     __pbssCOMMON:
   410  0078                     _seg1:
   411  0078                     	ds	1
   412  0079                     _val:
   413  0079                     	ds	1
   414  007A                     _dig:
   415  007A                     	ds	1
   416                           
   417                           	psect	bssBANK0
   418  0027                     __pbssBANK0:
   419  0027                     _seg2:
   420  0027                     	ds	1
   421  0028                     _segm:
   422  0028                     	ds	1
   423                           
   424                           	psect	cstackCOMMON
   425  0070                     __pcstackCOMMON:
   426  0070                     ?_setup:
   427  0070                     ?_ADC:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_isr:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ??_isr:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_main:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	3
   442  0073                     ??_setup:
   443  0073                     ??_ADC:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ?___bmul:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     ?___awdiv:	
   450                           ; 1 bytes @ 0x3
   451                           
   452  0073                     ___bmul@multiplicand:	
   453                           ; 2 bytes @ 0x3
   454                           
   455  0073                     ___awdiv@divisor:	
   456                           ; 1 bytes @ 0x3
   457                           
   458                           
   459                           ; 2 bytes @ 0x3
   460  0073                     	ds	1
   461  0074                     ??___bmul:
   462  0074                     ADC@dig:	
   463                           ; 1 bytes @ 0x4
   464                           
   465                           
   466                           ; 1 bytes @ 0x4
   467  0074                     	ds	1
   468  0075                     ___bmul@product:
   469  0075                     ___awdiv@dividend:	
   470                           ; 1 bytes @ 0x5
   471                           
   472                           
   473                           ; 2 bytes @ 0x5
   474  0075                     	ds	1
   475  0076                     ___bmul@multiplier:
   476                           
   477                           ; 1 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ??___awdiv:
   480                           
   481                           ; 1 bytes @ 0x7
   482  0077                     	ds	1
   483                           
   484                           	psect	cstackBANK0
   485  0020                     __pcstackBANK0:
   486  0020                     ___awdiv@counter:
   487                           
   488                           ; 1 bytes @ 0x0
   489  0020                     	ds	1
   490  0021                     ___awdiv@sign:
   491                           
   492                           ; 1 bytes @ 0x1
   493  0021                     	ds	1
   494  0022                     ___awdiv@quotient:
   495                           
   496                           ; 2 bytes @ 0x2
   497  0022                     	ds	2
   498  0024                     ??_main:
   499                           
   500                           ; 1 bytes @ 0x4
   501  0024                     	ds	3
   502                           
   503                           	psect	maintext
   504  001A                     __pmaintext:	
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 111 in file "Lab01.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       3       0       0       0
   527 ;;      Totals:         0       3       0       0       0
   528 ;;Total ram usage:        3 bytes
   529 ;; Hardware stack levels required when called: 2
   530 ;; This function calls:
   531 ;;		_ADC
   532 ;;		___awdiv
   533 ;;		___bmul
   534 ;;		_setup
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _main
   542  001A                     _main:
   543  001A                     l1021:	
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   546                           
   547                           
   548                           ;Lab01.c: 113:     setup();
   549  001A  120A  118A  2103  120A  118A  	fcall	_setup
   550  001F                     l1023:
   551                           
   552                           ;Lab01.c: 114:     ADCON0bits.GO = 1;
   553  001F  1283               	bcf	3,5	;RP0=0, select bank0
   554  0020  1303               	bcf	3,6	;RP1=0, select bank0
   555  0021  149F               	bsf	31,1	;volatile
   556  0022                     l1025:
   557                           
   558                           ;Lab01.c: 117:         if(ADCON0bits.GO == 0){
   559  0022  1283               	bcf	3,5	;RP0=0, select bank0
   560  0023  189F               	btfsc	31,1	;volatile
   561  0024  2826               	goto	u381
   562  0025  2827               	goto	u380
   563  0026                     u381:
   564  0026  2851               	goto	l1035
   565  0027                     u380:
   566  0027                     l1027:
   567                           
   568                           ;Lab01.c: 118:             if(ADCON0bits.CHS == 5)
   569  0027  0C1F               	rrf	31,w	;volatile
   570  0028  00A4               	movwf	??_main
   571  0029  0C24               	rrf	??_main,w
   572  002A  390F               	andlw	15
   573  002B  3A05               	xorlw	5
   574  002C  1D03               	skipz
   575  002D  282F               	goto	u391
   576  002E  2830               	goto	u390
   577  002F                     u391:
   578  002F  283B               	goto	l67
   579  0030                     u390:
   580  0030                     l1029:
   581                           
   582                           ;Lab01.c: 119:                 val = ADC(dig);
   583  0030  3000               	movlw	0
   584  0031  120A  118A  216A  120A  118A  	fcall	_ADC
   585  0036  1283               	bcf	3,5	;RP0=0, select bank0
   586  0037  1303               	bcf	3,6	;RP1=0, select bank0
   587  0038  00A4               	movwf	??_main
   588  0039  0824               	movf	??_main,w
   589  003A  00F9               	movwf	_val
   590  003B                     l67:
   591                           
   592                           ;Lab01.c: 120:                 PORTD = ADC(dig);
   593  003B  3000               	movlw	0
   594  003C  120A  118A  216A  120A  118A  	fcall	_ADC
   595  0041  1283               	bcf	3,5	;RP0=0, select bank0
   596  0042  1303               	bcf	3,6	;RP1=0, select bank0
   597  0043  0088               	movwf	8	;volatile
   598  0044                     l1031:
   599                           
   600                           ;Lab01.c: 121:             _delay((unsigned long)((50)*(8000000/4000.0)));
   601  0044  3082               	movlw	130
   602  0045  1283               	bcf	3,5	;RP0=0, select bank0
   603  0046  1303               	bcf	3,6	;RP1=0, select bank0
   604  0047  00A5               	movwf	??_main+1
   605  0048  30DD               	movlw	221
   606  0049  00A4               	movwf	??_main
   607  004A                     u437:
   608  004A  0BA4               	decfsz	??_main,f
   609  004B  284A               	goto	u437
   610  004C  0BA5               	decfsz	??_main+1,f
   611  004D  284A               	goto	u437
   612  004E                     l1033:
   613                           
   614                           ;Lab01.c: 122:             ADCON0bits.GO = 1;
   615  004E  1283               	bcf	3,5	;RP0=0, select bank0
   616  004F  1303               	bcf	3,6	;RP1=0, select bank0
   617  0050  149F               	bsf	31,1	;volatile
   618  0051                     l1035:
   619                           
   620                           ;Lab01.c: 125:         if (val>=16){
   621  0051  3010               	movlw	16
   622  0052  0279               	subwf	_val,w
   623  0053  1C03               	skipc
   624  0054  2856               	goto	u401
   625  0055  2857               	goto	u400
   626  0056                     u401:
   627  0056  287E               	goto	l1039
   628  0057                     u400:
   629  0057                     l1037:
   630                           
   631                           ;Lab01.c: 126:             seg2 = val/16;
   632  0057  3010               	movlw	16
   633  0058  00F3               	movwf	___awdiv@divisor
   634  0059  3000               	movlw	0
   635  005A  00F4               	movwf	___awdiv@divisor+1
   636  005B  0879               	movf	_val,w
   637  005C  00A4               	movwf	??_main
   638  005D  01A5               	clrf	??_main+1
   639  005E  0824               	movf	??_main,w
   640  005F  00F5               	movwf	___awdiv@dividend
   641  0060  0825               	movf	??_main+1,w
   642  0061  00F6               	movwf	___awdiv@dividend+1
   643  0062  120A  118A  209A  120A  118A  	fcall	___awdiv
   644  0067  0873               	movf	?___awdiv,w
   645  0068  1283               	bcf	3,5	;RP0=0, select bank0
   646  0069  1303               	bcf	3,6	;RP1=0, select bank0
   647  006A  00A6               	movwf	??_main+2
   648  006B  0826               	movf	??_main+2,w
   649  006C  00A7               	movwf	_seg2
   650                           
   651                           ;Lab01.c: 127:             seg1 = val-(seg1*16);
   652  006D  30F0               	movlw	240
   653  006E  00A4               	movwf	??_main
   654  006F  0824               	movf	??_main,w
   655  0070  00F3               	movwf	___bmul@multiplicand
   656  0071  0878               	movf	_seg1,w
   657  0072  120A  118A  2155  120A  118A  	fcall	___bmul
   658  0077  0779               	addwf	_val,w
   659  0078  1283               	bcf	3,5	;RP0=0, select bank0
   660  0079  1303               	bcf	3,6	;RP1=0, select bank0
   661  007A  00A5               	movwf	??_main+1
   662  007B  0825               	movf	??_main+1,w
   663  007C  00F8               	movwf	_seg1
   664                           
   665                           ;Lab01.c: 128:         }
   666  007D  2889               	goto	l1045
   667  007E                     l1039:
   668  007E  3010               	movlw	16
   669  007F  0279               	subwf	_val,w
   670  0080  1803               	skipnc
   671  0081  2883               	goto	u411
   672  0082  2884               	goto	u410
   673  0083                     u411:
   674  0083  2889               	goto	l1045
   675  0084                     u410:
   676  0084                     l1041:
   677                           
   678                           ;Lab01.c: 130:             seg1 = val;
   679  0084  0879               	movf	_val,w
   680  0085  00A4               	movwf	??_main
   681  0086  0824               	movf	??_main,w
   682  0087  00F8               	movwf	_seg1
   683  0088                     l1043:
   684                           
   685                           ;Lab01.c: 131:             seg2 = 0;
   686  0088  01A7               	clrf	_seg2
   687  0089                     l1045:
   688                           
   689                           ;Lab01.c: 134:         if (val==PORTA)
   690  0089  0879               	movf	_val,w
   691  008A  0605               	xorwf	5,w	;volatile
   692  008B  1D03               	skipz
   693  008C  288E               	goto	u421
   694  008D  288F               	goto	u420
   695  008E                     u421:
   696  008E  2893               	goto	l71
   697  008F                     u420:
   698  008F                     l1047:
   699                           
   700                           ;Lab01.c: 135:             TRISEbits.TRISE3 = 1;
   701  008F  1683               	bsf	3,5	;RP0=1, select bank1
   702  0090  1303               	bcf	3,6	;RP1=0, select bank1
   703  0091  1589               	bsf	9,3	;volatile
   704  0092  2822               	goto	l1025
   705  0093                     l71:	
   706                           ;Lab01.c: 136:         else
   707                           
   708                           
   709                           ;Lab01.c: 137:             TRISEbits.TRISE3 = 0;
   710  0093  1683               	bsf	3,5	;RP0=1, select bank1
   711  0094  1303               	bcf	3,6	;RP1=0, select bank1
   712  0095  1189               	bcf	9,3	;volatile
   713  0096  2822               	goto	l1025
   714  0097  120A  118A  280C   	ljmp	start
   715  009A                     __end_of_main:
   716                           
   717                           	psect	text1
   718  0103                     __ptext1:	
   719 ;; *************** function _setup *****************
   720 ;; Defined at:
   721 ;;		line 143 in file "Lab01.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0
   737 ;;      Temps:          1       0       0       0       0
   738 ;;      Totals:         1       0       0       0       0
   739 ;;Total ram usage:        1 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _setup
   751  0103                     _setup:
   752  0103                     l887:	
   753                           ;incstack = 0
   754                           ; Regs used in _setup: [wreg+status,2+status,0]
   755                           
   756                           
   757                           ;Lab01.c: 146:     ANSEL = 0b00100000;
   758  0103  3020               	movlw	32
   759  0104  1683               	bsf	3,5	;RP0=1, select bank3
   760  0105  1703               	bsf	3,6	;RP1=1, select bank3
   761  0106  0088               	movwf	8	;volatile
   762  0107                     l889:
   763                           
   764                           ;Lab01.c: 147:     ANSELH = 0x00;
   765  0107  0189               	clrf	9	;volatile
   766  0108                     l891:
   767                           
   768                           ;Lab01.c: 150:     TRISBbits.TRISB0=1;
   769  0108  1683               	bsf	3,5	;RP0=1, select bank1
   770  0109  1303               	bcf	3,6	;RP1=0, select bank1
   771  010A  1406               	bsf	6,0	;volatile
   772  010B                     l893:
   773                           
   774                           ;Lab01.c: 151:     TRISBbits.TRISB1=1;
   775  010B  1486               	bsf	6,1	;volatile
   776  010C                     l895:
   777                           
   778                           ;Lab01.c: 152:     TRISE = 0x01;
   779  010C  3001               	movlw	1
   780  010D  0089               	movwf	9	;volatile
   781                           
   782                           ;Lab01.c: 154:     TRISA = 0x00;
   783  010E  0185               	clrf	5	;volatile
   784                           
   785                           ;Lab01.c: 155:     TRISC = 0x00;
   786  010F  0187               	clrf	7	;volatile
   787                           
   788                           ;Lab01.c: 156:     TRISD = 0x00;
   789  0110  0188               	clrf	8	;volatile
   790                           
   791                           ;Lab01.c: 159:     PORTA = 0x00;
   792  0111  1283               	bcf	3,5	;RP0=0, select bank0
   793  0112  1303               	bcf	3,6	;RP1=0, select bank0
   794  0113  0185               	clrf	5	;volatile
   795                           
   796                           ;Lab01.c: 160:     PORTB = 0x00;
   797  0114  0186               	clrf	6	;volatile
   798                           
   799                           ;Lab01.c: 161:     PORTC = 0x00;
   800  0115  0187               	clrf	7	;volatile
   801                           
   802                           ;Lab01.c: 162:     PORTD = 0x00;
   803  0116  0188               	clrf	8	;volatile
   804  0117                     l897:
   805                           
   806                           ;Lab01.c: 165:     OSCCONbits.IRCF2 = 1;
   807  0117  1683               	bsf	3,5	;RP0=1, select bank1
   808  0118  1303               	bcf	3,6	;RP1=0, select bank1
   809  0119  170F               	bsf	15,6	;volatile
   810  011A                     l899:
   811                           
   812                           ;Lab01.c: 166:     OSCCONbits.IRCF1 = 1;
   813  011A  168F               	bsf	15,5	;volatile
   814  011B                     l901:
   815                           
   816                           ;Lab01.c: 167:     OSCCONbits.IRCF0 = 0;
   817  011B  120F               	bcf	15,4	;volatile
   818  011C                     l903:
   819                           
   820                           ;Lab01.c: 168:     OSCCONbits.SCS = 1;
   821  011C  140F               	bsf	15,0	;volatile
   822  011D                     l905:
   823                           
   824                           ;Lab01.c: 171:     ADCON1bits.ADFM = 0;
   825  011D  139F               	bcf	31,7	;volatile
   826  011E                     l907:
   827                           
   828                           ;Lab01.c: 172:     ADCON1bits.VCFG0 = 0;
   829  011E  121F               	bcf	31,4	;volatile
   830  011F                     l909:
   831                           
   832                           ;Lab01.c: 173:     ADCON1bits.VCFG1 = 0;
   833  011F  129F               	bcf	31,5	;volatile
   834  0120                     l911:
   835                           
   836                           ;Lab01.c: 174:     ADCON0bits.ADCS = 1;
   837  0120  1283               	bcf	3,5	;RP0=0, select bank0
   838  0121  1303               	bcf	3,6	;RP1=0, select bank0
   839  0122  081F               	movf	31,w	;volatile
   840  0123  393F               	andlw	-193
   841  0124  3840               	iorlw	64
   842  0125  009F               	movwf	31	;volatile
   843  0126                     l913:
   844                           
   845                           ;Lab01.c: 175:     ADCON0bits.CHS = 5;
   846  0126  081F               	movf	31,w	;volatile
   847  0127  39C3               	andlw	-61
   848  0128  3814               	iorlw	20
   849  0129  009F               	movwf	31	;volatile
   850  012A                     l915:
   851                           
   852                           ;Lab01.c: 176:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   853  012A  3042               	movlw	66
   854  012B  00F3               	movwf	??_setup
   855  012C                     u447:
   856  012C  0BF3               	decfsz	??_setup,f
   857  012D  292C               	goto	u447
   858  012E  0000               	nop
   859  012F                     l917:
   860                           
   861                           ;Lab01.c: 177:     ADCON0bits.ADON = 1;
   862  012F  1283               	bcf	3,5	;RP0=0, select bank0
   863  0130  1303               	bcf	3,6	;RP1=0, select bank0
   864  0131  141F               	bsf	31,0	;volatile
   865  0132                     l919:
   866                           
   867                           ;Lab01.c: 188:     INTCONbits.GIE = 1;
   868  0132  178B               	bsf	11,7	;volatile
   869  0133                     l921:
   870                           
   871                           ;Lab01.c: 189:     INTCONbits.PEIE = 1;
   872  0133  170B               	bsf	11,6	;volatile
   873  0134                     l923:
   874                           
   875                           ;Lab01.c: 190:     INTCONbits.RBIE = 1;
   876  0134  158B               	bsf	11,3	;volatile
   877  0135                     l925:
   878                           
   879                           ;Lab01.c: 191:     INTCONbits.RBIF = 0;
   880  0135  100B               	bcf	11,0	;volatile
   881  0136                     l927:
   882                           
   883                           ;Lab01.c: 192:     INTCONbits.T0IE = 1;
   884  0136  168B               	bsf	11,5	;volatile
   885  0137                     l929:
   886                           
   887                           ;Lab01.c: 193:     INTCONbits.T0IF = 0;
   888  0137  110B               	bcf	11,2	;volatile
   889  0138                     l78:
   890  0138  0008               	return
   891  0139                     __end_of_setup:
   892                           
   893                           	psect	text2
   894  0155                     __ptext2:	
   895 ;; *************** function ___bmul *****************
   896 ;; Defined at:
   897 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  multiplier      1    wreg     unsigned char 
   900 ;;  multiplicand    1    3[COMMON] unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  multiplier      1    6[COMMON] unsigned char 
   903 ;;  product         1    5[COMMON] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      unsigned char 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   913 ;;      Params:         1       0       0       0       0
   914 ;;      Locals:         2       0       0       0       0
   915 ;;      Temps:          1       0       0       0       0
   916 ;;      Totals:         4       0       0       0       0
   917 ;;Total ram usage:        4 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function ___bmul
   929  0155                     ___bmul:
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   933                           ;___bmul@multiplier stored from wreg
   934  0155  00F6               	movwf	___bmul@multiplier
   935  0156                     l935:
   936  0156  01F5               	clrf	___bmul@product
   937  0157                     l937:
   938  0157  1C76               	btfss	___bmul@multiplier,0
   939  0158  295A               	goto	u211
   940  0159  295B               	goto	u210
   941  015A                     u211:
   942  015A  295F               	goto	l941
   943  015B                     u210:
   944  015B                     l939:
   945  015B  0873               	movf	___bmul@multiplicand,w
   946  015C  00F4               	movwf	??___bmul
   947  015D  0874               	movf	??___bmul,w
   948  015E  07F5               	addwf	___bmul@product,f
   949  015F                     l941:
   950  015F  1003               	clrc
   951  0160  0DF3               	rlf	___bmul@multiplicand,f
   952  0161                     l943:
   953  0161  1003               	clrc
   954  0162  0CF6               	rrf	___bmul@multiplier,f
   955  0163  0876               	movf	___bmul@multiplier,w
   956  0164  1D03               	btfss	3,2
   957  0165  2967               	goto	u221
   958  0166  2968               	goto	u220
   959  0167                     u221:
   960  0167  2957               	goto	l937
   961  0168                     u220:
   962  0168                     l945:
   963  0168  0875               	movf	___bmul@product,w
   964  0169                     l217:
   965  0169  0008               	return
   966  016A                     __end_of___bmul:
   967                           
   968                           	psect	text3
   969  009A                     __ptext3:	
   970 ;; *************** function ___awdiv *****************
   971 ;; Defined at:
   972 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  divisor         2    3[COMMON] int 
   975 ;;  dividend        2    5[COMMON] int 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  quotient        2    2[BANK0 ] int 
   978 ;;  sign            1    1[BANK0 ] unsigned char 
   979 ;;  counter         1    0[BANK0 ] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  2    3[COMMON] int 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         4       0       0       0       0
   990 ;;      Locals:         0       4       0       0       0
   991 ;;      Temps:          1       0       0       0       0
   992 ;;      Totals:         5       4       0       0       0
   993 ;;Total ram usage:        9 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function ___awdiv
  1005  009A                     ___awdiv:
  1006  009A                     l949:	
  1007                           ;incstack = 0
  1008                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1009                           
  1010  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1011  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1012  009C  01A1               	clrf	___awdiv@sign
  1013  009D                     l951:
  1014  009D  1FF4               	btfss	___awdiv@divisor+1,7
  1015  009E  28A0               	goto	u231
  1016  009F  28A1               	goto	u230
  1017  00A0                     u231:
  1018  00A0  28A8               	goto	l957
  1019  00A1                     u230:
  1020  00A1                     l953:
  1021  00A1  09F3               	comf	___awdiv@divisor,f
  1022  00A2  09F4               	comf	___awdiv@divisor+1,f
  1023  00A3  0AF3               	incf	___awdiv@divisor,f
  1024  00A4  1903               	skipnz
  1025  00A5  0AF4               	incf	___awdiv@divisor+1,f
  1026  00A6                     l955:
  1027  00A6  01A1               	clrf	___awdiv@sign
  1028  00A7  0AA1               	incf	___awdiv@sign,f
  1029  00A8                     l957:
  1030  00A8  1FF6               	btfss	___awdiv@dividend+1,7
  1031  00A9  28AB               	goto	u241
  1032  00AA  28AC               	goto	u240
  1033  00AB                     u241:
  1034  00AB  28B5               	goto	l963
  1035  00AC                     u240:
  1036  00AC                     l959:
  1037  00AC  09F5               	comf	___awdiv@dividend,f
  1038  00AD  09F6               	comf	___awdiv@dividend+1,f
  1039  00AE  0AF5               	incf	___awdiv@dividend,f
  1040  00AF  1903               	skipnz
  1041  00B0  0AF6               	incf	___awdiv@dividend+1,f
  1042  00B1                     l961:
  1043  00B1  3001               	movlw	1
  1044  00B2  00F7               	movwf	??___awdiv
  1045  00B3  0877               	movf	??___awdiv,w
  1046  00B4  06A1               	xorwf	___awdiv@sign,f
  1047  00B5                     l963:
  1048  00B5  01A2               	clrf	___awdiv@quotient
  1049  00B6  01A3               	clrf	___awdiv@quotient+1
  1050  00B7                     l965:
  1051  00B7  0873               	movf	___awdiv@divisor,w
  1052  00B8  0474               	iorwf	___awdiv@divisor+1,w
  1053  00B9  1903               	btfsc	3,2
  1054  00BA  28BC               	goto	u251
  1055  00BB  28BD               	goto	u250
  1056  00BC                     u251:
  1057  00BC  28F4               	goto	l985
  1058  00BD                     u250:
  1059  00BD                     l967:
  1060  00BD  01A0               	clrf	___awdiv@counter
  1061  00BE  0AA0               	incf	___awdiv@counter,f
  1062  00BF  28CB               	goto	l973
  1063  00C0                     l969:
  1064  00C0  3001               	movlw	1
  1065  00C1                     u265:
  1066  00C1  1003               	clrc
  1067  00C2  0DF3               	rlf	___awdiv@divisor,f
  1068  00C3  0DF4               	rlf	___awdiv@divisor+1,f
  1069  00C4  3EFF               	addlw	-1
  1070  00C5  1D03               	skipz
  1071  00C6  28C1               	goto	u265
  1072  00C7                     l971:
  1073  00C7  3001               	movlw	1
  1074  00C8  00F7               	movwf	??___awdiv
  1075  00C9  0877               	movf	??___awdiv,w
  1076  00CA  07A0               	addwf	___awdiv@counter,f
  1077  00CB                     l973:
  1078  00CB  1FF4               	btfss	___awdiv@divisor+1,7
  1079  00CC  28CE               	goto	u271
  1080  00CD  28CF               	goto	u270
  1081  00CE                     u271:
  1082  00CE  28C0               	goto	l969
  1083  00CF                     u270:
  1084  00CF                     l975:
  1085  00CF  3001               	movlw	1
  1086  00D0                     u285:
  1087  00D0  1003               	clrc
  1088  00D1  0DA2               	rlf	___awdiv@quotient,f
  1089  00D2  0DA3               	rlf	___awdiv@quotient+1,f
  1090  00D3  3EFF               	addlw	-1
  1091  00D4  1D03               	skipz
  1092  00D5  28D0               	goto	u285
  1093  00D6  0874               	movf	___awdiv@divisor+1,w
  1094  00D7  0276               	subwf	___awdiv@dividend+1,w
  1095  00D8  1D03               	skipz
  1096  00D9  28DC               	goto	u295
  1097  00DA  0873               	movf	___awdiv@divisor,w
  1098  00DB  0275               	subwf	___awdiv@dividend,w
  1099  00DC                     u295:
  1100  00DC  1C03               	skipc
  1101  00DD  28DF               	goto	u291
  1102  00DE  28E0               	goto	u290
  1103  00DF                     u291:
  1104  00DF  28E7               	goto	l981
  1105  00E0                     u290:
  1106  00E0                     l977:
  1107  00E0  0873               	movf	___awdiv@divisor,w
  1108  00E1  02F5               	subwf	___awdiv@dividend,f
  1109  00E2  0874               	movf	___awdiv@divisor+1,w
  1110  00E3  1C03               	skipc
  1111  00E4  03F6               	decf	___awdiv@dividend+1,f
  1112  00E5  02F6               	subwf	___awdiv@dividend+1,f
  1113  00E6                     l979:
  1114  00E6  1422               	bsf	___awdiv@quotient,0
  1115  00E7                     l981:
  1116  00E7  3001               	movlw	1
  1117  00E8                     u305:
  1118  00E8  1003               	clrc
  1119  00E9  0CF4               	rrf	___awdiv@divisor+1,f
  1120  00EA  0CF3               	rrf	___awdiv@divisor,f
  1121  00EB  3EFF               	addlw	-1
  1122  00EC  1D03               	skipz
  1123  00ED  28E8               	goto	u305
  1124  00EE                     l983:
  1125  00EE  3001               	movlw	1
  1126  00EF  02A0               	subwf	___awdiv@counter,f
  1127  00F0  1D03               	btfss	3,2
  1128  00F1  28F3               	goto	u311
  1129  00F2  28F4               	goto	u310
  1130  00F3                     u311:
  1131  00F3  28CF               	goto	l975
  1132  00F4                     u310:
  1133  00F4                     l985:
  1134  00F4  0821               	movf	___awdiv@sign,w
  1135  00F5  1903               	btfsc	3,2
  1136  00F6  28F8               	goto	u321
  1137  00F7  28F9               	goto	u320
  1138  00F8                     u321:
  1139  00F8  28FE               	goto	l989
  1140  00F9                     u320:
  1141  00F9                     l987:
  1142  00F9  09A2               	comf	___awdiv@quotient,f
  1143  00FA  09A3               	comf	___awdiv@quotient+1,f
  1144  00FB  0AA2               	incf	___awdiv@quotient,f
  1145  00FC  1903               	skipnz
  1146  00FD  0AA3               	incf	___awdiv@quotient+1,f
  1147  00FE                     l989:
  1148  00FE  0823               	movf	___awdiv@quotient+1,w
  1149  00FF  00F4               	movwf	?___awdiv+1
  1150  0100  0822               	movf	___awdiv@quotient,w
  1151  0101  00F3               	movwf	?___awdiv
  1152  0102                     l344:
  1153  0102  0008               	return
  1154  0103                     __end_of___awdiv:
  1155                           
  1156                           	psect	text4
  1157  016A                     __ptext4:	
  1158 ;; *************** function _ADC *****************
  1159 ;; Defined at:
  1160 ;;		line 17 in file "ADC.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  dig             1    wreg     unsigned char 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  dig             1    4[COMMON] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      unsigned char 
  1167 ;; Registers used:
  1168 ;;		wreg
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         1       0       0       0       0
  1176 ;;      Temps:          1       0       0       0       0
  1177 ;;      Totals:         2       0       0       0       0
  1178 ;;Total ram usage:        2 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           
  1189                           ;psect for function _ADC
  1190  016A                     _ADC:
  1191  016A                     l931:	
  1192                           ;incstack = 0
  1193                           ; Regs used in _ADC: [wreg]
  1194                           
  1195                           
  1196                           ;ADC.c: 18:     dig = ADRESH;
  1197  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1198  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1199  016C  081E               	movf	30,w	;volatile
  1200  016D  00F3               	movwf	??_ADC
  1201  016E  0873               	movf	??_ADC,w
  1202  016F  00F4               	movwf	ADC@dig
  1203                           
  1204                           ;ADC.c: 19: return dig;
  1205  0170  0874               	movf	ADC@dig,w
  1206  0171                     l83:
  1207  0171  0008               	return
  1208  0172                     __end_of_ADC:
  1209                           
  1210                           	psect	text5
  1211  0139                     __ptext5:	
  1212 ;; *************** function _isr *****************
  1213 ;; Defined at:
  1214 ;;		line 77 in file "Lab01.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          3       0       0       0       0
  1231 ;;      Totals:         3       0       0       0       0
  1232 ;;Total ram usage:        3 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		Interrupt level 1
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _isr
  1243  0139                     _isr:
  1244  0139                     i1l803:
  1245                           
  1246                           ;Lab01.c: 78:     if (RBIF == 1){
  1247  0139  1C0B               	btfss	11,0	;volatile
  1248  013A  293C               	goto	u13_21
  1249  013B  293D               	goto	u13_20
  1250  013C                     u13_21:
  1251  013C  294E               	goto	i1l60
  1252  013D                     u13_20:
  1253  013D                     i1l805:
  1254                           
  1255                           ;Lab01.c: 79:         if (PORTBbits.RB0 == 0){
  1256  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1257  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1258  013F  1806               	btfsc	6,0	;volatile
  1259  0140  2942               	goto	u14_21
  1260  0141  2943               	goto	u14_20
  1261  0142                     u14_21:
  1262  0142  2947               	goto	i1l809
  1263  0143                     u14_20:
  1264  0143                     i1l807:
  1265                           
  1266                           ;Lab01.c: 80:             PORTA++;
  1267  0143  3001               	movlw	1
  1268  0144  00F0               	movwf	??_isr
  1269  0145  0870               	movf	??_isr,w
  1270  0146  0785               	addwf	5,f	;volatile
  1271  0147                     i1l809:
  1272                           
  1273                           ;Lab01.c: 82:         if (PORTBbits.RB1 == 0){
  1274  0147  1886               	btfsc	6,1	;volatile
  1275  0148  294A               	goto	u15_21
  1276  0149  294B               	goto	u15_20
  1277  014A                     u15_21:
  1278  014A  294D               	goto	i1l813
  1279  014B                     u15_20:
  1280  014B                     i1l811:
  1281                           
  1282                           ;Lab01.c: 83:             PORTA--;
  1283  014B  3001               	movlw	1
  1284  014C  0285               	subwf	5,f	;volatile
  1285  014D                     i1l813:
  1286                           
  1287                           ;Lab01.c: 85:         INTCONbits.RBIF = 0;
  1288  014D  100B               	bcf	11,0	;volatile
  1289  014E                     i1l60:
  1290  014E  0872               	movf	??_isr+2,w
  1291  014F  008A               	movwf	10
  1292  0150  0E71               	swapf	??_isr+1,w
  1293  0151  0083               	movwf	3
  1294  0152  0EFE               	swapf	btemp,f
  1295  0153  0E7E               	swapf	btemp,w
  1296  0154  0009               	retfie
  1297  0155                     __end_of_isr:
  1298  007E                     btemp	set	126	;btemp
  1299  007E                     wtemp0	set	126
  1300                           
  1301                           	psect	intentry
  1302  0004                     __pintentry:	
  1303                           ;incstack = 0
  1304                           ; Regs used in _isr: [wreg+status,2+status,0]
  1305                           
  1306  0004                     interrupt_function:
  1307  007E                     saved_w	set	btemp
  1308  0004  00FE               	movwf	btemp
  1309  0005  0E03               	swapf	3,w
  1310  0006  00F1               	movwf	??_isr+1
  1311  0007  080A               	movf	10,w
  1312  0008  00F2               	movwf	??_isr+2
  1313  0009  120A  118A  2939   	ljmp	_isr
  1314                           
  1315                           	psect	config
  1316                           
  1317                           ;Config register CONFIG1 @ 0x2007
  1318                           ;	Oscillator Selection bits
  1319                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1320                           ;	Watchdog Timer Enable bit
  1321                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1322                           ;	Power-up Timer Enable bit
  1323                           ;	PWRTE = OFF, PWRT disabled
  1324                           ;	RE3/MCLR pin function select bit
  1325                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1326                           ;	Code Protection bit
  1327                           ;	CP = OFF, Program memory code protection is disabled
  1328                           ;	Data Code Protection bit
  1329                           ;	CPD = OFF, Data memory code protection is disabled
  1330                           ;	Brown Out Reset Selection bits
  1331                           ;	BOREN = OFF, BOR disabled
  1332                           ;	Internal External Switchover bit
  1333                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1334                           ;	Fail-Safe Clock Monitor Enabled bit
  1335                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1336                           ;	Low Voltage Programming Enable bit
  1337                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1338                           ;	In-Circuit Debugger Mode bit
  1339                           ;	DEBUG = 0x1, unprogrammed default
  1340  2007                     	org	8199
  1341  2007  30D4               	dw	12500
  1342                           
  1343                           ;Config register CONFIG2 @ 0x2008
  1344                           ;	Brown-out Reset Selection bit
  1345                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1346                           ;	Flash Program Memory Self Write Enable bits
  1347                           ;	WRT = OFF, Write protection off
  1348  2008                     	org	8200
  1349  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      7       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     643
                                              4 BANK0      3     3      0
                                _ADC
                            ___awdiv
                             ___bmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0      23
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   ___awdiv
   ___bmul
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       9       5       11.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jul 19 00:23:21 2021

         ___bmul@product 0075                       l71 0093                       l83 0171  
                     l67 003B                       l78 0138             ___awdiv@sign 0021  
                    l217 0169                      _ADC 016A                      l344 0102  
                    l901 011B                      l911 0120                      l903 011C  
                    l921 0133                      l913 0126                      l905 011D  
                    l931 016A                      l923 0134                      l915 012A  
                    l907 011E                      l941 015F                      l925 0135  
                    l917 012F                      l909 011F                      l951 009D  
                    l943 0161                      l935 0156                      l927 0136  
                    l919 0132                      l961 00B1                      l953 00A1  
                    l945 0168                      l937 0157                      l929 0137  
                    l971 00C7                      l963 00B5                      l955 00A6  
                    l939 015B                      l891 0108                      l981 00E7  
                    l973 00CB                      l965 00B7                      l957 00A8  
                    l949 009A                      l893 010B                      l983 00EE  
                    l975 00CF                      l967 00BD                      l959 00AC  
                    l895 010C                      l887 0103                      l977 00E0  
                    l969 00C0                      l985 00F4                      l897 0117  
                    l889 0107                      l987 00F9                      l979 00E6  
                    l899 011A                      l989 00FE                      u210 015B  
                    u211 015A                      u220 0168                      u221 0167  
                    u310 00F4                      u230 00A1                      u311 00F3  
                    u231 00A0                      u320 00F9                      u240 00AC  
                    u400 0057                      u321 00F8                      u305 00E8  
                    u241 00AB                      u401 0056                      u250 00BD  
                    u410 0084                      u251 00BC                      u411 0083  
                    u420 008F                      u421 008E                      u270 00CF  
                    u271 00CE                      u265 00C1                      u290 00E0  
                    u291 00DF                      u380 0027                      u285 00D0  
                    u437 004A                      u381 0026                      u390 0030  
                    u295 00DC                      u447 012C                      u391 002F  
                    _dig 007A                      _isr 0139                      _val 0079  
                   ?_ADC 0070                     l1021 001A                     l1031 0044  
                   l1023 001F                     l1041 0084                     l1033 004E  
                   l1025 0022                     l1043 0088                     l1027 0027  
                   l1035 0051                     l1045 0089                     l1037 0057  
                   l1029 0030                     l1047 008F                     l1039 007E  
                   ?_isr 0070                     _RBIF 0058                     i1l60 014E  
                   _seg1 0078                     _seg2 0027                     _main 001A  
                   _segm 0028                     btemp 007E                     start 000C  
      ___bmul@multiplier 0076                    ??_ADC 0073                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0103                    _ANSEL 0188  
        ___awdiv@divisor 0073                    i1l811 014B                    i1l803 0139  
                  i1l813 014D                    i1l805 013D                    i1l807 0143  
                  i1l809 0147          ___awdiv@counter 0020                    u13_20 013D  
                  u13_21 013C                    u14_20 0143                    u14_21 0142  
                  u15_20 014B                    u15_21 014A                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0103                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 009A                   ADC@dig 0074                   ??_main 0024  
                 _ADRESH 001E         ___awdiv@dividend 0075                   ?_setup 0070  
                 _ANSELH 0189                   ___bmul 0155                ??___awdiv 0077  
       ___awdiv@quotient 0022                   saved_w 007E  __end_of__initialization 0016  
    ___bmul@multiplicand 0073           __pcstackCOMMON 0070            __end_of_setup 0139  
                ??_setup 0073               __pbssBANK0 0027               __pmaintext 001A  
                ?___bmul 0073               __pintentry 0004          __size_of___bmul 0015  
                ___awdiv 009A                  __ptext1 0103                  __ptext2 0155  
                __ptext3 009A                  __ptext4 016A                  __ptext5 0139  
           __size_of_ADC 0008             __size_of_isr 001C     end_of_initialization 0016  
              _PORTBbits 0006                _TRISBbits 0086                _TRISEbits 0089  
         __end_of___bmul 016A      start_initialization 000F              __end_of_ADC 0172  
            __end_of_isr 0155                 ??___bmul 0074              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020                 ?___awdiv 0073  
         __size_of_setup 0036        interrupt_function 0004               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of___awdiv 0069            __size_of_main 0080  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
