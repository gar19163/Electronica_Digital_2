

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Aug 19 00:56:52 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314                           
   315                           	psect	strings
   316  1000                     __pstrings:
   317  1000                     stringtab:
   318  1000                     __stringtab:
   319  1000                     stringcode:	
   320                           ;	String table - string pointers are 1 byte each
   321                           
   322  1000                     stringdir:
   323  1000  3010               	movlw	high stringdir
   324  1001  008A               	movwf	10
   325  1002  0804               	movf	4,w
   326  1003  0A84               	incf	4,f
   327  1004  0782               	addwf	2,f
   328  1005                     __stringbase:
   329  1005  3400               	retlw	0
   330  1006                     __end_of__stringtab:
   331  1006                     __powers_:
   332  1006  3400               	retlw	0
   333  1007  3400               	retlw	0
   334  1008  3480               	retlw	128
   335  1009  343F               	retlw	63
   336  100A  3400               	retlw	0
   337  100B  3400               	retlw	0
   338  100C  3420               	retlw	32
   339  100D  3441               	retlw	65
   340  100E  3400               	retlw	0
   341  100F  3400               	retlw	0
   342  1010  34C8               	retlw	200
   343  1011  3442               	retlw	66
   344  1012  3400               	retlw	0
   345  1013  3400               	retlw	0
   346  1014  347A               	retlw	122
   347  1015  3444               	retlw	68
   348  1016  3400               	retlw	0
   349  1017  3440               	retlw	64
   350  1018  341C               	retlw	28
   351  1019  3446               	retlw	70
   352  101A  3400               	retlw	0
   353  101B  3450               	retlw	80
   354  101C  34C3               	retlw	195
   355  101D  3447               	retlw	71
   356  101E  3400               	retlw	0
   357  101F  3424               	retlw	36
   358  1020  3474               	retlw	116
   359  1021  3449               	retlw	73
   360  1022  3480               	retlw	128
   361  1023  3496               	retlw	150
   362  1024  3418               	retlw	24
   363  1025  344B               	retlw	75
   364  1026  3420               	retlw	32
   365  1027  34BC               	retlw	188
   366  1028  34BE               	retlw	190
   367  1029  344C               	retlw	76
   368  102A  3428               	retlw	40
   369  102B  346B               	retlw	107
   370  102C  346E               	retlw	110
   371  102D  344E               	retlw	78
   372  102E  34F9               	retlw	249
   373  102F  3402               	retlw	2
   374  1030  3415               	retlw	21
   375  1031  3450               	retlw	80
   376  1032  34EC               	retlw	236
   377  1033  3478               	retlw	120
   378  1034  34AD               	retlw	173
   379  1035  3460               	retlw	96
   380  1036  34CA               	retlw	202
   381  1037  34F2               	retlw	242
   382  1038  3449               	retlw	73
   383  1039  3471               	retlw	113
   384  103A                     __end_of__powers_:
   385  103A                     __npowers_:
   386  103A  3400               	retlw	0
   387  103B  3400               	retlw	0
   388  103C  3480               	retlw	128
   389  103D  343F               	retlw	63
   390  103E  34CD               	retlw	205
   391  103F  34CC               	retlw	204
   392  1040  34CC               	retlw	204
   393  1041  343D               	retlw	61
   394  1042  340A               	retlw	10
   395  1043  34D7               	retlw	215
   396  1044  3423               	retlw	35
   397  1045  343C               	retlw	60
   398  1046  346F               	retlw	111
   399  1047  3412               	retlw	18
   400  1048  3483               	retlw	131
   401  1049  343A               	retlw	58
   402  104A  3417               	retlw	23
   403  104B  34B7               	retlw	183
   404  104C  34D1               	retlw	209
   405  104D  3438               	retlw	56
   406  104E  34AC               	retlw	172
   407  104F  34C5               	retlw	197
   408  1050  3427               	retlw	39
   409  1051  3437               	retlw	55
   410  1052  34BD               	retlw	189
   411  1053  3437               	retlw	55
   412  1054  3486               	retlw	134
   413  1055  3435               	retlw	53
   414  1056  3495               	retlw	149
   415  1057  34BF               	retlw	191
   416  1058  34D6               	retlw	214
   417  1059  3433               	retlw	51
   418  105A  3477               	retlw	119
   419  105B  34CC               	retlw	204
   420  105C  342B               	retlw	43
   421  105D  3432               	retlw	50
   422  105E  345F               	retlw	95
   423  105F  3470               	retlw	112
   424  1060  3489               	retlw	137
   425  1061  3430               	retlw	48
   426  1062  34FF               	retlw	255
   427  1063  34E6               	retlw	230
   428  1064  34DB               	retlw	219
   429  1065  342E               	retlw	46
   430  1066  3408               	retlw	8
   431  1067  34E5               	retlw	229
   432  1068  343C               	retlw	60
   433  1069  341E               	retlw	30
   434  106A  3460               	retlw	96
   435  106B  3442               	retlw	66
   436  106C  34A2               	retlw	162
   437  106D  340D               	retlw	13
   438  106E                     __end_of__npowers_:
   439  106E                     _dpowers:
   440  106E  3401               	retlw	1
   441  106F  3400               	retlw	0
   442  1070  3400               	retlw	0
   443  1071  3400               	retlw	0
   444  1072  340A               	retlw	10
   445  1073  3400               	retlw	0
   446  1074  3400               	retlw	0
   447  1075  3400               	retlw	0
   448  1076  3464               	retlw	100
   449  1077  3400               	retlw	0
   450  1078  3400               	retlw	0
   451  1079  3400               	retlw	0
   452  107A  34E8               	retlw	232
   453  107B  3403               	retlw	3
   454  107C  3400               	retlw	0
   455  107D  3400               	retlw	0
   456  107E  3410               	retlw	16
   457  107F  3427               	retlw	39
   458  1080  3400               	retlw	0
   459  1081  3400               	retlw	0
   460  1082  34A0               	retlw	160
   461  1083  3486               	retlw	134
   462  1084  3401               	retlw	1
   463  1085  3400               	retlw	0
   464  1086  3440               	retlw	64
   465  1087  3442               	retlw	66
   466  1088  340F               	retlw	15
   467  1089  3400               	retlw	0
   468  108A  3480               	retlw	128
   469  108B  3496               	retlw	150
   470  108C  3498               	retlw	152
   471  108D  3400               	retlw	0
   472  108E  3400               	retlw	0
   473  108F  34E1               	retlw	225
   474  1090  34F5               	retlw	245
   475  1091  3405               	retlw	5
   476  1092  3400               	retlw	0
   477  1093  34CA               	retlw	202
   478  1094  349A               	retlw	154
   479  1095  343B               	retlw	59
   480  1096                     __end_of_dpowers:
   481  1096                     STR_1:
   482  1096  3425               	retlw	37	;'%'
   483  1097  3430               	retlw	48	;'0'
   484  1098  342E               	retlw	46	;'.'
   485  1099  3430               	retlw	48	;'0'
   486  109A  3466               	retlw	102	;'f'
   487  109B  3400               	retlw	0
   488                           
   489                           	psect	nvBANK1
   490  00EB                     __pnvBANK1:
   491  00EB                     _val1:
   492  00EB                     	ds	4
   493                           
   494                           	psect	nvBANK3
   495  0190                     __pnvBANK3:
   496  0190                     _val2:
   497  0190                     	ds	4
   498  0018                     _RCSTAbits	set	24
   499  0019                     _TXREG	set	25
   500  0005                     _PORTA	set	5
   501  0008                     _PORTD	set	8
   502  001A                     _RCREG	set	26
   503  000C                     _PIR1bits	set	12
   504  000B                     _INTCONbits	set	11
   505  0006                     _PORTBbits	set	6
   506  0064                     _TXIF	set	100
   507  0058                     _RBIF	set	88
   508  008C                     _PIE1bits	set	140
   509  009A                     _SPBRGH	set	154
   510  0099                     _SPBRG	set	153
   511  0098                     _TXSTAbits	set	152
   512  0096                     _IOCBbits	set	150
   513  0095                     _WPUBbits	set	149
   514  0081                     _OPTION_REGbits	set	129
   515  008F                     _OSCCONbits	set	143
   516  0087                     _TRISCbits	set	135
   517  0085                     _TRISA	set	133
   518  0088                     _TRISD	set	136
   519  0086                     _TRISB	set	134
   520  0187                     _BAUDCTLbits	set	391
   521  0189                     _ANSELH	set	393
   522  0188                     _ANSEL	set	392
   523                           
   524                           	psect	cinit
   525  000F                     start_initialization:	
   526                           ; #config settings
   527                           
   528  000F                     __initialization:
   529                           
   530                           ; Clear objects allocated to BANK0
   531  000F  1283               	bcf	3,5	;RP0=0, select bank0
   532  0010  1303               	bcf	3,6	;RP1=0, select bank0
   533  0011  01EF               	clrf	__pbssBANK0& (0+127)
   534                           
   535                           ; Clear objects allocated to BANK1
   536  0012  1383               	bcf	3,7	;select IRP bank0
   537  0013  30CC               	movlw	low __pbssBANK1
   538  0014  0084               	movwf	4
   539  0015  30EB               	movlw	low (__pbssBANK1+31)
   540  0016  160A  158A  2433  120A  118A  	fcall	clear_ram0
   541  001B                     end_of_initialization:	
   542                           ;End of C runtime variable initialization code
   543                           
   544  001B                     __end_of__initialization:
   545  001B  0183               	clrf	3
   546  001C  160A  158A  2F75   	ljmp	_main	;jump to C main() function
   547                           
   548                           	psect	bssBANK0
   549  006F                     __pbssBANK0:
   550  006F                     _dig1:
   551  006F                     	ds	1
   552                           
   553                           	psect	bssBANK1
   554  00CC                     __pbssBANK1:
   555  00CC                     _dig2:
   556  00CC                     	ds	1
   557  00CD                     _s:
   558  00CD                     	ds	30
   559                           
   560                           	psect	clrtext
   561  1C33                     clear_ram0:	
   562                           ;	Called with FSR containing the base address, and
   563                           ;	W with the last address+1
   564                           
   565  1C33  0064               	clrwdt	;clear the watchdog before getting into this loop
   566  1C34                     clrloop0:
   567  1C34  0180               	clrf	0	;clear RAM location pointed to by FSR
   568  1C35  0A84               	incf	4,f	;increment pointer
   569  1C36  0604               	xorwf	4,w	;XOR with final address
   570  1C37  1903               	btfsc	3,2	;have we reached the end yet?
   571  1C38  3400               	retlw	0	;all done for this memory range, return
   572  1C39  0604               	xorwf	4,w	;XOR again to restore value
   573  1C3A  2C34               	goto	clrloop0	;do the next byte
   574                           
   575                           	psect	cstackBANK1
   576  00A0                     __pcstackBANK1:
   577  00A0                     ?___flsub:
   578  00A0                     ___flsub@a:	
   579                           ; 4 bytes @ 0x0
   580                           
   581                           
   582                           ; 4 bytes @ 0x0
   583  00A0                     	ds	4
   584  00A4                     ___flsub@b:
   585                           
   586                           ; 4 bytes @ 0x4
   587  00A4                     	ds	4
   588  00A8                     ??_sprintf:
   589                           
   590                           ; 1 bytes @ 0x8
   591  00A8                     	ds	5
   592  00AD                     _sprintf$1155:
   593                           
   594                           ; 4 bytes @ 0xD
   595  00AD                     	ds	4
   596  00B1                     sprintf@ap:
   597                           
   598                           ; 1 bytes @ 0x11
   599  00B1                     	ds	1
   600  00B2                     sprintf@val:
   601                           
   602                           ; 4 bytes @ 0x12
   603  00B2                     	ds	4
   604  00B6                     sprintf@tmpval:
   605                           
   606                           ; 4 bytes @ 0x16
   607  00B6                     	ds	4
   608  00BA                     sprintf@eexp:
   609                           
   610                           ; 2 bytes @ 0x1A
   611  00BA                     	ds	2
   612  00BC                     sprintf@flag:
   613                           
   614                           ; 2 bytes @ 0x1C
   615  00BC                     	ds	2
   616  00BE                     sprintf@width:
   617                           
   618                           ; 2 bytes @ 0x1E
   619  00BE                     	ds	2
   620  00C0                     sprintf@fval:
   621                           
   622                           ; 4 bytes @ 0x20
   623  00C0                     	ds	4
   624  00C4                     sprintf@prec:
   625                           
   626                           ; 2 bytes @ 0x24
   627  00C4                     	ds	2
   628  00C6                     sprintf@sp:
   629                           
   630                           ; 1 bytes @ 0x26
   631  00C6                     	ds	1
   632  00C7                     sprintf@c:
   633                           
   634                           ; 1 bytes @ 0x27
   635  00C7                     	ds	1
   636  00C8                     ??_main:
   637                           
   638                           ; 1 bytes @ 0x28
   639  00C8                     	ds	4
   640                           
   641                           	psect	cstackCOMMON
   642  0070                     __pcstackCOMMON:
   643  0070                     ?_isdigit:
   644  0070                     ?_setup:	
   645                           ; 1 bit 
   646                           
   647  0070                     ?_send_str:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_isr:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_isr:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_main:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_send_char:	
   660                           ; 1 bytes @ 0x0
   661                           
   662                           
   663                           ; 1 bytes @ 0x0
   664  0070                     	ds	3
   665  0073                     ?___fleq:
   666  0073                     ?___flge:	
   667                           ; 1 bit 
   668                           
   669  0073                     ??_setup:	
   670                           ; 1 bit 
   671                           
   672  0073                     ??_isdigit:	
   673                           ; 1 bytes @ 0x3
   674                           
   675  0073                     ??_send_char:	
   676                           ; 1 bytes @ 0x3
   677                           
   678  0073                     ?__Umul8_16:	
   679                           ; 1 bytes @ 0x3
   680                           
   681  0073                     ?___wmul:	
   682                           ; 2 bytes @ 0x3
   683                           
   684  0073                     ?___awmod:	
   685                           ; 2 bytes @ 0x3
   686                           
   687  0073                     ?___lwmod:	
   688                           ; 2 bytes @ 0x3
   689                           
   690  0073                     ?__tdiv_to_l_:	
   691                           ; 2 bytes @ 0x3
   692                           
   693  0073                     ?__div_to_l_:	
   694                           ; 4 bytes @ 0x3
   695                           
   696  0073                     ?___lldiv:	
   697                           ; 4 bytes @ 0x3
   698                           
   699  0073                     ?___flneg:	
   700                           ; 4 bytes @ 0x3
   701                           
   702  0073                     ?___llmod:	
   703                           ; 4 bytes @ 0x3
   704                           
   705  0073                     ?___xxtofl:	
   706                           ; 4 bytes @ 0x3
   707                           
   708  0073                     send_char@dato:	
   709                           ; 4 bytes @ 0x3
   710                           
   711  0073                     __Umul8_16@multiplicand:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     _isdigit$981:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     ___wmul@multiplier:	
   718                           ; 1 bytes @ 0x3
   719                           
   720  0073                     ___awmod@divisor:	
   721                           ; 2 bytes @ 0x3
   722                           
   723  0073                     ___lwmod@divisor:	
   724                           ; 2 bytes @ 0x3
   725                           
   726  0073                     ___lldiv@divisor:	
   727                           ; 2 bytes @ 0x3
   728                           
   729  0073                     __div_to_l_@f1:	
   730                           ; 4 bytes @ 0x3
   731                           
   732  0073                     ___fleq@ff1:	
   733                           ; 4 bytes @ 0x3
   734                           
   735  0073                     ___flge@ff1:	
   736                           ; 4 bytes @ 0x3
   737                           
   738  0073                     ___flneg@f1:	
   739                           ; 4 bytes @ 0x3
   740                           
   741  0073                     __tdiv_to_l_@f1:	
   742                           ; 4 bytes @ 0x3
   743                           
   744  0073                     ___llmod@divisor:	
   745                           ; 4 bytes @ 0x3
   746                           
   747  0073                     ___xxtofl@val:	
   748                           ; 4 bytes @ 0x3
   749                           
   750                           
   751                           ; 4 bytes @ 0x3
   752  0073                     	ds	1
   753  0074                     ??_send_str:
   754  0074                     isdigit@c:	
   755                           ; 1 bytes @ 0x4
   756                           
   757                           
   758                           ; 1 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ??__Umul8_16:
   761  0075                     send_str@i:	
   762                           ; 1 bytes @ 0x5
   763                           
   764  0075                     ___wmul@multiplicand:	
   765                           ; 2 bytes @ 0x5
   766                           
   767  0075                     ___awmod@dividend:	
   768                           ; 2 bytes @ 0x5
   769                           
   770  0075                     ___lwmod@dividend:	
   771                           ; 2 bytes @ 0x5
   772                           
   773                           
   774                           ; 2 bytes @ 0x5
   775  0075                     	ds	2
   776  0077                     ??___wmul:
   777  0077                     ??___awmod:	
   778                           ; 1 bytes @ 0x7
   779                           
   780  0077                     ??___flneg:	
   781                           ; 1 bytes @ 0x7
   782                           
   783  0077                     ??___lwmod:	
   784                           ; 1 bytes @ 0x7
   785                           
   786  0077                     ??___xxtofl:	
   787                           ; 1 bytes @ 0x7
   788                           
   789  0077                     send_str@st:	
   790                           ; 1 bytes @ 0x7
   791                           
   792  0077                     ___wmul@product:	
   793                           ; 1 bytes @ 0x7
   794                           
   795  0077                     ___lldiv@dividend:	
   796                           ; 2 bytes @ 0x7
   797                           
   798  0077                     __div_to_l_@f2:	
   799                           ; 4 bytes @ 0x7
   800                           
   801  0077                     ___fleq@ff2:	
   802                           ; 4 bytes @ 0x7
   803                           
   804  0077                     ___flge@ff2:	
   805                           ; 4 bytes @ 0x7
   806                           
   807  0077                     __tdiv_to_l_@f2:	
   808                           ; 4 bytes @ 0x7
   809                           
   810  0077                     ___llmod@dividend:	
   811                           ; 4 bytes @ 0x7
   812                           
   813                           
   814                           ; 4 bytes @ 0x7
   815  0077                     	ds	1
   816  0078                     ___awmod@counter:
   817  0078                     ___lwmod@counter:	
   818                           ; 1 bytes @ 0x8
   819                           
   820                           
   821                           ; 1 bytes @ 0x8
   822  0078                     	ds	1
   823  0079                     ??___lwdiv:
   824  0079                     ___awmod@sign:	
   825                           ; 1 bytes @ 0x9
   826                           
   827                           
   828                           ; 1 bytes @ 0x9
   829  0079                     	ds	1
   830  007A                     ??___awdiv:
   831                           
   832                           ; 1 bytes @ 0xA
   833  007A                     	ds	1
   834  007B                     ??___flsub:
   835                           
   836                           	psect	cstackBANK0
   837  0020                     __pcstackBANK0:	
   838                           ; 1 bytes @ 0xB
   839                           
   840  0020                     ??__tdiv_to_l_:
   841  0020                     ??__div_to_l_:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     ??___lldiv:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ??___fleq:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0020                     ??___flge:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0020                     ??___llmod:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0020                     ?___awdiv:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0020                     ?___lwdiv:	
   860                           ; 2 bytes @ 0x0
   861                           
   862  0020                     ___xxtofl@sign:	
   863                           ; 2 bytes @ 0x0
   864                           
   865  0020                     ___awdiv@divisor:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0020                     ___lwdiv@divisor:	
   869                           ; 2 bytes @ 0x0
   870                           
   871  0020                     __Umul8_16@product:	
   872                           ; 2 bytes @ 0x0
   873                           
   874                           
   875                           ; 2 bytes @ 0x0
   876  0020                     	ds	1
   877  0021                     ___llmod@counter:
   878  0021                     ___xxtofl@exp:	
   879                           ; 1 bytes @ 0x1
   880                           
   881  0021                     ___lldiv@quotient:	
   882                           ; 1 bytes @ 0x1
   883                           
   884  0021                     __div_to_l_@quot:	
   885                           ; 4 bytes @ 0x1
   886                           
   887                           
   888                           ; 4 bytes @ 0x1
   889  0021                     	ds	1
   890  0022                     ___awdiv@dividend:
   891  0022                     ___lwdiv@dividend:	
   892                           ; 2 bytes @ 0x2
   893                           
   894  0022                     __Umul8_16@word_mpld:	
   895                           ; 2 bytes @ 0x2
   896                           
   897  0022                     ___xxtofl@arg:	
   898                           ; 2 bytes @ 0x2
   899                           
   900                           
   901                           ; 4 bytes @ 0x2
   902  0022                     	ds	2
   903  0024                     ___awdiv@counter:
   904  0024                     __Umul8_16@multiplier:	
   905                           ; 1 bytes @ 0x4
   906                           
   907  0024                     ___lwdiv@quotient:	
   908                           ; 1 bytes @ 0x4
   909                           
   910  0024                     __tdiv_to_l_@quot:	
   911                           ; 2 bytes @ 0x4
   912                           
   913                           
   914                           ; 4 bytes @ 0x4
   915  0024                     	ds	1
   916  0025                     ___lldiv@counter:
   917  0025                     ___awdiv@sign:	
   918                           ; 1 bytes @ 0x5
   919                           
   920  0025                     __div_to_l_@cntr:	
   921                           ; 1 bytes @ 0x5
   922                           
   923                           
   924                           ; 1 bytes @ 0x5
   925  0025                     	ds	1
   926  0026                     __div_to_l_@exp1:
   927  0026                     ___lwdiv@counter:	
   928                           ; 1 bytes @ 0x6
   929                           
   930  0026                     ___awdiv@quotient:	
   931                           ; 1 bytes @ 0x6
   932                           
   933                           
   934                           ; 2 bytes @ 0x6
   935  0026                     	ds	2
   936  0028                     ?___flmul:
   937  0028                     __tdiv_to_l_@cntr:	
   938                           ; 4 bytes @ 0x8
   939                           
   940  0028                     ___flmul@b:	
   941                           ; 1 bytes @ 0x8
   942                           
   943                           
   944                           ; 4 bytes @ 0x8
   945  0028                     	ds	1
   946  0029                     __tdiv_to_l_@exp1:
   947                           
   948                           ; 1 bytes @ 0x9
   949  0029                     	ds	3
   950  002C                     ___flmul@a:
   951                           
   952                           ; 4 bytes @ 0xC
   953  002C                     	ds	4
   954  0030                     ??___flmul:
   955                           
   956                           ; 1 bytes @ 0x10
   957  0030                     	ds	5
   958  0035                     ___flmul@sign:
   959                           
   960                           ; 1 bytes @ 0x15
   961  0035                     	ds	1
   962  0036                     ___flmul@grs:
   963                           
   964                           ; 4 bytes @ 0x16
   965  0036                     	ds	4
   966  003A                     ___flmul@aexp:
   967                           
   968                           ; 1 bytes @ 0x1A
   969  003A                     	ds	1
   970  003B                     ___flmul@bexp:
   971                           
   972                           ; 1 bytes @ 0x1B
   973  003B                     	ds	1
   974  003C                     ___flmul@prod:
   975                           
   976                           ; 4 bytes @ 0x1C
   977  003C                     	ds	4
   978  0040                     ___flmul@temp:
   979                           
   980                           ; 2 bytes @ 0x20
   981  0040                     	ds	2
   982  0042                     ?_fround:
   983  0042                     ?_scale:	
   984                           ; 4 bytes @ 0x22
   985                           
   986                           
   987                           ; 4 bytes @ 0x22
   988  0042                     	ds	4
   989  0046                     ??_fround:
   990  0046                     ??_scale:	
   991                           ; 1 bytes @ 0x26
   992                           
   993                           
   994                           ; 1 bytes @ 0x26
   995  0046                     	ds	7
   996  004D                     _fround$1153:
   997                           
   998                           ; 4 bytes @ 0x2D
   999  004D                     	ds	3
  1000  0050                     _scale$1154:
  1001                           
  1002                           ; 4 bytes @ 0x30
  1003  0050                     	ds	1
  1004  0051                     _fround$1152:
  1005                           
  1006                           ; 4 bytes @ 0x31
  1007  0051                     	ds	3
  1008  0054                     scale@scl:
  1009                           
  1010                           ; 1 bytes @ 0x34
  1011  0054                     	ds	1
  1012  0055                     ?___fltol:
  1013  0055                     fround@prec:	
  1014                           ; 4 bytes @ 0x35
  1015                           
  1016  0055                     ___fltol@f1:	
  1017                           ; 1 bytes @ 0x35
  1018                           
  1019                           
  1020                           ; 4 bytes @ 0x35
  1021  0055                     	ds	1
  1022  0056                     ?___fladd:
  1023  0056                     ___fladd@b:	
  1024                           ; 4 bytes @ 0x36
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0x36
  1028  0056                     	ds	3
  1029  0059                     ??___fltol:
  1030                           
  1031                           ; 1 bytes @ 0x39
  1032  0059                     	ds	1
  1033  005A                     ___fladd@a:
  1034                           
  1035                           ; 4 bytes @ 0x3A
  1036  005A                     	ds	4
  1037  005E                     ??___fladd:
  1038  005E                     ___fltol@sign1:	
  1039                           ; 1 bytes @ 0x3E
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x3E
  1043  005E                     	ds	1
  1044  005F                     ___fltol@exp1:
  1045                           
  1046                           ; 1 bytes @ 0x3F
  1047  005F                     	ds	7
  1048  0066                     ___fladd@signs:
  1049                           
  1050                           ; 1 bytes @ 0x46
  1051  0066                     	ds	1
  1052  0067                     ___fladd@aexp:
  1053                           
  1054                           ; 1 bytes @ 0x47
  1055  0067                     	ds	1
  1056  0068                     ___fladd@bexp:
  1057                           
  1058                           ; 1 bytes @ 0x48
  1059  0068                     	ds	1
  1060  0069                     ___fladd@grs:
  1061                           
  1062                           ; 1 bytes @ 0x49
  1063  0069                     	ds	1
  1064  006A                     ?_sprintf:
  1065  006A                     sprintf@f:	
  1066                           ; 2 bytes @ 0x4A
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x4A
  1070  006A                     	ds	5
  1071                           
  1072                           	psect	maintext
  1073  1F75                     __pmaintext:	
  1074 ;;
  1075 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1076 ;;
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 88 in file "Lab05.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : B00/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       4       0       0
  1096 ;;      Totals:         0       0       4       0       0
  1097 ;;Total ram usage:        4 bytes
  1098 ;; Hardware stack levels required when called: 5
  1099 ;; This function calls:
  1100 ;;		___xxtofl
  1101 ;;		_send_str
  1102 ;;		_setup
  1103 ;;		_sprintf
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _main
  1111  1F75                     _main:
  1112  1F75                     l3429:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1115                           
  1116                           
  1117                           ;Lab05.c: 89:     setup();
  1118  1F75  160A  118A  20A2  160A  158A  	fcall	_setup
  1119  1F7A                     l3431:
  1120                           
  1121                           ;Lab05.c: 92:         PORTD = dig2;
  1122  1F7A  1683               	bsf	3,5	;RP0=1, select bank1
  1123  1F7B  1303               	bcf	3,6	;RP1=0, select bank1
  1124  1F7C  084C               	movf	_dig2^(0+128),w
  1125  1F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1126  1F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1127  1F7F  0088               	movwf	8	;volatile
  1128  1F80                     l3433:
  1129                           
  1130                           ;Lab05.c: 93:         PORTA = dig1;
  1131  1F80  086F               	movf	_dig1,w
  1132  1F81  0085               	movwf	5	;volatile
  1133                           
  1134                           ;Lab05.c: 94:         val1 = dig1;
  1135  1F82  086F               	movf	_dig1,w
  1136  1F83  1683               	bsf	3,5	;RP0=1, select bank1
  1137  1F84  1303               	bcf	3,6	;RP1=0, select bank1
  1138  1F85  00C8               	movwf	??_main^(0+128)
  1139  1F86  01C9               	clrf	(??_main^(0+128)+1)
  1140  1F87  01CA               	clrf	(??_main^(0+128)+2)
  1141  1F88  01CB               	clrf	(??_main^(0+128)+3)
  1142  1F89  084B               	movf	(??_main+3)^(0+128),w
  1143  1F8A  00F6               	movwf	___xxtofl@val+3
  1144  1F8B  084A               	movf	(??_main+2)^(0+128),w
  1145  1F8C  00F5               	movwf	___xxtofl@val+2
  1146  1F8D  0849               	movf	(??_main+1)^(0+128),w
  1147  1F8E  00F4               	movwf	___xxtofl@val+1
  1148  1F8F  0848               	movf	??_main^(0+128),w
  1149  1F90  00F3               	movwf	___xxtofl@val
  1150  1F91  3000               	movlw	0
  1151  1F92  160A  118A  2177  160A  158A  	fcall	___xxtofl
  1152  1F97  0876               	movf	?___xxtofl+3,w
  1153  1F98  1683               	bsf	3,5	;RP0=1, select bank1
  1154  1F99  1303               	bcf	3,6	;RP1=0, select bank1
  1155  1F9A  00EE               	movwf	(_val1+3)^(0+128)
  1156  1F9B  0875               	movf	?___xxtofl+2,w
  1157  1F9C  00ED               	movwf	(_val1+2)^(0+128)
  1158  1F9D  0874               	movf	?___xxtofl+1,w
  1159  1F9E  00EC               	movwf	(_val1+1)^(0+128)
  1160  1F9F  0873               	movf	?___xxtofl,w
  1161  1FA0  00EB               	movwf	_val1^(0+128)
  1162                           
  1163                           ;Lab05.c: 95:         val2 = dig2;
  1164  1FA1  084C               	movf	_dig2^(0+128),w
  1165  1FA2  00C8               	movwf	??_main^(0+128)
  1166  1FA3  01C9               	clrf	(??_main^(0+128)+1)
  1167  1FA4  01CA               	clrf	(??_main^(0+128)+2)
  1168  1FA5  01CB               	clrf	(??_main^(0+128)+3)
  1169  1FA6  084B               	movf	(??_main+3)^(0+128),w
  1170  1FA7  00F6               	movwf	___xxtofl@val+3
  1171  1FA8  084A               	movf	(??_main+2)^(0+128),w
  1172  1FA9  00F5               	movwf	___xxtofl@val+2
  1173  1FAA  0849               	movf	(??_main+1)^(0+128),w
  1174  1FAB  00F4               	movwf	___xxtofl@val+1
  1175  1FAC  0848               	movf	??_main^(0+128),w
  1176  1FAD  00F3               	movwf	___xxtofl@val
  1177  1FAE  3000               	movlw	0
  1178  1FAF  160A  118A  2177  160A  158A  	fcall	___xxtofl
  1179  1FB4  0876               	movf	?___xxtofl+3,w
  1180  1FB5  1683               	bsf	3,5	;RP0=1, select bank3
  1181  1FB6  1703               	bsf	3,6	;RP1=1, select bank3
  1182  1FB7  0093               	movwf	(_val2+3)^(0+384)
  1183  1FB8  0875               	movf	?___xxtofl+2,w
  1184  1FB9  0092               	movwf	(_val2+2)^(0+384)
  1185  1FBA  0874               	movf	?___xxtofl+1,w
  1186  1FBB  0091               	movwf	(_val2+1)^(0+384)
  1187  1FBC  0873               	movf	?___xxtofl,w
  1188  1FBD  0090               	movwf	_val2^(0+384)
  1189  1FBE                     l3435:
  1190                           
  1191                           ;Lab05.c: 97:         sprintf(s, "%0.0f",val1);
  1192  1FBE  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1193  1FBF  1683               	bsf	3,5	;RP0=1, select bank1
  1194  1FC0  1303               	bcf	3,6	;RP1=0, select bank1
  1195  1FC1  00C8               	movwf	??_main^(0+128)
  1196  1FC2  0848               	movf	??_main^(0+128),w
  1197  1FC3  1283               	bcf	3,5	;RP0=0, select bank0
  1198  1FC4  1303               	bcf	3,6	;RP1=0, select bank0
  1199  1FC5  00EA               	movwf	sprintf@f
  1200  1FC6  1683               	bsf	3,5	;RP0=1, select bank1
  1201  1FC7  1303               	bcf	3,6	;RP1=0, select bank1
  1202  1FC8  086E               	movf	(_val1+3)^(0+128),w
  1203  1FC9  1283               	bcf	3,5	;RP0=0, select bank0
  1204  1FCA  1303               	bcf	3,6	;RP1=0, select bank0
  1205  1FCB  00EE               	movwf	?_sprintf+4
  1206  1FCC  1683               	bsf	3,5	;RP0=1, select bank1
  1207  1FCD  1303               	bcf	3,6	;RP1=0, select bank1
  1208  1FCE  086D               	movf	(_val1+2)^(0+128),w
  1209  1FCF  1283               	bcf	3,5	;RP0=0, select bank0
  1210  1FD0  1303               	bcf	3,6	;RP1=0, select bank0
  1211  1FD1  00ED               	movwf	?_sprintf+3
  1212  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  1213  1FD3  1303               	bcf	3,6	;RP1=0, select bank1
  1214  1FD4  086C               	movf	(_val1+1)^(0+128),w
  1215  1FD5  1283               	bcf	3,5	;RP0=0, select bank0
  1216  1FD6  1303               	bcf	3,6	;RP1=0, select bank0
  1217  1FD7  00EC               	movwf	?_sprintf+2
  1218  1FD8  1683               	bsf	3,5	;RP0=1, select bank1
  1219  1FD9  1303               	bcf	3,6	;RP1=0, select bank1
  1220  1FDA  086B               	movf	_val1^(0+128),w
  1221  1FDB  1283               	bcf	3,5	;RP0=0, select bank0
  1222  1FDC  1303               	bcf	3,6	;RP1=0, select bank0
  1223  1FDD  00EB               	movwf	?_sprintf+1
  1224  1FDE  30CD               	movlw	(low (_s| 0))& (0+255)
  1225  1FDF  160A  118A  24FD  160A  158A  	fcall	_sprintf
  1226  1FE4                     l3437:
  1227                           
  1228                           ;Lab05.c: 98:         send_str(s);
  1229  1FE4  30CD               	movlw	(low (_s| 0))& (0+255)
  1230  1FE5  160A  158A  2487  160A  158A  	fcall	_send_str
  1231  1FEA                     l3439:
  1232                           
  1233                           ;Lab05.c: 100:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1234  1FEA  3006               	movlw	6
  1235  1FEB  1683               	bsf	3,5	;RP0=1, select bank1
  1236  1FEC  1303               	bcf	3,6	;RP1=0, select bank1
  1237  1FED  00CA               	movwf	(??_main^(0+128)+2)
  1238  1FEE  3013               	movlw	19
  1239  1FEF  00C9               	movwf	(??_main^(0+128)+1)
  1240  1FF0  30AD               	movlw	173
  1241  1FF1  00C8               	movwf	??_main^(0+128)
  1242  1FF2                     u5677:
  1243  1FF2  0BC8               	decfsz	??_main^(0+128),f
  1244  1FF3  2FF2               	goto	u5677
  1245  1FF4  0BC9               	decfsz	(??_main^(0+128)+1),f
  1246  1FF5  2FF2               	goto	u5677
  1247  1FF6  0BCA               	decfsz	(??_main^(0+128)+2),f
  1248  1FF7  2FF2               	goto	u5677
  1249  1FF8                     l3441:
  1250                           
  1251                           ;Lab05.c: 101:         TXREG = ',';
  1252  1FF8  302C               	movlw	44
  1253  1FF9  1283               	bcf	3,5	;RP0=0, select bank0
  1254  1FFA  1303               	bcf	3,6	;RP1=0, select bank0
  1255  1FFB  0099               	movwf	25	;volatile
  1256  1FFC  2F7A               	goto	l3431
  1257  1FFD  120A  118A  280C   	ljmp	start
  1258  2000                     __end_of_main:
  1259                           
  1260                           	psect	text1
  1261  14FD                     __ptext1:	
  1262 ;; *************** function _sprintf *****************
  1263 ;; Defined at:
  1264 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  sp              1    wreg     PTR unsigned char 
  1267 ;;		 -> s(30), 
  1268 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1269 ;;		 -> STR_1(6), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  sp              1   38[BANK1 ] PTR unsigned char 
  1272 ;;		 -> s(30), 
  1273 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1274 ;;  tmpval          4   22[BANK1 ] struct .
  1275 ;;  val             4   18[BANK1 ] unsigned long 
  1276 ;;  prec            2   36[BANK1 ] int 
  1277 ;;  width           2   30[BANK1 ] int 
  1278 ;;  flag            2   28[BANK1 ] unsigned short 
  1279 ;;  eexp            2   26[BANK1 ] int 
  1280 ;;  cp              2    0        PTR const unsigned char 
  1281 ;;  len             2    0        unsigned int 
  1282 ;;  c               1   39[BANK1 ] unsigned char 
  1283 ;;  ap              1   17[BANK1 ] PTR void [1]
  1284 ;;		 -> ?_sprintf(2), 
  1285 ;;  d               1    0        unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  2   74[BANK0 ] int 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       5       0       0       0
  1296 ;;      Locals:         0       0      27       0       0
  1297 ;;      Temps:          0       0       5       0       0
  1298 ;;      Totals:         0       5      32       0       0
  1299 ;;Total ram usage:       37 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 4
  1302 ;; This function calls:
  1303 ;;		___awdiv
  1304 ;;		___fladd
  1305 ;;		___fleq
  1306 ;;		___flge
  1307 ;;		___flmul
  1308 ;;		___flneg
  1309 ;;		___flsub
  1310 ;;		___fltol
  1311 ;;		___lldiv
  1312 ;;		___llmod
  1313 ;;		___wmul
  1314 ;;		___xxtofl
  1315 ;;		__div_to_l_
  1316 ;;		__tdiv_to_l_
  1317 ;;		_fround
  1318 ;;		_isdigit
  1319 ;;		_scale
  1320 ;; This function is called by:
  1321 ;;		_main
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _sprintf
  1327  14FD                     _sprintf:
  1328                           
  1329                           ;incstack = 0
  1330                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1331                           ;sprintf@sp stored from wreg
  1332  14FD  1683               	bsf	3,5	;RP0=1, select bank1
  1333  14FE  1303               	bcf	3,6	;RP1=0, select bank1
  1334  14FF  00C6               	movwf	sprintf@sp^(0+128)
  1335  1500                     l3097:
  1336                           
  1337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1338  1500  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1339  1501  00A8               	movwf	??_sprintf^(0+128)
  1340  1502  0828               	movf	??_sprintf^(0+128),w
  1341  1503  00B1               	movwf	sprintf@ap^(0+128)
  1342  1504                     L1:
  1343                           
  1344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1345  1504  120A  118A  2D32   	goto	l3385
  1346  1507                     l3099:
  1347                           
  1348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1349  1507  3025               	movlw	37
  1350  1508  0647               	xorwf	sprintf@c^(0+128),w
  1351  1509  1903               	btfsc	3,2
  1352  150A  2D0C               	goto	u5081
  1353  150B  2D0D               	goto	u5080
  1354  150C                     u5081:
  1355  150C  2D19               	goto	l3105
  1356  150D                     u5080:
  1357  150D                     l3101:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1360  150D  0847               	movf	sprintf@c^(0+128),w
  1361  150E  00A8               	movwf	??_sprintf^(0+128)
  1362  150F  0846               	movf	sprintf@sp^(0+128),w
  1363  1510  0084               	movwf	4
  1364  1511  0828               	movf	??_sprintf^(0+128),w
  1365  1512  1383               	bcf	3,7	;select IRP bank0
  1366  1513  0080               	movwf	0
  1367  1514                     l3103:
  1368  1514  3001               	movlw	1
  1369  1515  00A8               	movwf	??_sprintf^(0+128)
  1370  1516  0828               	movf	??_sprintf^(0+128),w
  1371  1517  07C6               	addwf	sprintf@sp^(0+128),f
  1372                           
  1373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  1374  1518  2D04               	goto	L1
  1375  1519                     l3105:
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1378  1519  01BE               	clrf	sprintf@width^(0+128)
  1379  151A  01BF               	clrf	(sprintf@width+1)^(0+128)
  1380                           
  1381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1382  151B  01BC               	clrf	sprintf@flag^(0+128)
  1383  151C  01BD               	clrf	(sprintf@flag+1)^(0+128)
  1384  151D  2D25               	goto	l3111
  1385  151E                     l226:	
  1386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 596:    case '0':
  1387                           
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 597:     flag |= 
      +                          0x04;
  1390  151E  153C               	bsf	sprintf@flag^(0+128),2
  1391  151F                     l3107:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 598:     f++;
  1394  151F  3001               	movlw	1
  1395  1520  00A8               	movwf	??_sprintf^(0+128)
  1396  1521  0828               	movf	??_sprintf^(0+128),w
  1397  1522  1283               	bcf	3,5	;RP0=0, select bank0
  1398  1523  1303               	bcf	3,6	;RP1=0, select bank0
  1399  1524  07EA               	addwf	sprintf@f,f
  1400  1525                     l3111:	
  1401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 599:     continue
      +                          ;
  1402                           
  1403  1525  1283               	bcf	3,5	;RP0=0, select bank0
  1404  1526  086A               	movf	sprintf@f,w
  1405  1527  0084               	movwf	4
  1406  1528  160A  118A  2000  160A  118A  	fcall	stringdir
  1407  152D  1683               	bsf	3,5	;RP0=1, select bank1
  1408  152E  1303               	bcf	3,6	;RP1=0, select bank1
  1409  152F  00A8               	movwf	??_sprintf^(0+128)
  1410  1530  01A9               	clrf	(??_sprintf^(0+128)+1)
  1411                           
  1412                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1413                           ; Switch size 1, requested type "simple"
  1414                           ; Number of cases is 1, Range of values is 0 to 0
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte            4     3 (average)
  1418                           ; direct_byte           11     8 (fixed)
  1419                           ; jumptable            260     6 (fixed)
  1420                           ;	Chosen strategy is simple_byte
  1421  1531  0829               	movf	(??_sprintf+1)^(0+128),w
  1422  1532  3A00               	xorlw	0	; case 0
  1423  1533  1903               	skipnz
  1424  1534  2D36               	goto	l3503
  1425  1535  2D3B               	goto	l3113
  1426  1536                     l3503:
  1427                           
  1428                           ; Switch size 1, requested type "simple"
  1429                           ; Number of cases is 1, Range of values is 48 to 48
  1430                           ; switch strategies available:
  1431                           ; Name         Instructions Cycles
  1432                           ; simple_byte            4     3 (average)
  1433                           ; direct_byte           14    11 (fixed)
  1434                           ; jumptable            263     9 (fixed)
  1435                           ;	Chosen strategy is simple_byte
  1436  1536  0828               	movf	??_sprintf^(0+128),w
  1437  1537  3A30               	xorlw	48	; case 48
  1438  1538  1903               	skipnz
  1439  1539  2D1E               	goto	l226
  1440  153A  2D3B               	goto	l3113
  1441  153B                     l3113:
  1442                           
  1443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1444  153B  1283               	bcf	3,5	;RP0=0, select bank0
  1445  153C  1303               	bcf	3,6	;RP1=0, select bank0
  1446  153D  086A               	movf	sprintf@f,w
  1447  153E  0084               	movwf	4
  1448  153F  160A  118A  2000  160A  118A  	fcall	stringdir
  1449  1544  160A  158A  2450  160A  118A  	fcall	_isdigit
  1450  1549  1C03               	btfss	3,0
  1451  154A  2D4C               	goto	u5091
  1452  154B  2D4D               	goto	u5090
  1453  154C                     u5091:
  1454  154C  2D93               	goto	l3125
  1455  154D                     u5090:
  1456  154D                     l3115:
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1459  154D  1683               	bsf	3,5	;RP0=1, select bank1
  1460  154E  1303               	bcf	3,6	;RP1=0, select bank1
  1461  154F  01BE               	clrf	sprintf@width^(0+128)
  1462  1550  01BF               	clrf	(sprintf@width+1)^(0+128)
  1463  1551                     l3117:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1466  1551  300A               	movlw	10
  1467  1552  00F3               	movwf	___wmul@multiplier
  1468  1553  3000               	movlw	0
  1469  1554  00F4               	movwf	___wmul@multiplier+1
  1470  1555  1683               	bsf	3,5	;RP0=1, select bank1
  1471  1556  1303               	bcf	3,6	;RP1=0, select bank1
  1472  1557  083F               	movf	(sprintf@width+1)^(0+128),w
  1473  1558  00F6               	movwf	___wmul@multiplicand+1
  1474  1559  083E               	movf	sprintf@width^(0+128),w
  1475  155A  00F5               	movwf	___wmul@multiplicand
  1476  155B  160A  158A  2462  160A  118A  	fcall	___wmul
  1477  1560  0874               	movf	?___wmul+1,w
  1478  1561  1683               	bsf	3,5	;RP0=1, select bank1
  1479  1562  1303               	bcf	3,6	;RP1=0, select bank1
  1480  1563  00BF               	movwf	(sprintf@width+1)^(0+128)
  1481  1564  0873               	movf	?___wmul,w
  1482  1565  00BE               	movwf	sprintf@width^(0+128)
  1483  1566                     l3119:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1486  1566  1283               	bcf	3,5	;RP0=0, select bank0
  1487  1567  1303               	bcf	3,6	;RP1=0, select bank0
  1488  1568  086A               	movf	sprintf@f,w
  1489  1569  0084               	movwf	4
  1490  156A  160A  118A  2000  160A  118A  	fcall	stringdir
  1491  156F  3ED0               	addlw	208
  1492  1570  1683               	bsf	3,5	;RP0=1, select bank1
  1493  1571  1303               	bcf	3,6	;RP1=0, select bank1
  1494  1572  00A8               	movwf	??_sprintf^(0+128)
  1495  1573  30FF               	movlw	255
  1496  1574  1803               	skipnc
  1497  1575  3000               	movlw	0
  1498  1576  00A9               	movwf	(??_sprintf^(0+128)+1)
  1499  1577  0828               	movf	??_sprintf^(0+128),w
  1500  1578  07BE               	addwf	sprintf@width^(0+128),f
  1501  1579  1803               	skipnc
  1502  157A  0ABF               	incf	(sprintf@width+1)^(0+128),f
  1503  157B  0829               	movf	(??_sprintf+1)^(0+128),w
  1504  157C  07BF               	addwf	(sprintf@width+1)^(0+128),f
  1505  157D                     l3121:
  1506  157D  3001               	movlw	1
  1507  157E  00A8               	movwf	??_sprintf^(0+128)
  1508  157F  0828               	movf	??_sprintf^(0+128),w
  1509  1580  1283               	bcf	3,5	;RP0=0, select bank0
  1510  1581  1303               	bcf	3,6	;RP1=0, select bank0
  1511  1582  07EA               	addwf	sprintf@f,f
  1512  1583                     l3123:
  1513                           
  1514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1515  1583  086A               	movf	sprintf@f,w
  1516  1584  0084               	movwf	4
  1517  1585  160A  118A  2000  160A  118A  	fcall	stringdir
  1518  158A  160A  158A  2450  160A  118A  	fcall	_isdigit
  1519  158F  1803               	btfsc	3,0
  1520  1590  2D92               	goto	u5101
  1521  1591  2D93               	goto	u5100
  1522  1592                     u5101:
  1523  1592  2D51               	goto	l3117
  1524  1593                     u5100:
  1525  1593                     l3125:
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1528  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1529  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1530  1595  086A               	movf	sprintf@f,w
  1531  1596  0084               	movwf	4
  1532  1597  160A  118A  2000  160A  118A  	fcall	stringdir
  1533  159C  3A2E               	xorlw	46
  1534  159D  1D03               	skipz
  1535  159E  2DA0               	goto	u5111
  1536  159F  2DA1               	goto	u5110
  1537  15A0                     u5111:
  1538  15A0  2DF3               	goto	l3141
  1539  15A1                     u5110:
  1540  15A1                     l3127:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1543  15A1  1683               	bsf	3,5	;RP0=1, select bank1
  1544  15A2  1303               	bcf	3,6	;RP1=0, select bank1
  1545  15A3  173D               	bsf	(sprintf@flag^(0+128)+1),6
  1546  15A4                     l3129:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  1549  15A4  3001               	movlw	1
  1550  15A5  00A8               	movwf	??_sprintf^(0+128)
  1551  15A6  0828               	movf	??_sprintf^(0+128),w
  1552  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1553  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1554  15A9  07EA               	addwf	sprintf@f,f
  1555  15AA                     l3131:
  1556                           
  1557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1558  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1559  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1560  15AC  01C4               	clrf	sprintf@prec^(0+128)
  1561  15AD  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1564  15AE  2DE1               	goto	l3139
  1565  15AF                     l3133:
  1566                           
  1567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1568  15AF  300A               	movlw	10
  1569  15B0  00F3               	movwf	___wmul@multiplier
  1570  15B1  3000               	movlw	0
  1571  15B2  00F4               	movwf	___wmul@multiplier+1
  1572  15B3  1683               	bsf	3,5	;RP0=1, select bank1
  1573  15B4  1303               	bcf	3,6	;RP1=0, select bank1
  1574  15B5  0845               	movf	(sprintf@prec+1)^(0+128),w
  1575  15B6  00F6               	movwf	___wmul@multiplicand+1
  1576  15B7  0844               	movf	sprintf@prec^(0+128),w
  1577  15B8  00F5               	movwf	___wmul@multiplicand
  1578  15B9  160A  158A  2462  160A  118A  	fcall	___wmul
  1579  15BE  0874               	movf	?___wmul+1,w
  1580  15BF  1683               	bsf	3,5	;RP0=1, select bank1
  1581  15C0  1303               	bcf	3,6	;RP1=0, select bank1
  1582  15C1  00C5               	movwf	(sprintf@prec+1)^(0+128)
  1583  15C2  0873               	movf	?___wmul,w
  1584  15C3  00C4               	movwf	sprintf@prec^(0+128)
  1585  15C4                     l3135:
  1586                           
  1587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1588  15C4  1283               	bcf	3,5	;RP0=0, select bank0
  1589  15C5  1303               	bcf	3,6	;RP1=0, select bank0
  1590  15C6  086A               	movf	sprintf@f,w
  1591  15C7  0084               	movwf	4
  1592  15C8  160A  118A  2000  160A  118A  	fcall	stringdir
  1593  15CD  3ED0               	addlw	208
  1594  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1595  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1596  15D0  00A8               	movwf	??_sprintf^(0+128)
  1597  15D1  30FF               	movlw	255
  1598  15D2  1803               	skipnc
  1599  15D3  3000               	movlw	0
  1600  15D4  00A9               	movwf	(??_sprintf^(0+128)+1)
  1601  15D5  0828               	movf	??_sprintf^(0+128),w
  1602  15D6  07C4               	addwf	sprintf@prec^(0+128),f
  1603  15D7  1803               	skipnc
  1604  15D8  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  1605  15D9  0829               	movf	(??_sprintf+1)^(0+128),w
  1606  15DA  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  1607  15DB                     l3137:
  1608  15DB  3001               	movlw	1
  1609  15DC  00A8               	movwf	??_sprintf^(0+128)
  1610  15DD  0828               	movf	??_sprintf^(0+128),w
  1611  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1612  15DF  1303               	bcf	3,6	;RP1=0, select bank0
  1613  15E0  07EA               	addwf	sprintf@f,f
  1614  15E1                     l3139:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1617  15E1  1283               	bcf	3,5	;RP0=0, select bank0
  1618  15E2  086A               	movf	sprintf@f,w
  1619  15E3  0084               	movwf	4
  1620  15E4  160A  118A  2000  160A  118A  	fcall	stringdir
  1621  15E9  160A  158A  2450  160A  118A  	fcall	_isdigit
  1622  15EE  1803               	btfsc	3,0
  1623  15EF  2DF1               	goto	u5121
  1624  15F0  2DF2               	goto	u5120
  1625  15F1                     u5121:
  1626  15F1  2DAF               	goto	l3133
  1627  15F2                     u5120:
  1628  15F2  2DFB               	goto	l3147
  1629  15F3                     l3141:
  1630                           
  1631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1632  15F3  1683               	bsf	3,5	;RP0=1, select bank1
  1633  15F4  1303               	bcf	3,6	;RP1=0, select bank1
  1634  15F5  01C4               	clrf	sprintf@prec^(0+128)
  1635  15F6  01C5               	clrf	(sprintf@prec+1)^(0+128)
  1636  15F7                     l3143:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1639  15F7  163D               	bsf	(sprintf@flag^(0+128)+1),4
  1640  15F8  2DFB               	goto	l3147
  1641  15F9                     l241:	
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1643                           
  1644                           
  1645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1646  15F9  153D               	bsf	(sprintf@flag^(0+128)+1),2
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  1649  15FA  2E19               	goto	l3149
  1650  15FB                     l3147:
  1651  15FB  3001               	movlw	1
  1652  15FC  1283               	bcf	3,5	;RP0=0, select bank0
  1653  15FD  1303               	bcf	3,6	;RP1=0, select bank0
  1654  15FE  07EA               	addwf	sprintf@f,f
  1655  15FF  30FF               	movlw	-1
  1656  1600  076A               	addwf	sprintf@f,w
  1657  1601  0084               	movwf	4
  1658  1602  160A  118A  2000  160A  118A  	fcall	stringdir
  1659  1607  1683               	bsf	3,5	;RP0=1, select bank1
  1660  1608  1303               	bcf	3,6	;RP1=0, select bank1
  1661  1609  00C7               	movwf	sprintf@c^(0+128)
  1662  160A  00A8               	movwf	??_sprintf^(0+128)
  1663  160B  01A9               	clrf	(??_sprintf^(0+128)+1)
  1664                           
  1665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1666                           ; Switch size 1, requested type "simple"
  1667                           ; Number of cases is 1, Range of values is 0 to 0
  1668                           ; switch strategies available:
  1669                           ; Name         Instructions Cycles
  1670                           ; simple_byte            4     3 (average)
  1671                           ; direct_byte           11     8 (fixed)
  1672                           ; jumptable            260     6 (fixed)
  1673                           ;	Chosen strategy is simple_byte
  1674  160C  0829               	movf	(??_sprintf+1)^(0+128),w
  1675  160D  3A00               	xorlw	0	; case 0
  1676  160E  1903               	skipnz
  1677  160F  2E11               	goto	l3505
  1678  1610  2D04               	goto	L1
  1679  1611                     l3505:
  1680                           
  1681                           ; Switch size 1, requested type "simple"
  1682                           ; Number of cases is 2, Range of values is 0 to 102
  1683                           ; switch strategies available:
  1684                           ; Name         Instructions Cycles
  1685                           ; simple_byte            7     4 (average)
  1686                           ; jumptable            260     6 (fixed)
  1687                           ;	Chosen strategy is simple_byte
  1688  1611  0828               	movf	??_sprintf^(0+128),w
  1689  1612  3A00               	xorlw	0	; case 0
  1690  1613  1903               	skipnz
  1691  1614  2FFD               	goto	L3
  1692  1615  3A66               	xorlw	102	; case 102
  1693  1616  1903               	skipnz
  1694  1617  2DF9               	goto	l241
  1695  1618  2D04               	goto	L1
  1696  1619                     l3149:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1699  1619  3000               	movlw	0
  1700  161A  053C               	andwf	sprintf@flag^(0+128),w
  1701  161B  00A8               	movwf	??_sprintf^(0+128)
  1702  161C  3007               	movlw	7
  1703  161D  053D               	andwf	(sprintf@flag+1)^(0+128),w
  1704  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  1705  161F  0828               	movf	??_sprintf^(0+128),w
  1706  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1707  1621  1903               	btfsc	3,2
  1708  1622  2E24               	goto	u5131
  1709  1623  2E27               	goto	u5130
  1710  1624                     u5131:
  1711  1624  120A  118A  2C34   	goto	l3323
  1712  1627                     u5130:
  1713  1627                     l3151:
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1716  1627  1E3D               	btfss	(sprintf@flag+1)^(0+128),4
  1717  1628  2E2A               	goto	u5141
  1718  1629  2E2B               	goto	u5140
  1719  162A                     u5141:
  1720  162A  2E2F               	goto	l3155
  1721  162B                     u5140:
  1722  162B                     l3153:
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1725  162B  3006               	movlw	6
  1726  162C  00C4               	movwf	sprintf@prec^(0+128)
  1727  162D  3000               	movlw	0
  1728  162E  00C5               	movwf	(sprintf@prec^(0+128)+1)
  1729  162F                     l3155:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1732  162F  0831               	movf	sprintf@ap^(0+128),w
  1733  1630  0084               	movwf	4
  1734  1631  1383               	bcf	3,7	;select IRP bank0
  1735  1632  0800               	movf	0,w
  1736  1633  00C0               	movwf	sprintf@fval^(0+128)
  1737  1634  0A84               	incf	4,f
  1738  1635  0800               	movf	0,w
  1739  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1740  1637  0A84               	incf	4,f
  1741  1638  0800               	movf	0,w
  1742  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1743  163A  0A84               	incf	4,f
  1744  163B  0800               	movf	0,w
  1745  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1746  163D                     l3157:
  1747  163D  3004               	movlw	4
  1748  163E  00A8               	movwf	??_sprintf^(0+128)
  1749  163F  0828               	movf	??_sprintf^(0+128),w
  1750  1640  07B1               	addwf	sprintf@ap^(0+128),f
  1751  1641                     l3159:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1754  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  1755  1642  00F6               	movwf	___flge@ff1+3
  1756  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  1757  1644  00F5               	movwf	___flge@ff1+2
  1758  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  1759  1646  00F4               	movwf	___flge@ff1+1
  1760  1647  0840               	movf	sprintf@fval^(0+128),w
  1761  1648  00F3               	movwf	___flge@ff1
  1762  1649  3000               	movlw	0
  1763  164A  00FA               	movwf	___flge@ff2+3
  1764  164B  3000               	movlw	0
  1765  164C  00F9               	movwf	___flge@ff2+2
  1766  164D  3000               	movlw	0
  1767  164E  00F8               	movwf	___flge@ff2+1
  1768  164F  3000               	movlw	0
  1769  1650  00F7               	movwf	___flge@ff2
  1770  1651  160A  118A  20D3  160A  118A  	fcall	___flge
  1771  1656  1803               	btfsc	3,0
  1772  1657  2E59               	goto	u5151
  1773  1658  2E5A               	goto	u5150
  1774  1659                     u5151:
  1775  1659  2E77               	goto	l3165
  1776  165A                     u5150:
  1777  165A                     l3161:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1780  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1781  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1782  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  1783  165D  00F6               	movwf	___flneg@f1+3
  1784  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  1785  165F  00F5               	movwf	___flneg@f1+2
  1786  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  1787  1661  00F4               	movwf	___flneg@f1+1
  1788  1662  0840               	movf	sprintf@fval^(0+128),w
  1789  1663  00F3               	movwf	___flneg@f1
  1790  1664  160A  158A  2445  160A  118A  	fcall	___flneg
  1791  1669  0876               	movf	?___flneg+3,w
  1792  166A  1683               	bsf	3,5	;RP0=1, select bank1
  1793  166B  1303               	bcf	3,6	;RP1=0, select bank1
  1794  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  1795  166D  0875               	movf	?___flneg+2,w
  1796  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  1797  166F  0874               	movf	?___flneg+1,w
  1798  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  1799  1671  0873               	movf	?___flneg,w
  1800  1672  00C0               	movwf	sprintf@fval^(0+128)
  1801  1673                     l3163:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1804  1673  3003               	movlw	3
  1805  1674  04BC               	iorwf	sprintf@flag^(0+128),f
  1806  1675  3000               	movlw	0
  1807  1676  04BD               	iorwf	(sprintf@flag+1)^(0+128),f
  1808  1677                     l3165:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1811  1677  1683               	bsf	3,5	;RP0=1, select bank1
  1812  1678  1303               	bcf	3,6	;RP1=0, select bank1
  1813  1679  01BA               	clrf	sprintf@eexp^(0+128)
  1814  167A  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  1815  167B                     l3167:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  1818  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  1819  167C  00F6               	movwf	___fleq@ff1+3
  1820  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  1821  167E  00F5               	movwf	___fleq@ff1+2
  1822  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  1823  1680  00F4               	movwf	___fleq@ff1+1
  1824  1681  0840               	movf	sprintf@fval^(0+128),w
  1825  1682  00F3               	movwf	___fleq@ff1
  1826  1683  3000               	movlw	0
  1827  1684  00FA               	movwf	___fleq@ff2+3
  1828  1685  3000               	movlw	0
  1829  1686  00F9               	movwf	___fleq@ff2+2
  1830  1687  3000               	movlw	0
  1831  1688  00F8               	movwf	___fleq@ff2+1
  1832  1689  3000               	movlw	0
  1833  168A  00F7               	movwf	___fleq@ff2
  1834  168B  160A  158A  2555  160A  118A  	fcall	___fleq
  1835  1690  1803               	btfsc	3,0
  1836  1691  2E93               	goto	u5161
  1837  1692  2E94               	goto	u5160
  1838  1693                     u5161:
  1839  1693  2F94               	goto	l3193
  1840  1694                     u5160:
  1841  1694                     l3169:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1844  1694  1003               	clrc
  1845  1695  1683               	bsf	3,5	;RP0=1, select bank1
  1846  1696  1303               	bcf	3,6	;RP1=0, select bank1
  1847  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  1848  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  1849  1699  3E82               	addlw	130
  1850  169A  00BA               	movwf	sprintf@eexp^(0+128)
  1851  169B  30FF               	movlw	255
  1852  169C  1803               	skipnc
  1853  169D  3000               	movlw	0
  1854  169E  00BB               	movwf	(sprintf@eexp^(0+128)+1)
  1855  169F                     l3171:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  1858  169F  30FF               	movlw	255
  1859  16A0  07BA               	addwf	sprintf@eexp^(0+128),f
  1860  16A1  1803               	skipnc
  1861  16A2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1862  16A3  30FF               	movlw	255
  1863  16A4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1864  16A5                     l3173:
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  1867  16A5  3003               	movlw	3
  1868  16A6  00F3               	movwf	___wmul@multiplier
  1869  16A7  3000               	movlw	0
  1870  16A8  00F4               	movwf	___wmul@multiplier+1
  1871  16A9  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1872  16AA  00F6               	movwf	___wmul@multiplicand+1
  1873  16AB  083A               	movf	sprintf@eexp^(0+128),w
  1874  16AC  00F5               	movwf	___wmul@multiplicand
  1875  16AD  160A  158A  2462  160A  118A  	fcall	___wmul
  1876  16B2  0874               	movf	?___wmul+1,w
  1877  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  1878  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  1879  16B5  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1880  16B6  0873               	movf	?___wmul,w
  1881  16B7  00BA               	movwf	sprintf@eexp^(0+128)
  1882  16B8                     l3175:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  1885  16B8  300A               	movlw	10
  1886  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  1887  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  1888  16BB  00A0               	movwf	___awdiv@divisor
  1889  16BC  3000               	movlw	0
  1890  16BD  00A1               	movwf	___awdiv@divisor+1
  1891  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  1892  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  1893  16C0  083B               	movf	(sprintf@eexp+1)^(0+128),w
  1894  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  1895  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  1896  16C3  00A3               	movwf	___awdiv@dividend+1
  1897  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  1898  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  1899  16C6  083A               	movf	sprintf@eexp^(0+128),w
  1900  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  1901  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  1902  16C9  00A2               	movwf	___awdiv@dividend
  1903  16CA  160A  158A  270C  160A  118A  	fcall	___awdiv
  1904  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  1905  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  1906  16D1  0821               	movf	?___awdiv+1,w
  1907  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  1908  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  1909  16D4  00BB               	movwf	(sprintf@eexp+1)^(0+128)
  1910  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  1911  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  1912  16D7  0820               	movf	?___awdiv,w
  1913  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  1914  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  1915  16DA  00BA               	movwf	sprintf@eexp^(0+128)
  1916  16DB                     l3177:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  1919  16DB  1FBB               	btfss	(sprintf@eexp+1)^(0+128),7
  1920  16DC  2EDE               	goto	u5171
  1921  16DD  2EDF               	goto	u5170
  1922  16DE                     u5171:
  1923  16DE  2EE5               	goto	l3181
  1924  16DF                     u5170:
  1925  16DF                     l3179:
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1928  16DF  30FF               	movlw	255
  1929  16E0  07BA               	addwf	sprintf@eexp^(0+128),f
  1930  16E1  1803               	skipnc
  1931  16E2  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  1932  16E3  30FF               	movlw	255
  1933  16E4  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  1934  16E5                     l3181:
  1935                           
  1936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  1937  16E5  033A               	decf	sprintf@eexp^(0+128),w
  1938  16E6  3AFF               	xorlw	255
  1939  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  1940  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  1941  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  1942  16EE  0845               	movf	?_scale+3,w
  1943  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  1944  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  1945  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  1946  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1947  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1948  16F4  0844               	movf	?_scale+2,w
  1949  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  1950  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  1951  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  1952  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  1953  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  1954  16FA  0843               	movf	?_scale+1,w
  1955  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  1956  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  1957  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  1958  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  1959  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  1960  1700  0842               	movf	?_scale,w
  1961  1701  1683               	bsf	3,5	;RP0=1, select bank1
  1962  1702  1303               	bcf	3,6	;RP1=0, select bank1
  1963  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  1964  1704                     l3183:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  1967  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  1968  1705  1283               	bcf	3,5	;RP0=0, select bank0
  1969  1706  1303               	bcf	3,6	;RP1=0, select bank0
  1970  1707  00AB               	movwf	___flmul@b+3
  1971  1708  1683               	bsf	3,5	;RP0=1, select bank1
  1972  1709  1303               	bcf	3,6	;RP1=0, select bank1
  1973  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  1974  170B  1283               	bcf	3,5	;RP0=0, select bank0
  1975  170C  1303               	bcf	3,6	;RP1=0, select bank0
  1976  170D  00AA               	movwf	___flmul@b+2
  1977  170E  1683               	bsf	3,5	;RP0=1, select bank1
  1978  170F  1303               	bcf	3,6	;RP1=0, select bank1
  1979  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  1980  1711  1283               	bcf	3,5	;RP0=0, select bank0
  1981  1712  1303               	bcf	3,6	;RP1=0, select bank0
  1982  1713  00A9               	movwf	___flmul@b+1
  1983  1714  1683               	bsf	3,5	;RP0=1, select bank1
  1984  1715  1303               	bcf	3,6	;RP1=0, select bank1
  1985  1716  0840               	movf	sprintf@fval^(0+128),w
  1986  1717  1283               	bcf	3,5	;RP0=0, select bank0
  1987  1718  1303               	bcf	3,6	;RP1=0, select bank0
  1988  1719  00A8               	movwf	___flmul@b
  1989  171A  1683               	bsf	3,5	;RP0=1, select bank1
  1990  171B  1303               	bcf	3,6	;RP1=0, select bank1
  1991  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  1992  171D  1283               	bcf	3,5	;RP0=0, select bank0
  1993  171E  1303               	bcf	3,6	;RP1=0, select bank0
  1994  171F  00AF               	movwf	___flmul@a+3
  1995  1720  1683               	bsf	3,5	;RP0=1, select bank1
  1996  1721  1303               	bcf	3,6	;RP1=0, select bank1
  1997  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  1998  1723  1283               	bcf	3,5	;RP0=0, select bank0
  1999  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2000  1725  00AE               	movwf	___flmul@a+2
  2001  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2002  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2003  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2004  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2005  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2006  172B  00AD               	movwf	___flmul@a+1
  2007  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2008  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2009  172E  0836               	movf	sprintf@tmpval^(0+128),w
  2010  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2011  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2012  1731  00AC               	movwf	___flmul@a
  2013  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2014  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2015  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2016  1739  082B               	movf	?___flmul+3,w
  2017  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2018  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2019  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2020  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2021  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2022  173F  082A               	movf	?___flmul+2,w
  2023  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2024  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2025  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2026  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2027  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2028  1745  0829               	movf	?___flmul+1,w
  2029  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2030  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2031  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2032  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2033  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2034  174B  0828               	movf	?___flmul,w
  2035  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2036  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2037  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  2038  174F                     l3185:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2041  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2042  1750  00F6               	movwf	___flge@ff1+3
  2043  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2044  1752  00F5               	movwf	___flge@ff1+2
  2045  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2046  1754  00F4               	movwf	___flge@ff1+1
  2047  1755  0836               	movf	sprintf@tmpval^(0+128),w
  2048  1756  00F3               	movwf	___flge@ff1
  2049  1757  303F               	movlw	63
  2050  1758  00FA               	movwf	___flge@ff2+3
  2051  1759  3080               	movlw	128
  2052  175A  00F9               	movwf	___flge@ff2+2
  2053  175B  3000               	movlw	0
  2054  175C  00F8               	movwf	___flge@ff2+1
  2055  175D  3000               	movlw	0
  2056  175E  00F7               	movwf	___flge@ff2
  2057  175F  160A  118A  20D3  160A  118A  	fcall	___flge
  2058  1764  1803               	btfsc	3,0
  2059  1765  2F67               	goto	u5181
  2060  1766  2F68               	goto	u5180
  2061  1767                     u5181:
  2062  1767  2F71               	goto	l3189
  2063  1768                     u5180:
  2064  1768                     l3187:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2067  1768  30FF               	movlw	255
  2068  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2069  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2070  176B  07BA               	addwf	sprintf@eexp^(0+128),f
  2071  176C  1803               	skipnc
  2072  176D  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2073  176E  30FF               	movlw	255
  2074  176F  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2075  1770  2F94               	goto	l3193
  2076  1771                     l3189:
  2077  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2078  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2079  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2080  1774  00F6               	movwf	___flge@ff1+3
  2081  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2082  1776  00F5               	movwf	___flge@ff1+2
  2083  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2084  1778  00F4               	movwf	___flge@ff1+1
  2085  1779  0836               	movf	sprintf@tmpval^(0+128),w
  2086  177A  00F3               	movwf	___flge@ff1
  2087  177B  3041               	movlw	65
  2088  177C  00FA               	movwf	___flge@ff2+3
  2089  177D  3020               	movlw	32
  2090  177E  00F9               	movwf	___flge@ff2+2
  2091  177F  3000               	movlw	0
  2092  1780  00F8               	movwf	___flge@ff2+1
  2093  1781  3000               	movlw	0
  2094  1782  00F7               	movwf	___flge@ff2
  2095  1783  160A  118A  20D3  160A  118A  	fcall	___flge
  2096  1788  1C03               	btfss	3,0
  2097  1789  2F8B               	goto	u5191
  2098  178A  2F8C               	goto	u5190
  2099  178B                     u5191:
  2100  178B  2F94               	goto	l3193
  2101  178C                     u5190:
  2102  178C                     l3191:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2105  178C  3001               	movlw	1
  2106  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2107  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2108  178F  07BA               	addwf	sprintf@eexp^(0+128),f
  2109  1790  1803               	skipnc
  2110  1791  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  2111  1792  3000               	movlw	0
  2112  1793  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  2113  1794                     l3193:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2116  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2117  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2118  1796  0845               	movf	(sprintf@prec+1)^(0+128),w
  2119  1797  3A80               	xorlw	128
  2120  1798  00FF               	movwf	btemp+1
  2121  1799  3080               	movlw	128
  2122  179A  027F               	subwf	btemp+1,w
  2123  179B  1D03               	skipz
  2124  179C  2F9F               	goto	u5205
  2125  179D  300D               	movlw	13
  2126  179E  0244               	subwf	sprintf@prec^(0+128),w
  2127  179F                     u5205:
  2128  179F  1803               	skipnc
  2129  17A0  2FA2               	goto	u5201
  2130  17A1  2FA3               	goto	u5200
  2131  17A2                     u5201:
  2132  17A2  2FEA               	goto	l3197
  2133  17A3                     u5200:
  2134  17A3                     l3195:
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2137  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2138  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2139  17A5  0844               	movf	sprintf@prec^(0+128),w
  2140  17A6  160A  118A  22F0  160A  118A  	fcall	_fround
  2141  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2142  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2143  17AD  0845               	movf	?_fround+3,w
  2144  17AE  00D9               	movwf	___fladd@b+3
  2145  17AF  0844               	movf	?_fround+2,w
  2146  17B0  00D8               	movwf	___fladd@b+2
  2147  17B1  0843               	movf	?_fround+1,w
  2148  17B2  00D7               	movwf	___fladd@b+1
  2149  17B3  0842               	movf	?_fround,w
  2150  17B4  00D6               	movwf	___fladd@b
  2151  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2152  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2153  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2154  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2155  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2156  17BA  00DD               	movwf	___fladd@a+3
  2157  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2158  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2159  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2160  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2161  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2162  17C0  00DC               	movwf	___fladd@a+2
  2163  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2164  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2165  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2166  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2167  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2168  17C6  00DB               	movwf	___fladd@a+1
  2169  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2170  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2171  17C9  0840               	movf	sprintf@fval^(0+128),w
  2172  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2173  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2174  17CC  00DA               	movwf	___fladd@a
  2175  17CD  120A  118A  254F  160A  118A  	fcall	___fladd
  2176  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2177  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2178  17D4  0859               	movf	?___fladd+3,w
  2179  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2180  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2181  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2182  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2183  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2184  17DA  0858               	movf	?___fladd+2,w
  2185  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2186  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2187  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2188  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2189  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2190  17E0  0857               	movf	?___fladd+1,w
  2191  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2192  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2193  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2194  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2195  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2196  17E6  0856               	movf	?___fladd,w
  2197  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2198  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2199  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2200  17EA                     l3197:
  2201                           
  2202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2203  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2204  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2205  17EC  083B               	movf	(sprintf@eexp+1)^(0+128),w
  2206  17ED  3A80               	xorlw	128
  2207  17EE  00FF               	movwf	btemp+1
  2208  17EF  3080               	movlw	128
  2209  17F0  027F               	subwf	btemp+1,w
  2210  17F1  1D03               	skipz
  2211  17F2  2FF5               	goto	u5215
  2212  17F3  300A               	movlw	10
  2213  17F4  023A               	subwf	sprintf@eexp^(0+128),w
  2214  17F5                     u5215:
  2215  17F5  1803               	skipnc
  2216  17F6  2FFA               	goto	u5211
  2217  17F7  120A  118A  281F   	goto	u5210
  2218  17FA                     u5211:
  2219  17FA  120A  118A  2870   	goto	l3205
  2220  17FD                     L3:
  2221  17FD                     L2:
  2222  17FD  120A  118A  2D4A   	ljmp	l3387
  2223                           
  2224                           	psect	text2
  2225  0C9D                     __ptext2:	
  2226 ;; *************** function _scale *****************
  2227 ;; Defined at:
  2228 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  scl             1    wreg     char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  scl             1   52[BANK0 ] char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  4   34[BANK0 ] char 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2242 ;;      Params:         0       4       0       0       0
  2243 ;;      Locals:         0       5       0       0       0
  2244 ;;      Temps:          0      10       0       0       0
  2245 ;;      Totals:         0      19       0       0       0
  2246 ;;Total ram usage:       19 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 3
  2249 ;; This function calls:
  2250 ;;		___awdiv
  2251 ;;		___awmod
  2252 ;;		___flmul
  2253 ;; This function is called by:
  2254 ;;		_sprintf
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function _scale
  2260  0C9D                     _scale:
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2264                           ;scale@scl stored from wreg
  2265  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0C9F  00D4               	movwf	scale@scl
  2268  0CA0                     l2701:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2271  0CA0  1FD4               	btfss	scale@scl,7
  2272  0CA1  2CA3               	goto	u4111
  2273  0CA2  2CA4               	goto	u4110
  2274  0CA3                     u4111:
  2275  0CA3  2E53               	goto	l2723
  2276  0CA4                     u4110:
  2277  0CA4                     l2703:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2280  0CA4  09D4               	comf	scale@scl,f
  2281  0CA5  0AD4               	incf	scale@scl,f
  2282  0CA6                     l2705:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2285  0CA6  0854               	movf	scale@scl,w
  2286  0CA7  3A80               	xorlw	128
  2287  0CA8  3E12               	addlw	-238
  2288  0CA9  1C03               	skipc
  2289  0CAA  2CAC               	goto	u4121
  2290  0CAB  2CAD               	goto	u4120
  2291  0CAC                     u4121:
  2292  0CAC  2D97               	goto	l2713
  2293  0CAD                     u4120:
  2294  0CAD                     l2707:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2297  0CAD  300A               	movlw	10
  2298  0CAE  00A0               	movwf	___awdiv@divisor
  2299  0CAF  3000               	movlw	0
  2300  0CB0  00A1               	movwf	___awdiv@divisor+1
  2301  0CB1  0854               	movf	scale@scl,w
  2302  0CB2  00F5               	movwf	___awmod@dividend
  2303  0CB3  01F6               	clrf	___awmod@dividend+1
  2304  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2305  0CB5  03F6               	decf	___awmod@dividend+1,f
  2306  0CB6  3064               	movlw	100
  2307  0CB7  00F3               	movwf	___awmod@divisor
  2308  0CB8  3000               	movlw	0
  2309  0CB9  00F4               	movwf	___awmod@divisor+1
  2310  0CBA  160A  158A  264B  120A  158A  	fcall	___awmod
  2311  0CBF  0874               	movf	?___awmod+1,w
  2312  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0CC2  00A3               	movwf	___awdiv@dividend+1
  2315  0CC3  0873               	movf	?___awmod,w
  2316  0CC4  00A2               	movwf	___awdiv@dividend
  2317  0CC5  160A  158A  270C  120A  158A  	fcall	___awdiv
  2318  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0CCC  0820               	movf	?___awdiv,w
  2321  0CCD  00C6               	movwf	??_scale
  2322  0CCE  3001               	movlw	1
  2323  0CCF                     u4135:
  2324  0CCF  1003               	clrc
  2325  0CD0  0DC6               	rlf	??_scale,f
  2326  0CD1  3EFF               	addlw	-1
  2327  0CD2  1D03               	skipz
  2328  0CD3  2CCF               	goto	u4135
  2329  0CD4  1003               	clrc
  2330  0CD5  0D46               	rlf	??_scale,w
  2331  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2332  0CD7  0084               	movwf	4
  2333  0CD8  160A  118A  2000  120A  158A  	fcall	stringdir
  2334  0CDD  00C7               	movwf	??_scale+1
  2335  0CDE  160A  118A  2000  120A  158A  	fcall	stringdir
  2336  0CE3  00C8               	movwf	??_scale+2
  2337  0CE4  160A  118A  2000  120A  158A  	fcall	stringdir
  2338  0CE9  00C9               	movwf	??_scale+3
  2339  0CEA  160A  118A  2000  120A  158A  	fcall	stringdir
  2340  0CEF  00CA               	movwf	??_scale+4
  2341  0CF0  084A               	movf	??_scale+4,w
  2342  0CF1  00AB               	movwf	___flmul@b+3
  2343  0CF2  0849               	movf	??_scale+3,w
  2344  0CF3  00AA               	movwf	___flmul@b+2
  2345  0CF4  0848               	movf	??_scale+2,w
  2346  0CF5  00A9               	movwf	___flmul@b+1
  2347  0CF6  0847               	movf	??_scale+1,w
  2348  0CF7  00A8               	movwf	___flmul@b
  2349  0CF8  3064               	movlw	100
  2350  0CF9  00A0               	movwf	___awdiv@divisor
  2351  0CFA  3000               	movlw	0
  2352  0CFB  00A1               	movwf	___awdiv@divisor+1
  2353  0CFC  0854               	movf	scale@scl,w
  2354  0CFD  00A2               	movwf	___awdiv@dividend
  2355  0CFE  01A3               	clrf	___awdiv@dividend+1
  2356  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2357  0D00  03A3               	decf	___awdiv@dividend+1,f
  2358  0D01  160A  158A  270C  120A  158A  	fcall	___awdiv
  2359  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0D08  0820               	movf	?___awdiv,w
  2362  0D09  00CB               	movwf	??_scale+5
  2363  0D0A  3001               	movlw	1
  2364  0D0B                     u4145:
  2365  0D0B  1003               	clrc
  2366  0D0C  0DCB               	rlf	??_scale+5,f
  2367  0D0D  3EFF               	addlw	-1
  2368  0D0E  1D03               	skipz
  2369  0D0F  2D0B               	goto	u4145
  2370  0D10  1003               	clrc
  2371  0D11  0D4B               	rlf	??_scale+5,w
  2372  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2373  0D13  0084               	movwf	4
  2374  0D14  160A  118A  2000  120A  158A  	fcall	stringdir
  2375  0D19  00CC               	movwf	??_scale+6
  2376  0D1A  160A  118A  2000  120A  158A  	fcall	stringdir
  2377  0D1F  00CD               	movwf	??_scale+7
  2378  0D20  160A  118A  2000  120A  158A  	fcall	stringdir
  2379  0D25  00CE               	movwf	??_scale+8
  2380  0D26  160A  118A  2000  120A  158A  	fcall	stringdir
  2381  0D2B  00CF               	movwf	??_scale+9
  2382  0D2C  084F               	movf	??_scale+9,w
  2383  0D2D  00AF               	movwf	___flmul@a+3
  2384  0D2E  084E               	movf	??_scale+8,w
  2385  0D2F  00AE               	movwf	___flmul@a+2
  2386  0D30  084D               	movf	??_scale+7,w
  2387  0D31  00AD               	movwf	___flmul@a+1
  2388  0D32  084C               	movf	??_scale+6,w
  2389  0D33  00AC               	movwf	___flmul@a
  2390  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2391  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0D3B  082B               	movf	?___flmul+3,w
  2394  0D3C  00D3               	movwf	_scale$1154+3
  2395  0D3D  082A               	movf	?___flmul+2,w
  2396  0D3E  00D2               	movwf	_scale$1154+2
  2397  0D3F  0829               	movf	?___flmul+1,w
  2398  0D40  00D1               	movwf	_scale$1154+1
  2399  0D41  0828               	movf	?___flmul,w
  2400  0D42  00D0               	movwf	_scale$1154
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2403  0D43  300A               	movlw	10
  2404  0D44  00F3               	movwf	___awmod@divisor
  2405  0D45  3000               	movlw	0
  2406  0D46  00F4               	movwf	___awmod@divisor+1
  2407  0D47  0854               	movf	scale@scl,w
  2408  0D48  00F5               	movwf	___awmod@dividend
  2409  0D49  01F6               	clrf	___awmod@dividend+1
  2410  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2411  0D4B  03F6               	decf	___awmod@dividend+1,f
  2412  0D4C  160A  158A  264B  120A  158A  	fcall	___awmod
  2413  0D51  0873               	movf	?___awmod,w
  2414  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2416  0D54  00C6               	movwf	??_scale
  2417  0D55  3001               	movlw	1
  2418  0D56                     u4155:
  2419  0D56  1003               	clrc
  2420  0D57  0DC6               	rlf	??_scale,f
  2421  0D58  3EFF               	addlw	-1
  2422  0D59  1D03               	skipz
  2423  0D5A  2D56               	goto	u4155
  2424  0D5B  1003               	clrc
  2425  0D5C  0D46               	rlf	??_scale,w
  2426  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2427  0D5E  0084               	movwf	4
  2428  0D5F  160A  118A  2000  120A  158A  	fcall	stringdir
  2429  0D64  00C7               	movwf	??_scale+1
  2430  0D65  160A  118A  2000  120A  158A  	fcall	stringdir
  2431  0D6A  00C8               	movwf	??_scale+2
  2432  0D6B  160A  118A  2000  120A  158A  	fcall	stringdir
  2433  0D70  00C9               	movwf	??_scale+3
  2434  0D71  160A  118A  2000  120A  158A  	fcall	stringdir
  2435  0D76  00CA               	movwf	??_scale+4
  2436  0D77  084A               	movf	??_scale+4,w
  2437  0D78  00AB               	movwf	___flmul@b+3
  2438  0D79  0849               	movf	??_scale+3,w
  2439  0D7A  00AA               	movwf	___flmul@b+2
  2440  0D7B  0848               	movf	??_scale+2,w
  2441  0D7C  00A9               	movwf	___flmul@b+1
  2442  0D7D  0847               	movf	??_scale+1,w
  2443  0D7E  00A8               	movwf	___flmul@b
  2444  0D7F  0853               	movf	_scale$1154+3,w
  2445  0D80  00AF               	movwf	___flmul@a+3
  2446  0D81  0852               	movf	_scale$1154+2,w
  2447  0D82  00AE               	movwf	___flmul@a+2
  2448  0D83  0851               	movf	_scale$1154+1,w
  2449  0D84  00AD               	movwf	___flmul@a+1
  2450  0D85  0850               	movf	_scale$1154,w
  2451  0D86  00AC               	movwf	___flmul@a
  2452  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2453  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0D8E  082B               	movf	?___flmul+3,w
  2456  0D8F  00C5               	movwf	?_scale+3
  2457  0D90  082A               	movf	?___flmul+2,w
  2458  0D91  00C4               	movwf	?_scale+2
  2459  0D92  0829               	movf	?___flmul+1,w
  2460  0D93  00C3               	movwf	?_scale+1
  2461  0D94  0828               	movf	?___flmul,w
  2462  0D95  00C2               	movwf	?_scale
  2463  0D96  2FFF               	goto	l213
  2464  0D97                     l2713:
  2465  0D97  0854               	movf	scale@scl,w
  2466  0D98  3A80               	xorlw	128
  2467  0D99  3E75               	addlw	-139
  2468  0D9A  1C03               	skipc
  2469  0D9B  2D9D               	goto	u4161
  2470  0D9C  2D9E               	goto	u4160
  2471  0D9D                     u4161:
  2472  0D9D  2E26               	goto	l2719
  2473  0D9E                     u4160:
  2474  0D9E                     l2715:
  2475                           
  2476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2477  0D9E  300A               	movlw	10
  2478  0D9F  00F3               	movwf	___awmod@divisor
  2479  0DA0  3000               	movlw	0
  2480  0DA1  00F4               	movwf	___awmod@divisor+1
  2481  0DA2  0854               	movf	scale@scl,w
  2482  0DA3  00F5               	movwf	___awmod@dividend
  2483  0DA4  01F6               	clrf	___awmod@dividend+1
  2484  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2485  0DA6  03F6               	decf	___awmod@dividend+1,f
  2486  0DA7  160A  158A  264B  120A  158A  	fcall	___awmod
  2487  0DAC  0873               	movf	?___awmod,w
  2488  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0DAF  00C6               	movwf	??_scale
  2491  0DB0  3001               	movlw	1
  2492  0DB1                     u4175:
  2493  0DB1  1003               	clrc
  2494  0DB2  0DC6               	rlf	??_scale,f
  2495  0DB3  3EFF               	addlw	-1
  2496  0DB4  1D03               	skipz
  2497  0DB5  2DB1               	goto	u4175
  2498  0DB6  1003               	clrc
  2499  0DB7  0D46               	rlf	??_scale,w
  2500  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2501  0DB9  0084               	movwf	4
  2502  0DBA  160A  118A  2000  120A  158A  	fcall	stringdir
  2503  0DBF  00C7               	movwf	??_scale+1
  2504  0DC0  160A  118A  2000  120A  158A  	fcall	stringdir
  2505  0DC5  00C8               	movwf	??_scale+2
  2506  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  2507  0DCB  00C9               	movwf	??_scale+3
  2508  0DCC  160A  118A  2000  120A  158A  	fcall	stringdir
  2509  0DD1  00CA               	movwf	??_scale+4
  2510  0DD2  084A               	movf	??_scale+4,w
  2511  0DD3  00AB               	movwf	___flmul@b+3
  2512  0DD4  0849               	movf	??_scale+3,w
  2513  0DD5  00AA               	movwf	___flmul@b+2
  2514  0DD6  0848               	movf	??_scale+2,w
  2515  0DD7  00A9               	movwf	___flmul@b+1
  2516  0DD8  0847               	movf	??_scale+1,w
  2517  0DD9  00A8               	movwf	___flmul@b
  2518  0DDA  300A               	movlw	10
  2519  0DDB  00A0               	movwf	___awdiv@divisor
  2520  0DDC  3000               	movlw	0
  2521  0DDD  00A1               	movwf	___awdiv@divisor+1
  2522  0DDE  0854               	movf	scale@scl,w
  2523  0DDF  00A2               	movwf	___awdiv@dividend
  2524  0DE0  01A3               	clrf	___awdiv@dividend+1
  2525  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2526  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2527  0DE3  160A  158A  270C  120A  158A  	fcall	___awdiv
  2528  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2529  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2530  0DEA  0820               	movf	?___awdiv,w
  2531  0DEB  00CB               	movwf	??_scale+5
  2532  0DEC  3001               	movlw	1
  2533  0DED                     u4185:
  2534  0DED  1003               	clrc
  2535  0DEE  0DCB               	rlf	??_scale+5,f
  2536  0DEF  3EFF               	addlw	-1
  2537  0DF0  1D03               	skipz
  2538  0DF1  2DED               	goto	u4185
  2539  0DF2  1003               	clrc
  2540  0DF3  0D4B               	rlf	??_scale+5,w
  2541  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2542  0DF5  0084               	movwf	4
  2543  0DF6  160A  118A  2000  120A  158A  	fcall	stringdir
  2544  0DFB  00CC               	movwf	??_scale+6
  2545  0DFC  160A  118A  2000  120A  158A  	fcall	stringdir
  2546  0E01  00CD               	movwf	??_scale+7
  2547  0E02  160A  118A  2000  120A  158A  	fcall	stringdir
  2548  0E07  00CE               	movwf	??_scale+8
  2549  0E08  160A  118A  2000  120A  158A  	fcall	stringdir
  2550  0E0D  00CF               	movwf	??_scale+9
  2551  0E0E  084F               	movf	??_scale+9,w
  2552  0E0F  00AF               	movwf	___flmul@a+3
  2553  0E10  084E               	movf	??_scale+8,w
  2554  0E11  00AE               	movwf	___flmul@a+2
  2555  0E12  084D               	movf	??_scale+7,w
  2556  0E13  00AD               	movwf	___flmul@a+1
  2557  0E14  084C               	movf	??_scale+6,w
  2558  0E15  00AC               	movwf	___flmul@a
  2559  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2560  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0E1D  082B               	movf	?___flmul+3,w
  2563  0E1E  00C5               	movwf	?_scale+3
  2564  0E1F  082A               	movf	?___flmul+2,w
  2565  0E20  00C4               	movwf	?_scale+2
  2566  0E21  0829               	movf	?___flmul+1,w
  2567  0E22  00C3               	movwf	?_scale+1
  2568  0E23  0828               	movf	?___flmul,w
  2569  0E24  00C2               	movwf	?_scale
  2570  0E25  2FFF               	goto	l213
  2571  0E26                     l2719:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2574  0E26  0854               	movf	scale@scl,w
  2575  0E27  00C6               	movwf	??_scale
  2576  0E28  3001               	movlw	1
  2577  0E29                     u4195:
  2578  0E29  1003               	clrc
  2579  0E2A  0DC6               	rlf	??_scale,f
  2580  0E2B  3EFF               	addlw	-1
  2581  0E2C  1D03               	skipz
  2582  0E2D  2E29               	goto	u4195
  2583  0E2E  1003               	clrc
  2584  0E2F  0D46               	rlf	??_scale,w
  2585  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2586  0E31  0084               	movwf	4
  2587  0E32  160A  118A  2000  120A  158A  	fcall	stringdir
  2588  0E37  00C7               	movwf	??_scale+1
  2589  0E38  160A  118A  2000  120A  158A  	fcall	stringdir
  2590  0E3D  00C8               	movwf	??_scale+2
  2591  0E3E  160A  118A  2000  120A  158A  	fcall	stringdir
  2592  0E43  00C9               	movwf	??_scale+3
  2593  0E44  160A  118A  2000  120A  158A  	fcall	stringdir
  2594  0E49  00CA               	movwf	??_scale+4
  2595  0E4A  084A               	movf	??_scale+4,w
  2596  0E4B  00C5               	movwf	?_scale+3
  2597  0E4C  0849               	movf	??_scale+3,w
  2598  0E4D  00C4               	movwf	?_scale+2
  2599  0E4E  0848               	movf	??_scale+2,w
  2600  0E4F  00C3               	movwf	?_scale+1
  2601  0E50  0847               	movf	??_scale+1,w
  2602  0E51  00C2               	movwf	?_scale
  2603  0E52  2FFF               	goto	l213
  2604  0E53                     l2723:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2607  0E53  0854               	movf	scale@scl,w
  2608  0E54  3A80               	xorlw	128
  2609  0E55  3E12               	addlw	-238
  2610  0E56  1C03               	skipc
  2611  0E57  2E59               	goto	u4201
  2612  0E58  2E5A               	goto	u4200
  2613  0E59                     u4201:
  2614  0E59  2F44               	goto	l2731
  2615  0E5A                     u4200:
  2616  0E5A                     l2725:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2619  0E5A  300A               	movlw	10
  2620  0E5B  00A0               	movwf	___awdiv@divisor
  2621  0E5C  3000               	movlw	0
  2622  0E5D  00A1               	movwf	___awdiv@divisor+1
  2623  0E5E  0854               	movf	scale@scl,w
  2624  0E5F  00F5               	movwf	___awmod@dividend
  2625  0E60  01F6               	clrf	___awmod@dividend+1
  2626  0E61  1BF5               	btfsc	___awmod@dividend,7
  2627  0E62  03F6               	decf	___awmod@dividend+1,f
  2628  0E63  3064               	movlw	100
  2629  0E64  00F3               	movwf	___awmod@divisor
  2630  0E65  3000               	movlw	0
  2631  0E66  00F4               	movwf	___awmod@divisor+1
  2632  0E67  160A  158A  264B  120A  158A  	fcall	___awmod
  2633  0E6C  0874               	movf	?___awmod+1,w
  2634  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0E6F  00A3               	movwf	___awdiv@dividend+1
  2637  0E70  0873               	movf	?___awmod,w
  2638  0E71  00A2               	movwf	___awdiv@dividend
  2639  0E72  160A  158A  270C  120A  158A  	fcall	___awdiv
  2640  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0E79  0820               	movf	?___awdiv,w
  2643  0E7A  00C6               	movwf	??_scale
  2644  0E7B  3001               	movlw	1
  2645  0E7C                     u4215:
  2646  0E7C  1003               	clrc
  2647  0E7D  0DC6               	rlf	??_scale,f
  2648  0E7E  3EFF               	addlw	-1
  2649  0E7F  1D03               	skipz
  2650  0E80  2E7C               	goto	u4215
  2651  0E81  1003               	clrc
  2652  0E82  0D46               	rlf	??_scale,w
  2653  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2654  0E84  0084               	movwf	4
  2655  0E85  160A  118A  2000  120A  158A  	fcall	stringdir
  2656  0E8A  00C7               	movwf	??_scale+1
  2657  0E8B  160A  118A  2000  120A  158A  	fcall	stringdir
  2658  0E90  00C8               	movwf	??_scale+2
  2659  0E91  160A  118A  2000  120A  158A  	fcall	stringdir
  2660  0E96  00C9               	movwf	??_scale+3
  2661  0E97  160A  118A  2000  120A  158A  	fcall	stringdir
  2662  0E9C  00CA               	movwf	??_scale+4
  2663  0E9D  084A               	movf	??_scale+4,w
  2664  0E9E  00AB               	movwf	___flmul@b+3
  2665  0E9F  0849               	movf	??_scale+3,w
  2666  0EA0  00AA               	movwf	___flmul@b+2
  2667  0EA1  0848               	movf	??_scale+2,w
  2668  0EA2  00A9               	movwf	___flmul@b+1
  2669  0EA3  0847               	movf	??_scale+1,w
  2670  0EA4  00A8               	movwf	___flmul@b
  2671  0EA5  3064               	movlw	100
  2672  0EA6  00A0               	movwf	___awdiv@divisor
  2673  0EA7  3000               	movlw	0
  2674  0EA8  00A1               	movwf	___awdiv@divisor+1
  2675  0EA9  0854               	movf	scale@scl,w
  2676  0EAA  00A2               	movwf	___awdiv@dividend
  2677  0EAB  01A3               	clrf	___awdiv@dividend+1
  2678  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2679  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2680  0EAE  160A  158A  270C  120A  158A  	fcall	___awdiv
  2681  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0EB5  0820               	movf	?___awdiv,w
  2684  0EB6  00CB               	movwf	??_scale+5
  2685  0EB7  3001               	movlw	1
  2686  0EB8                     u4225:
  2687  0EB8  1003               	clrc
  2688  0EB9  0DCB               	rlf	??_scale+5,f
  2689  0EBA  3EFF               	addlw	-1
  2690  0EBB  1D03               	skipz
  2691  0EBC  2EB8               	goto	u4225
  2692  0EBD  1003               	clrc
  2693  0EBE  0D4B               	rlf	??_scale+5,w
  2694  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2695  0EC0  0084               	movwf	4
  2696  0EC1  160A  118A  2000  120A  158A  	fcall	stringdir
  2697  0EC6  00CC               	movwf	??_scale+6
  2698  0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  2699  0ECC  00CD               	movwf	??_scale+7
  2700  0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  2701  0ED2  00CE               	movwf	??_scale+8
  2702  0ED3  160A  118A  2000  120A  158A  	fcall	stringdir
  2703  0ED8  00CF               	movwf	??_scale+9
  2704  0ED9  084F               	movf	??_scale+9,w
  2705  0EDA  00AF               	movwf	___flmul@a+3
  2706  0EDB  084E               	movf	??_scale+8,w
  2707  0EDC  00AE               	movwf	___flmul@a+2
  2708  0EDD  084D               	movf	??_scale+7,w
  2709  0EDE  00AD               	movwf	___flmul@a+1
  2710  0EDF  084C               	movf	??_scale+6,w
  2711  0EE0  00AC               	movwf	___flmul@a
  2712  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  2713  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0EE8  082B               	movf	?___flmul+3,w
  2716  0EE9  00D3               	movwf	_scale$1154+3
  2717  0EEA  082A               	movf	?___flmul+2,w
  2718  0EEB  00D2               	movwf	_scale$1154+2
  2719  0EEC  0829               	movf	?___flmul+1,w
  2720  0EED  00D1               	movwf	_scale$1154+1
  2721  0EEE  0828               	movf	?___flmul,w
  2722  0EEF  00D0               	movwf	_scale$1154
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2725  0EF0  300A               	movlw	10
  2726  0EF1  00F3               	movwf	___awmod@divisor
  2727  0EF2  3000               	movlw	0
  2728  0EF3  00F4               	movwf	___awmod@divisor+1
  2729  0EF4  0854               	movf	scale@scl,w
  2730  0EF5  00F5               	movwf	___awmod@dividend
  2731  0EF6  01F6               	clrf	___awmod@dividend+1
  2732  0EF7  1BF5               	btfsc	___awmod@dividend,7
  2733  0EF8  03F6               	decf	___awmod@dividend+1,f
  2734  0EF9  160A  158A  264B  120A  158A  	fcall	___awmod
  2735  0EFE  0873               	movf	?___awmod,w
  2736  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0F01  00C6               	movwf	??_scale
  2739  0F02  3001               	movlw	1
  2740  0F03                     u4235:
  2741  0F03  1003               	clrc
  2742  0F04  0DC6               	rlf	??_scale,f
  2743  0F05  3EFF               	addlw	-1
  2744  0F06  1D03               	skipz
  2745  0F07  2F03               	goto	u4235
  2746  0F08  1003               	clrc
  2747  0F09  0D46               	rlf	??_scale,w
  2748  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2749  0F0B  0084               	movwf	4
  2750  0F0C  160A  118A  2000  120A  158A  	fcall	stringdir
  2751  0F11  00C7               	movwf	??_scale+1
  2752  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  2753  0F17  00C8               	movwf	??_scale+2
  2754  0F18  160A  118A  2000  120A  158A  	fcall	stringdir
  2755  0F1D  00C9               	movwf	??_scale+3
  2756  0F1E  160A  118A  2000  120A  158A  	fcall	stringdir
  2757  0F23  00CA               	movwf	??_scale+4
  2758  0F24  084A               	movf	??_scale+4,w
  2759  0F25  00AB               	movwf	___flmul@b+3
  2760  0F26  0849               	movf	??_scale+3,w
  2761  0F27  00AA               	movwf	___flmul@b+2
  2762  0F28  0848               	movf	??_scale+2,w
  2763  0F29  00A9               	movwf	___flmul@b+1
  2764  0F2A  0847               	movf	??_scale+1,w
  2765  0F2B  00A8               	movwf	___flmul@b
  2766  0F2C  0853               	movf	_scale$1154+3,w
  2767  0F2D  00AF               	movwf	___flmul@a+3
  2768  0F2E  0852               	movf	_scale$1154+2,w
  2769  0F2F  00AE               	movwf	___flmul@a+2
  2770  0F30  0851               	movf	_scale$1154+1,w
  2771  0F31  00AD               	movwf	___flmul@a+1
  2772  0F32  0850               	movf	_scale$1154,w
  2773  0F33  00AC               	movwf	___flmul@a
  2774  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  2775  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0F3B  082B               	movf	?___flmul+3,w
  2778  0F3C  00C5               	movwf	?_scale+3
  2779  0F3D  082A               	movf	?___flmul+2,w
  2780  0F3E  00C4               	movwf	?_scale+2
  2781  0F3F  0829               	movf	?___flmul+1,w
  2782  0F40  00C3               	movwf	?_scale+1
  2783  0F41  0828               	movf	?___flmul,w
  2784  0F42  00C2               	movwf	?_scale
  2785  0F43  2FFF               	goto	l213
  2786  0F44                     l2731:
  2787  0F44  0854               	movf	scale@scl,w
  2788  0F45  3A80               	xorlw	128
  2789  0F46  3E75               	addlw	-139
  2790  0F47  1C03               	skipc
  2791  0F48  2F4A               	goto	u4241
  2792  0F49  2F4B               	goto	u4240
  2793  0F4A                     u4241:
  2794  0F4A  2FD3               	goto	l2737
  2795  0F4B                     u4240:
  2796  0F4B                     l2733:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  2799  0F4B  300A               	movlw	10
  2800  0F4C  00F3               	movwf	___awmod@divisor
  2801  0F4D  3000               	movlw	0
  2802  0F4E  00F4               	movwf	___awmod@divisor+1
  2803  0F4F  0854               	movf	scale@scl,w
  2804  0F50  00F5               	movwf	___awmod@dividend
  2805  0F51  01F6               	clrf	___awmod@dividend+1
  2806  0F52  1BF5               	btfsc	___awmod@dividend,7
  2807  0F53  03F6               	decf	___awmod@dividend+1,f
  2808  0F54  160A  158A  264B  120A  158A  	fcall	___awmod
  2809  0F59  0873               	movf	?___awmod,w
  2810  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0F5C  00C6               	movwf	??_scale
  2813  0F5D  3001               	movlw	1
  2814  0F5E                     u4255:
  2815  0F5E  1003               	clrc
  2816  0F5F  0DC6               	rlf	??_scale,f
  2817  0F60  3EFF               	addlw	-1
  2818  0F61  1D03               	skipz
  2819  0F62  2F5E               	goto	u4255
  2820  0F63  1003               	clrc
  2821  0F64  0D46               	rlf	??_scale,w
  2822  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2823  0F66  0084               	movwf	4
  2824  0F67  160A  118A  2000  120A  158A  	fcall	stringdir
  2825  0F6C  00C7               	movwf	??_scale+1
  2826  0F6D  160A  118A  2000  120A  158A  	fcall	stringdir
  2827  0F72  00C8               	movwf	??_scale+2
  2828  0F73  160A  118A  2000  120A  158A  	fcall	stringdir
  2829  0F78  00C9               	movwf	??_scale+3
  2830  0F79  160A  118A  2000  120A  158A  	fcall	stringdir
  2831  0F7E  00CA               	movwf	??_scale+4
  2832  0F7F  084A               	movf	??_scale+4,w
  2833  0F80  00AB               	movwf	___flmul@b+3
  2834  0F81  0849               	movf	??_scale+3,w
  2835  0F82  00AA               	movwf	___flmul@b+2
  2836  0F83  0848               	movf	??_scale+2,w
  2837  0F84  00A9               	movwf	___flmul@b+1
  2838  0F85  0847               	movf	??_scale+1,w
  2839  0F86  00A8               	movwf	___flmul@b
  2840  0F87  300A               	movlw	10
  2841  0F88  00A0               	movwf	___awdiv@divisor
  2842  0F89  3000               	movlw	0
  2843  0F8A  00A1               	movwf	___awdiv@divisor+1
  2844  0F8B  0854               	movf	scale@scl,w
  2845  0F8C  00A2               	movwf	___awdiv@dividend
  2846  0F8D  01A3               	clrf	___awdiv@dividend+1
  2847  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  2848  0F8F  03A3               	decf	___awdiv@dividend+1,f
  2849  0F90  160A  158A  270C  120A  158A  	fcall	___awdiv
  2850  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0F97  0820               	movf	?___awdiv,w
  2853  0F98  00CB               	movwf	??_scale+5
  2854  0F99  3001               	movlw	1
  2855  0F9A                     u4265:
  2856  0F9A  1003               	clrc
  2857  0F9B  0DCB               	rlf	??_scale+5,f
  2858  0F9C  3EFF               	addlw	-1
  2859  0F9D  1D03               	skipz
  2860  0F9E  2F9A               	goto	u4265
  2861  0F9F  1003               	clrc
  2862  0FA0  0D4B               	rlf	??_scale+5,w
  2863  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2864  0FA2  0084               	movwf	4
  2865  0FA3  160A  118A  2000  120A  158A  	fcall	stringdir
  2866  0FA8  00CC               	movwf	??_scale+6
  2867  0FA9  160A  118A  2000  120A  158A  	fcall	stringdir
  2868  0FAE  00CD               	movwf	??_scale+7
  2869  0FAF  160A  118A  2000  120A  158A  	fcall	stringdir
  2870  0FB4  00CE               	movwf	??_scale+8
  2871  0FB5  160A  118A  2000  120A  158A  	fcall	stringdir
  2872  0FBA  00CF               	movwf	??_scale+9
  2873  0FBB  084F               	movf	??_scale+9,w
  2874  0FBC  00AF               	movwf	___flmul@a+3
  2875  0FBD  084E               	movf	??_scale+8,w
  2876  0FBE  00AE               	movwf	___flmul@a+2
  2877  0FBF  084D               	movf	??_scale+7,w
  2878  0FC0  00AD               	movwf	___flmul@a+1
  2879  0FC1  084C               	movf	??_scale+6,w
  2880  0FC2  00AC               	movwf	___flmul@a
  2881  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  2882  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0FCA  082B               	movf	?___flmul+3,w
  2885  0FCB  00C5               	movwf	?_scale+3
  2886  0FCC  082A               	movf	?___flmul+2,w
  2887  0FCD  00C4               	movwf	?_scale+2
  2888  0FCE  0829               	movf	?___flmul+1,w
  2889  0FCF  00C3               	movwf	?_scale+1
  2890  0FD0  0828               	movf	?___flmul,w
  2891  0FD1  00C2               	movwf	?_scale
  2892  0FD2  2FFF               	goto	l213
  2893  0FD3                     l2737:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  2896  0FD3  0854               	movf	scale@scl,w
  2897  0FD4  00C6               	movwf	??_scale
  2898  0FD5  3001               	movlw	1
  2899  0FD6                     u4275:
  2900  0FD6  1003               	clrc
  2901  0FD7  0DC6               	rlf	??_scale,f
  2902  0FD8  3EFF               	addlw	-1
  2903  0FD9  1D03               	skipz
  2904  0FDA  2FD6               	goto	u4275
  2905  0FDB  1003               	clrc
  2906  0FDC  0D46               	rlf	??_scale,w
  2907  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  2908  0FDE  0084               	movwf	4
  2909  0FDF  160A  118A  2000  120A  158A  	fcall	stringdir
  2910  0FE4  00C7               	movwf	??_scale+1
  2911  0FE5  160A  118A  2000  120A  158A  	fcall	stringdir
  2912  0FEA  00C8               	movwf	??_scale+2
  2913  0FEB  160A  118A  2000  120A  158A  	fcall	stringdir
  2914  0FF0  00C9               	movwf	??_scale+3
  2915  0FF1  160A  118A  2000  120A  158A  	fcall	stringdir
  2916  0FF6  00CA               	movwf	??_scale+4
  2917  0FF7  084A               	movf	??_scale+4,w
  2918  0FF8  00C5               	movwf	?_scale+3
  2919  0FF9  0849               	movf	??_scale+3,w
  2920  0FFA  00C4               	movwf	?_scale+2
  2921  0FFB  0848               	movf	??_scale+2,w
  2922  0FFC  00C3               	movwf	?_scale+1
  2923  0FFD  0847               	movf	??_scale+1,w
  2924  0FFE  00C2               	movwf	?_scale
  2925  0FFF                     l213:
  2926  0FFF  0008               	return
  2927  1000                     __end_of_scale:
  2928                           
  2929                           	psect	text3
  2930  1E4B                     __ptext3:	
  2931 ;; *************** function ___awmod *****************
  2932 ;; Defined at:
  2933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  divisor         2    3[COMMON] int 
  2936 ;;  dividend        2    5[COMMON] int 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  sign            1    9[COMMON] unsigned char 
  2939 ;;  counter         1    8[COMMON] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  2    3[COMMON] int 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2949 ;;      Params:         4       0       0       0       0
  2950 ;;      Locals:         2       0       0       0       0
  2951 ;;      Temps:          1       0       0       0       0
  2952 ;;      Totals:         7       0       0       0       0
  2953 ;;Total ram usage:        7 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 1
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_scale
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function ___awmod
  2965  1E4B                     ___awmod:
  2966  1E4B                     l2259:	
  2967                           ;incstack = 0
  2968                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2969                           
  2970  1E4B  01F9               	clrf	___awmod@sign
  2971  1E4C                     l2261:
  2972  1E4C  1FF6               	btfss	___awmod@dividend+1,7
  2973  1E4D  2E4F               	goto	u2971
  2974  1E4E  2E50               	goto	u2970
  2975  1E4F                     u2971:
  2976  1E4F  2E57               	goto	l2267
  2977  1E50                     u2970:
  2978  1E50                     l2263:
  2979  1E50  09F5               	comf	___awmod@dividend,f
  2980  1E51  09F6               	comf	___awmod@dividend+1,f
  2981  1E52  0AF5               	incf	___awmod@dividend,f
  2982  1E53  1903               	skipnz
  2983  1E54  0AF6               	incf	___awmod@dividend+1,f
  2984  1E55                     l2265:
  2985  1E55  01F9               	clrf	___awmod@sign
  2986  1E56  0AF9               	incf	___awmod@sign,f
  2987  1E57                     l2267:
  2988  1E57  1FF4               	btfss	___awmod@divisor+1,7
  2989  1E58  2E5A               	goto	u2981
  2990  1E59  2E5B               	goto	u2980
  2991  1E5A                     u2981:
  2992  1E5A  2E60               	goto	l2271
  2993  1E5B                     u2980:
  2994  1E5B                     l2269:
  2995  1E5B  09F3               	comf	___awmod@divisor,f
  2996  1E5C  09F4               	comf	___awmod@divisor+1,f
  2997  1E5D  0AF3               	incf	___awmod@divisor,f
  2998  1E5E  1903               	skipnz
  2999  1E5F  0AF4               	incf	___awmod@divisor+1,f
  3000  1E60                     l2271:
  3001  1E60  0873               	movf	___awmod@divisor,w
  3002  1E61  0474               	iorwf	___awmod@divisor+1,w
  3003  1E62  1903               	btfsc	3,2
  3004  1E63  2E65               	goto	u2991
  3005  1E64  2E66               	goto	u2990
  3006  1E65                     u2991:
  3007  1E65  2E95               	goto	l2289
  3008  1E66                     u2990:
  3009  1E66                     l2273:
  3010  1E66  01F8               	clrf	___awmod@counter
  3011  1E67  0AF8               	incf	___awmod@counter,f
  3012  1E68  2E74               	goto	l2279
  3013  1E69                     l2275:
  3014  1E69  3001               	movlw	1
  3015  1E6A                     u3005:
  3016  1E6A  1003               	clrc
  3017  1E6B  0DF3               	rlf	___awmod@divisor,f
  3018  1E6C  0DF4               	rlf	___awmod@divisor+1,f
  3019  1E6D  3EFF               	addlw	-1
  3020  1E6E  1D03               	skipz
  3021  1E6F  2E6A               	goto	u3005
  3022  1E70                     l2277:
  3023  1E70  3001               	movlw	1
  3024  1E71  00F7               	movwf	??___awmod
  3025  1E72  0877               	movf	??___awmod,w
  3026  1E73  07F8               	addwf	___awmod@counter,f
  3027  1E74                     l2279:
  3028  1E74  1FF4               	btfss	___awmod@divisor+1,7
  3029  1E75  2E77               	goto	u3011
  3030  1E76  2E78               	goto	u3010
  3031  1E77                     u3011:
  3032  1E77  2E69               	goto	l2275
  3033  1E78                     u3010:
  3034  1E78                     l2281:
  3035  1E78  0874               	movf	___awmod@divisor+1,w
  3036  1E79  0276               	subwf	___awmod@dividend+1,w
  3037  1E7A  1D03               	skipz
  3038  1E7B  2E7E               	goto	u3025
  3039  1E7C  0873               	movf	___awmod@divisor,w
  3040  1E7D  0275               	subwf	___awmod@dividend,w
  3041  1E7E                     u3025:
  3042  1E7E  1C03               	skipc
  3043  1E7F  2E81               	goto	u3021
  3044  1E80  2E82               	goto	u3020
  3045  1E81                     u3021:
  3046  1E81  2E88               	goto	l2285
  3047  1E82                     u3020:
  3048  1E82                     l2283:
  3049  1E82  0873               	movf	___awmod@divisor,w
  3050  1E83  02F5               	subwf	___awmod@dividend,f
  3051  1E84  0874               	movf	___awmod@divisor+1,w
  3052  1E85  1C03               	skipc
  3053  1E86  03F6               	decf	___awmod@dividend+1,f
  3054  1E87  02F6               	subwf	___awmod@dividend+1,f
  3055  1E88                     l2285:
  3056  1E88  3001               	movlw	1
  3057  1E89                     u3035:
  3058  1E89  1003               	clrc
  3059  1E8A  0CF4               	rrf	___awmod@divisor+1,f
  3060  1E8B  0CF3               	rrf	___awmod@divisor,f
  3061  1E8C  3EFF               	addlw	-1
  3062  1E8D  1D03               	skipz
  3063  1E8E  2E89               	goto	u3035
  3064  1E8F                     l2287:
  3065  1E8F  3001               	movlw	1
  3066  1E90  02F8               	subwf	___awmod@counter,f
  3067  1E91  1D03               	btfss	3,2
  3068  1E92  2E94               	goto	u3041
  3069  1E93  2E95               	goto	u3040
  3070  1E94                     u3041:
  3071  1E94  2E78               	goto	l2281
  3072  1E95                     u3040:
  3073  1E95                     l2289:
  3074  1E95  0879               	movf	___awmod@sign,w
  3075  1E96  1903               	btfsc	3,2
  3076  1E97  2E99               	goto	u3051
  3077  1E98  2E9A               	goto	u3050
  3078  1E99                     u3051:
  3079  1E99  2E9F               	goto	l2293
  3080  1E9A                     u3050:
  3081  1E9A                     l2291:
  3082  1E9A  09F5               	comf	___awmod@dividend,f
  3083  1E9B  09F6               	comf	___awmod@dividend+1,f
  3084  1E9C  0AF5               	incf	___awmod@dividend,f
  3085  1E9D  1903               	skipnz
  3086  1E9E  0AF6               	incf	___awmod@dividend+1,f
  3087  1E9F                     l2293:
  3088  1E9F  0876               	movf	___awmod@dividend+1,w
  3089  1EA0  00F4               	movwf	?___awmod+1
  3090  1EA1  0875               	movf	___awmod@dividend,w
  3091  1EA2  00F3               	movwf	?___awmod
  3092  1EA3                     l484:
  3093  1EA3  0008               	return
  3094  1EA4                     __end_of___awmod:
  3095                           
  3096                           	psect	text4
  3097  1F0C                     __ptext4:	
  3098 ;; *************** function ___awdiv *****************
  3099 ;; Defined at:
  3100 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  divisor         2    0[BANK0 ] int 
  3103 ;;  dividend        2    2[BANK0 ] int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  quotient        2    6[BANK0 ] int 
  3106 ;;  sign            1    5[BANK0 ] unsigned char 
  3107 ;;  counter         1    4[BANK0 ] unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2    0[BANK0 ] int 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         0       4       0       0       0
  3118 ;;      Locals:         0       4       0       0       0
  3119 ;;      Temps:          1       0       0       0       0
  3120 ;;      Totals:         1       8       0       0       0
  3121 ;;Total ram usage:        9 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 1
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_scale
  3128 ;;		_sprintf
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function ___awdiv
  3134  1F0C                     ___awdiv:
  3135  1F0C                     l2215:	
  3136                           ;incstack = 0
  3137                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3138                           
  3139  1F0C  1283               	bcf	3,5	;RP0=0, select bank0
  3140  1F0D  1303               	bcf	3,6	;RP1=0, select bank0
  3141  1F0E  01A5               	clrf	___awdiv@sign
  3142  1F0F                     l2217:
  3143  1F0F  1FA1               	btfss	___awdiv@divisor+1,7
  3144  1F10  2F12               	goto	u2871
  3145  1F11  2F13               	goto	u2870
  3146  1F12                     u2871:
  3147  1F12  2F1A               	goto	l2223
  3148  1F13                     u2870:
  3149  1F13                     l2219:
  3150  1F13  09A0               	comf	___awdiv@divisor,f
  3151  1F14  09A1               	comf	___awdiv@divisor+1,f
  3152  1F15  0AA0               	incf	___awdiv@divisor,f
  3153  1F16  1903               	skipnz
  3154  1F17  0AA1               	incf	___awdiv@divisor+1,f
  3155  1F18                     l2221:
  3156  1F18  01A5               	clrf	___awdiv@sign
  3157  1F19  0AA5               	incf	___awdiv@sign,f
  3158  1F1A                     l2223:
  3159  1F1A  1FA3               	btfss	___awdiv@dividend+1,7
  3160  1F1B  2F1D               	goto	u2881
  3161  1F1C  2F1E               	goto	u2880
  3162  1F1D                     u2881:
  3163  1F1D  2F27               	goto	l2229
  3164  1F1E                     u2880:
  3165  1F1E                     l2225:
  3166  1F1E  09A2               	comf	___awdiv@dividend,f
  3167  1F1F  09A3               	comf	___awdiv@dividend+1,f
  3168  1F20  0AA2               	incf	___awdiv@dividend,f
  3169  1F21  1903               	skipnz
  3170  1F22  0AA3               	incf	___awdiv@dividend+1,f
  3171  1F23                     l2227:
  3172  1F23  3001               	movlw	1
  3173  1F24  00FA               	movwf	??___awdiv
  3174  1F25  087A               	movf	??___awdiv,w
  3175  1F26  06A5               	xorwf	___awdiv@sign,f
  3176  1F27                     l2229:
  3177  1F27  01A6               	clrf	___awdiv@quotient
  3178  1F28  01A7               	clrf	___awdiv@quotient+1
  3179  1F29                     l2231:
  3180  1F29  0820               	movf	___awdiv@divisor,w
  3181  1F2A  0421               	iorwf	___awdiv@divisor+1,w
  3182  1F2B  1903               	btfsc	3,2
  3183  1F2C  2F2E               	goto	u2891
  3184  1F2D  2F2F               	goto	u2890
  3185  1F2E                     u2891:
  3186  1F2E  2F66               	goto	l2251
  3187  1F2F                     u2890:
  3188  1F2F                     l2233:
  3189  1F2F  01A4               	clrf	___awdiv@counter
  3190  1F30  0AA4               	incf	___awdiv@counter,f
  3191  1F31  2F3D               	goto	l2239
  3192  1F32                     l2235:
  3193  1F32  3001               	movlw	1
  3194  1F33                     u2905:
  3195  1F33  1003               	clrc
  3196  1F34  0DA0               	rlf	___awdiv@divisor,f
  3197  1F35  0DA1               	rlf	___awdiv@divisor+1,f
  3198  1F36  3EFF               	addlw	-1
  3199  1F37  1D03               	skipz
  3200  1F38  2F33               	goto	u2905
  3201  1F39                     l2237:
  3202  1F39  3001               	movlw	1
  3203  1F3A  00FA               	movwf	??___awdiv
  3204  1F3B  087A               	movf	??___awdiv,w
  3205  1F3C  07A4               	addwf	___awdiv@counter,f
  3206  1F3D                     l2239:
  3207  1F3D  1FA1               	btfss	___awdiv@divisor+1,7
  3208  1F3E  2F40               	goto	u2911
  3209  1F3F  2F41               	goto	u2910
  3210  1F40                     u2911:
  3211  1F40  2F32               	goto	l2235
  3212  1F41                     u2910:
  3213  1F41                     l2241:
  3214  1F41  3001               	movlw	1
  3215  1F42                     u2925:
  3216  1F42  1003               	clrc
  3217  1F43  0DA6               	rlf	___awdiv@quotient,f
  3218  1F44  0DA7               	rlf	___awdiv@quotient+1,f
  3219  1F45  3EFF               	addlw	-1
  3220  1F46  1D03               	skipz
  3221  1F47  2F42               	goto	u2925
  3222  1F48  0821               	movf	___awdiv@divisor+1,w
  3223  1F49  0223               	subwf	___awdiv@dividend+1,w
  3224  1F4A  1D03               	skipz
  3225  1F4B  2F4E               	goto	u2935
  3226  1F4C  0820               	movf	___awdiv@divisor,w
  3227  1F4D  0222               	subwf	___awdiv@dividend,w
  3228  1F4E                     u2935:
  3229  1F4E  1C03               	skipc
  3230  1F4F  2F51               	goto	u2931
  3231  1F50  2F52               	goto	u2930
  3232  1F51                     u2931:
  3233  1F51  2F59               	goto	l2247
  3234  1F52                     u2930:
  3235  1F52                     l2243:
  3236  1F52  0820               	movf	___awdiv@divisor,w
  3237  1F53  02A2               	subwf	___awdiv@dividend,f
  3238  1F54  0821               	movf	___awdiv@divisor+1,w
  3239  1F55  1C03               	skipc
  3240  1F56  03A3               	decf	___awdiv@dividend+1,f
  3241  1F57  02A3               	subwf	___awdiv@dividend+1,f
  3242  1F58                     l2245:
  3243  1F58  1426               	bsf	___awdiv@quotient,0
  3244  1F59                     l2247:
  3245  1F59  3001               	movlw	1
  3246  1F5A                     u2945:
  3247  1F5A  1003               	clrc
  3248  1F5B  0CA1               	rrf	___awdiv@divisor+1,f
  3249  1F5C  0CA0               	rrf	___awdiv@divisor,f
  3250  1F5D  3EFF               	addlw	-1
  3251  1F5E  1D03               	skipz
  3252  1F5F  2F5A               	goto	u2945
  3253  1F60                     l2249:
  3254  1F60  3001               	movlw	1
  3255  1F61  02A4               	subwf	___awdiv@counter,f
  3256  1F62  1D03               	btfss	3,2
  3257  1F63  2F65               	goto	u2951
  3258  1F64  2F66               	goto	u2950
  3259  1F65                     u2951:
  3260  1F65  2F41               	goto	l2241
  3261  1F66                     u2950:
  3262  1F66                     l2251:
  3263  1F66  0825               	movf	___awdiv@sign,w
  3264  1F67  1903               	btfsc	3,2
  3265  1F68  2F6A               	goto	u2961
  3266  1F69  2F6B               	goto	u2960
  3267  1F6A                     u2961:
  3268  1F6A  2F70               	goto	l2255
  3269  1F6B                     u2960:
  3270  1F6B                     l2253:
  3271  1F6B  09A6               	comf	___awdiv@quotient,f
  3272  1F6C  09A7               	comf	___awdiv@quotient+1,f
  3273  1F6D  0AA6               	incf	___awdiv@quotient,f
  3274  1F6E  1903               	skipnz
  3275  1F6F  0AA7               	incf	___awdiv@quotient+1,f
  3276  1F70                     l2255:
  3277  1F70  0827               	movf	___awdiv@quotient+1,w
  3278  1F71  00A1               	movwf	?___awdiv+1
  3279  1F72  0826               	movf	___awdiv@quotient,w
  3280  1F73  00A0               	movwf	?___awdiv
  3281  1F74                     l471:
  3282  1F74  0008               	return
  3283  1F75                     __end_of___awdiv:
  3284                           
  3285                           	psect	text5
  3286  1C50                     __ptext5:	
  3287 ;; *************** function _isdigit *****************
  3288 ;; Defined at:
  3289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  c               1    wreg     unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  c               1    4[COMMON] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;		None               void
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         2       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0
  3306 ;;      Totals:         2       0       0       0       0
  3307 ;;Total ram usage:        2 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_sprintf
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           
  3318                           ;psect for function _isdigit
  3319  1C50                     _isdigit:
  3320                           
  3321                           ;incstack = 0
  3322                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3323                           ;isdigit@c stored from wreg
  3324  1C50  00F4               	movwf	isdigit@c
  3325  1C51                     l2741:
  3326  1C51  01F3               	clrf	_isdigit$981
  3327  1C52                     l2743:
  3328  1C52  303A               	movlw	58
  3329  1C53  0274               	subwf	isdigit@c,w
  3330  1C54  1803               	skipnc
  3331  1C55  2C57               	goto	u4281
  3332  1C56  2C58               	goto	u4280
  3333  1C57                     u4281:
  3334  1C57  2C60               	goto	l2749
  3335  1C58                     u4280:
  3336  1C58                     l2745:
  3337  1C58  3030               	movlw	48
  3338  1C59  0274               	subwf	isdigit@c,w
  3339  1C5A  1C03               	skipc
  3340  1C5B  2C5D               	goto	u4291
  3341  1C5C  2C5E               	goto	u4290
  3342  1C5D                     u4291:
  3343  1C5D  2C60               	goto	l2749
  3344  1C5E                     u4290:
  3345  1C5E                     l2747:
  3346  1C5E  01F3               	clrf	_isdigit$981
  3347  1C5F  0AF3               	incf	_isdigit$981,f
  3348  1C60                     l2749:
  3349  1C60  0C73               	rrf	_isdigit$981,w
  3350  1C61                     l805:
  3351  1C61  0008               	return
  3352  1C62                     __end_of_isdigit:
  3353                           
  3354                           	psect	text6
  3355  12F0                     __ptext6:	
  3356 ;; *************** function _fround *****************
  3357 ;; Defined at:
  3358 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  prec            1    wreg     unsigned char 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  prec            1   53[BANK0 ] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  4   34[BANK0 ] unsigned char 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         0       4       0       0       0
  3373 ;;      Locals:         0       9       0       0       0
  3374 ;;      Temps:          0       7       0       0       0
  3375 ;;      Totals:         0      20       0       0       0
  3376 ;;Total ram usage:       20 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 3
  3379 ;; This function calls:
  3380 ;;		___flmul
  3381 ;;		___lwdiv
  3382 ;;		___lwmod
  3383 ;; This function is called by:
  3384 ;;		_sprintf
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           
  3389                           ;psect for function _fround
  3390  12F0                     _fround:
  3391                           
  3392                           ;incstack = 0
  3393                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3394                           ;fround@prec stored from wreg
  3395  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  3396  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  3397  12F2  00D5               	movwf	fround@prec
  3398  12F3                     l2683:
  3399                           
  3400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3401  12F3  306E               	movlw	110
  3402  12F4  0255               	subwf	fround@prec,w
  3403  12F5  1C03               	skipc
  3404  12F6  2AF8               	goto	u4031
  3405  12F7  2AF9               	goto	u4030
  3406  12F8                     u4031:
  3407  12F8  2C08               	goto	l2691
  3408  12F9                     u4030:
  3409  12F9                     l2685:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3412  12F9  303F               	movlw	63
  3413  12FA  00AB               	movwf	___flmul@b+3
  3414  12FB  3000               	movlw	0
  3415  12FC  00AA               	movwf	___flmul@b+2
  3416  12FD  3000               	movlw	0
  3417  12FE  00A9               	movwf	___flmul@b+1
  3418  12FF  3000               	movlw	0
  3419  1300  00A8               	movwf	___flmul@b
  3420  1301  3064               	movlw	100
  3421  1302  00A0               	movwf	___lwdiv@divisor
  3422  1303  3000               	movlw	0
  3423  1304  00A1               	movwf	___lwdiv@divisor+1
  3424  1305  0855               	movf	fround@prec,w
  3425  1306  00C6               	movwf	??_fround
  3426  1307  01C7               	clrf	??_fround+1
  3427  1308  0846               	movf	??_fround,w
  3428  1309  00A2               	movwf	___lwdiv@dividend
  3429  130A  0847               	movf	??_fround+1,w
  3430  130B  00A3               	movwf	___lwdiv@dividend+1
  3431  130C  160A  158A  250F  160A  118A  	fcall	___lwdiv
  3432  1311  1283               	bcf	3,5	;RP0=0, select bank0
  3433  1312  1303               	bcf	3,6	;RP1=0, select bank0
  3434  1313  0820               	movf	?___lwdiv,w
  3435  1314  00C8               	movwf	??_fround+2
  3436  1315  3001               	movlw	1
  3437  1316                     u4045:
  3438  1316  1003               	clrc
  3439  1317  0DC8               	rlf	??_fround+2,f
  3440  1318  3EFF               	addlw	-1
  3441  1319  1D03               	skipz
  3442  131A  2B16               	goto	u4045
  3443  131B  1003               	clrc
  3444  131C  0D48               	rlf	??_fround+2,w
  3445  131D  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3446  131E  0084               	movwf	4
  3447  131F  160A  118A  2000  160A  118A  	fcall	stringdir
  3448  1324  00C9               	movwf	??_fround+3
  3449  1325  160A  118A  2000  160A  118A  	fcall	stringdir
  3450  132A  00CA               	movwf	??_fround+4
  3451  132B  160A  118A  2000  160A  118A  	fcall	stringdir
  3452  1330  00CB               	movwf	??_fround+5
  3453  1331  160A  118A  2000  160A  118A  	fcall	stringdir
  3454  1336  00CC               	movwf	??_fround+6
  3455  1337  084C               	movf	??_fround+6,w
  3456  1338  00AF               	movwf	___flmul@a+3
  3457  1339  084B               	movf	??_fround+5,w
  3458  133A  00AE               	movwf	___flmul@a+2
  3459  133B  084A               	movf	??_fround+4,w
  3460  133C  00AD               	movwf	___flmul@a+1
  3461  133D  0849               	movf	??_fround+3,w
  3462  133E  00AC               	movwf	___flmul@a
  3463  133F  120A  158A  213C  160A  118A  	fcall	___flmul
  3464  1344  1283               	bcf	3,5	;RP0=0, select bank0
  3465  1345  1303               	bcf	3,6	;RP1=0, select bank0
  3466  1346  082B               	movf	?___flmul+3,w
  3467  1347  00D4               	movwf	_fround$1152+3
  3468  1348  082A               	movf	?___flmul+2,w
  3469  1349  00D3               	movwf	_fround$1152+2
  3470  134A  0829               	movf	?___flmul+1,w
  3471  134B  00D2               	movwf	_fround$1152+1
  3472  134C  0828               	movf	?___flmul,w
  3473  134D  00D1               	movwf	_fround$1152
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3476  134E  300A               	movlw	10
  3477  134F  00A0               	movwf	___lwdiv@divisor
  3478  1350  3000               	movlw	0
  3479  1351  00A1               	movwf	___lwdiv@divisor+1
  3480  1352  0855               	movf	fround@prec,w
  3481  1353  00C6               	movwf	??_fround
  3482  1354  01C7               	clrf	??_fround+1
  3483  1355  0846               	movf	??_fround,w
  3484  1356  00F5               	movwf	___lwmod@dividend
  3485  1357  0847               	movf	??_fround+1,w
  3486  1358  00F6               	movwf	___lwmod@dividend+1
  3487  1359  3064               	movlw	100
  3488  135A  00F3               	movwf	___lwmod@divisor
  3489  135B  3000               	movlw	0
  3490  135C  00F4               	movwf	___lwmod@divisor+1
  3491  135D  160A  158A  24D5  160A  118A  	fcall	___lwmod
  3492  1362  0874               	movf	?___lwmod+1,w
  3493  1363  1283               	bcf	3,5	;RP0=0, select bank0
  3494  1364  1303               	bcf	3,6	;RP1=0, select bank0
  3495  1365  00A3               	movwf	___lwdiv@dividend+1
  3496  1366  0873               	movf	?___lwmod,w
  3497  1367  00A2               	movwf	___lwdiv@dividend
  3498  1368  160A  158A  250F  160A  118A  	fcall	___lwdiv
  3499  136D  1283               	bcf	3,5	;RP0=0, select bank0
  3500  136E  1303               	bcf	3,6	;RP1=0, select bank0
  3501  136F  0820               	movf	?___lwdiv,w
  3502  1370  00C8               	movwf	??_fround+2
  3503  1371  3001               	movlw	1
  3504  1372                     u4055:
  3505  1372  1003               	clrc
  3506  1373  0DC8               	rlf	??_fround+2,f
  3507  1374  3EFF               	addlw	-1
  3508  1375  1D03               	skipz
  3509  1376  2B72               	goto	u4055
  3510  1377  1003               	clrc
  3511  1378  0D48               	rlf	??_fround+2,w
  3512  1379  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3513  137A  0084               	movwf	4
  3514  137B  160A  118A  2000  160A  118A  	fcall	stringdir
  3515  1380  00C9               	movwf	??_fround+3
  3516  1381  160A  118A  2000  160A  118A  	fcall	stringdir
  3517  1386  00CA               	movwf	??_fround+4
  3518  1387  160A  118A  2000  160A  118A  	fcall	stringdir
  3519  138C  00CB               	movwf	??_fround+5
  3520  138D  160A  118A  2000  160A  118A  	fcall	stringdir
  3521  1392  00CC               	movwf	??_fround+6
  3522  1393  084C               	movf	??_fround+6,w
  3523  1394  00AB               	movwf	___flmul@b+3
  3524  1395  084B               	movf	??_fround+5,w
  3525  1396  00AA               	movwf	___flmul@b+2
  3526  1397  084A               	movf	??_fround+4,w
  3527  1398  00A9               	movwf	___flmul@b+1
  3528  1399  0849               	movf	??_fround+3,w
  3529  139A  00A8               	movwf	___flmul@b
  3530  139B  0854               	movf	_fround$1152+3,w
  3531  139C  00AF               	movwf	___flmul@a+3
  3532  139D  0853               	movf	_fround$1152+2,w
  3533  139E  00AE               	movwf	___flmul@a+2
  3534  139F  0852               	movf	_fround$1152+1,w
  3535  13A0  00AD               	movwf	___flmul@a+1
  3536  13A1  0851               	movf	_fround$1152,w
  3537  13A2  00AC               	movwf	___flmul@a
  3538  13A3  120A  158A  213C  160A  118A  	fcall	___flmul
  3539  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  3540  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  3541  13AA  082B               	movf	?___flmul+3,w
  3542  13AB  00D0               	movwf	_fround$1153+3
  3543  13AC  082A               	movf	?___flmul+2,w
  3544  13AD  00CF               	movwf	_fround$1153+2
  3545  13AE  0829               	movf	?___flmul+1,w
  3546  13AF  00CE               	movwf	_fround$1153+1
  3547  13B0  0828               	movf	?___flmul,w
  3548  13B1  00CD               	movwf	_fround$1153
  3549                           
  3550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3551  13B2  300A               	movlw	10
  3552  13B3  00F3               	movwf	___lwmod@divisor
  3553  13B4  3000               	movlw	0
  3554  13B5  00F4               	movwf	___lwmod@divisor+1
  3555  13B6  0855               	movf	fround@prec,w
  3556  13B7  00C6               	movwf	??_fround
  3557  13B8  01C7               	clrf	??_fround+1
  3558  13B9  0846               	movf	??_fround,w
  3559  13BA  00F5               	movwf	___lwmod@dividend
  3560  13BB  0847               	movf	??_fround+1,w
  3561  13BC  00F6               	movwf	___lwmod@dividend+1
  3562  13BD  160A  158A  24D5  160A  118A  	fcall	___lwmod
  3563  13C2  0873               	movf	?___lwmod,w
  3564  13C3  1283               	bcf	3,5	;RP0=0, select bank0
  3565  13C4  1303               	bcf	3,6	;RP1=0, select bank0
  3566  13C5  00C8               	movwf	??_fround+2
  3567  13C6  3001               	movlw	1
  3568  13C7                     u4065:
  3569  13C7  1003               	clrc
  3570  13C8  0DC8               	rlf	??_fround+2,f
  3571  13C9  3EFF               	addlw	-1
  3572  13CA  1D03               	skipz
  3573  13CB  2BC7               	goto	u4065
  3574  13CC  1003               	clrc
  3575  13CD  0D48               	rlf	??_fround+2,w
  3576  13CE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3577  13CF  0084               	movwf	4
  3578  13D0  160A  118A  2000  160A  118A  	fcall	stringdir
  3579  13D5  00C9               	movwf	??_fround+3
  3580  13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  3581  13DB  00CA               	movwf	??_fround+4
  3582  13DC  160A  118A  2000  160A  118A  	fcall	stringdir
  3583  13E1  00CB               	movwf	??_fround+5
  3584  13E2  160A  118A  2000  160A  118A  	fcall	stringdir
  3585  13E7  00CC               	movwf	??_fround+6
  3586  13E8  084C               	movf	??_fround+6,w
  3587  13E9  00AB               	movwf	___flmul@b+3
  3588  13EA  084B               	movf	??_fround+5,w
  3589  13EB  00AA               	movwf	___flmul@b+2
  3590  13EC  084A               	movf	??_fround+4,w
  3591  13ED  00A9               	movwf	___flmul@b+1
  3592  13EE  0849               	movf	??_fround+3,w
  3593  13EF  00A8               	movwf	___flmul@b
  3594  13F0  0850               	movf	_fround$1153+3,w
  3595  13F1  00AF               	movwf	___flmul@a+3
  3596  13F2  084F               	movf	_fround$1153+2,w
  3597  13F3  00AE               	movwf	___flmul@a+2
  3598  13F4  084E               	movf	_fround$1153+1,w
  3599  13F5  00AD               	movwf	___flmul@a+1
  3600  13F6  084D               	movf	_fround$1153,w
  3601  13F7  00AC               	movwf	___flmul@a
  3602  13F8  120A  158A  213C  160A  118A  	fcall	___flmul
  3603  13FD  1283               	bcf	3,5	;RP0=0, select bank0
  3604  13FE  1303               	bcf	3,6	;RP1=0, select bank0
  3605  13FF  082B               	movf	?___flmul+3,w
  3606  1400  00C5               	movwf	?_fround+3
  3607  1401  082A               	movf	?___flmul+2,w
  3608  1402  00C4               	movwf	?_fround+2
  3609  1403  0829               	movf	?___flmul+1,w
  3610  1404  00C3               	movwf	?_fround+1
  3611  1405  0828               	movf	?___flmul,w
  3612  1406  00C2               	movwf	?_fround
  3613  1407  2CFC               	goto	l206
  3614  1408                     l2691:
  3615  1408  300B               	movlw	11
  3616  1409  0255               	subwf	fround@prec,w
  3617  140A  1C03               	skipc
  3618  140B  2C0D               	goto	u4071
  3619  140C  2C0E               	goto	u4070
  3620  140D                     u4071:
  3621  140D  2CB9               	goto	l2697
  3622  140E                     u4070:
  3623  140E                     l2693:
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3626  140E  303F               	movlw	63
  3627  140F  00AB               	movwf	___flmul@b+3
  3628  1410  3000               	movlw	0
  3629  1411  00AA               	movwf	___flmul@b+2
  3630  1412  3000               	movlw	0
  3631  1413  00A9               	movwf	___flmul@b+1
  3632  1414  3000               	movlw	0
  3633  1415  00A8               	movwf	___flmul@b
  3634  1416  300A               	movlw	10
  3635  1417  00A0               	movwf	___lwdiv@divisor
  3636  1418  3000               	movlw	0
  3637  1419  00A1               	movwf	___lwdiv@divisor+1
  3638  141A  0855               	movf	fround@prec,w
  3639  141B  00C6               	movwf	??_fround
  3640  141C  01C7               	clrf	??_fround+1
  3641  141D  0846               	movf	??_fround,w
  3642  141E  00A2               	movwf	___lwdiv@dividend
  3643  141F  0847               	movf	??_fround+1,w
  3644  1420  00A3               	movwf	___lwdiv@dividend+1
  3645  1421  160A  158A  250F  160A  118A  	fcall	___lwdiv
  3646  1426  1283               	bcf	3,5	;RP0=0, select bank0
  3647  1427  1303               	bcf	3,6	;RP1=0, select bank0
  3648  1428  0820               	movf	?___lwdiv,w
  3649  1429  00C8               	movwf	??_fround+2
  3650  142A  3001               	movlw	1
  3651  142B                     u4085:
  3652  142B  1003               	clrc
  3653  142C  0DC8               	rlf	??_fround+2,f
  3654  142D  3EFF               	addlw	-1
  3655  142E  1D03               	skipz
  3656  142F  2C2B               	goto	u4085
  3657  1430  1003               	clrc
  3658  1431  0D48               	rlf	??_fround+2,w
  3659  1432  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3660  1433  0084               	movwf	4
  3661  1434  160A  118A  2000  160A  118A  	fcall	stringdir
  3662  1439  00C9               	movwf	??_fround+3
  3663  143A  160A  118A  2000  160A  118A  	fcall	stringdir
  3664  143F  00CA               	movwf	??_fround+4
  3665  1440  160A  118A  2000  160A  118A  	fcall	stringdir
  3666  1445  00CB               	movwf	??_fround+5
  3667  1446  160A  118A  2000  160A  118A  	fcall	stringdir
  3668  144B  00CC               	movwf	??_fround+6
  3669  144C  084C               	movf	??_fround+6,w
  3670  144D  00AF               	movwf	___flmul@a+3
  3671  144E  084B               	movf	??_fround+5,w
  3672  144F  00AE               	movwf	___flmul@a+2
  3673  1450  084A               	movf	??_fround+4,w
  3674  1451  00AD               	movwf	___flmul@a+1
  3675  1452  0849               	movf	??_fround+3,w
  3676  1453  00AC               	movwf	___flmul@a
  3677  1454  120A  158A  213C  160A  118A  	fcall	___flmul
  3678  1459  1283               	bcf	3,5	;RP0=0, select bank0
  3679  145A  1303               	bcf	3,6	;RP1=0, select bank0
  3680  145B  082B               	movf	?___flmul+3,w
  3681  145C  00D4               	movwf	_fround$1152+3
  3682  145D  082A               	movf	?___flmul+2,w
  3683  145E  00D3               	movwf	_fround$1152+2
  3684  145F  0829               	movf	?___flmul+1,w
  3685  1460  00D2               	movwf	_fround$1152+1
  3686  1461  0828               	movf	?___flmul,w
  3687  1462  00D1               	movwf	_fround$1152
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3690  1463  300A               	movlw	10
  3691  1464  00F3               	movwf	___lwmod@divisor
  3692  1465  3000               	movlw	0
  3693  1466  00F4               	movwf	___lwmod@divisor+1
  3694  1467  0855               	movf	fround@prec,w
  3695  1468  00C6               	movwf	??_fround
  3696  1469  01C7               	clrf	??_fround+1
  3697  146A  0846               	movf	??_fround,w
  3698  146B  00F5               	movwf	___lwmod@dividend
  3699  146C  0847               	movf	??_fround+1,w
  3700  146D  00F6               	movwf	___lwmod@dividend+1
  3701  146E  160A  158A  24D5  160A  118A  	fcall	___lwmod
  3702  1473  0873               	movf	?___lwmod,w
  3703  1474  1283               	bcf	3,5	;RP0=0, select bank0
  3704  1475  1303               	bcf	3,6	;RP1=0, select bank0
  3705  1476  00C8               	movwf	??_fround+2
  3706  1477  3001               	movlw	1
  3707  1478                     u4095:
  3708  1478  1003               	clrc
  3709  1479  0DC8               	rlf	??_fround+2,f
  3710  147A  3EFF               	addlw	-1
  3711  147B  1D03               	skipz
  3712  147C  2C78               	goto	u4095
  3713  147D  1003               	clrc
  3714  147E  0D48               	rlf	??_fround+2,w
  3715  147F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3716  1480  0084               	movwf	4
  3717  1481  160A  118A  2000  160A  118A  	fcall	stringdir
  3718  1486  00C9               	movwf	??_fround+3
  3719  1487  160A  118A  2000  160A  118A  	fcall	stringdir
  3720  148C  00CA               	movwf	??_fround+4
  3721  148D  160A  118A  2000  160A  118A  	fcall	stringdir
  3722  1492  00CB               	movwf	??_fround+5
  3723  1493  160A  118A  2000  160A  118A  	fcall	stringdir
  3724  1498  00CC               	movwf	??_fround+6
  3725  1499  084C               	movf	??_fround+6,w
  3726  149A  00AB               	movwf	___flmul@b+3
  3727  149B  084B               	movf	??_fround+5,w
  3728  149C  00AA               	movwf	___flmul@b+2
  3729  149D  084A               	movf	??_fround+4,w
  3730  149E  00A9               	movwf	___flmul@b+1
  3731  149F  0849               	movf	??_fround+3,w
  3732  14A0  00A8               	movwf	___flmul@b
  3733  14A1  0854               	movf	_fround$1152+3,w
  3734  14A2  00AF               	movwf	___flmul@a+3
  3735  14A3  0853               	movf	_fround$1152+2,w
  3736  14A4  00AE               	movwf	___flmul@a+2
  3737  14A5  0852               	movf	_fround$1152+1,w
  3738  14A6  00AD               	movwf	___flmul@a+1
  3739  14A7  0851               	movf	_fround$1152,w
  3740  14A8  00AC               	movwf	___flmul@a
  3741  14A9  120A  158A  213C  160A  118A  	fcall	___flmul
  3742  14AE  1283               	bcf	3,5	;RP0=0, select bank0
  3743  14AF  1303               	bcf	3,6	;RP1=0, select bank0
  3744  14B0  082B               	movf	?___flmul+3,w
  3745  14B1  00C5               	movwf	?_fround+3
  3746  14B2  082A               	movf	?___flmul+2,w
  3747  14B3  00C4               	movwf	?_fround+2
  3748  14B4  0829               	movf	?___flmul+1,w
  3749  14B5  00C3               	movwf	?_fround+1
  3750  14B6  0828               	movf	?___flmul,w
  3751  14B7  00C2               	movwf	?_fround
  3752  14B8  2CFC               	goto	l206
  3753  14B9                     l2697:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  3756  14B9  303F               	movlw	63
  3757  14BA  00AB               	movwf	___flmul@b+3
  3758  14BB  3000               	movlw	0
  3759  14BC  00AA               	movwf	___flmul@b+2
  3760  14BD  3000               	movlw	0
  3761  14BE  00A9               	movwf	___flmul@b+1
  3762  14BF  3000               	movlw	0
  3763  14C0  00A8               	movwf	___flmul@b
  3764  14C1  0855               	movf	fround@prec,w
  3765  14C2  00C6               	movwf	??_fround
  3766  14C3  3001               	movlw	1
  3767  14C4                     u4105:
  3768  14C4  1003               	clrc
  3769  14C5  0DC6               	rlf	??_fround,f
  3770  14C6  3EFF               	addlw	-1
  3771  14C7  1D03               	skipz
  3772  14C8  2CC4               	goto	u4105
  3773  14C9  1003               	clrc
  3774  14CA  0D46               	rlf	??_fround,w
  3775  14CB  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3776  14CC  0084               	movwf	4
  3777  14CD  160A  118A  2000  160A  118A  	fcall	stringdir
  3778  14D2  00C7               	movwf	??_fround+1
  3779  14D3  160A  118A  2000  160A  118A  	fcall	stringdir
  3780  14D8  00C8               	movwf	??_fround+2
  3781  14D9  160A  118A  2000  160A  118A  	fcall	stringdir
  3782  14DE  00C9               	movwf	??_fround+3
  3783  14DF  160A  118A  2000  160A  118A  	fcall	stringdir
  3784  14E4  00CA               	movwf	??_fround+4
  3785  14E5  084A               	movf	??_fround+4,w
  3786  14E6  00AF               	movwf	___flmul@a+3
  3787  14E7  0849               	movf	??_fround+3,w
  3788  14E8  00AE               	movwf	___flmul@a+2
  3789  14E9  0848               	movf	??_fround+2,w
  3790  14EA  00AD               	movwf	___flmul@a+1
  3791  14EB  0847               	movf	??_fround+1,w
  3792  14EC  00AC               	movwf	___flmul@a
  3793  14ED  120A  158A  213C  160A  118A  	fcall	___flmul
  3794  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  3795  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  3796  14F4  082B               	movf	?___flmul+3,w
  3797  14F5  00C5               	movwf	?_fround+3
  3798  14F6  082A               	movf	?___flmul+2,w
  3799  14F7  00C4               	movwf	?_fround+2
  3800  14F8  0829               	movf	?___flmul+1,w
  3801  14F9  00C3               	movwf	?_fround+1
  3802  14FA  0828               	movf	?___flmul,w
  3803  14FB  00C2               	movwf	?_fround
  3804  14FC                     l206:
  3805  14FC  0008               	return
  3806  14FD                     __end_of_fround:
  3807                           
  3808                           	psect	text7
  3809  1CD5                     __ptext7:	
  3810 ;; *************** function ___lwmod *****************
  3811 ;; Defined at:
  3812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  divisor         2    3[COMMON] unsigned int 
  3815 ;;  dividend        2    5[COMMON] unsigned int 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  counter         1    8[COMMON] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2    3[COMMON] unsigned int 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         4       0       0       0       0
  3828 ;;      Locals:         1       0       0       0       0
  3829 ;;      Temps:          1       0       0       0       0
  3830 ;;      Totals:         6       0       0       0       0
  3831 ;;Total ram usage:        6 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_fround
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           
  3842                           ;psect for function ___lwmod
  3843  1CD5                     ___lwmod:
  3844  1CD5                     l2323:	
  3845                           ;incstack = 0
  3846                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3847                           
  3848  1CD5  0873               	movf	___lwmod@divisor,w
  3849  1CD6  0474               	iorwf	___lwmod@divisor+1,w
  3850  1CD7  1903               	btfsc	3,2
  3851  1CD8  2CDA               	goto	u3131
  3852  1CD9  2CDB               	goto	u3130
  3853  1CDA                     u3131:
  3854  1CDA  2D0A               	goto	l2341
  3855  1CDB                     u3130:
  3856  1CDB                     l2325:
  3857  1CDB  01F8               	clrf	___lwmod@counter
  3858  1CDC  0AF8               	incf	___lwmod@counter,f
  3859  1CDD  2CE9               	goto	l2331
  3860  1CDE                     l2327:
  3861  1CDE  3001               	movlw	1
  3862  1CDF                     u3145:
  3863  1CDF  1003               	clrc
  3864  1CE0  0DF3               	rlf	___lwmod@divisor,f
  3865  1CE1  0DF4               	rlf	___lwmod@divisor+1,f
  3866  1CE2  3EFF               	addlw	-1
  3867  1CE3  1D03               	skipz
  3868  1CE4  2CDF               	goto	u3145
  3869  1CE5                     l2329:
  3870  1CE5  3001               	movlw	1
  3871  1CE6  00F7               	movwf	??___lwmod
  3872  1CE7  0877               	movf	??___lwmod,w
  3873  1CE8  07F8               	addwf	___lwmod@counter,f
  3874  1CE9                     l2331:
  3875  1CE9  1FF4               	btfss	___lwmod@divisor+1,7
  3876  1CEA  2CEC               	goto	u3151
  3877  1CEB  2CED               	goto	u3150
  3878  1CEC                     u3151:
  3879  1CEC  2CDE               	goto	l2327
  3880  1CED                     u3150:
  3881  1CED                     l2333:
  3882  1CED  0874               	movf	___lwmod@divisor+1,w
  3883  1CEE  0276               	subwf	___lwmod@dividend+1,w
  3884  1CEF  1D03               	skipz
  3885  1CF0  2CF3               	goto	u3165
  3886  1CF1  0873               	movf	___lwmod@divisor,w
  3887  1CF2  0275               	subwf	___lwmod@dividend,w
  3888  1CF3                     u3165:
  3889  1CF3  1C03               	skipc
  3890  1CF4  2CF6               	goto	u3161
  3891  1CF5  2CF7               	goto	u3160
  3892  1CF6                     u3161:
  3893  1CF6  2CFD               	goto	l2337
  3894  1CF7                     u3160:
  3895  1CF7                     l2335:
  3896  1CF7  0873               	movf	___lwmod@divisor,w
  3897  1CF8  02F5               	subwf	___lwmod@dividend,f
  3898  1CF9  0874               	movf	___lwmod@divisor+1,w
  3899  1CFA  1C03               	skipc
  3900  1CFB  03F6               	decf	___lwmod@dividend+1,f
  3901  1CFC  02F6               	subwf	___lwmod@dividend+1,f
  3902  1CFD                     l2337:
  3903  1CFD  3001               	movlw	1
  3904  1CFE                     u3175:
  3905  1CFE  1003               	clrc
  3906  1CFF  0CF4               	rrf	___lwmod@divisor+1,f
  3907  1D00  0CF3               	rrf	___lwmod@divisor,f
  3908  1D01  3EFF               	addlw	-1
  3909  1D02  1D03               	skipz
  3910  1D03  2CFE               	goto	u3175
  3911  1D04                     l2339:
  3912  1D04  3001               	movlw	1
  3913  1D05  02F8               	subwf	___lwmod@counter,f
  3914  1D06  1D03               	btfss	3,2
  3915  1D07  2D09               	goto	u3181
  3916  1D08  2D0A               	goto	u3180
  3917  1D09                     u3181:
  3918  1D09  2CED               	goto	l2333
  3919  1D0A                     u3180:
  3920  1D0A                     l2341:
  3921  1D0A  0876               	movf	___lwmod@dividend+1,w
  3922  1D0B  00F4               	movwf	?___lwmod+1
  3923  1D0C  0875               	movf	___lwmod@dividend,w
  3924  1D0D  00F3               	movwf	?___lwmod
  3925  1D0E                     l634:
  3926  1D0E  0008               	return
  3927  1D0F                     __end_of___lwmod:
  3928                           
  3929                           	psect	text8
  3930  1D0F                     __ptext8:	
  3931 ;; *************** function ___lwdiv *****************
  3932 ;; Defined at:
  3933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  divisor         2    0[BANK0 ] unsigned int 
  3936 ;;  dividend        2    2[BANK0 ] unsigned int 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  quotient        2    4[BANK0 ] unsigned int 
  3939 ;;  counter         1    6[BANK0 ] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2    0[BANK0 ] unsigned int 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3949 ;;      Params:         0       4       0       0       0
  3950 ;;      Locals:         0       3       0       0       0
  3951 ;;      Temps:          1       0       0       0       0
  3952 ;;      Totals:         1       7       0       0       0
  3953 ;;Total ram usage:        8 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; Hardware stack levels required when called: 1
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_fround
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           
  3964                           ;psect for function ___lwdiv
  3965  1D0F                     ___lwdiv:
  3966  1D0F                     l2297:	
  3967                           ;incstack = 0
  3968                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3969                           
  3970  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
  3971  1D10  1303               	bcf	3,6	;RP1=0, select bank0
  3972  1D11  01A4               	clrf	___lwdiv@quotient
  3973  1D12  01A5               	clrf	___lwdiv@quotient+1
  3974  1D13                     l2299:
  3975  1D13  0820               	movf	___lwdiv@divisor,w
  3976  1D14  0421               	iorwf	___lwdiv@divisor+1,w
  3977  1D15  1903               	btfsc	3,2
  3978  1D16  2D18               	goto	u3061
  3979  1D17  2D19               	goto	u3060
  3980  1D18                     u3061:
  3981  1D18  2D50               	goto	l2319
  3982  1D19                     u3060:
  3983  1D19                     l2301:
  3984  1D19  01A6               	clrf	___lwdiv@counter
  3985  1D1A  0AA6               	incf	___lwdiv@counter,f
  3986  1D1B  2D27               	goto	l2307
  3987  1D1C                     l2303:
  3988  1D1C  3001               	movlw	1
  3989  1D1D                     u3075:
  3990  1D1D  1003               	clrc
  3991  1D1E  0DA0               	rlf	___lwdiv@divisor,f
  3992  1D1F  0DA1               	rlf	___lwdiv@divisor+1,f
  3993  1D20  3EFF               	addlw	-1
  3994  1D21  1D03               	skipz
  3995  1D22  2D1D               	goto	u3075
  3996  1D23                     l2305:
  3997  1D23  3001               	movlw	1
  3998  1D24  00F9               	movwf	??___lwdiv
  3999  1D25  0879               	movf	??___lwdiv,w
  4000  1D26  07A6               	addwf	___lwdiv@counter,f
  4001  1D27                     l2307:
  4002  1D27  1FA1               	btfss	___lwdiv@divisor+1,7
  4003  1D28  2D2A               	goto	u3081
  4004  1D29  2D2B               	goto	u3080
  4005  1D2A                     u3081:
  4006  1D2A  2D1C               	goto	l2303
  4007  1D2B                     u3080:
  4008  1D2B                     l2309:
  4009  1D2B  3001               	movlw	1
  4010  1D2C                     u3095:
  4011  1D2C  1003               	clrc
  4012  1D2D  0DA4               	rlf	___lwdiv@quotient,f
  4013  1D2E  0DA5               	rlf	___lwdiv@quotient+1,f
  4014  1D2F  3EFF               	addlw	-1
  4015  1D30  1D03               	skipz
  4016  1D31  2D2C               	goto	u3095
  4017  1D32  0821               	movf	___lwdiv@divisor+1,w
  4018  1D33  0223               	subwf	___lwdiv@dividend+1,w
  4019  1D34  1D03               	skipz
  4020  1D35  2D38               	goto	u3105
  4021  1D36  0820               	movf	___lwdiv@divisor,w
  4022  1D37  0222               	subwf	___lwdiv@dividend,w
  4023  1D38                     u3105:
  4024  1D38  1C03               	skipc
  4025  1D39  2D3B               	goto	u3101
  4026  1D3A  2D3C               	goto	u3100
  4027  1D3B                     u3101:
  4028  1D3B  2D43               	goto	l2315
  4029  1D3C                     u3100:
  4030  1D3C                     l2311:
  4031  1D3C  0820               	movf	___lwdiv@divisor,w
  4032  1D3D  02A2               	subwf	___lwdiv@dividend,f
  4033  1D3E  0821               	movf	___lwdiv@divisor+1,w
  4034  1D3F  1C03               	skipc
  4035  1D40  03A3               	decf	___lwdiv@dividend+1,f
  4036  1D41  02A3               	subwf	___lwdiv@dividend+1,f
  4037  1D42                     l2313:
  4038  1D42  1424               	bsf	___lwdiv@quotient,0
  4039  1D43                     l2315:
  4040  1D43  3001               	movlw	1
  4041  1D44                     u3115:
  4042  1D44  1003               	clrc
  4043  1D45  0CA1               	rrf	___lwdiv@divisor+1,f
  4044  1D46  0CA0               	rrf	___lwdiv@divisor,f
  4045  1D47  3EFF               	addlw	-1
  4046  1D48  1D03               	skipz
  4047  1D49  2D44               	goto	u3115
  4048  1D4A                     l2317:
  4049  1D4A  3001               	movlw	1
  4050  1D4B  02A6               	subwf	___lwdiv@counter,f
  4051  1D4C  1D03               	btfss	3,2
  4052  1D4D  2D4F               	goto	u3121
  4053  1D4E  2D50               	goto	u3120
  4054  1D4F                     u3121:
  4055  1D4F  2D2B               	goto	l2309
  4056  1D50                     u3120:
  4057  1D50                     l2319:
  4058  1D50  0825               	movf	___lwdiv@quotient+1,w
  4059  1D51  00A1               	movwf	?___lwdiv+1
  4060  1D52  0824               	movf	___lwdiv@quotient,w
  4061  1D53  00A0               	movwf	?___lwdiv
  4062  1D54                     l624:
  4063  1D54  0008               	return
  4064  1D55                     __end_of___lwdiv:
  4065                           
  4066                           	psect	text9
  4067  093C                     __ptext9:	
  4068 ;; *************** function ___flmul *****************
  4069 ;; Defined at:
  4070 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  b               4    8[BANK0 ] unsigned int 
  4073 ;;  a               4   12[BANK0 ] unsigned int 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  prod            4   28[BANK0 ] struct .
  4076 ;;  grs             4   22[BANK0 ] unsigned long 
  4077 ;;  temp            2   32[BANK0 ] struct .
  4078 ;;  bexp            1   27[BANK0 ] unsigned char 
  4079 ;;  aexp            1   26[BANK0 ] unsigned char 
  4080 ;;  sign            1   21[BANK0 ] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  4    8[BANK0 ] unsigned char 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       8       0       0       0
  4091 ;;      Locals:         0      13       0       0       0
  4092 ;;      Temps:          0       5       0       0       0
  4093 ;;      Totals:         0      26       0       0       0
  4094 ;;Total ram usage:       26 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 2
  4097 ;; This function calls:
  4098 ;;		__Umul8_16
  4099 ;; This function is called by:
  4100 ;;		_fround
  4101 ;;		_scale
  4102 ;;		_sprintf
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           
  4107                           ;psect for function ___flmul
  4108  093C                     ___flmul:
  4109  093C                     l2539:	
  4110                           ;incstack = 0
  4111                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4112                           
  4113  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4114  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4115  093E  082B               	movf	___flmul@b+3,w
  4116  093F  3980               	andlw	128
  4117  0940  00B0               	movwf	??___flmul
  4118  0941  0830               	movf	??___flmul,w
  4119  0942  00B5               	movwf	___flmul@sign
  4120  0943                     l2541:
  4121  0943  082B               	movf	___flmul@b+3,w
  4122  0944  00B0               	movwf	??___flmul
  4123  0945  0730               	addwf	??___flmul,w
  4124  0946  00B1               	movwf	??___flmul+1
  4125  0947  0831               	movf	??___flmul+1,w
  4126  0948  00BB               	movwf	___flmul@bexp
  4127  0949                     l2543:
  4128  0949  1FAA               	btfss	___flmul@b+2,7
  4129  094A  294C               	goto	u3651
  4130  094B  294D               	goto	u3650
  4131  094C                     u3651:
  4132  094C  294E               	goto	l2547
  4133  094D                     u3650:
  4134  094D                     l2545:
  4135  094D  143B               	bsf	___flmul@bexp,0
  4136  094E                     l2547:
  4137  094E  083B               	movf	___flmul@bexp,w
  4138  094F  1903               	btfsc	3,2
  4139  0950  2952               	goto	u3661
  4140  0951  2953               	goto	u3660
  4141  0952                     u3661:
  4142  0952  2962               	goto	l2555
  4143  0953                     u3660:
  4144  0953                     l2549:
  4145  0953  0A3B               	incf	___flmul@bexp,w
  4146  0954  1D03               	btfss	3,2
  4147  0955  2957               	goto	u3671
  4148  0956  2958               	goto	u3670
  4149  0957                     u3671:
  4150  0957  2960               	goto	l2553
  4151  0958                     u3670:
  4152  0958                     l2551:
  4153  0958  3000               	movlw	0
  4154  0959  00AB               	movwf	___flmul@b+3
  4155  095A  3000               	movlw	0
  4156  095B  00AA               	movwf	___flmul@b+2
  4157  095C  3000               	movlw	0
  4158  095D  00A9               	movwf	___flmul@b+1
  4159  095E  3000               	movlw	0
  4160  095F  00A8               	movwf	___flmul@b
  4161  0960                     l2553:
  4162  0960  17AA               	bsf	___flmul@b+2,7
  4163  0961  296A               	goto	l2557
  4164  0962                     l2555:
  4165  0962  3000               	movlw	0
  4166  0963  00AB               	movwf	___flmul@b+3
  4167  0964  3000               	movlw	0
  4168  0965  00AA               	movwf	___flmul@b+2
  4169  0966  3000               	movlw	0
  4170  0967  00A9               	movwf	___flmul@b+1
  4171  0968  3000               	movlw	0
  4172  0969  00A8               	movwf	___flmul@b
  4173  096A                     l2557:
  4174  096A  082F               	movf	___flmul@a+3,w
  4175  096B  3980               	andlw	128
  4176  096C  00B0               	movwf	??___flmul
  4177  096D  0830               	movf	??___flmul,w
  4178  096E  06B5               	xorwf	___flmul@sign,f
  4179  096F                     l2559:
  4180  096F  082F               	movf	___flmul@a+3,w
  4181  0970  00B0               	movwf	??___flmul
  4182  0971  0730               	addwf	??___flmul,w
  4183  0972  00B1               	movwf	??___flmul+1
  4184  0973  0831               	movf	??___flmul+1,w
  4185  0974  00BA               	movwf	___flmul@aexp
  4186  0975                     l2561:
  4187  0975  1FAE               	btfss	___flmul@a+2,7
  4188  0976  2978               	goto	u3681
  4189  0977  2979               	goto	u3680
  4190  0978                     u3681:
  4191  0978  297A               	goto	l2565
  4192  0979                     u3680:
  4193  0979                     l2563:
  4194  0979  143A               	bsf	___flmul@aexp,0
  4195  097A                     l2565:
  4196  097A  083A               	movf	___flmul@aexp,w
  4197  097B  1903               	btfsc	3,2
  4198  097C  297E               	goto	u3691
  4199  097D  297F               	goto	u3690
  4200  097E                     u3691:
  4201  097E  298E               	goto	l2573
  4202  097F                     u3690:
  4203  097F                     l2567:
  4204  097F  0A3A               	incf	___flmul@aexp,w
  4205  0980  1D03               	btfss	3,2
  4206  0981  2983               	goto	u3701
  4207  0982  2984               	goto	u3700
  4208  0983                     u3701:
  4209  0983  298C               	goto	l2571
  4210  0984                     u3700:
  4211  0984                     l2569:
  4212  0984  3000               	movlw	0
  4213  0985  00AF               	movwf	___flmul@a+3
  4214  0986  3000               	movlw	0
  4215  0987  00AE               	movwf	___flmul@a+2
  4216  0988  3000               	movlw	0
  4217  0989  00AD               	movwf	___flmul@a+1
  4218  098A  3000               	movlw	0
  4219  098B  00AC               	movwf	___flmul@a
  4220  098C                     l2571:
  4221  098C  17AE               	bsf	___flmul@a+2,7
  4222  098D  2996               	goto	l2575
  4223  098E                     l2573:
  4224  098E  3000               	movlw	0
  4225  098F  00AF               	movwf	___flmul@a+3
  4226  0990  3000               	movlw	0
  4227  0991  00AE               	movwf	___flmul@a+2
  4228  0992  3000               	movlw	0
  4229  0993  00AD               	movwf	___flmul@a+1
  4230  0994  3000               	movlw	0
  4231  0995  00AC               	movwf	___flmul@a
  4232  0996                     l2575:
  4233  0996  083A               	movf	___flmul@aexp,w
  4234  0997  1903               	btfsc	3,2
  4235  0998  299A               	goto	u3711
  4236  0999  299B               	goto	u3710
  4237  099A                     u3711:
  4238  099A  29A0               	goto	l2579
  4239  099B                     u3710:
  4240  099B                     l2577:
  4241  099B  083B               	movf	___flmul@bexp,w
  4242  099C  1D03               	btfss	3,2
  4243  099D  299F               	goto	u3721
  4244  099E  29A0               	goto	u3720
  4245  099F                     u3721:
  4246  099F  29A9               	goto	l2583
  4247  09A0                     u3720:
  4248  09A0                     l2579:
  4249  09A0  3000               	movlw	0
  4250  09A1  00AB               	movwf	?___flmul+3
  4251  09A2  3000               	movlw	0
  4252  09A3  00AA               	movwf	?___flmul+2
  4253  09A4  3000               	movlw	0
  4254  09A5  00A9               	movwf	?___flmul+1
  4255  09A6  3000               	movlw	0
  4256  09A7  00A8               	movwf	?___flmul
  4257  09A8  2C9C               	goto	l741
  4258  09A9                     l2583:
  4259  09A9  0828               	movf	___flmul@b,w
  4260  09AA  00B0               	movwf	??___flmul
  4261  09AB  0830               	movf	??___flmul,w
  4262  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4263  09AD  082E               	movf	___flmul@a+2,w
  4264  09AE  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4265  09B3  0874               	movf	?__Umul8_16+1,w
  4266  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4267  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4268  09B6  00C1               	movwf	___flmul@temp+1
  4269  09B7  0873               	movf	?__Umul8_16,w
  4270  09B8  00C0               	movwf	___flmul@temp
  4271  09B9                     l2585:
  4272  09B9  0840               	movf	___flmul@temp,w
  4273  09BA  00B0               	movwf	??___flmul
  4274  09BB  01B1               	clrf	??___flmul+1
  4275  09BC  01B2               	clrf	??___flmul+2
  4276  09BD  01B3               	clrf	??___flmul+3
  4277  09BE  0833               	movf	??___flmul+3,w
  4278  09BF  00B9               	movwf	___flmul@grs+3
  4279  09C0  0832               	movf	??___flmul+2,w
  4280  09C1  00B8               	movwf	___flmul@grs+2
  4281  09C2  0831               	movf	??___flmul+1,w
  4282  09C3  00B7               	movwf	___flmul@grs+1
  4283  09C4  0830               	movf	??___flmul,w
  4284  09C5  00B6               	movwf	___flmul@grs
  4285  09C6                     l2587:
  4286  09C6  0841               	movf	___flmul@temp+1,w
  4287  09C7  00B0               	movwf	??___flmul
  4288  09C8  01B1               	clrf	??___flmul+1
  4289  09C9  01B2               	clrf	??___flmul+2
  4290  09CA  01B3               	clrf	??___flmul+3
  4291  09CB  0833               	movf	??___flmul+3,w
  4292  09CC  00BF               	movwf	___flmul@prod+3
  4293  09CD  0832               	movf	??___flmul+2,w
  4294  09CE  00BE               	movwf	___flmul@prod+2
  4295  09CF  0831               	movf	??___flmul+1,w
  4296  09D0  00BD               	movwf	___flmul@prod+1
  4297  09D1  0830               	movf	??___flmul,w
  4298  09D2  00BC               	movwf	___flmul@prod
  4299  09D3  0829               	movf	___flmul@b+1,w
  4300  09D4  00B0               	movwf	??___flmul
  4301  09D5  0830               	movf	??___flmul,w
  4302  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4303  09D7  082D               	movf	___flmul@a+1,w
  4304  09D8  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4305  09DD  0874               	movf	?__Umul8_16+1,w
  4306  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4307  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4308  09E0  00C1               	movwf	___flmul@temp+1
  4309  09E1  0873               	movf	?__Umul8_16,w
  4310  09E2  00C0               	movwf	___flmul@temp
  4311  09E3                     l2589:
  4312  09E3  0840               	movf	___flmul@temp,w
  4313  09E4  00B0               	movwf	??___flmul
  4314  09E5  01B1               	clrf	??___flmul+1
  4315  09E6  01B2               	clrf	??___flmul+2
  4316  09E7  01B3               	clrf	??___flmul+3
  4317  09E8  0830               	movf	??___flmul,w
  4318  09E9  07B6               	addwf	___flmul@grs,f
  4319  09EA  0831               	movf	??___flmul+1,w
  4320  09EB  1103               	clrz
  4321  09EC  1803               	skipnc
  4322  09ED  3E01               	addlw	1
  4323  09EE  1903               	skipnz
  4324  09EF  29F1               	goto	u3731
  4325  09F0  07B7               	addwf	___flmul@grs+1,f
  4326  09F1                     u3731:
  4327  09F1  0832               	movf	??___flmul+2,w
  4328  09F2  1103               	clrz
  4329  09F3  1803               	skipnc
  4330  09F4  3E01               	addlw	1
  4331  09F5  1903               	skipnz
  4332  09F6  29F8               	goto	u3732
  4333  09F7  07B8               	addwf	___flmul@grs+2,f
  4334  09F8                     u3732:
  4335  09F8  0833               	movf	??___flmul+3,w
  4336  09F9  1103               	clrz
  4337  09FA  1803               	skipnc
  4338  09FB  3E01               	addlw	1
  4339  09FC  1903               	skipnz
  4340  09FD  29FF               	goto	u3733
  4341  09FE  07B9               	addwf	___flmul@grs+3,f
  4342  09FF                     u3733:
  4343  09FF                     l2591:
  4344  09FF  0841               	movf	___flmul@temp+1,w
  4345  0A00  00B0               	movwf	??___flmul
  4346  0A01  01B1               	clrf	??___flmul+1
  4347  0A02  01B2               	clrf	??___flmul+2
  4348  0A03  01B3               	clrf	??___flmul+3
  4349  0A04  0830               	movf	??___flmul,w
  4350  0A05  07BC               	addwf	___flmul@prod,f
  4351  0A06  0831               	movf	??___flmul+1,w
  4352  0A07  1103               	clrz
  4353  0A08  1803               	skipnc
  4354  0A09  3E01               	addlw	1
  4355  0A0A  1903               	skipnz
  4356  0A0B  2A0D               	goto	u3741
  4357  0A0C  07BD               	addwf	___flmul@prod+1,f
  4358  0A0D                     u3741:
  4359  0A0D  0832               	movf	??___flmul+2,w
  4360  0A0E  1103               	clrz
  4361  0A0F  1803               	skipnc
  4362  0A10  3E01               	addlw	1
  4363  0A11  1903               	skipnz
  4364  0A12  2A14               	goto	u3742
  4365  0A13  07BE               	addwf	___flmul@prod+2,f
  4366  0A14                     u3742:
  4367  0A14  0833               	movf	??___flmul+3,w
  4368  0A15  1103               	clrz
  4369  0A16  1803               	skipnc
  4370  0A17  3E01               	addlw	1
  4371  0A18  1903               	skipnz
  4372  0A19  2A1B               	goto	u3743
  4373  0A1A  07BF               	addwf	___flmul@prod+3,f
  4374  0A1B                     u3743:
  4375  0A1B  082A               	movf	___flmul@b+2,w
  4376  0A1C  00B0               	movwf	??___flmul
  4377  0A1D  0830               	movf	??___flmul,w
  4378  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4379  0A1F  082C               	movf	___flmul@a,w
  4380  0A20  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4381  0A25  0874               	movf	?__Umul8_16+1,w
  4382  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0A28  00C1               	movwf	___flmul@temp+1
  4385  0A29  0873               	movf	?__Umul8_16,w
  4386  0A2A  00C0               	movwf	___flmul@temp
  4387  0A2B                     l2593:
  4388  0A2B  0840               	movf	___flmul@temp,w
  4389  0A2C  00B0               	movwf	??___flmul
  4390  0A2D  01B1               	clrf	??___flmul+1
  4391  0A2E  01B2               	clrf	??___flmul+2
  4392  0A2F  01B3               	clrf	??___flmul+3
  4393  0A30  0830               	movf	??___flmul,w
  4394  0A31  07B6               	addwf	___flmul@grs,f
  4395  0A32  0831               	movf	??___flmul+1,w
  4396  0A33  1103               	clrz
  4397  0A34  1803               	skipnc
  4398  0A35  3E01               	addlw	1
  4399  0A36  1903               	skipnz
  4400  0A37  2A39               	goto	u3751
  4401  0A38  07B7               	addwf	___flmul@grs+1,f
  4402  0A39                     u3751:
  4403  0A39  0832               	movf	??___flmul+2,w
  4404  0A3A  1103               	clrz
  4405  0A3B  1803               	skipnc
  4406  0A3C  3E01               	addlw	1
  4407  0A3D  1903               	skipnz
  4408  0A3E  2A40               	goto	u3752
  4409  0A3F  07B8               	addwf	___flmul@grs+2,f
  4410  0A40                     u3752:
  4411  0A40  0833               	movf	??___flmul+3,w
  4412  0A41  1103               	clrz
  4413  0A42  1803               	skipnc
  4414  0A43  3E01               	addlw	1
  4415  0A44  1903               	skipnz
  4416  0A45  2A47               	goto	u3753
  4417  0A46  07B9               	addwf	___flmul@grs+3,f
  4418  0A47                     u3753:
  4419  0A47                     l2595:
  4420  0A47  0841               	movf	___flmul@temp+1,w
  4421  0A48  00B0               	movwf	??___flmul
  4422  0A49  01B1               	clrf	??___flmul+1
  4423  0A4A  01B2               	clrf	??___flmul+2
  4424  0A4B  01B3               	clrf	??___flmul+3
  4425  0A4C  0830               	movf	??___flmul,w
  4426  0A4D  07BC               	addwf	___flmul@prod,f
  4427  0A4E  0831               	movf	??___flmul+1,w
  4428  0A4F  1103               	clrz
  4429  0A50  1803               	skipnc
  4430  0A51  3E01               	addlw	1
  4431  0A52  1903               	skipnz
  4432  0A53  2A55               	goto	u3761
  4433  0A54  07BD               	addwf	___flmul@prod+1,f
  4434  0A55                     u3761:
  4435  0A55  0832               	movf	??___flmul+2,w
  4436  0A56  1103               	clrz
  4437  0A57  1803               	skipnc
  4438  0A58  3E01               	addlw	1
  4439  0A59  1903               	skipnz
  4440  0A5A  2A5C               	goto	u3762
  4441  0A5B  07BE               	addwf	___flmul@prod+2,f
  4442  0A5C                     u3762:
  4443  0A5C  0833               	movf	??___flmul+3,w
  4444  0A5D  1103               	clrz
  4445  0A5E  1803               	skipnc
  4446  0A5F  3E01               	addlw	1
  4447  0A60  1903               	skipnz
  4448  0A61  2A63               	goto	u3763
  4449  0A62  07BF               	addwf	___flmul@prod+3,f
  4450  0A63                     u3763:
  4451  0A63                     l2597:
  4452  0A63  3008               	movlw	8
  4453  0A64  00B0               	movwf	??___flmul
  4454  0A65                     u3775:
  4455  0A65  1003               	clrc
  4456  0A66  0DB6               	rlf	___flmul@grs,f
  4457  0A67  0DB7               	rlf	___flmul@grs+1,f
  4458  0A68  0DB8               	rlf	___flmul@grs+2,f
  4459  0A69  0DB9               	rlf	___flmul@grs+3,f
  4460  0A6A  0BB0               	decfsz	??___flmul,f
  4461  0A6B  2A65               	goto	u3775
  4462  0A6C                     l2599:
  4463  0A6C  0829               	movf	___flmul@b+1,w
  4464  0A6D  00B0               	movwf	??___flmul
  4465  0A6E  0830               	movf	??___flmul,w
  4466  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  4467  0A70  082C               	movf	___flmul@a,w
  4468  0A71  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4469  0A76  0874               	movf	?__Umul8_16+1,w
  4470  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0A79  00C1               	movwf	___flmul@temp+1
  4473  0A7A  0873               	movf	?__Umul8_16,w
  4474  0A7B  00C0               	movwf	___flmul@temp
  4475  0A7C                     l2601:
  4476  0A7C  0840               	movf	___flmul@temp,w
  4477  0A7D  00B0               	movwf	??___flmul
  4478  0A7E  0841               	movf	___flmul@temp+1,w
  4479  0A7F  00B1               	movwf	??___flmul+1
  4480  0A80  01B2               	clrf	??___flmul+2
  4481  0A81  01B3               	clrf	??___flmul+3
  4482  0A82  0830               	movf	??___flmul,w
  4483  0A83  07B6               	addwf	___flmul@grs,f
  4484  0A84  0831               	movf	??___flmul+1,w
  4485  0A85  1103               	clrz
  4486  0A86  1803               	skipnc
  4487  0A87  3E01               	addlw	1
  4488  0A88  1903               	skipnz
  4489  0A89  2A8B               	goto	u3781
  4490  0A8A  07B7               	addwf	___flmul@grs+1,f
  4491  0A8B                     u3781:
  4492  0A8B  0832               	movf	??___flmul+2,w
  4493  0A8C  1103               	clrz
  4494  0A8D  1803               	skipnc
  4495  0A8E  3E01               	addlw	1
  4496  0A8F  1903               	skipnz
  4497  0A90  2A92               	goto	u3782
  4498  0A91  07B8               	addwf	___flmul@grs+2,f
  4499  0A92                     u3782:
  4500  0A92  0833               	movf	??___flmul+3,w
  4501  0A93  1103               	clrz
  4502  0A94  1803               	skipnc
  4503  0A95  3E01               	addlw	1
  4504  0A96  1903               	skipnz
  4505  0A97  2A99               	goto	u3783
  4506  0A98  07B9               	addwf	___flmul@grs+3,f
  4507  0A99                     u3783:
  4508  0A99                     l2603:
  4509  0A99  0828               	movf	___flmul@b,w
  4510  0A9A  00B0               	movwf	??___flmul
  4511  0A9B  0830               	movf	??___flmul,w
  4512  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  4513  0A9D  082D               	movf	___flmul@a+1,w
  4514  0A9E  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4515  0AA3  0874               	movf	?__Umul8_16+1,w
  4516  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0AA6  00C1               	movwf	___flmul@temp+1
  4519  0AA7  0873               	movf	?__Umul8_16,w
  4520  0AA8  00C0               	movwf	___flmul@temp
  4521  0AA9                     l2605:
  4522  0AA9  0840               	movf	___flmul@temp,w
  4523  0AAA  00B0               	movwf	??___flmul
  4524  0AAB  0841               	movf	___flmul@temp+1,w
  4525  0AAC  00B1               	movwf	??___flmul+1
  4526  0AAD  01B2               	clrf	??___flmul+2
  4527  0AAE  01B3               	clrf	??___flmul+3
  4528  0AAF  0830               	movf	??___flmul,w
  4529  0AB0  07B6               	addwf	___flmul@grs,f
  4530  0AB1  0831               	movf	??___flmul+1,w
  4531  0AB2  1103               	clrz
  4532  0AB3  1803               	skipnc
  4533  0AB4  3E01               	addlw	1
  4534  0AB5  1903               	skipnz
  4535  0AB6  2AB8               	goto	u3791
  4536  0AB7  07B7               	addwf	___flmul@grs+1,f
  4537  0AB8                     u3791:
  4538  0AB8  0832               	movf	??___flmul+2,w
  4539  0AB9  1103               	clrz
  4540  0ABA  1803               	skipnc
  4541  0ABB  3E01               	addlw	1
  4542  0ABC  1903               	skipnz
  4543  0ABD  2ABF               	goto	u3792
  4544  0ABE  07B8               	addwf	___flmul@grs+2,f
  4545  0ABF                     u3792:
  4546  0ABF  0833               	movf	??___flmul+3,w
  4547  0AC0  1103               	clrz
  4548  0AC1  1803               	skipnc
  4549  0AC2  3E01               	addlw	1
  4550  0AC3  1903               	skipnz
  4551  0AC4  2AC6               	goto	u3793
  4552  0AC5  07B9               	addwf	___flmul@grs+3,f
  4553  0AC6                     u3793:
  4554  0AC6                     l2607:
  4555  0AC6  3008               	movlw	8
  4556  0AC7  00B0               	movwf	??___flmul
  4557  0AC8                     u3805:
  4558  0AC8  1003               	clrc
  4559  0AC9  0DB6               	rlf	___flmul@grs,f
  4560  0ACA  0DB7               	rlf	___flmul@grs+1,f
  4561  0ACB  0DB8               	rlf	___flmul@grs+2,f
  4562  0ACC  0DB9               	rlf	___flmul@grs+3,f
  4563  0ACD  0BB0               	decfsz	??___flmul,f
  4564  0ACE  2AC8               	goto	u3805
  4565  0ACF  0828               	movf	___flmul@b,w
  4566  0AD0  00B0               	movwf	??___flmul
  4567  0AD1  0830               	movf	??___flmul,w
  4568  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  4569  0AD3  082C               	movf	___flmul@a,w
  4570  0AD4  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4571  0AD9  0874               	movf	?__Umul8_16+1,w
  4572  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4573  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4574  0ADC  00C1               	movwf	___flmul@temp+1
  4575  0ADD  0873               	movf	?__Umul8_16,w
  4576  0ADE  00C0               	movwf	___flmul@temp
  4577  0ADF                     l2609:
  4578  0ADF  0840               	movf	___flmul@temp,w
  4579  0AE0  00B0               	movwf	??___flmul
  4580  0AE1  0841               	movf	___flmul@temp+1,w
  4581  0AE2  00B1               	movwf	??___flmul+1
  4582  0AE3  01B2               	clrf	??___flmul+2
  4583  0AE4  01B3               	clrf	??___flmul+3
  4584  0AE5  0830               	movf	??___flmul,w
  4585  0AE6  07B6               	addwf	___flmul@grs,f
  4586  0AE7  0831               	movf	??___flmul+1,w
  4587  0AE8  1103               	clrz
  4588  0AE9  1803               	skipnc
  4589  0AEA  3E01               	addlw	1
  4590  0AEB  1903               	skipnz
  4591  0AEC  2AEE               	goto	u3811
  4592  0AED  07B7               	addwf	___flmul@grs+1,f
  4593  0AEE                     u3811:
  4594  0AEE  0832               	movf	??___flmul+2,w
  4595  0AEF  1103               	clrz
  4596  0AF0  1803               	skipnc
  4597  0AF1  3E01               	addlw	1
  4598  0AF2  1903               	skipnz
  4599  0AF3  2AF5               	goto	u3812
  4600  0AF4  07B8               	addwf	___flmul@grs+2,f
  4601  0AF5                     u3812:
  4602  0AF5  0833               	movf	??___flmul+3,w
  4603  0AF6  1103               	clrz
  4604  0AF7  1803               	skipnc
  4605  0AF8  3E01               	addlw	1
  4606  0AF9  1903               	skipnz
  4607  0AFA  2AFC               	goto	u3813
  4608  0AFB  07B9               	addwf	___flmul@grs+3,f
  4609  0AFC                     u3813:
  4610  0AFC                     l2611:
  4611  0AFC  0829               	movf	___flmul@b+1,w
  4612  0AFD  00B0               	movwf	??___flmul
  4613  0AFE  0830               	movf	??___flmul,w
  4614  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  4615  0B00  082E               	movf	___flmul@a+2,w
  4616  0B01  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4617  0B06  0874               	movf	?__Umul8_16+1,w
  4618  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4619  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4620  0B09  00C1               	movwf	___flmul@temp+1
  4621  0B0A  0873               	movf	?__Umul8_16,w
  4622  0B0B  00C0               	movwf	___flmul@temp
  4623  0B0C  0840               	movf	___flmul@temp,w
  4624  0B0D  00B0               	movwf	??___flmul
  4625  0B0E  0841               	movf	___flmul@temp+1,w
  4626  0B0F  00B1               	movwf	??___flmul+1
  4627  0B10  01B2               	clrf	??___flmul+2
  4628  0B11  01B3               	clrf	??___flmul+3
  4629  0B12  0830               	movf	??___flmul,w
  4630  0B13  07BC               	addwf	___flmul@prod,f
  4631  0B14  0831               	movf	??___flmul+1,w
  4632  0B15  1103               	clrz
  4633  0B16  1803               	skipnc
  4634  0B17  3E01               	addlw	1
  4635  0B18  1903               	skipnz
  4636  0B19  2B1B               	goto	u3821
  4637  0B1A  07BD               	addwf	___flmul@prod+1,f
  4638  0B1B                     u3821:
  4639  0B1B  0832               	movf	??___flmul+2,w
  4640  0B1C  1103               	clrz
  4641  0B1D  1803               	skipnc
  4642  0B1E  3E01               	addlw	1
  4643  0B1F  1903               	skipnz
  4644  0B20  2B22               	goto	u3822
  4645  0B21  07BE               	addwf	___flmul@prod+2,f
  4646  0B22                     u3822:
  4647  0B22  0833               	movf	??___flmul+3,w
  4648  0B23  1103               	clrz
  4649  0B24  1803               	skipnc
  4650  0B25  3E01               	addlw	1
  4651  0B26  1903               	skipnz
  4652  0B27  2B29               	goto	u3823
  4653  0B28  07BF               	addwf	___flmul@prod+3,f
  4654  0B29                     u3823:
  4655  0B29                     l2613:
  4656  0B29  082A               	movf	___flmul@b+2,w
  4657  0B2A  00B0               	movwf	??___flmul
  4658  0B2B  0830               	movf	??___flmul,w
  4659  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  4660  0B2D  082D               	movf	___flmul@a+1,w
  4661  0B2E  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4662  0B33  0874               	movf	?__Umul8_16+1,w
  4663  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4664  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4665  0B36  00C1               	movwf	___flmul@temp+1
  4666  0B37  0873               	movf	?__Umul8_16,w
  4667  0B38  00C0               	movwf	___flmul@temp
  4668  0B39                     l2615:
  4669  0B39  0840               	movf	___flmul@temp,w
  4670  0B3A  00B0               	movwf	??___flmul
  4671  0B3B  0841               	movf	___flmul@temp+1,w
  4672  0B3C  00B1               	movwf	??___flmul+1
  4673  0B3D  01B2               	clrf	??___flmul+2
  4674  0B3E  01B3               	clrf	??___flmul+3
  4675  0B3F  0830               	movf	??___flmul,w
  4676  0B40  07BC               	addwf	___flmul@prod,f
  4677  0B41  0831               	movf	??___flmul+1,w
  4678  0B42  1103               	clrz
  4679  0B43  1803               	skipnc
  4680  0B44  3E01               	addlw	1
  4681  0B45  1903               	skipnz
  4682  0B46  2B48               	goto	u3831
  4683  0B47  07BD               	addwf	___flmul@prod+1,f
  4684  0B48                     u3831:
  4685  0B48  0832               	movf	??___flmul+2,w
  4686  0B49  1103               	clrz
  4687  0B4A  1803               	skipnc
  4688  0B4B  3E01               	addlw	1
  4689  0B4C  1903               	skipnz
  4690  0B4D  2B4F               	goto	u3832
  4691  0B4E  07BE               	addwf	___flmul@prod+2,f
  4692  0B4F                     u3832:
  4693  0B4F  0833               	movf	??___flmul+3,w
  4694  0B50  1103               	clrz
  4695  0B51  1803               	skipnc
  4696  0B52  3E01               	addlw	1
  4697  0B53  1903               	skipnz
  4698  0B54  2B56               	goto	u3833
  4699  0B55  07BF               	addwf	___flmul@prod+3,f
  4700  0B56                     u3833:
  4701  0B56  082A               	movf	___flmul@b+2,w
  4702  0B57  00B0               	movwf	??___flmul
  4703  0B58  0830               	movf	??___flmul,w
  4704  0B59  00F3               	movwf	__Umul8_16@multiplicand
  4705  0B5A  082E               	movf	___flmul@a+2,w
  4706  0B5B  120A  118A  27D7  120A  158A  	fcall	__Umul8_16
  4707  0B60  0874               	movf	?__Umul8_16+1,w
  4708  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  4709  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  4710  0B63  00C1               	movwf	___flmul@temp+1
  4711  0B64  0873               	movf	?__Umul8_16,w
  4712  0B65  00C0               	movwf	___flmul@temp
  4713  0B66                     l2617:
  4714  0B66  0840               	movf	___flmul@temp,w
  4715  0B67  00B0               	movwf	??___flmul
  4716  0B68  0841               	movf	___flmul@temp+1,w
  4717  0B69  00B1               	movwf	??___flmul+1
  4718  0B6A  01B2               	clrf	??___flmul+2
  4719  0B6B  01B3               	clrf	??___flmul+3
  4720  0B6C  3008               	movlw	8
  4721  0B6D                     u3845:
  4722  0B6D  1003               	clrc
  4723  0B6E  0DB0               	rlf	??___flmul,f
  4724  0B6F  0DB1               	rlf	??___flmul+1,f
  4725  0B70  0DB2               	rlf	??___flmul+2,f
  4726  0B71  0DB3               	rlf	??___flmul+3,f
  4727  0B72                     u3840:
  4728  0B72  3EFF               	addlw	-1
  4729  0B73  1D03               	skipz
  4730  0B74  2B6D               	goto	u3845
  4731  0B75  0830               	movf	??___flmul,w
  4732  0B76  07BC               	addwf	___flmul@prod,f
  4733  0B77  0831               	movf	??___flmul+1,w
  4734  0B78  1103               	clrz
  4735  0B79  1803               	skipnc
  4736  0B7A  3E01               	addlw	1
  4737  0B7B  1903               	skipnz
  4738  0B7C  2B7E               	goto	u3851
  4739  0B7D  07BD               	addwf	___flmul@prod+1,f
  4740  0B7E                     u3851:
  4741  0B7E  0832               	movf	??___flmul+2,w
  4742  0B7F  1103               	clrz
  4743  0B80  1803               	skipnc
  4744  0B81  3E01               	addlw	1
  4745  0B82  1903               	skipnz
  4746  0B83  2B85               	goto	u3852
  4747  0B84  07BE               	addwf	___flmul@prod+2,f
  4748  0B85                     u3852:
  4749  0B85  0833               	movf	??___flmul+3,w
  4750  0B86  1103               	clrz
  4751  0B87  1803               	skipnc
  4752  0B88  3E01               	addlw	1
  4753  0B89  1903               	skipnz
  4754  0B8A  2B8C               	goto	u3853
  4755  0B8B  07BF               	addwf	___flmul@prod+3,f
  4756  0B8C                     u3853:
  4757  0B8C                     l2619:
  4758  0B8C  0836               	movf	___flmul@grs,w
  4759  0B8D  00B0               	movwf	??___flmul
  4760  0B8E  0837               	movf	___flmul@grs+1,w
  4761  0B8F  00B1               	movwf	??___flmul+1
  4762  0B90  0838               	movf	___flmul@grs+2,w
  4763  0B91  00B2               	movwf	??___flmul+2
  4764  0B92  0839               	movf	___flmul@grs+3,w
  4765  0B93  00B3               	movwf	??___flmul+3
  4766  0B94  3018               	movlw	24
  4767  0B95                     u3865:
  4768  0B95  1003               	clrc
  4769  0B96  0CB3               	rrf	??___flmul+3,f
  4770  0B97  0CB2               	rrf	??___flmul+2,f
  4771  0B98  0CB1               	rrf	??___flmul+1,f
  4772  0B99  0CB0               	rrf	??___flmul,f
  4773  0B9A                     u3860:
  4774  0B9A  3EFF               	addlw	-1
  4775  0B9B  1D03               	skipz
  4776  0B9C  2B95               	goto	u3865
  4777  0B9D  0830               	movf	??___flmul,w
  4778  0B9E  07BC               	addwf	___flmul@prod,f
  4779  0B9F  0831               	movf	??___flmul+1,w
  4780  0BA0  1103               	clrz
  4781  0BA1  1803               	skipnc
  4782  0BA2  3E01               	addlw	1
  4783  0BA3  1903               	skipnz
  4784  0BA4  2BA6               	goto	u3871
  4785  0BA5  07BD               	addwf	___flmul@prod+1,f
  4786  0BA6                     u3871:
  4787  0BA6  0832               	movf	??___flmul+2,w
  4788  0BA7  1103               	clrz
  4789  0BA8  1803               	skipnc
  4790  0BA9  3E01               	addlw	1
  4791  0BAA  1903               	skipnz
  4792  0BAB  2BAD               	goto	u3872
  4793  0BAC  07BE               	addwf	___flmul@prod+2,f
  4794  0BAD                     u3872:
  4795  0BAD  0833               	movf	??___flmul+3,w
  4796  0BAE  1103               	clrz
  4797  0BAF  1803               	skipnc
  4798  0BB0  3E01               	addlw	1
  4799  0BB1  1903               	skipnz
  4800  0BB2  2BB4               	goto	u3873
  4801  0BB3  07BF               	addwf	___flmul@prod+3,f
  4802  0BB4                     u3873:
  4803  0BB4                     l2621:
  4804  0BB4  3008               	movlw	8
  4805  0BB5  00B0               	movwf	??___flmul
  4806  0BB6                     u3885:
  4807  0BB6  1003               	clrc
  4808  0BB7  0DB6               	rlf	___flmul@grs,f
  4809  0BB8  0DB7               	rlf	___flmul@grs+1,f
  4810  0BB9  0DB8               	rlf	___flmul@grs+2,f
  4811  0BBA  0DB9               	rlf	___flmul@grs+3,f
  4812  0BBB  0BB0               	decfsz	??___flmul,f
  4813  0BBC  2BB6               	goto	u3885
  4814  0BBD                     l2623:
  4815  0BBD  083B               	movf	___flmul@bexp,w
  4816  0BBE  073A               	addwf	___flmul@aexp,w
  4817  0BBF  00B0               	movwf	??___flmul
  4818  0BC0  01B1               	clrf	??___flmul+1
  4819  0BC1  0DB1               	rlf	??___flmul+1,f
  4820  0BC2  0830               	movf	??___flmul,w
  4821  0BC3  3E82               	addlw	130
  4822  0BC4  00C0               	movwf	___flmul@temp
  4823  0BC5  0831               	movf	??___flmul+1,w
  4824  0BC6  1803               	skipnc
  4825  0BC7  3E01               	addlw	1
  4826  0BC8  3EFF               	addlw	255
  4827  0BC9  00C1               	movwf	___flmul@temp+1
  4828  0BCA  2BE8               	goto	l2635
  4829  0BCB                     l2625:
  4830  0BCB  3001               	movlw	1
  4831  0BCC  00B0               	movwf	??___flmul
  4832  0BCD                     u3895:
  4833  0BCD  1003               	clrc
  4834  0BCE  0DBC               	rlf	___flmul@prod,f
  4835  0BCF  0DBD               	rlf	___flmul@prod+1,f
  4836  0BD0  0DBE               	rlf	___flmul@prod+2,f
  4837  0BD1  0DBF               	rlf	___flmul@prod+3,f
  4838  0BD2  0BB0               	decfsz	??___flmul,f
  4839  0BD3  2BCD               	goto	u3895
  4840  0BD4                     l2627:
  4841  0BD4  1FB9               	btfss	___flmul@grs+3,7
  4842  0BD5  2BD7               	goto	u3901
  4843  0BD6  2BD8               	goto	u3900
  4844  0BD7                     u3901:
  4845  0BD7  2BD9               	goto	l2631
  4846  0BD8                     u3900:
  4847  0BD8                     l2629:
  4848  0BD8  143C               	bsf	___flmul@prod,0
  4849  0BD9                     l2631:
  4850  0BD9  3001               	movlw	1
  4851  0BDA  00B0               	movwf	??___flmul
  4852  0BDB                     u3915:
  4853  0BDB  1003               	clrc
  4854  0BDC  0DB6               	rlf	___flmul@grs,f
  4855  0BDD  0DB7               	rlf	___flmul@grs+1,f
  4856  0BDE  0DB8               	rlf	___flmul@grs+2,f
  4857  0BDF  0DB9               	rlf	___flmul@grs+3,f
  4858  0BE0  0BB0               	decfsz	??___flmul,f
  4859  0BE1  2BDB               	goto	u3915
  4860  0BE2                     l2633:
  4861  0BE2  30FF               	movlw	255
  4862  0BE3  07C0               	addwf	___flmul@temp,f
  4863  0BE4  1803               	skipnc
  4864  0BE5  0AC1               	incf	___flmul@temp+1,f
  4865  0BE6  30FF               	movlw	255
  4866  0BE7  07C1               	addwf	___flmul@temp+1,f
  4867  0BE8                     l2635:
  4868  0BE8  1FBE               	btfss	___flmul@prod+2,7
  4869  0BE9  2BEB               	goto	u3921
  4870  0BEA  2BEC               	goto	u3920
  4871  0BEB                     u3921:
  4872  0BEB  2BCB               	goto	l2625
  4873  0BEC                     u3920:
  4874  0BEC                     l2637:
  4875  0BEC  01BA               	clrf	___flmul@aexp
  4876  0BED                     l2639:
  4877  0BED  1FB9               	btfss	___flmul@grs+3,7
  4878  0BEE  2BF0               	goto	u3931
  4879  0BEF  2BF1               	goto	u3930
  4880  0BF0                     u3931:
  4881  0BF0  2C0D               	goto	l2647
  4882  0BF1                     u3930:
  4883  0BF1                     l2641:
  4884  0BF1  30FF               	movlw	255
  4885  0BF2  0536               	andwf	___flmul@grs,w
  4886  0BF3  00B0               	movwf	??___flmul
  4887  0BF4  30FF               	movlw	255
  4888  0BF5  0537               	andwf	___flmul@grs+1,w
  4889  0BF6  00B1               	movwf	??___flmul+1
  4890  0BF7  30FF               	movlw	255
  4891  0BF8  0538               	andwf	___flmul@grs+2,w
  4892  0BF9  00B2               	movwf	??___flmul+2
  4893  0BFA  307F               	movlw	127
  4894  0BFB  0539               	andwf	___flmul@grs+3,w
  4895  0BFC  00B3               	movwf	??___flmul+3
  4896  0BFD  0833               	movf	??___flmul+3,w
  4897  0BFE  0432               	iorwf	??___flmul+2,w
  4898  0BFF  0431               	iorwf	??___flmul+1,w
  4899  0C00  0430               	iorwf	??___flmul,w
  4900  0C01  1903               	skipnz
  4901  0C02  2C04               	goto	u3941
  4902  0C03  2C05               	goto	u3940
  4903  0C04                     u3941:
  4904  0C04  2C08               	goto	l747
  4905  0C05                     u3940:
  4906  0C05                     l2643:
  4907  0C05  01BA               	clrf	___flmul@aexp
  4908  0C06  0ABA               	incf	___flmul@aexp,f
  4909  0C07  2C0D               	goto	l2647
  4910  0C08                     l747:
  4911  0C08  1C3C               	btfss	___flmul@prod,0
  4912  0C09  2C0B               	goto	u3951
  4913  0C0A  2C0C               	goto	u3950
  4914  0C0B                     u3951:
  4915  0C0B  2C0D               	goto	l2647
  4916  0C0C                     u3950:
  4917  0C0C  2C05               	goto	l2643
  4918  0C0D                     l2647:
  4919  0C0D  083A               	movf	___flmul@aexp,w
  4920  0C0E  1903               	btfsc	3,2
  4921  0C0F  2C11               	goto	u3961
  4922  0C10  2C12               	goto	u3960
  4923  0C11                     u3961:
  4924  0C11  2C43               	goto	l2657
  4925  0C12                     u3960:
  4926  0C12                     l2649:
  4927  0C12  3001               	movlw	1
  4928  0C13  07BC               	addwf	___flmul@prod,f
  4929  0C14  3000               	movlw	0
  4930  0C15  1803               	skipnc
  4931  0C16  3001               	movlw	1
  4932  0C17  07BD               	addwf	___flmul@prod+1,f
  4933  0C18  3000               	movlw	0
  4934  0C19  1803               	skipnc
  4935  0C1A  3001               	movlw	1
  4936  0C1B  07BE               	addwf	___flmul@prod+2,f
  4937  0C1C  3000               	movlw	0
  4938  0C1D  1803               	skipnc
  4939  0C1E  3001               	movlw	1
  4940  0C1F  07BF               	addwf	___flmul@prod+3,f
  4941  0C20                     l2651:
  4942  0C20  1C3F               	btfss	___flmul@prod+3,0
  4943  0C21  2C23               	goto	u3971
  4944  0C22  2C24               	goto	u3970
  4945  0C23                     u3971:
  4946  0C23  2C43               	goto	l2657
  4947  0C24                     u3970:
  4948  0C24                     l2653:
  4949  0C24  083C               	movf	___flmul@prod,w
  4950  0C25  00B0               	movwf	??___flmul
  4951  0C26  083D               	movf	___flmul@prod+1,w
  4952  0C27  00B1               	movwf	??___flmul+1
  4953  0C28  083E               	movf	___flmul@prod+2,w
  4954  0C29  00B2               	movwf	??___flmul+2
  4955  0C2A  083F               	movf	___flmul@prod+3,w
  4956  0C2B  00B3               	movwf	??___flmul+3
  4957  0C2C  3001               	movlw	1
  4958  0C2D  00B4               	movwf	??___flmul+4
  4959  0C2E                     u3985:
  4960  0C2E  0D33               	rlf	??___flmul+3,w
  4961  0C2F  0CB3               	rrf	??___flmul+3,f
  4962  0C30  0CB2               	rrf	??___flmul+2,f
  4963  0C31  0CB1               	rrf	??___flmul+1,f
  4964  0C32  0CB0               	rrf	??___flmul,f
  4965  0C33                     u3980:
  4966  0C33  0BB4               	decfsz	??___flmul+4,f
  4967  0C34  2C2E               	goto	u3985
  4968  0C35  0833               	movf	??___flmul+3,w
  4969  0C36  00BF               	movwf	___flmul@prod+3
  4970  0C37  0832               	movf	??___flmul+2,w
  4971  0C38  00BE               	movwf	___flmul@prod+2
  4972  0C39  0831               	movf	??___flmul+1,w
  4973  0C3A  00BD               	movwf	___flmul@prod+1
  4974  0C3B  0830               	movf	??___flmul,w
  4975  0C3C  00BC               	movwf	___flmul@prod
  4976  0C3D                     l2655:
  4977  0C3D  3001               	movlw	1
  4978  0C3E  07C0               	addwf	___flmul@temp,f
  4979  0C3F  1803               	skipnc
  4980  0C40  0AC1               	incf	___flmul@temp+1,f
  4981  0C41  3000               	movlw	0
  4982  0C42  07C1               	addwf	___flmul@temp+1,f
  4983  0C43                     l2657:
  4984  0C43  0841               	movf	___flmul@temp+1,w
  4985  0C44  3A80               	xorlw	128
  4986  0C45  00FF               	movwf	btemp+1
  4987  0C46  3080               	movlw	128
  4988  0C47  027F               	subwf	btemp+1,w
  4989  0C48  1D03               	skipz
  4990  0C49  2C4C               	goto	u3995
  4991  0C4A  30FF               	movlw	255
  4992  0C4B  0240               	subwf	___flmul@temp,w
  4993  0C4C                     u3995:
  4994  0C4C  1C03               	skipc
  4995  0C4D  2C4F               	goto	u3991
  4996  0C4E  2C50               	goto	u3990
  4997  0C4F                     u3991:
  4998  0C4F  2C5B               	goto	l2661
  4999  0C50                     u3990:
  5000  0C50                     l2659:
  5001  0C50  307F               	movlw	127
  5002  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5004  0C53  00BF               	movwf	___flmul@prod+3
  5005  0C54  3080               	movlw	128
  5006  0C55  00BE               	movwf	___flmul@prod+2
  5007  0C56  3000               	movlw	0
  5008  0C57  00BD               	movwf	___flmul@prod+1
  5009  0C58  3000               	movlw	0
  5010  0C59  00BC               	movwf	___flmul@prod
  5011  0C5A  2C90               	goto	l753
  5012  0C5B                     l2661:
  5013  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5014  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5015  0C5D  0841               	movf	___flmul@temp+1,w
  5016  0C5E  3A80               	xorlw	128
  5017  0C5F  00FF               	movwf	btemp+1
  5018  0C60  3080               	movlw	128
  5019  0C61  027F               	subwf	btemp+1,w
  5020  0C62  1D03               	skipz
  5021  0C63  2C66               	goto	u4005
  5022  0C64  3001               	movlw	1
  5023  0C65  0240               	subwf	___flmul@temp,w
  5024  0C66                     u4005:
  5025  0C66  1803               	skipnc
  5026  0C67  2C69               	goto	u4001
  5027  0C68  2C6A               	goto	u4000
  5028  0C69                     u4001:
  5029  0C69  2C76               	goto	l2667
  5030  0C6A                     u4000:
  5031  0C6A                     l2663:
  5032  0C6A  3000               	movlw	0
  5033  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0C6D  00BF               	movwf	___flmul@prod+3
  5036  0C6E  3000               	movlw	0
  5037  0C6F  00BE               	movwf	___flmul@prod+2
  5038  0C70  3000               	movlw	0
  5039  0C71  00BD               	movwf	___flmul@prod+1
  5040  0C72  3000               	movlw	0
  5041  0C73  00BC               	movwf	___flmul@prod
  5042  0C74                     l2665:
  5043  0C74  01B5               	clrf	___flmul@sign
  5044  0C75  2C90               	goto	l753
  5045  0C76                     l2667:
  5046  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0C78  0840               	movf	___flmul@temp,w
  5049  0C79  00B0               	movwf	??___flmul
  5050  0C7A  0830               	movf	??___flmul,w
  5051  0C7B  00BB               	movwf	___flmul@bexp
  5052  0C7C  30FF               	movlw	255
  5053  0C7D  05BC               	andwf	___flmul@prod,f
  5054  0C7E  30FF               	movlw	255
  5055  0C7F  05BD               	andwf	___flmul@prod+1,f
  5056  0C80  307F               	movlw	127
  5057  0C81  05BE               	andwf	___flmul@prod+2,f
  5058  0C82  3000               	movlw	0
  5059  0C83  05BF               	andwf	___flmul@prod+3,f
  5060  0C84                     l2669:
  5061  0C84  1C3B               	btfss	___flmul@bexp,0
  5062  0C85  2C87               	goto	u4011
  5063  0C86  2C88               	goto	u4010
  5064  0C87                     u4011:
  5065  0C87  2C89               	goto	l2673
  5066  0C88                     u4010:
  5067  0C88                     l2671:
  5068  0C88  17BE               	bsf	___flmul@prod+2,7
  5069  0C89                     l2673:
  5070  0C89  083B               	movf	___flmul@bexp,w
  5071  0C8A  00B0               	movwf	??___flmul
  5072  0C8B  1003               	clrc
  5073  0C8C  0C30               	rrf	??___flmul,w
  5074  0C8D  00B1               	movwf	??___flmul+1
  5075  0C8E  0831               	movf	??___flmul+1,w
  5076  0C8F  00BF               	movwf	___flmul@prod+3
  5077  0C90                     l753:
  5078  0C90  0835               	movf	___flmul@sign,w
  5079  0C91  00B0               	movwf	??___flmul
  5080  0C92  0830               	movf	??___flmul,w
  5081  0C93  04BF               	iorwf	___flmul@prod+3,f
  5082  0C94                     l2675:
  5083  0C94  083F               	movf	___flmul@prod+3,w
  5084  0C95  00AB               	movwf	?___flmul+3
  5085  0C96  083E               	movf	___flmul@prod+2,w
  5086  0C97  00AA               	movwf	?___flmul+2
  5087  0C98  083D               	movf	___flmul@prod+1,w
  5088  0C99  00A9               	movwf	?___flmul+1
  5089  0C9A  083C               	movf	___flmul@prod,w
  5090  0C9B  00A8               	movwf	?___flmul
  5091  0C9C                     l741:
  5092  0C9C  0008               	return
  5093  0C9D                     __end_of___flmul:
  5094                           
  5095                           	psect	text10
  5096  07D7                     __ptext10:	
  5097 ;; *************** function __Umul8_16 *****************
  5098 ;; Defined at:
  5099 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  multiplier      1    wreg     unsigned char 
  5102 ;;  multiplicand    1    3[COMMON] unsigned char 
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5105 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5106 ;;  product         2    0[BANK0 ] unsigned int 
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  2    3[COMMON] unsigned int 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5116 ;;      Params:         2       0       0       0       0
  5117 ;;      Locals:         0       5       0       0       0
  5118 ;;      Temps:          2       0       0       0       0
  5119 ;;      Totals:         4       5       0       0       0
  5120 ;;Total ram usage:        9 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; Hardware stack levels required when called: 1
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		___flmul
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function __Umul8_16
  5132  07D7                     __Umul8_16:
  5133                           
  5134                           ;incstack = 0
  5135                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5136                           ;__Umul8_16@multiplier stored from wreg
  5137  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  5138  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  5139  07D9  00A4               	movwf	__Umul8_16@multiplier
  5140  07DA                     l2201:
  5141  07DA  01A0               	clrf	__Umul8_16@product
  5142  07DB  01A1               	clrf	__Umul8_16@product+1
  5143  07DC                     l2203:
  5144  07DC  0873               	movf	__Umul8_16@multiplicand,w
  5145  07DD  00F5               	movwf	??__Umul8_16
  5146  07DE  01F6               	clrf	??__Umul8_16+1
  5147  07DF  0875               	movf	??__Umul8_16,w
  5148  07E0  00A2               	movwf	__Umul8_16@word_mpld
  5149  07E1  0876               	movf	??__Umul8_16+1,w
  5150  07E2  00A3               	movwf	__Umul8_16@word_mpld+1
  5151  07E3                     l2205:
  5152  07E3  1C24               	btfss	__Umul8_16@multiplier,0
  5153  07E4  2FE6               	goto	u2841
  5154  07E5  2FE7               	goto	u2840
  5155  07E6                     u2841:
  5156  07E6  2FED               	goto	l760
  5157  07E7                     u2840:
  5158  07E7                     l2207:
  5159  07E7  0822               	movf	__Umul8_16@word_mpld,w
  5160  07E8  07A0               	addwf	__Umul8_16@product,f
  5161  07E9  1803               	skipnc
  5162  07EA  0AA1               	incf	__Umul8_16@product+1,f
  5163  07EB  0823               	movf	__Umul8_16@word_mpld+1,w
  5164  07EC  07A1               	addwf	__Umul8_16@product+1,f
  5165  07ED                     l760:
  5166  07ED  3001               	movlw	1
  5167  07EE                     u2855:
  5168  07EE  1003               	clrc
  5169  07EF  0DA2               	rlf	__Umul8_16@word_mpld,f
  5170  07F0  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5171  07F1  3EFF               	addlw	-1
  5172  07F2  1D03               	skipz
  5173  07F3  2FEE               	goto	u2855
  5174  07F4  1003               	clrc
  5175  07F5  0CA4               	rrf	__Umul8_16@multiplier,f
  5176  07F6                     l2209:
  5177  07F6  0824               	movf	__Umul8_16@multiplier,w
  5178  07F7  1D03               	btfss	3,2
  5179  07F8  2FFA               	goto	u2861
  5180  07F9  2FFB               	goto	u2860
  5181  07FA                     u2861:
  5182  07FA  2FE3               	goto	l2205
  5183  07FB                     u2860:
  5184  07FB                     l2211:
  5185  07FB  0821               	movf	__Umul8_16@product+1,w
  5186  07FC  00F4               	movwf	?__Umul8_16+1
  5187  07FD  0820               	movf	__Umul8_16@product,w
  5188  07FE  00F3               	movwf	?__Umul8_16
  5189  07FF                     l762:
  5190  07FF  0008               	return
  5191  0800                     __end_of__Umul8_16:
  5192                           
  5193                           	psect	text11
  5194  1233                     __ptext11:	
  5195 ;; *************** function __tdiv_to_l_ *****************
  5196 ;; Defined at:
  5197 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  f1              4    3[COMMON] float 
  5200 ;;  f2              4    7[COMMON] float 
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  quot            4    4[BANK0 ] unsigned long 
  5203 ;;  exp1            1    9[BANK0 ] unsigned char 
  5204 ;;  cntr            1    8[BANK0 ] unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  4    3[COMMON] unsigned long 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         8       0       0       0       0
  5215 ;;      Locals:         0       6       0       0       0
  5216 ;;      Temps:          0       4       0       0       0
  5217 ;;      Totals:         8      10       0       0       0
  5218 ;;Total ram usage:       18 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_sprintf
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function __tdiv_to_l_
  5230  1233                     __tdiv_to_l_:
  5231  1233                     l2753:	
  5232                           ;incstack = 0
  5233                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5234                           
  5235  1233  0873               	movf	__tdiv_to_l_@f1,w
  5236  1234  1283               	bcf	3,5	;RP0=0, select bank0
  5237  1235  1303               	bcf	3,6	;RP1=0, select bank0
  5238  1236  00A0               	movwf	??__tdiv_to_l_
  5239  1237  0874               	movf	__tdiv_to_l_@f1+1,w
  5240  1238  00A1               	movwf	??__tdiv_to_l_+1
  5241  1239  0875               	movf	__tdiv_to_l_@f1+2,w
  5242  123A  00A2               	movwf	??__tdiv_to_l_+2
  5243  123B  1003               	clrc
  5244  123C  0D21               	rlf	??__tdiv_to_l_+1,w
  5245  123D  0D22               	rlf	??__tdiv_to_l_+2,w
  5246  123E  00A3               	movwf	??__tdiv_to_l_+3
  5247  123F  0823               	movf	??__tdiv_to_l_+3,w
  5248  1240  00A9               	movwf	__tdiv_to_l_@exp1
  5249  1241  0829               	movf	__tdiv_to_l_@exp1,w
  5250  1242  1D03               	btfss	3,2
  5251  1243  2A45               	goto	u4301
  5252  1244  2A46               	goto	u4300
  5253  1245                     u4301:
  5254  1245  2A4F               	goto	l2759
  5255  1246                     u4300:
  5256  1246                     l2755:
  5257  1246  3000               	movlw	0
  5258  1247  00F6               	movwf	?__tdiv_to_l_+3
  5259  1248  3000               	movlw	0
  5260  1249  00F5               	movwf	?__tdiv_to_l_+2
  5261  124A  3000               	movlw	0
  5262  124B  00F4               	movwf	?__tdiv_to_l_+1
  5263  124C  3000               	movlw	0
  5264  124D  00F3               	movwf	?__tdiv_to_l_
  5265  124E  2AEF               	goto	l535
  5266  124F                     l2759:
  5267  124F  0877               	movf	__tdiv_to_l_@f2,w
  5268  1250  00A0               	movwf	??__tdiv_to_l_
  5269  1251  0878               	movf	__tdiv_to_l_@f2+1,w
  5270  1252  00A1               	movwf	??__tdiv_to_l_+1
  5271  1253  0879               	movf	__tdiv_to_l_@f2+2,w
  5272  1254  00A2               	movwf	??__tdiv_to_l_+2
  5273  1255  1003               	clrc
  5274  1256  0D21               	rlf	??__tdiv_to_l_+1,w
  5275  1257  0D22               	rlf	??__tdiv_to_l_+2,w
  5276  1258  00A3               	movwf	??__tdiv_to_l_+3
  5277  1259  0823               	movf	??__tdiv_to_l_+3,w
  5278  125A  00A8               	movwf	__tdiv_to_l_@cntr
  5279  125B  0828               	movf	__tdiv_to_l_@cntr,w
  5280  125C  1D03               	btfss	3,2
  5281  125D  2A5F               	goto	u4311
  5282  125E  2A60               	goto	u4310
  5283  125F                     u4311:
  5284  125F  2A61               	goto	l536
  5285  1260                     u4310:
  5286  1260  2A46               	goto	l2755
  5287  1261                     l536:
  5288  1261  17F4               	bsf	__tdiv_to_l_@f1+1,7
  5289  1262                     l2765:
  5290  1262  30FF               	movlw	255
  5291  1263  05F3               	andwf	__tdiv_to_l_@f1,f
  5292  1264  30FF               	movlw	255
  5293  1265  05F4               	andwf	__tdiv_to_l_@f1+1,f
  5294  1266  3000               	movlw	0
  5295  1267  05F5               	andwf	__tdiv_to_l_@f1+2,f
  5296  1268                     l2767:
  5297  1268  17F8               	bsf	__tdiv_to_l_@f2+1,7
  5298  1269  30FF               	movlw	255
  5299  126A  05F7               	andwf	__tdiv_to_l_@f2,f
  5300  126B  30FF               	movlw	255
  5301  126C  05F8               	andwf	__tdiv_to_l_@f2+1,f
  5302  126D  3000               	movlw	0
  5303  126E  05F9               	andwf	__tdiv_to_l_@f2+2,f
  5304  126F  3000               	movlw	0
  5305  1270  00A7               	movwf	__tdiv_to_l_@quot+3
  5306  1271  3000               	movlw	0
  5307  1272  00A6               	movwf	__tdiv_to_l_@quot+2
  5308  1273  3000               	movlw	0
  5309  1274  00A5               	movwf	__tdiv_to_l_@quot+1
  5310  1275  3000               	movlw	0
  5311  1276  00A4               	movwf	__tdiv_to_l_@quot
  5312  1277                     l2769:
  5313  1277  307F               	movlw	127
  5314  1278  02A9               	subwf	__tdiv_to_l_@exp1,f
  5315  1279                     l2771:
  5316  1279  3098               	movlw	152
  5317  127A  0728               	addwf	__tdiv_to_l_@cntr,w
  5318  127B  00A0               	movwf	??__tdiv_to_l_
  5319  127C  0820               	movf	??__tdiv_to_l_,w
  5320  127D  02A9               	subwf	__tdiv_to_l_@exp1,f
  5321  127E  3018               	movlw	24
  5322  127F  00A0               	movwf	??__tdiv_to_l_
  5323  1280  0820               	movf	??__tdiv_to_l_,w
  5324  1281  00A8               	movwf	__tdiv_to_l_@cntr
  5325  1282                     l2773:
  5326  1282  3001               	movlw	1
  5327  1283  00A0               	movwf	??__tdiv_to_l_
  5328  1284                     u4325:
  5329  1284  1003               	clrc
  5330  1285  0DA4               	rlf	__tdiv_to_l_@quot,f
  5331  1286  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5332  1287  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5333  1288  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5334  1289  0BA0               	decfsz	??__tdiv_to_l_,f
  5335  128A  2A84               	goto	u4325
  5336  128B                     l2775:
  5337  128B  0879               	movf	__tdiv_to_l_@f2+2,w
  5338  128C  0275               	subwf	__tdiv_to_l_@f1+2,w
  5339  128D  1D03               	skipz
  5340  128E  2A95               	goto	u4335
  5341  128F  0878               	movf	__tdiv_to_l_@f2+1,w
  5342  1290  0274               	subwf	__tdiv_to_l_@f1+1,w
  5343  1291  1D03               	skipz
  5344  1292  2A95               	goto	u4335
  5345  1293  0877               	movf	__tdiv_to_l_@f2,w
  5346  1294  0273               	subwf	__tdiv_to_l_@f1,w
  5347  1295                     u4335:
  5348  1295  1C03               	skipc
  5349  1296  2A98               	goto	u4331
  5350  1297  2A99               	goto	u4330
  5351  1298                     u4331:
  5352  1298  2AA4               	goto	l2781
  5353  1299                     u4330:
  5354  1299                     l2777:
  5355  1299  0877               	movf	__tdiv_to_l_@f2,w
  5356  129A  02F3               	subwf	__tdiv_to_l_@f1,f
  5357  129B  0878               	movf	__tdiv_to_l_@f2+1,w
  5358  129C  1C03               	skipc
  5359  129D  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  5360  129E  02F4               	subwf	__tdiv_to_l_@f1+1,f
  5361  129F  0879               	movf	__tdiv_to_l_@f2+2,w
  5362  12A0  1C03               	skipc
  5363  12A1  0A79               	incf	__tdiv_to_l_@f2+2,w
  5364  12A2  02F5               	subwf	__tdiv_to_l_@f1+2,f
  5365  12A3                     l2779:
  5366  12A3  1424               	bsf	__tdiv_to_l_@quot,0
  5367  12A4                     l2781:
  5368  12A4  3001               	movlw	1
  5369  12A5                     u4345:
  5370  12A5  1003               	clrc
  5371  12A6  0DF3               	rlf	__tdiv_to_l_@f1,f
  5372  12A7  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  5373  12A8  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  5374  12A9  3EFF               	addlw	-1
  5375  12AA  1D03               	skipz
  5376  12AB  2AA5               	goto	u4345
  5377  12AC                     l2783:
  5378  12AC  3001               	movlw	1
  5379  12AD  02A8               	subwf	__tdiv_to_l_@cntr,f
  5380  12AE  1D03               	btfss	3,2
  5381  12AF  2AB1               	goto	u4351
  5382  12B0  2AB2               	goto	u4350
  5383  12B1                     u4351:
  5384  12B1  2A82               	goto	l2773
  5385  12B2                     u4350:
  5386  12B2                     l539:
  5387  12B2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5388  12B3  2AB5               	goto	u4361
  5389  12B4  2AB6               	goto	u4360
  5390  12B5                     u4361:
  5391  12B5  2AD0               	goto	l2793
  5392  12B6                     u4360:
  5393  12B6                     l2785:
  5394  12B6  0829               	movf	__tdiv_to_l_@exp1,w
  5395  12B7  3A80               	xorlw	128
  5396  12B8  3E97               	addlw	151
  5397  12B9  1803               	skipnc
  5398  12BA  2ABC               	goto	u4371
  5399  12BB  2ABD               	goto	u4370
  5400  12BC                     u4371:
  5401  12BC  2ABE               	goto	l2791
  5402  12BD                     u4370:
  5403  12BD  2A46               	goto	l2755
  5404  12BE                     l2791:
  5405  12BE  3001               	movlw	1
  5406  12BF                     u4385:
  5407  12BF  1003               	clrc
  5408  12C0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5409  12C1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5410  12C2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5411  12C3  0CA4               	rrf	__tdiv_to_l_@quot,f
  5412  12C4  3EFF               	addlw	-1
  5413  12C5  1D03               	skipz
  5414  12C6  2ABF               	goto	u4385
  5415  12C7  3001               	movlw	1
  5416  12C8  00A0               	movwf	??__tdiv_to_l_
  5417  12C9  0820               	movf	??__tdiv_to_l_,w
  5418  12CA  07A9               	addwf	__tdiv_to_l_@exp1,f
  5419  12CB  1D03               	btfss	3,2
  5420  12CC  2ACE               	goto	u4391
  5421  12CD  2ACF               	goto	u4390
  5422  12CE                     u4391:
  5423  12CE  2ABE               	goto	l2791
  5424  12CF                     u4390:
  5425  12CF  2AE7               	goto	l2801
  5426  12D0                     l2793:
  5427  12D0  3018               	movlw	24
  5428  12D1  0229               	subwf	__tdiv_to_l_@exp1,w
  5429  12D2  1C03               	skipc
  5430  12D3  2AD5               	goto	u4401
  5431  12D4  2AD6               	goto	u4400
  5432  12D5                     u4401:
  5433  12D5  2AE2               	goto	l546
  5434  12D6                     u4400:
  5435  12D6  2A46               	goto	l2755
  5436  12D7                     l2799:
  5437  12D7  3001               	movlw	1
  5438  12D8  00A0               	movwf	??__tdiv_to_l_
  5439  12D9                     u4415:
  5440  12D9  1003               	clrc
  5441  12DA  0DA4               	rlf	__tdiv_to_l_@quot,f
  5442  12DB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5443  12DC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5444  12DD  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5445  12DE  0BA0               	decfsz	??__tdiv_to_l_,f
  5446  12DF  2AD9               	goto	u4415
  5447  12E0  3001               	movlw	1
  5448  12E1  02A9               	subwf	__tdiv_to_l_@exp1,f
  5449  12E2                     l546:
  5450  12E2  0829               	movf	__tdiv_to_l_@exp1,w
  5451  12E3  1D03               	btfss	3,2
  5452  12E4  2AE6               	goto	u4421
  5453  12E5  2AE7               	goto	u4420
  5454  12E6                     u4421:
  5455  12E6  2AD7               	goto	l2799
  5456  12E7                     u4420:
  5457  12E7                     l2801:
  5458  12E7  0827               	movf	__tdiv_to_l_@quot+3,w
  5459  12E8  00F6               	movwf	?__tdiv_to_l_+3
  5460  12E9  0826               	movf	__tdiv_to_l_@quot+2,w
  5461  12EA  00F5               	movwf	?__tdiv_to_l_+2
  5462  12EB  0825               	movf	__tdiv_to_l_@quot+1,w
  5463  12EC  00F4               	movwf	?__tdiv_to_l_+1
  5464  12ED  0824               	movf	__tdiv_to_l_@quot,w
  5465  12EE  00F3               	movwf	?__tdiv_to_l_
  5466  12EF                     l535:
  5467  12EF  0008               	return
  5468  12F0                     __end_of__tdiv_to_l_:
  5469                           
  5470                           	psect	text12
  5471  087E                     __ptext12:	
  5472 ;; *************** function __div_to_l_ *****************
  5473 ;; Defined at:
  5474 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  f1              4    3[COMMON] unsigned long 
  5477 ;;  f2              4    7[COMMON] unsigned long 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  quot            4    1[BANK0 ] unsigned long 
  5480 ;;  exp1            1    6[BANK0 ] unsigned char 
  5481 ;;  cntr            1    5[BANK0 ] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  4    3[COMMON] unsigned long 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         8       0       0       0       0
  5492 ;;      Locals:         0       6       0       0       0
  5493 ;;      Temps:          0       1       0       0       0
  5494 ;;      Totals:         8       7       0       0       0
  5495 ;;Total ram usage:       15 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_sprintf
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           
  5506                           ;psect for function __div_to_l_
  5507  087E                     __div_to_l_:
  5508  087E                     l2805:	
  5509                           ;incstack = 0
  5510                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5511                           
  5512  087E  1003               	clrc
  5513  087F  0D75               	rlf	__div_to_l_@f1+2,w
  5514  0880  0D76               	rlf	__div_to_l_@f1+3,w
  5515  0881  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0882  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0883  00A0               	movwf	??__div_to_l_
  5518  0884  0820               	movf	??__div_to_l_,w
  5519  0885  00A6               	movwf	__div_to_l_@exp1
  5520  0886  0826               	movf	__div_to_l_@exp1,w
  5521  0887  1D03               	btfss	3,2
  5522  0888  288A               	goto	u4431
  5523  0889  288B               	goto	u4430
  5524  088A                     u4431:
  5525  088A  2894               	goto	l2811
  5526  088B                     u4430:
  5527  088B                     l2807:
  5528  088B  3000               	movlw	0
  5529  088C  00F6               	movwf	?__div_to_l_+3
  5530  088D  3000               	movlw	0
  5531  088E  00F5               	movwf	?__div_to_l_+2
  5532  088F  3000               	movlw	0
  5533  0890  00F4               	movwf	?__div_to_l_+1
  5534  0891  3000               	movlw	0
  5535  0892  00F3               	movwf	?__div_to_l_
  5536  0893  293B               	goto	l488
  5537  0894                     l2811:
  5538  0894  1003               	clrc
  5539  0895  0D79               	rlf	__div_to_l_@f2+2,w
  5540  0896  0D7A               	rlf	__div_to_l_@f2+3,w
  5541  0897  00A0               	movwf	??__div_to_l_
  5542  0898  0820               	movf	??__div_to_l_,w
  5543  0899  00A5               	movwf	__div_to_l_@cntr
  5544  089A  0825               	movf	__div_to_l_@cntr,w
  5545  089B  1D03               	btfss	3,2
  5546  089C  289E               	goto	u4441
  5547  089D  289F               	goto	u4440
  5548  089E                     u4441:
  5549  089E  28A0               	goto	l489
  5550  089F                     u4440:
  5551  089F  288B               	goto	l2807
  5552  08A0                     l489:
  5553  08A0  17F5               	bsf	__div_to_l_@f1+2,7
  5554  08A1                     l2817:
  5555  08A1  30FF               	movlw	255
  5556  08A2  05F3               	andwf	__div_to_l_@f1,f
  5557  08A3  30FF               	movlw	255
  5558  08A4  05F4               	andwf	__div_to_l_@f1+1,f
  5559  08A5  30FF               	movlw	255
  5560  08A6  05F5               	andwf	__div_to_l_@f1+2,f
  5561  08A7  3000               	movlw	0
  5562  08A8  05F6               	andwf	__div_to_l_@f1+3,f
  5563  08A9                     l2819:
  5564  08A9  17F9               	bsf	__div_to_l_@f2+2,7
  5565  08AA  30FF               	movlw	255
  5566  08AB  05F7               	andwf	__div_to_l_@f2,f
  5567  08AC  30FF               	movlw	255
  5568  08AD  05F8               	andwf	__div_to_l_@f2+1,f
  5569  08AE  30FF               	movlw	255
  5570  08AF  05F9               	andwf	__div_to_l_@f2+2,f
  5571  08B0  3000               	movlw	0
  5572  08B1  05FA               	andwf	__div_to_l_@f2+3,f
  5573  08B2  3000               	movlw	0
  5574  08B3  00A4               	movwf	__div_to_l_@quot+3
  5575  08B4  3000               	movlw	0
  5576  08B5  00A3               	movwf	__div_to_l_@quot+2
  5577  08B6  3000               	movlw	0
  5578  08B7  00A2               	movwf	__div_to_l_@quot+1
  5579  08B8  3000               	movlw	0
  5580  08B9  00A1               	movwf	__div_to_l_@quot
  5581  08BA                     l2821:
  5582  08BA  307F               	movlw	127
  5583  08BB  02A6               	subwf	__div_to_l_@exp1,f
  5584  08BC                     l2823:
  5585  08BC  30A0               	movlw	160
  5586  08BD  0725               	addwf	__div_to_l_@cntr,w
  5587  08BE  00A0               	movwf	??__div_to_l_
  5588  08BF  0820               	movf	??__div_to_l_,w
  5589  08C0  02A6               	subwf	__div_to_l_@exp1,f
  5590  08C1  3020               	movlw	32
  5591  08C2  00A0               	movwf	??__div_to_l_
  5592  08C3  0820               	movf	??__div_to_l_,w
  5593  08C4  00A5               	movwf	__div_to_l_@cntr
  5594  08C5                     l2825:
  5595  08C5  3001               	movlw	1
  5596  08C6  00A0               	movwf	??__div_to_l_
  5597  08C7                     u4455:
  5598  08C7  1003               	clrc
  5599  08C8  0DA1               	rlf	__div_to_l_@quot,f
  5600  08C9  0DA2               	rlf	__div_to_l_@quot+1,f
  5601  08CA  0DA3               	rlf	__div_to_l_@quot+2,f
  5602  08CB  0DA4               	rlf	__div_to_l_@quot+3,f
  5603  08CC  0BA0               	decfsz	??__div_to_l_,f
  5604  08CD  28C7               	goto	u4455
  5605  08CE                     l2827:
  5606  08CE  087A               	movf	__div_to_l_@f2+3,w
  5607  08CF  0276               	subwf	__div_to_l_@f1+3,w
  5608  08D0  1D03               	skipz
  5609  08D1  28DC               	goto	u4465
  5610  08D2  0879               	movf	__div_to_l_@f2+2,w
  5611  08D3  0275               	subwf	__div_to_l_@f1+2,w
  5612  08D4  1D03               	skipz
  5613  08D5  28DC               	goto	u4465
  5614  08D6  0878               	movf	__div_to_l_@f2+1,w
  5615  08D7  0274               	subwf	__div_to_l_@f1+1,w
  5616  08D8  1D03               	skipz
  5617  08D9  28DC               	goto	u4465
  5618  08DA  0877               	movf	__div_to_l_@f2,w
  5619  08DB  0273               	subwf	__div_to_l_@f1,w
  5620  08DC                     u4465:
  5621  08DC  1C03               	skipc
  5622  08DD  28DF               	goto	u4461
  5623  08DE  28E0               	goto	u4460
  5624  08DF                     u4461:
  5625  08DF  28EF               	goto	l2833
  5626  08E0                     u4460:
  5627  08E0                     l2829:
  5628  08E0  0877               	movf	__div_to_l_@f2,w
  5629  08E1  02F3               	subwf	__div_to_l_@f1,f
  5630  08E2  0878               	movf	__div_to_l_@f2+1,w
  5631  08E3  1C03               	skipc
  5632  08E4  0F78               	incfsz	__div_to_l_@f2+1,w
  5633  08E5  02F4               	subwf	__div_to_l_@f1+1,f
  5634  08E6  0879               	movf	__div_to_l_@f2+2,w
  5635  08E7  1C03               	skipc
  5636  08E8  0F79               	incfsz	__div_to_l_@f2+2,w
  5637  08E9  02F5               	subwf	__div_to_l_@f1+2,f
  5638  08EA  087A               	movf	__div_to_l_@f2+3,w
  5639  08EB  1C03               	skipc
  5640  08EC  0F7A               	incfsz	__div_to_l_@f2+3,w
  5641  08ED  02F6               	subwf	__div_to_l_@f1+3,f
  5642  08EE                     l2831:
  5643  08EE  1421               	bsf	__div_to_l_@quot,0
  5644  08EF                     l2833:
  5645  08EF  3001               	movlw	1
  5646  08F0  00A0               	movwf	??__div_to_l_
  5647  08F1                     u4475:
  5648  08F1  1003               	clrc
  5649  08F2  0DF3               	rlf	__div_to_l_@f1,f
  5650  08F3  0DF4               	rlf	__div_to_l_@f1+1,f
  5651  08F4  0DF5               	rlf	__div_to_l_@f1+2,f
  5652  08F5  0DF6               	rlf	__div_to_l_@f1+3,f
  5653  08F6  0BA0               	decfsz	??__div_to_l_,f
  5654  08F7  28F1               	goto	u4475
  5655  08F8                     l2835:
  5656  08F8  3001               	movlw	1
  5657  08F9  02A5               	subwf	__div_to_l_@cntr,f
  5658  08FA  1D03               	btfss	3,2
  5659  08FB  28FD               	goto	u4481
  5660  08FC  28FE               	goto	u4480
  5661  08FD                     u4481:
  5662  08FD  28C5               	goto	l2825
  5663  08FE                     u4480:
  5664  08FE                     l492:
  5665  08FE  1FA6               	btfss	__div_to_l_@exp1,7
  5666  08FF  2901               	goto	u4491
  5667  0900  2902               	goto	u4490
  5668  0901                     u4491:
  5669  0901  291C               	goto	l2845
  5670  0902                     u4490:
  5671  0902                     l2837:
  5672  0902  0826               	movf	__div_to_l_@exp1,w
  5673  0903  3A80               	xorlw	128
  5674  0904  3E9F               	addlw	159
  5675  0905  1803               	skipnc
  5676  0906  2908               	goto	u4501
  5677  0907  2909               	goto	u4500
  5678  0908                     u4501:
  5679  0908  290A               	goto	l2843
  5680  0909                     u4500:
  5681  0909  288B               	goto	l2807
  5682  090A                     l2843:
  5683  090A  3001               	movlw	1
  5684  090B                     u4515:
  5685  090B  1003               	clrc
  5686  090C  0CA4               	rrf	__div_to_l_@quot+3,f
  5687  090D  0CA3               	rrf	__div_to_l_@quot+2,f
  5688  090E  0CA2               	rrf	__div_to_l_@quot+1,f
  5689  090F  0CA1               	rrf	__div_to_l_@quot,f
  5690  0910  3EFF               	addlw	-1
  5691  0911  1D03               	skipz
  5692  0912  290B               	goto	u4515
  5693  0913  3001               	movlw	1
  5694  0914  00A0               	movwf	??__div_to_l_
  5695  0915  0820               	movf	??__div_to_l_,w
  5696  0916  07A6               	addwf	__div_to_l_@exp1,f
  5697  0917  1D03               	btfss	3,2
  5698  0918  291A               	goto	u4521
  5699  0919  291B               	goto	u4520
  5700  091A                     u4521:
  5701  091A  290A               	goto	l2843
  5702  091B                     u4520:
  5703  091B  2933               	goto	l2853
  5704  091C                     l2845:
  5705  091C  3020               	movlw	32
  5706  091D  0226               	subwf	__div_to_l_@exp1,w
  5707  091E  1C03               	skipc
  5708  091F  2921               	goto	u4531
  5709  0920  2922               	goto	u4530
  5710  0921                     u4531:
  5711  0921  292E               	goto	l499
  5712  0922                     u4530:
  5713  0922  288B               	goto	l2807
  5714  0923                     l2851:
  5715  0923  3001               	movlw	1
  5716  0924  00A0               	movwf	??__div_to_l_
  5717  0925                     u4545:
  5718  0925  1003               	clrc
  5719  0926  0DA1               	rlf	__div_to_l_@quot,f
  5720  0927  0DA2               	rlf	__div_to_l_@quot+1,f
  5721  0928  0DA3               	rlf	__div_to_l_@quot+2,f
  5722  0929  0DA4               	rlf	__div_to_l_@quot+3,f
  5723  092A  0BA0               	decfsz	??__div_to_l_,f
  5724  092B  2925               	goto	u4545
  5725  092C  3001               	movlw	1
  5726  092D  02A6               	subwf	__div_to_l_@exp1,f
  5727  092E                     l499:
  5728  092E  0826               	movf	__div_to_l_@exp1,w
  5729  092F  1D03               	btfss	3,2
  5730  0930  2932               	goto	u4551
  5731  0931  2933               	goto	u4550
  5732  0932                     u4551:
  5733  0932  2923               	goto	l2851
  5734  0933                     u4550:
  5735  0933                     l2853:
  5736  0933  0824               	movf	__div_to_l_@quot+3,w
  5737  0934  00F6               	movwf	?__div_to_l_+3
  5738  0935  0823               	movf	__div_to_l_@quot+2,w
  5739  0936  00F5               	movwf	?__div_to_l_+2
  5740  0937  0822               	movf	__div_to_l_@quot+1,w
  5741  0938  00F4               	movwf	?__div_to_l_+1
  5742  0939  0821               	movf	__div_to_l_@quot,w
  5743  093A  00F3               	movwf	?__div_to_l_
  5744  093B                     l488:
  5745  093B  0008               	return
  5746  093C                     __end_of__div_to_l_:
  5747                           
  5748                           	psect	text13
  5749  1177                     __ptext13:	
  5750 ;; *************** function ___xxtofl *****************
  5751 ;; Defined at:
  5752 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  sign            1    wreg     unsigned char 
  5755 ;;  val             4    3[COMMON] long 
  5756 ;; Auto vars:     Size  Location     Type
  5757 ;;  sign            1    0[BANK0 ] unsigned char 
  5758 ;;  arg             4    2[BANK0 ] unsigned long 
  5759 ;;  exp             1    1[BANK0 ] unsigned char 
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  4    3[COMMON] unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5769 ;;      Params:         4       0       0       0       0
  5770 ;;      Locals:         0       6       0       0       0
  5771 ;;      Temps:          4       0       0       0       0
  5772 ;;      Totals:         8       6       0       0       0
  5773 ;;Total ram usage:       14 bytes
  5774 ;; Hardware stack levels used: 1
  5775 ;; Hardware stack levels required when called: 1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_main
  5780 ;;		_sprintf
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function ___xxtofl
  5786  1177                     ___xxtofl:
  5787                           
  5788                           ;incstack = 0
  5789                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5790                           ;___xxtofl@sign stored from wreg
  5791  1177  1283               	bcf	3,5	;RP0=0, select bank0
  5792  1178  1303               	bcf	3,6	;RP1=0, select bank0
  5793  1179  00A0               	movwf	___xxtofl@sign
  5794  117A                     l2997:
  5795  117A  0820               	movf	___xxtofl@sign,w
  5796  117B  1903               	btfsc	3,2
  5797  117C  297E               	goto	u4941
  5798  117D  297F               	goto	u4940
  5799  117E                     u4941:
  5800  117E  2993               	goto	l3003
  5801  117F                     u4940:
  5802  117F                     l2999:
  5803  117F  1FF6               	btfss	___xxtofl@val+3,7
  5804  1180  2982               	goto	u4951
  5805  1181  2983               	goto	u4950
  5806  1182                     u4951:
  5807  1182  2993               	goto	l3003
  5808  1183                     u4950:
  5809  1183                     l3001:
  5810  1183  0973               	comf	___xxtofl@val,w
  5811  1184  00A2               	movwf	___xxtofl@arg
  5812  1185  0974               	comf	___xxtofl@val+1,w
  5813  1186  00A3               	movwf	___xxtofl@arg+1
  5814  1187  0975               	comf	___xxtofl@val+2,w
  5815  1188  00A4               	movwf	___xxtofl@arg+2
  5816  1189  0976               	comf	___xxtofl@val+3,w
  5817  118A  00A5               	movwf	___xxtofl@arg+3
  5818  118B  0AA2               	incf	___xxtofl@arg,f
  5819  118C  1903               	skipnz
  5820  118D  0AA3               	incf	___xxtofl@arg+1,f
  5821  118E  1903               	skipnz
  5822  118F  0AA4               	incf	___xxtofl@arg+2,f
  5823  1190  1903               	skipnz
  5824  1191  0AA5               	incf	___xxtofl@arg+3,f
  5825  1192  299B               	goto	l785
  5826  1193                     l3003:
  5827  1193  0876               	movf	___xxtofl@val+3,w
  5828  1194  00A5               	movwf	___xxtofl@arg+3
  5829  1195  0875               	movf	___xxtofl@val+2,w
  5830  1196  00A4               	movwf	___xxtofl@arg+2
  5831  1197  0874               	movf	___xxtofl@val+1,w
  5832  1198  00A3               	movwf	___xxtofl@arg+1
  5833  1199  0873               	movf	___xxtofl@val,w
  5834  119A  00A2               	movwf	___xxtofl@arg
  5835  119B                     l785:
  5836  119B  0876               	movf	___xxtofl@val+3,w
  5837  119C  0475               	iorwf	___xxtofl@val+2,w
  5838  119D  0474               	iorwf	___xxtofl@val+1,w
  5839  119E  0473               	iorwf	___xxtofl@val,w
  5840  119F  1D03               	skipz
  5841  11A0  29A2               	goto	u4961
  5842  11A1  29A3               	goto	u4960
  5843  11A2                     u4961:
  5844  11A2  29AC               	goto	l3009
  5845  11A3                     u4960:
  5846  11A3                     l3005:
  5847  11A3  3000               	movlw	0
  5848  11A4  00F6               	movwf	?___xxtofl+3
  5849  11A5  3000               	movlw	0
  5850  11A6  00F5               	movwf	?___xxtofl+2
  5851  11A7  3000               	movlw	0
  5852  11A8  00F4               	movwf	?___xxtofl+1
  5853  11A9  3000               	movlw	0
  5854  11AA  00F3               	movwf	?___xxtofl
  5855  11AB  2A32               	goto	l787
  5856  11AC                     l3009:
  5857  11AC  3096               	movlw	150
  5858  11AD  00F7               	movwf	??___xxtofl
  5859  11AE  0877               	movf	??___xxtofl,w
  5860  11AF  00A1               	movwf	___xxtofl@exp
  5861  11B0  29BE               	goto	l3013
  5862  11B1                     l3011:
  5863  11B1  3001               	movlw	1
  5864  11B2  00F7               	movwf	??___xxtofl
  5865  11B3  0877               	movf	??___xxtofl,w
  5866  11B4  07A1               	addwf	___xxtofl@exp,f
  5867  11B5  3001               	movlw	1
  5868  11B6                     u4975:
  5869  11B6  1003               	clrc
  5870  11B7  0CA5               	rrf	___xxtofl@arg+3,f
  5871  11B8  0CA4               	rrf	___xxtofl@arg+2,f
  5872  11B9  0CA3               	rrf	___xxtofl@arg+1,f
  5873  11BA  0CA2               	rrf	___xxtofl@arg,f
  5874  11BB  3EFF               	addlw	-1
  5875  11BC  1D03               	skipz
  5876  11BD  29B6               	goto	u4975
  5877  11BE                     l3013:
  5878  11BE  30FE               	movlw	254
  5879  11BF  0525               	andwf	___xxtofl@arg+3,w
  5880  11C0  1D03               	btfss	3,2
  5881  11C1  29C3               	goto	u4981
  5882  11C2  29C4               	goto	u4980
  5883  11C3                     u4981:
  5884  11C3  29B1               	goto	l3011
  5885  11C4                     u4980:
  5886  11C4  29E0               	goto	l791
  5887  11C5                     l3015:
  5888  11C5  3001               	movlw	1
  5889  11C6  00F7               	movwf	??___xxtofl
  5890  11C7  0877               	movf	??___xxtofl,w
  5891  11C8  07A1               	addwf	___xxtofl@exp,f
  5892  11C9                     l3017:
  5893  11C9  3001               	movlw	1
  5894  11CA  07A2               	addwf	___xxtofl@arg,f
  5895  11CB  3000               	movlw	0
  5896  11CC  1803               	skipnc
  5897  11CD  3001               	movlw	1
  5898  11CE  07A3               	addwf	___xxtofl@arg+1,f
  5899  11CF  3000               	movlw	0
  5900  11D0  1803               	skipnc
  5901  11D1  3001               	movlw	1
  5902  11D2  07A4               	addwf	___xxtofl@arg+2,f
  5903  11D3  3000               	movlw	0
  5904  11D4  1803               	skipnc
  5905  11D5  3001               	movlw	1
  5906  11D6  07A5               	addwf	___xxtofl@arg+3,f
  5907  11D7                     l3019:
  5908  11D7  3001               	movlw	1
  5909  11D8                     u4995:
  5910  11D8  1003               	clrc
  5911  11D9  0CA5               	rrf	___xxtofl@arg+3,f
  5912  11DA  0CA4               	rrf	___xxtofl@arg+2,f
  5913  11DB  0CA3               	rrf	___xxtofl@arg+1,f
  5914  11DC  0CA2               	rrf	___xxtofl@arg,f
  5915  11DD  3EFF               	addlw	-1
  5916  11DE  1D03               	skipz
  5917  11DF  29D8               	goto	u4995
  5918  11E0                     l791:
  5919  11E0  30FF               	movlw	255
  5920  11E1  0525               	andwf	___xxtofl@arg+3,w
  5921  11E2  1D03               	btfss	3,2
  5922  11E3  29E5               	goto	u5001
  5923  11E4  29E6               	goto	u5000
  5924  11E5                     u5001:
  5925  11E5  29C5               	goto	l3015
  5926  11E6                     u5000:
  5927  11E6  29F2               	goto	l3023
  5928  11E7                     l3021:
  5929  11E7  3001               	movlw	1
  5930  11E8  02A1               	subwf	___xxtofl@exp,f
  5931  11E9  3001               	movlw	1
  5932  11EA  00F7               	movwf	??___xxtofl
  5933  11EB                     u5015:
  5934  11EB  1003               	clrc
  5935  11EC  0DA2               	rlf	___xxtofl@arg,f
  5936  11ED  0DA3               	rlf	___xxtofl@arg+1,f
  5937  11EE  0DA4               	rlf	___xxtofl@arg+2,f
  5938  11EF  0DA5               	rlf	___xxtofl@arg+3,f
  5939  11F0  0BF7               	decfsz	??___xxtofl,f
  5940  11F1  29EB               	goto	u5015
  5941  11F2                     l3023:
  5942  11F2  1BA4               	btfsc	___xxtofl@arg+2,7
  5943  11F3  29F5               	goto	u5021
  5944  11F4  29F6               	goto	u5020
  5945  11F5                     u5021:
  5946  11F5  29FC               	goto	l798
  5947  11F6                     u5020:
  5948  11F6                     l3025:
  5949  11F6  3002               	movlw	2
  5950  11F7  0221               	subwf	___xxtofl@exp,w
  5951  11F8  1803               	skipnc
  5952  11F9  29FB               	goto	u5031
  5953  11FA  29FC               	goto	u5030
  5954  11FB                     u5031:
  5955  11FB  29E7               	goto	l3021
  5956  11FC                     u5030:
  5957  11FC                     l798:
  5958  11FC  1821               	btfsc	___xxtofl@exp,0
  5959  11FD  29FF               	goto	u5041
  5960  11FE  2A00               	goto	u5040
  5961  11FF                     u5041:
  5962  11FF  2A08               	goto	l799
  5963  1200                     u5040:
  5964  1200                     l3027:
  5965  1200  30FF               	movlw	255
  5966  1201  05A2               	andwf	___xxtofl@arg,f
  5967  1202  30FF               	movlw	255
  5968  1203  05A3               	andwf	___xxtofl@arg+1,f
  5969  1204  307F               	movlw	127
  5970  1205  05A4               	andwf	___xxtofl@arg+2,f
  5971  1206  30FF               	movlw	255
  5972  1207  05A5               	andwf	___xxtofl@arg+3,f
  5973  1208                     l799:
  5974  1208  1003               	clrc
  5975  1209  0CA1               	rrf	___xxtofl@exp,f
  5976  120A                     l3029:
  5977  120A  0821               	movf	___xxtofl@exp,w
  5978  120B  00F7               	movwf	??___xxtofl
  5979  120C  01F8               	clrf	??___xxtofl+1
  5980  120D  01F9               	clrf	??___xxtofl+2
  5981  120E  01FA               	clrf	??___xxtofl+3
  5982  120F  3018               	movlw	24
  5983  1210                     u5055:
  5984  1210  1003               	clrc
  5985  1211  0DF7               	rlf	??___xxtofl,f
  5986  1212  0DF8               	rlf	??___xxtofl+1,f
  5987  1213  0DF9               	rlf	??___xxtofl+2,f
  5988  1214  0DFA               	rlf	??___xxtofl+3,f
  5989  1215                     u5050:
  5990  1215  3EFF               	addlw	-1
  5991  1216  1D03               	skipz
  5992  1217  2A10               	goto	u5055
  5993  1218  0877               	movf	??___xxtofl,w
  5994  1219  04A2               	iorwf	___xxtofl@arg,f
  5995  121A  0878               	movf	??___xxtofl+1,w
  5996  121B  04A3               	iorwf	___xxtofl@arg+1,f
  5997  121C  0879               	movf	??___xxtofl+2,w
  5998  121D  04A4               	iorwf	___xxtofl@arg+2,f
  5999  121E  087A               	movf	??___xxtofl+3,w
  6000  121F  04A5               	iorwf	___xxtofl@arg+3,f
  6001  1220                     l3031:
  6002  1220  0820               	movf	___xxtofl@sign,w
  6003  1221  1903               	btfsc	3,2
  6004  1222  2A24               	goto	u5061
  6005  1223  2A25               	goto	u5060
  6006  1224                     u5061:
  6007  1224  2A2A               	goto	l3037
  6008  1225                     u5060:
  6009  1225                     l3033:
  6010  1225  1FF6               	btfss	___xxtofl@val+3,7
  6011  1226  2A28               	goto	u5071
  6012  1227  2A29               	goto	u5070
  6013  1228                     u5071:
  6014  1228  2A2A               	goto	l3037
  6015  1229                     u5070:
  6016  1229                     l3035:
  6017  1229  17A5               	bsf	___xxtofl@arg+3,7
  6018  122A                     l3037:
  6019  122A  0825               	movf	___xxtofl@arg+3,w
  6020  122B  00F6               	movwf	?___xxtofl+3
  6021  122C  0824               	movf	___xxtofl@arg+2,w
  6022  122D  00F5               	movwf	?___xxtofl+2
  6023  122E  0823               	movf	___xxtofl@arg+1,w
  6024  122F  00F4               	movwf	?___xxtofl+1
  6025  1230  0822               	movf	___xxtofl@arg,w
  6026  1231  00F3               	movwf	?___xxtofl
  6027  1232                     l787:
  6028  1232  0008               	return
  6029  1233                     __end_of___xxtofl:
  6030                           
  6031                           	psect	text14
  6032  1C62                     __ptext14:	
  6033 ;; *************** function ___wmul *****************
  6034 ;; Defined at:
  6035 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;  multiplier      2    3[COMMON] unsigned int 
  6038 ;;  multiplicand    2    5[COMMON] unsigned int 
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;  product         2    7[COMMON] unsigned int 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2    3[COMMON] unsigned int 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6050 ;;      Params:         4       0       0       0       0
  6051 ;;      Locals:         2       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0
  6053 ;;      Totals:         6       0       0       0       0
  6054 ;;Total ram usage:        6 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_sprintf
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function ___wmul
  6066  1C62                     ___wmul:
  6067  1C62                     l2857:	
  6068                           ;incstack = 0
  6069                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6070                           
  6071  1C62  01F7               	clrf	___wmul@product
  6072  1C63  01F8               	clrf	___wmul@product+1
  6073  1C64                     l2859:
  6074  1C64  1C73               	btfss	___wmul@multiplier,0
  6075  1C65  2C67               	goto	u4561
  6076  1C66  2C68               	goto	u4560
  6077  1C67                     u4561:
  6078  1C67  2C6E               	goto	l318
  6079  1C68                     u4560:
  6080  1C68                     l2861:
  6081  1C68  0875               	movf	___wmul@multiplicand,w
  6082  1C69  07F7               	addwf	___wmul@product,f
  6083  1C6A  1803               	skipnc
  6084  1C6B  0AF8               	incf	___wmul@product+1,f
  6085  1C6C  0876               	movf	___wmul@multiplicand+1,w
  6086  1C6D  07F8               	addwf	___wmul@product+1,f
  6087  1C6E                     l318:
  6088  1C6E  3001               	movlw	1
  6089  1C6F                     u4575:
  6090  1C6F  1003               	clrc
  6091  1C70  0DF5               	rlf	___wmul@multiplicand,f
  6092  1C71  0DF6               	rlf	___wmul@multiplicand+1,f
  6093  1C72  3EFF               	addlw	-1
  6094  1C73  1D03               	skipz
  6095  1C74  2C6F               	goto	u4575
  6096  1C75                     l2863:
  6097  1C75  3001               	movlw	1
  6098  1C76                     u4585:
  6099  1C76  1003               	clrc
  6100  1C77  0CF4               	rrf	___wmul@multiplier+1,f
  6101  1C78  0CF3               	rrf	___wmul@multiplier,f
  6102  1C79  3EFF               	addlw	-1
  6103  1C7A  1D03               	skipz
  6104  1C7B  2C76               	goto	u4585
  6105  1C7C                     l2865:
  6106  1C7C  0873               	movf	___wmul@multiplier,w
  6107  1C7D  0474               	iorwf	___wmul@multiplier+1,w
  6108  1C7E  1D03               	btfss	3,2
  6109  1C7F  2C81               	goto	u4591
  6110  1C80  2C82               	goto	u4590
  6111  1C81                     u4591:
  6112  1C81  2C64               	goto	l2859
  6113  1C82                     u4590:
  6114  1C82                     l2867:
  6115  1C82  0878               	movf	___wmul@product+1,w
  6116  1C83  00F4               	movwf	?___wmul+1
  6117  1C84  0877               	movf	___wmul@product,w
  6118  1C85  00F3               	movwf	?___wmul
  6119  1C86                     l320:
  6120  1C86  0008               	return
  6121  1C87                     __end_of___wmul:
  6122                           
  6123                           	psect	text15
  6124  1DF5                     __ptext15:	
  6125 ;; *************** function ___llmod *****************
  6126 ;; Defined at:
  6127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  divisor         4    3[COMMON] unsigned long 
  6130 ;;  dividend        4    7[COMMON] unsigned long 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  counter         1    1[BANK0 ] unsigned char 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  4    3[COMMON] unsigned long 
  6135 ;; Registers used:
  6136 ;;		wreg, status,2, status,0
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6142 ;;      Params:         8       0       0       0       0
  6143 ;;      Locals:         0       1       0       0       0
  6144 ;;      Temps:          0       1       0       0       0
  6145 ;;      Totals:         8       2       0       0       0
  6146 ;;Total ram usage:       10 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 1
  6149 ;; This function calls:
  6150 ;;		Nothing
  6151 ;; This function is called by:
  6152 ;;		_sprintf
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           
  6157                           ;psect for function ___llmod
  6158  1DF5                     ___llmod:
  6159  1DF5                     l2971:	
  6160                           ;incstack = 0
  6161                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6162                           
  6163  1DF5  0876               	movf	___llmod@divisor+3,w
  6164  1DF6  0475               	iorwf	___llmod@divisor+2,w
  6165  1DF7  0474               	iorwf	___llmod@divisor+1,w
  6166  1DF8  0473               	iorwf	___llmod@divisor,w
  6167  1DF9  1903               	skipnz
  6168  1DFA  2DFC               	goto	u4881
  6169  1DFB  2DFD               	goto	u4880
  6170  1DFC                     u4881:
  6171  1DFC  2E42               	goto	l2987
  6172  1DFD                     u4880:
  6173  1DFD                     l2973:
  6174  1DFD  1283               	bcf	3,5	;RP0=0, select bank0
  6175  1DFE  1303               	bcf	3,6	;RP1=0, select bank0
  6176  1DFF  01A1               	clrf	___llmod@counter
  6177  1E00  0AA1               	incf	___llmod@counter,f
  6178  1E01  2E0F               	goto	l2977
  6179  1E02                     l2975:
  6180  1E02  3001               	movlw	1
  6181  1E03  00A0               	movwf	??___llmod
  6182  1E04                     u4895:
  6183  1E04  1003               	clrc
  6184  1E05  0DF3               	rlf	___llmod@divisor,f
  6185  1E06  0DF4               	rlf	___llmod@divisor+1,f
  6186  1E07  0DF5               	rlf	___llmod@divisor+2,f
  6187  1E08  0DF6               	rlf	___llmod@divisor+3,f
  6188  1E09  0BA0               	decfsz	??___llmod,f
  6189  1E0A  2E04               	goto	u4895
  6190  1E0B  3001               	movlw	1
  6191  1E0C  00A0               	movwf	??___llmod
  6192  1E0D  0820               	movf	??___llmod,w
  6193  1E0E  07A1               	addwf	___llmod@counter,f
  6194  1E0F                     l2977:
  6195  1E0F  1FF6               	btfss	___llmod@divisor+3,7
  6196  1E10  2E12               	goto	u4901
  6197  1E11  2E13               	goto	u4900
  6198  1E12                     u4901:
  6199  1E12  2E02               	goto	l2975
  6200  1E13                     u4900:
  6201  1E13                     l2979:
  6202  1E13  0876               	movf	___llmod@divisor+3,w
  6203  1E14  027A               	subwf	___llmod@dividend+3,w
  6204  1E15  1D03               	skipz
  6205  1E16  2E21               	goto	u4915
  6206  1E17  0875               	movf	___llmod@divisor+2,w
  6207  1E18  0279               	subwf	___llmod@dividend+2,w
  6208  1E19  1D03               	skipz
  6209  1E1A  2E21               	goto	u4915
  6210  1E1B  0874               	movf	___llmod@divisor+1,w
  6211  1E1C  0278               	subwf	___llmod@dividend+1,w
  6212  1E1D  1D03               	skipz
  6213  1E1E  2E21               	goto	u4915
  6214  1E1F  0873               	movf	___llmod@divisor,w
  6215  1E20  0277               	subwf	___llmod@dividend,w
  6216  1E21                     u4915:
  6217  1E21  1C03               	skipc
  6218  1E22  2E24               	goto	u4911
  6219  1E23  2E25               	goto	u4910
  6220  1E24                     u4911:
  6221  1E24  2E33               	goto	l2983
  6222  1E25                     u4910:
  6223  1E25                     l2981:
  6224  1E25  0873               	movf	___llmod@divisor,w
  6225  1E26  02F7               	subwf	___llmod@dividend,f
  6226  1E27  0874               	movf	___llmod@divisor+1,w
  6227  1E28  1C03               	skipc
  6228  1E29  0F74               	incfsz	___llmod@divisor+1,w
  6229  1E2A  02F8               	subwf	___llmod@dividend+1,f
  6230  1E2B  0875               	movf	___llmod@divisor+2,w
  6231  1E2C  1C03               	skipc
  6232  1E2D  0F75               	incfsz	___llmod@divisor+2,w
  6233  1E2E  02F9               	subwf	___llmod@dividend+2,f
  6234  1E2F  0876               	movf	___llmod@divisor+3,w
  6235  1E30  1C03               	skipc
  6236  1E31  0F76               	incfsz	___llmod@divisor+3,w
  6237  1E32  02FA               	subwf	___llmod@dividend+3,f
  6238  1E33                     l2983:
  6239  1E33  3001               	movlw	1
  6240  1E34                     u4925:
  6241  1E34  1003               	clrc
  6242  1E35  0CF6               	rrf	___llmod@divisor+3,f
  6243  1E36  0CF5               	rrf	___llmod@divisor+2,f
  6244  1E37  0CF4               	rrf	___llmod@divisor+1,f
  6245  1E38  0CF3               	rrf	___llmod@divisor,f
  6246  1E39  3EFF               	addlw	-1
  6247  1E3A  1D03               	skipz
  6248  1E3B  2E34               	goto	u4925
  6249  1E3C                     l2985:
  6250  1E3C  3001               	movlw	1
  6251  1E3D  02A1               	subwf	___llmod@counter,f
  6252  1E3E  1D03               	btfss	3,2
  6253  1E3F  2E41               	goto	u4931
  6254  1E40  2E42               	goto	u4930
  6255  1E41                     u4931:
  6256  1E41  2E13               	goto	l2979
  6257  1E42                     u4930:
  6258  1E42                     l2987:
  6259  1E42  087A               	movf	___llmod@dividend+3,w
  6260  1E43  00F6               	movwf	?___llmod+3
  6261  1E44  0879               	movf	___llmod@dividend+2,w
  6262  1E45  00F5               	movwf	?___llmod+2
  6263  1E46  0878               	movf	___llmod@dividend+1,w
  6264  1E47  00F4               	movwf	?___llmod+1
  6265  1E48  0877               	movf	___llmod@dividend,w
  6266  1E49  00F3               	movwf	?___llmod
  6267  1E4A                     l574:
  6268  1E4A  0008               	return
  6269  1E4B                     __end_of___llmod:
  6270                           
  6271                           	psect	text16
  6272  1EA4                     __ptext16:	
  6273 ;; *************** function ___lldiv *****************
  6274 ;; Defined at:
  6275 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  divisor         4    3[COMMON] unsigned long 
  6278 ;;  dividend        4    7[COMMON] unsigned long 
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;  quotient        4    1[BANK0 ] unsigned long 
  6281 ;;  counter         1    5[BANK0 ] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  4    3[COMMON] unsigned long 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6291 ;;      Params:         8       0       0       0       0
  6292 ;;      Locals:         0       5       0       0       0
  6293 ;;      Temps:          0       1       0       0       0
  6294 ;;      Totals:         8       6       0       0       0
  6295 ;;Total ram usage:       14 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 1
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_sprintf
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           
  6306                           ;psect for function ___lldiv
  6307  1EA4                     ___lldiv:
  6308  1EA4                     l2871:	
  6309                           ;incstack = 0
  6310                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6311                           
  6312  1EA4  3000               	movlw	0
  6313  1EA5  1283               	bcf	3,5	;RP0=0, select bank0
  6314  1EA6  1303               	bcf	3,6	;RP1=0, select bank0
  6315  1EA7  00A4               	movwf	___lldiv@quotient+3
  6316  1EA8  3000               	movlw	0
  6317  1EA9  00A3               	movwf	___lldiv@quotient+2
  6318  1EAA  3000               	movlw	0
  6319  1EAB  00A2               	movwf	___lldiv@quotient+1
  6320  1EAC  3000               	movlw	0
  6321  1EAD  00A1               	movwf	___lldiv@quotient
  6322  1EAE  0876               	movf	___lldiv@divisor+3,w
  6323  1EAF  0475               	iorwf	___lldiv@divisor+2,w
  6324  1EB0  0474               	iorwf	___lldiv@divisor+1,w
  6325  1EB1  0473               	iorwf	___lldiv@divisor,w
  6326  1EB2  1903               	skipnz
  6327  1EB3  2EB5               	goto	u4601
  6328  1EB4  2EB6               	goto	u4600
  6329  1EB5                     u4601:
  6330  1EB5  2F03               	goto	l2891
  6331  1EB6                     u4600:
  6332  1EB6                     l2873:
  6333  1EB6  01A5               	clrf	___lldiv@counter
  6334  1EB7  0AA5               	incf	___lldiv@counter,f
  6335  1EB8  2EC6               	goto	l2877
  6336  1EB9                     l2875:
  6337  1EB9  3001               	movlw	1
  6338  1EBA  00A0               	movwf	??___lldiv
  6339  1EBB                     u4615:
  6340  1EBB  1003               	clrc
  6341  1EBC  0DF3               	rlf	___lldiv@divisor,f
  6342  1EBD  0DF4               	rlf	___lldiv@divisor+1,f
  6343  1EBE  0DF5               	rlf	___lldiv@divisor+2,f
  6344  1EBF  0DF6               	rlf	___lldiv@divisor+3,f
  6345  1EC0  0BA0               	decfsz	??___lldiv,f
  6346  1EC1  2EBB               	goto	u4615
  6347  1EC2  3001               	movlw	1
  6348  1EC3  00A0               	movwf	??___lldiv
  6349  1EC4  0820               	movf	??___lldiv,w
  6350  1EC5  07A5               	addwf	___lldiv@counter,f
  6351  1EC6                     l2877:
  6352  1EC6  1FF6               	btfss	___lldiv@divisor+3,7
  6353  1EC7  2EC9               	goto	u4621
  6354  1EC8  2ECA               	goto	u4620
  6355  1EC9                     u4621:
  6356  1EC9  2EB9               	goto	l2875
  6357  1ECA                     u4620:
  6358  1ECA                     l2879:
  6359  1ECA  3001               	movlw	1
  6360  1ECB  00A0               	movwf	??___lldiv
  6361  1ECC                     u4635:
  6362  1ECC  1003               	clrc
  6363  1ECD  0DA1               	rlf	___lldiv@quotient,f
  6364  1ECE  0DA2               	rlf	___lldiv@quotient+1,f
  6365  1ECF  0DA3               	rlf	___lldiv@quotient+2,f
  6366  1ED0  0DA4               	rlf	___lldiv@quotient+3,f
  6367  1ED1  0BA0               	decfsz	??___lldiv,f
  6368  1ED2  2ECC               	goto	u4635
  6369  1ED3                     l2881:
  6370  1ED3  0876               	movf	___lldiv@divisor+3,w
  6371  1ED4  027A               	subwf	___lldiv@dividend+3,w
  6372  1ED5  1D03               	skipz
  6373  1ED6  2EE1               	goto	u4645
  6374  1ED7  0875               	movf	___lldiv@divisor+2,w
  6375  1ED8  0279               	subwf	___lldiv@dividend+2,w
  6376  1ED9  1D03               	skipz
  6377  1EDA  2EE1               	goto	u4645
  6378  1EDB  0874               	movf	___lldiv@divisor+1,w
  6379  1EDC  0278               	subwf	___lldiv@dividend+1,w
  6380  1EDD  1D03               	skipz
  6381  1EDE  2EE1               	goto	u4645
  6382  1EDF  0873               	movf	___lldiv@divisor,w
  6383  1EE0  0277               	subwf	___lldiv@dividend,w
  6384  1EE1                     u4645:
  6385  1EE1  1C03               	skipc
  6386  1EE2  2EE4               	goto	u4641
  6387  1EE3  2EE5               	goto	u4640
  6388  1EE4                     u4641:
  6389  1EE4  2EF4               	goto	l2887
  6390  1EE5                     u4640:
  6391  1EE5                     l2883:
  6392  1EE5  0873               	movf	___lldiv@divisor,w
  6393  1EE6  02F7               	subwf	___lldiv@dividend,f
  6394  1EE7  0874               	movf	___lldiv@divisor+1,w
  6395  1EE8  1C03               	skipc
  6396  1EE9  0F74               	incfsz	___lldiv@divisor+1,w
  6397  1EEA  02F8               	subwf	___lldiv@dividend+1,f
  6398  1EEB  0875               	movf	___lldiv@divisor+2,w
  6399  1EEC  1C03               	skipc
  6400  1EED  0F75               	incfsz	___lldiv@divisor+2,w
  6401  1EEE  02F9               	subwf	___lldiv@dividend+2,f
  6402  1EEF  0876               	movf	___lldiv@divisor+3,w
  6403  1EF0  1C03               	skipc
  6404  1EF1  0F76               	incfsz	___lldiv@divisor+3,w
  6405  1EF2  02FA               	subwf	___lldiv@dividend+3,f
  6406  1EF3                     l2885:
  6407  1EF3  1421               	bsf	___lldiv@quotient,0
  6408  1EF4                     l2887:
  6409  1EF4  3001               	movlw	1
  6410  1EF5                     u4655:
  6411  1EF5  1003               	clrc
  6412  1EF6  0CF6               	rrf	___lldiv@divisor+3,f
  6413  1EF7  0CF5               	rrf	___lldiv@divisor+2,f
  6414  1EF8  0CF4               	rrf	___lldiv@divisor+1,f
  6415  1EF9  0CF3               	rrf	___lldiv@divisor,f
  6416  1EFA  3EFF               	addlw	-1
  6417  1EFB  1D03               	skipz
  6418  1EFC  2EF5               	goto	u4655
  6419  1EFD                     l2889:
  6420  1EFD  3001               	movlw	1
  6421  1EFE  02A5               	subwf	___lldiv@counter,f
  6422  1EFF  1D03               	btfss	3,2
  6423  1F00  2F02               	goto	u4661
  6424  1F01  2F03               	goto	u4660
  6425  1F02                     u4661:
  6426  1F02  2ECA               	goto	l2879
  6427  1F03                     u4660:
  6428  1F03                     l2891:
  6429  1F03  0824               	movf	___lldiv@quotient+3,w
  6430  1F04  00F6               	movwf	?___lldiv+3
  6431  1F05  0823               	movf	___lldiv@quotient+2,w
  6432  1F06  00F5               	movwf	?___lldiv+2
  6433  1F07  0822               	movf	___lldiv@quotient+1,w
  6434  1F08  00F4               	movwf	?___lldiv+1
  6435  1F09  0821               	movf	___lldiv@quotient,w
  6436  1F0A  00F3               	movwf	?___lldiv
  6437  1F0B                     l354:
  6438  1F0B  0008               	return
  6439  1F0C                     __end_of___lldiv:
  6440                           
  6441                           	psect	text17
  6442  0802                     __ptext17:	
  6443 ;; *************** function ___fltol *****************
  6444 ;; Defined at:
  6445 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  f1              4   53[BANK0 ] unsigned long 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  exp1            1   63[BANK0 ] unsigned char 
  6450 ;;  sign1           1   62[BANK0 ] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  4   53[BANK0 ] long 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6460 ;;      Params:         0       4       0       0       0
  6461 ;;      Locals:         0       2       0       0       0
  6462 ;;      Temps:          0       5       0       0       0
  6463 ;;      Totals:         0      11       0       0       0
  6464 ;;Total ram usage:       11 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_sprintf
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           
  6475                           ;psect for function ___fltol
  6476  0802                     ___fltol:
  6477  0802                     l2935:	
  6478                           ;incstack = 0
  6479                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6480                           
  6481  0802  1003               	clrc
  6482  0803  1283               	bcf	3,5	;RP0=0, select bank0
  6483  0804  1303               	bcf	3,6	;RP1=0, select bank0
  6484  0805  0D57               	rlf	___fltol@f1+2,w
  6485  0806  0D58               	rlf	___fltol@f1+3,w
  6486  0807  00D9               	movwf	??___fltol
  6487  0808  0859               	movf	??___fltol,w
  6488  0809  00DF               	movwf	___fltol@exp1
  6489  080A  085F               	movf	___fltol@exp1,w
  6490  080B  1D03               	btfss	3,2
  6491  080C  280E               	goto	u4781
  6492  080D  280F               	goto	u4780
  6493  080E                     u4781:
  6494  080E  2818               	goto	l2941
  6495  080F                     u4780:
  6496  080F                     l2937:
  6497  080F  3000               	movlw	0
  6498  0810  00D8               	movwf	?___fltol+3
  6499  0811  3000               	movlw	0
  6500  0812  00D7               	movwf	?___fltol+2
  6501  0813  3000               	movlw	0
  6502  0814  00D6               	movwf	?___fltol+1
  6503  0815  3000               	movlw	0
  6504  0816  00D5               	movwf	?___fltol
  6505  0817  287D               	goto	l521
  6506  0818                     l2941:
  6507  0818  0855               	movf	___fltol@f1,w
  6508  0819  00D9               	movwf	??___fltol
  6509  081A  0856               	movf	___fltol@f1+1,w
  6510  081B  00DA               	movwf	??___fltol+1
  6511  081C  0857               	movf	___fltol@f1+2,w
  6512  081D  00DB               	movwf	??___fltol+2
  6513  081E  0858               	movf	___fltol@f1+3,w
  6514  081F  00DC               	movwf	??___fltol+3
  6515  0820  301F               	movlw	31
  6516  0821                     u4795:
  6517  0821  1003               	clrc
  6518  0822  0CDC               	rrf	??___fltol+3,f
  6519  0823  0CDB               	rrf	??___fltol+2,f
  6520  0824  0CDA               	rrf	??___fltol+1,f
  6521  0825  0CD9               	rrf	??___fltol,f
  6522  0826                     u4790:
  6523  0826  3EFF               	addlw	-1
  6524  0827  1D03               	skipz
  6525  0828  2821               	goto	u4795
  6526  0829  0859               	movf	??___fltol,w
  6527  082A  00DD               	movwf	??___fltol+4
  6528  082B  085D               	movf	??___fltol+4,w
  6529  082C  00DE               	movwf	___fltol@sign1
  6530  082D                     l2943:
  6531  082D  17D7               	bsf	___fltol@f1+2,7
  6532  082E                     l2945:
  6533  082E  30FF               	movlw	255
  6534  082F  05D5               	andwf	___fltol@f1,f
  6535  0830  30FF               	movlw	255
  6536  0831  05D6               	andwf	___fltol@f1+1,f
  6537  0832  30FF               	movlw	255
  6538  0833  05D7               	andwf	___fltol@f1+2,f
  6539  0834  3000               	movlw	0
  6540  0835  05D8               	andwf	___fltol@f1+3,f
  6541  0836                     l2947:
  6542  0836  3096               	movlw	150
  6543  0837  02DF               	subwf	___fltol@exp1,f
  6544  0838                     l2949:
  6545  0838  1FDF               	btfss	___fltol@exp1,7
  6546  0839  283B               	goto	u4801
  6547  083A  283C               	goto	u4800
  6548  083B                     u4801:
  6549  083B  2856               	goto	l2959
  6550  083C                     u4800:
  6551  083C                     l2951:
  6552  083C  085F               	movf	___fltol@exp1,w
  6553  083D  3A80               	xorlw	128
  6554  083E  3E97               	addlw	151
  6555  083F  1803               	skipnc
  6556  0840  2842               	goto	u4811
  6557  0841  2843               	goto	u4810
  6558  0842                     u4811:
  6559  0842  2844               	goto	l2957
  6560  0843                     u4810:
  6561  0843  280F               	goto	l2937
  6562  0844                     l2957:
  6563  0844  3001               	movlw	1
  6564  0845                     u4825:
  6565  0845  1003               	clrc
  6566  0846  0CD8               	rrf	___fltol@f1+3,f
  6567  0847  0CD7               	rrf	___fltol@f1+2,f
  6568  0848  0CD6               	rrf	___fltol@f1+1,f
  6569  0849  0CD5               	rrf	___fltol@f1,f
  6570  084A  3EFF               	addlw	-1
  6571  084B  1D03               	skipz
  6572  084C  2845               	goto	u4825
  6573  084D  3001               	movlw	1
  6574  084E  00D9               	movwf	??___fltol
  6575  084F  0859               	movf	??___fltol,w
  6576  0850  07DF               	addwf	___fltol@exp1,f
  6577  0851  1D03               	btfss	3,2
  6578  0852  2854               	goto	u4831
  6579  0853  2855               	goto	u4830
  6580  0854                     u4831:
  6581  0854  2844               	goto	l2957
  6582  0855                     u4830:
  6583  0855  286D               	goto	l2967
  6584  0856                     l2959:
  6585  0856  3020               	movlw	32
  6586  0857  025F               	subwf	___fltol@exp1,w
  6587  0858  1C03               	skipc
  6588  0859  285B               	goto	u4841
  6589  085A  285C               	goto	u4840
  6590  085B                     u4841:
  6591  085B  2868               	goto	l528
  6592  085C                     u4840:
  6593  085C  280F               	goto	l2937
  6594  085D                     l2965:
  6595  085D  3001               	movlw	1
  6596  085E  00D9               	movwf	??___fltol
  6597  085F                     u4855:
  6598  085F  1003               	clrc
  6599  0860  0DD5               	rlf	___fltol@f1,f
  6600  0861  0DD6               	rlf	___fltol@f1+1,f
  6601  0862  0DD7               	rlf	___fltol@f1+2,f
  6602  0863  0DD8               	rlf	___fltol@f1+3,f
  6603  0864  0BD9               	decfsz	??___fltol,f
  6604  0865  285F               	goto	u4855
  6605  0866  3001               	movlw	1
  6606  0867  02DF               	subwf	___fltol@exp1,f
  6607  0868                     l528:
  6608  0868  085F               	movf	___fltol@exp1,w
  6609  0869  1D03               	btfss	3,2
  6610  086A  286C               	goto	u4861
  6611  086B  286D               	goto	u4860
  6612  086C                     u4861:
  6613  086C  285D               	goto	l2965
  6614  086D                     u4860:
  6615  086D                     l2967:
  6616  086D  085E               	movf	___fltol@sign1,w
  6617  086E  1903               	btfsc	3,2
  6618  086F  2871               	goto	u4871
  6619  0870  2872               	goto	u4870
  6620  0871                     u4871:
  6621  0871  287D               	goto	l531
  6622  0872                     u4870:
  6623  0872                     l2969:
  6624  0872  09D5               	comf	___fltol@f1,f
  6625  0873  09D6               	comf	___fltol@f1+1,f
  6626  0874  09D7               	comf	___fltol@f1+2,f
  6627  0875  09D8               	comf	___fltol@f1+3,f
  6628  0876  0AD5               	incf	___fltol@f1,f
  6629  0877  1903               	skipnz
  6630  0878  0AD6               	incf	___fltol@f1+1,f
  6631  0879  1903               	skipnz
  6632  087A  0AD7               	incf	___fltol@f1+2,f
  6633  087B  1903               	skipnz
  6634  087C  0AD8               	incf	___fltol@f1+3,f
  6635  087D                     l531:
  6636  087D                     l521:
  6637  087D  0008               	return
  6638  087E                     __end_of___fltol:
  6639                           
  6640                           	psect	text18
  6641  1DA5                     __ptext18:	
  6642 ;; *************** function ___flsub *****************
  6643 ;; Defined at:
  6644 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  a               4    0[BANK1 ] long 
  6647 ;;  b               4    4[BANK1 ] long 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  4    0[BANK1 ] long 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6659 ;;      Params:         0       0       8       0       0
  6660 ;;      Locals:         0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0
  6662 ;;      Totals:         0       0       8       0       0
  6663 ;;Total ram usage:        8 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 2
  6666 ;; This function calls:
  6667 ;;		___fladd
  6668 ;; This function is called by:
  6669 ;;		_sprintf
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           
  6674                           ;psect for function ___flsub
  6675  1DA5                     ___flsub:
  6676  1DA5                     l2991:	
  6677                           ;incstack = 0
  6678                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6679                           
  6680  1DA5  3080               	movlw	128
  6681  1DA6  1683               	bsf	3,5	;RP0=1, select bank1
  6682  1DA7  1303               	bcf	3,6	;RP1=0, select bank1
  6683  1DA8  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6684  1DA9                     l2993:
  6685  1DA9  0827               	movf	(___flsub@b+3)^(0+128),w
  6686  1DAA  1283               	bcf	3,5	;RP0=0, select bank0
  6687  1DAB  1303               	bcf	3,6	;RP1=0, select bank0
  6688  1DAC  00D9               	movwf	___fladd@b+3
  6689  1DAD  1683               	bsf	3,5	;RP0=1, select bank1
  6690  1DAE  1303               	bcf	3,6	;RP1=0, select bank1
  6691  1DAF  0826               	movf	(___flsub@b+2)^(0+128),w
  6692  1DB0  1283               	bcf	3,5	;RP0=0, select bank0
  6693  1DB1  1303               	bcf	3,6	;RP1=0, select bank0
  6694  1DB2  00D8               	movwf	___fladd@b+2
  6695  1DB3  1683               	bsf	3,5	;RP0=1, select bank1
  6696  1DB4  1303               	bcf	3,6	;RP1=0, select bank1
  6697  1DB5  0825               	movf	(___flsub@b+1)^(0+128),w
  6698  1DB6  1283               	bcf	3,5	;RP0=0, select bank0
  6699  1DB7  1303               	bcf	3,6	;RP1=0, select bank0
  6700  1DB8  00D7               	movwf	___fladd@b+1
  6701  1DB9  1683               	bsf	3,5	;RP0=1, select bank1
  6702  1DBA  1303               	bcf	3,6	;RP1=0, select bank1
  6703  1DBB  0824               	movf	___flsub@b^(0+128),w
  6704  1DBC  1283               	bcf	3,5	;RP0=0, select bank0
  6705  1DBD  1303               	bcf	3,6	;RP1=0, select bank0
  6706  1DBE  00D6               	movwf	___fladd@b
  6707  1DBF  1683               	bsf	3,5	;RP0=1, select bank1
  6708  1DC0  1303               	bcf	3,6	;RP1=0, select bank1
  6709  1DC1  0823               	movf	(___flsub@a+3)^(0+128),w
  6710  1DC2  1283               	bcf	3,5	;RP0=0, select bank0
  6711  1DC3  1303               	bcf	3,6	;RP1=0, select bank0
  6712  1DC4  00DD               	movwf	___fladd@a+3
  6713  1DC5  1683               	bsf	3,5	;RP0=1, select bank1
  6714  1DC6  1303               	bcf	3,6	;RP1=0, select bank1
  6715  1DC7  0822               	movf	(___flsub@a+2)^(0+128),w
  6716  1DC8  1283               	bcf	3,5	;RP0=0, select bank0
  6717  1DC9  1303               	bcf	3,6	;RP1=0, select bank0
  6718  1DCA  00DC               	movwf	___fladd@a+2
  6719  1DCB  1683               	bsf	3,5	;RP0=1, select bank1
  6720  1DCC  1303               	bcf	3,6	;RP1=0, select bank1
  6721  1DCD  0821               	movf	(___flsub@a+1)^(0+128),w
  6722  1DCE  1283               	bcf	3,5	;RP0=0, select bank0
  6723  1DCF  1303               	bcf	3,6	;RP1=0, select bank0
  6724  1DD0  00DB               	movwf	___fladd@a+1
  6725  1DD1  1683               	bsf	3,5	;RP0=1, select bank1
  6726  1DD2  1303               	bcf	3,6	;RP1=0, select bank1
  6727  1DD3  0820               	movf	___flsub@a^(0+128),w
  6728  1DD4  1283               	bcf	3,5	;RP0=0, select bank0
  6729  1DD5  1303               	bcf	3,6	;RP1=0, select bank0
  6730  1DD6  00DA               	movwf	___fladd@a
  6731  1DD7  120A  118A  254F  160A  158A  	fcall	___fladd
  6732  1DDC  1283               	bcf	3,5	;RP0=0, select bank0
  6733  1DDD  1303               	bcf	3,6	;RP1=0, select bank0
  6734  1DDE  0859               	movf	?___fladd+3,w
  6735  1DDF  1683               	bsf	3,5	;RP0=1, select bank1
  6736  1DE0  1303               	bcf	3,6	;RP1=0, select bank1
  6737  1DE1  00A3               	movwf	(?___flsub+3)^(0+128)
  6738  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
  6739  1DE3  1303               	bcf	3,6	;RP1=0, select bank0
  6740  1DE4  0858               	movf	?___fladd+2,w
  6741  1DE5  1683               	bsf	3,5	;RP0=1, select bank1
  6742  1DE6  1303               	bcf	3,6	;RP1=0, select bank1
  6743  1DE7  00A2               	movwf	(?___flsub+2)^(0+128)
  6744  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  6745  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  6746  1DEA  0857               	movf	?___fladd+1,w
  6747  1DEB  1683               	bsf	3,5	;RP0=1, select bank1
  6748  1DEC  1303               	bcf	3,6	;RP1=0, select bank1
  6749  1DED  00A1               	movwf	(?___flsub+1)^(0+128)
  6750  1DEE  1283               	bcf	3,5	;RP0=0, select bank0
  6751  1DEF  1303               	bcf	3,6	;RP1=0, select bank0
  6752  1DF0  0856               	movf	?___fladd,w
  6753  1DF1  1683               	bsf	3,5	;RP0=1, select bank1
  6754  1DF2  1303               	bcf	3,6	;RP1=0, select bank1
  6755  1DF3  00A0               	movwf	?___flsub^(0+128)
  6756  1DF4                     l691:
  6757  1DF4  0008               	return
  6758  1DF5                     __end_of___flsub:
  6759                           
  6760                           	psect	text19
  6761  054F                     __ptext19:	
  6762 ;; *************** function ___fladd *****************
  6763 ;; Defined at:
  6764 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;  b               4   54[BANK0 ] long 
  6767 ;;  a               4   58[BANK0 ] long 
  6768 ;; Auto vars:     Size  Location     Type
  6769 ;;  grs             1   73[BANK0 ] unsigned char 
  6770 ;;  bexp            1   72[BANK0 ] unsigned char 
  6771 ;;  aexp            1   71[BANK0 ] unsigned char 
  6772 ;;  signs           1   70[BANK0 ] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  4   54[BANK0 ] unsigned char 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0, btemp+1
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6782 ;;      Params:         0       8       0       0       0
  6783 ;;      Locals:         0       4       0       0       0
  6784 ;;      Temps:          0       8       0       0       0
  6785 ;;      Totals:         0      20       0       0       0
  6786 ;;Total ram usage:       20 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 1
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_sprintf
  6793 ;;		___flsub
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           
  6798                           ;psect for function ___fladd
  6799  054F                     ___fladd:
  6800  054F                     l2345:	
  6801                           ;incstack = 0
  6802                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6803                           
  6804  054F  1283               	bcf	3,5	;RP0=0, select bank0
  6805  0550  1303               	bcf	3,6	;RP1=0, select bank0
  6806  0551  0859               	movf	___fladd@b+3,w
  6807  0552  3980               	andlw	128
  6808  0553  00DE               	movwf	??___fladd
  6809  0554  085E               	movf	??___fladd,w
  6810  0555  00E6               	movwf	___fladd@signs
  6811  0556                     l2347:
  6812  0556  0859               	movf	___fladd@b+3,w
  6813  0557  00DE               	movwf	??___fladd
  6814  0558  075E               	addwf	??___fladd,w
  6815  0559  00DF               	movwf	??___fladd+1
  6816  055A  085F               	movf	??___fladd+1,w
  6817  055B  00E8               	movwf	___fladd@bexp
  6818  055C                     l2349:
  6819  055C  1FD8               	btfss	___fladd@b+2,7
  6820  055D  2D5F               	goto	u3191
  6821  055E  2D60               	goto	u3190
  6822  055F                     u3191:
  6823  055F  2D61               	goto	l2353
  6824  0560                     u3190:
  6825  0560                     l2351:
  6826  0560  1468               	bsf	___fladd@bexp,0
  6827  0561                     l2353:
  6828  0561  0868               	movf	___fladd@bexp,w
  6829  0562  1903               	btfsc	3,2
  6830  0563  2D65               	goto	u3201
  6831  0564  2D66               	goto	u3200
  6832  0565                     u3201:
  6833  0565  2D76               	goto	l2363
  6834  0566                     u3200:
  6835  0566                     l2355:
  6836  0566  0A68               	incf	___fladd@bexp,w
  6837  0567  1D03               	btfss	3,2
  6838  0568  2D6A               	goto	u3211
  6839  0569  2D6B               	goto	u3210
  6840  056A                     u3211:
  6841  056A  2D73               	goto	l2359
  6842  056B                     u3210:
  6843  056B                     l2357:
  6844  056B  3000               	movlw	0
  6845  056C  00D9               	movwf	___fladd@b+3
  6846  056D  3000               	movlw	0
  6847  056E  00D8               	movwf	___fladd@b+2
  6848  056F  3000               	movlw	0
  6849  0570  00D7               	movwf	___fladd@b+1
  6850  0571  3000               	movlw	0
  6851  0572  00D6               	movwf	___fladd@b
  6852  0573                     l2359:
  6853  0573  17D8               	bsf	___fladd@b+2,7
  6854  0574                     l2361:
  6855  0574  01D9               	clrf	___fladd@b+3
  6856  0575  2D7E               	goto	l2365
  6857  0576                     l2363:
  6858  0576  3000               	movlw	0
  6859  0577  00D9               	movwf	___fladd@b+3
  6860  0578  3000               	movlw	0
  6861  0579  00D8               	movwf	___fladd@b+2
  6862  057A  3000               	movlw	0
  6863  057B  00D7               	movwf	___fladd@b+1
  6864  057C  3000               	movlw	0
  6865  057D  00D6               	movwf	___fladd@b
  6866  057E                     l2365:
  6867  057E  085D               	movf	___fladd@a+3,w
  6868  057F  3980               	andlw	128
  6869  0580  00DE               	movwf	??___fladd
  6870  0581  085E               	movf	??___fladd,w
  6871  0582  00E7               	movwf	___fladd@aexp
  6872  0583                     l2367:
  6873  0583  0867               	movf	___fladd@aexp,w
  6874  0584  0666               	xorwf	___fladd@signs,w
  6875  0585  1903               	skipnz
  6876  0586  2D88               	goto	u3221
  6877  0587  2D89               	goto	u3220
  6878  0588                     u3221:
  6879  0588  2D8A               	goto	l2371
  6880  0589                     u3220:
  6881  0589                     l2369:
  6882  0589  1766               	bsf	___fladd@signs,6
  6883  058A                     l2371:
  6884  058A  085D               	movf	___fladd@a+3,w
  6885  058B  00DE               	movwf	??___fladd
  6886  058C  075E               	addwf	??___fladd,w
  6887  058D  00DF               	movwf	??___fladd+1
  6888  058E  085F               	movf	??___fladd+1,w
  6889  058F  00E7               	movwf	___fladd@aexp
  6890  0590                     l2373:
  6891  0590  1FDC               	btfss	___fladd@a+2,7
  6892  0591  2D93               	goto	u3231
  6893  0592  2D94               	goto	u3230
  6894  0593                     u3231:
  6895  0593  2D95               	goto	l2377
  6896  0594                     u3230:
  6897  0594                     l2375:
  6898  0594  1467               	bsf	___fladd@aexp,0
  6899  0595                     l2377:
  6900  0595  0867               	movf	___fladd@aexp,w
  6901  0596  1903               	btfsc	3,2
  6902  0597  2D99               	goto	u3241
  6903  0598  2D9A               	goto	u3240
  6904  0599                     u3241:
  6905  0599  2DAA               	goto	l2387
  6906  059A                     u3240:
  6907  059A                     l2379:
  6908  059A  0A67               	incf	___fladd@aexp,w
  6909  059B  1D03               	btfss	3,2
  6910  059C  2D9E               	goto	u3251
  6911  059D  2D9F               	goto	u3250
  6912  059E                     u3251:
  6913  059E  2DA7               	goto	l2383
  6914  059F                     u3250:
  6915  059F                     l2381:
  6916  059F  3000               	movlw	0
  6917  05A0  00DD               	movwf	___fladd@a+3
  6918  05A1  3000               	movlw	0
  6919  05A2  00DC               	movwf	___fladd@a+2
  6920  05A3  3000               	movlw	0
  6921  05A4  00DB               	movwf	___fladd@a+1
  6922  05A5  3000               	movlw	0
  6923  05A6  00DA               	movwf	___fladd@a
  6924  05A7                     l2383:
  6925  05A7  17DC               	bsf	___fladd@a+2,7
  6926  05A8                     l2385:
  6927  05A8  01DD               	clrf	___fladd@a+3
  6928  05A9  2DB2               	goto	l645
  6929  05AA                     l2387:
  6930  05AA  3000               	movlw	0
  6931  05AB  00DD               	movwf	___fladd@a+3
  6932  05AC  3000               	movlw	0
  6933  05AD  00DC               	movwf	___fladd@a+2
  6934  05AE  3000               	movlw	0
  6935  05AF  00DB               	movwf	___fladd@a+1
  6936  05B0  3000               	movlw	0
  6937  05B1  00DA               	movwf	___fladd@a
  6938  05B2                     l645:
  6939  05B2  0868               	movf	___fladd@bexp,w
  6940  05B3  0267               	subwf	___fladd@aexp,w
  6941  05B4  1803               	skipnc
  6942  05B5  2DB7               	goto	u3261
  6943  05B6  2DB8               	goto	u3260
  6944  05B7                     u3261:
  6945  05B7  2DFC               	goto	l2423
  6946  05B8                     u3260:
  6947  05B8                     l2389:
  6948  05B8  1F66               	btfss	___fladd@signs,6
  6949  05B9  2DBB               	goto	u3271
  6950  05BA  2DBC               	goto	u3270
  6951  05BB                     u3271:
  6952  05BB  2DC0               	goto	l2393
  6953  05BC                     u3270:
  6954  05BC                     l2391:
  6955  05BC  3080               	movlw	128
  6956  05BD  00DE               	movwf	??___fladd
  6957  05BE  085E               	movf	??___fladd,w
  6958  05BF  06E6               	xorwf	___fladd@signs,f
  6959  05C0                     l2393:
  6960  05C0  0868               	movf	___fladd@bexp,w
  6961  05C1  00DE               	movwf	??___fladd
  6962  05C2  085E               	movf	??___fladd,w
  6963  05C3  00E9               	movwf	___fladd@grs
  6964  05C4                     l2395:
  6965  05C4  0867               	movf	___fladd@aexp,w
  6966  05C5  00DE               	movwf	??___fladd
  6967  05C6  085E               	movf	??___fladd,w
  6968  05C7  00E8               	movwf	___fladd@bexp
  6969  05C8                     l2397:
  6970  05C8  0869               	movf	___fladd@grs,w
  6971  05C9  00DE               	movwf	??___fladd
  6972  05CA  085E               	movf	??___fladd,w
  6973  05CB  00E7               	movwf	___fladd@aexp
  6974  05CC                     l2399:
  6975  05CC  0856               	movf	___fladd@b,w
  6976  05CD  00DE               	movwf	??___fladd
  6977  05CE  085E               	movf	??___fladd,w
  6978  05CF  00E9               	movwf	___fladd@grs
  6979  05D0                     l2401:
  6980  05D0  085A               	movf	___fladd@a,w
  6981  05D1  00DE               	movwf	??___fladd
  6982  05D2  085E               	movf	??___fladd,w
  6983  05D3  00D6               	movwf	___fladd@b
  6984  05D4                     l2403:
  6985  05D4  0869               	movf	___fladd@grs,w
  6986  05D5  00DE               	movwf	??___fladd
  6987  05D6  085E               	movf	??___fladd,w
  6988  05D7  00DA               	movwf	___fladd@a
  6989  05D8                     l2405:
  6990  05D8  0857               	movf	___fladd@b+1,w
  6991  05D9  00DE               	movwf	??___fladd
  6992  05DA  085E               	movf	??___fladd,w
  6993  05DB  00E9               	movwf	___fladd@grs
  6994  05DC                     l2407:
  6995  05DC  085B               	movf	___fladd@a+1,w
  6996  05DD  00DE               	movwf	??___fladd
  6997  05DE  085E               	movf	??___fladd,w
  6998  05DF  00D7               	movwf	___fladd@b+1
  6999  05E0                     l2409:
  7000  05E0  0869               	movf	___fladd@grs,w
  7001  05E1  00DE               	movwf	??___fladd
  7002  05E2  085E               	movf	??___fladd,w
  7003  05E3  00DB               	movwf	___fladd@a+1
  7004  05E4                     l2411:
  7005  05E4  0858               	movf	___fladd@b+2,w
  7006  05E5  00DE               	movwf	??___fladd
  7007  05E6  085E               	movf	??___fladd,w
  7008  05E7  00E9               	movwf	___fladd@grs
  7009  05E8                     l2413:
  7010  05E8  085C               	movf	___fladd@a+2,w
  7011  05E9  00DE               	movwf	??___fladd
  7012  05EA  085E               	movf	??___fladd,w
  7013  05EB  00D8               	movwf	___fladd@b+2
  7014  05EC                     l2415:
  7015  05EC  0869               	movf	___fladd@grs,w
  7016  05ED  00DE               	movwf	??___fladd
  7017  05EE  085E               	movf	??___fladd,w
  7018  05EF  00DC               	movwf	___fladd@a+2
  7019  05F0                     l2417:
  7020  05F0  0859               	movf	___fladd@b+3,w
  7021  05F1  00DE               	movwf	??___fladd
  7022  05F2  085E               	movf	??___fladd,w
  7023  05F3  00E9               	movwf	___fladd@grs
  7024  05F4                     l2419:
  7025  05F4  085D               	movf	___fladd@a+3,w
  7026  05F5  00DE               	movwf	??___fladd
  7027  05F6  085E               	movf	??___fladd,w
  7028  05F7  00D9               	movwf	___fladd@b+3
  7029  05F8                     l2421:
  7030  05F8  0869               	movf	___fladd@grs,w
  7031  05F9  00DE               	movwf	??___fladd
  7032  05FA  085E               	movf	??___fladd,w
  7033  05FB  00DD               	movwf	___fladd@a+3
  7034  05FC                     l2423:
  7035  05FC  01E9               	clrf	___fladd@grs
  7036  05FD                     l2425:
  7037  05FD  0867               	movf	___fladd@aexp,w
  7038  05FE  00DE               	movwf	??___fladd
  7039  05FF  01DF               	clrf	??___fladd+1
  7040  0600  085F               	movf	??___fladd+1,w
  7041  0601  00E1               	movwf	??___fladd+3
  7042  0602  0868               	movf	___fladd@bexp,w
  7043  0603  025E               	subwf	??___fladd,w
  7044  0604  00E0               	movwf	??___fladd+2
  7045  0605  1C03               	skipc
  7046  0606  03E1               	decf	??___fladd+3,f
  7047  0607  0861               	movf	??___fladd+3,w
  7048  0608  3A80               	xorlw	128
  7049  0609  00FF               	movwf	btemp+1
  7050  060A  3080               	movlw	128
  7051  060B  027F               	subwf	btemp+1,w
  7052  060C  1D03               	skipz
  7053  060D  2E10               	goto	u3285
  7054  060E  301A               	movlw	26
  7055  060F  0260               	subwf	??___fladd+2,w
  7056  0610                     u3285:
  7057  0610  1C03               	skipc
  7058  0611  2E13               	goto	u3281
  7059  0612  2E14               	goto	u3280
  7060  0613                     u3281:
  7061  0613  2E51               	goto	l2441
  7062  0614                     u3280:
  7063  0614                     l2427:
  7064  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7065  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7066  0616  0859               	movf	___fladd@b+3,w
  7067  0617  0458               	iorwf	___fladd@b+2,w
  7068  0618  0457               	iorwf	___fladd@b+1,w
  7069  0619  0456               	iorwf	___fladd@b,w
  7070  061A  1D03               	skipz
  7071  061B  2E1D               	goto	u3291
  7072  061C  2E1F               	goto	u3290
  7073  061D                     u3291:
  7074  061D  3001               	movlw	1
  7075  061E  2E20               	goto	u3300
  7076  061F                     u3290:
  7077  061F  3000               	movlw	0
  7078  0620                     u3300:
  7079  0620  00DE               	movwf	??___fladd
  7080  0621  085E               	movf	??___fladd,w
  7081  0622  00E9               	movwf	___fladd@grs
  7082  0623  3000               	movlw	0
  7083  0624  00D9               	movwf	___fladd@b+3
  7084  0625  3000               	movlw	0
  7085  0626  00D8               	movwf	___fladd@b+2
  7086  0627  3000               	movlw	0
  7087  0628  00D7               	movwf	___fladd@b+1
  7088  0629  3000               	movlw	0
  7089  062A  00D6               	movwf	___fladd@b
  7090  062B  0867               	movf	___fladd@aexp,w
  7091  062C  00DE               	movwf	??___fladd
  7092  062D  085E               	movf	??___fladd,w
  7093  062E  00E8               	movwf	___fladd@bexp
  7094  062F  2E59               	goto	l649
  7095  0630                     l651:
  7096  0630  1C69               	btfss	___fladd@grs,0
  7097  0631  2E33               	goto	u3311
  7098  0632  2E34               	goto	u3310
  7099  0633                     u3311:
  7100  0633  2E3D               	goto	l2431
  7101  0634                     u3310:
  7102  0634                     l2429:
  7103  0634  0869               	movf	___fladd@grs,w
  7104  0635  00DE               	movwf	??___fladd
  7105  0636  1003               	clrc
  7106  0637  0C5E               	rrf	??___fladd,w
  7107  0638  3801               	iorlw	1
  7108  0639  00DF               	movwf	??___fladd+1
  7109  063A  085F               	movf	??___fladd+1,w
  7110  063B  00E9               	movwf	___fladd@grs
  7111  063C  2E3F               	goto	l2433
  7112  063D                     l2431:
  7113  063D  1003               	clrc
  7114  063E  0CE9               	rrf	___fladd@grs,f
  7115  063F                     l2433:
  7116  063F  1C56               	btfss	___fladd@b,0
  7117  0640  2E42               	goto	u3321
  7118  0641  2E43               	goto	u3320
  7119  0642                     u3321:
  7120  0642  2E44               	goto	l2437
  7121  0643                     u3320:
  7122  0643                     l2435:
  7123  0643  17E9               	bsf	___fladd@grs,7
  7124  0644                     l2437:
  7125  0644  3001               	movlw	1
  7126  0645  00DE               	movwf	??___fladd
  7127  0646                     u3335:
  7128  0646  0D59               	rlf	___fladd@b+3,w
  7129  0647  0CD9               	rrf	___fladd@b+3,f
  7130  0648  0CD8               	rrf	___fladd@b+2,f
  7131  0649  0CD7               	rrf	___fladd@b+1,f
  7132  064A  0CD6               	rrf	___fladd@b,f
  7133  064B  0BDE               	decfsz	??___fladd& (0+127),f
  7134  064C  2E46               	goto	u3335
  7135  064D                     l2439:
  7136  064D  3001               	movlw	1
  7137  064E  00DE               	movwf	??___fladd
  7138  064F  085E               	movf	??___fladd,w
  7139  0650  07E8               	addwf	___fladd@bexp,f
  7140  0651                     l2441:
  7141  0651  1283               	bcf	3,5	;RP0=0, select bank0
  7142  0652  1303               	bcf	3,6	;RP1=0, select bank0
  7143  0653  0867               	movf	___fladd@aexp,w
  7144  0654  0268               	subwf	___fladd@bexp,w
  7145  0655  1C03               	skipc
  7146  0656  2E58               	goto	u3341
  7147  0657  2E59               	goto	u3340
  7148  0658                     u3341:
  7149  0658  2E30               	goto	l651
  7150  0659                     u3340:
  7151  0659                     l649:
  7152  0659  1B66               	btfsc	___fladd@signs,6
  7153  065A  2E5C               	goto	u3351
  7154  065B  2E5D               	goto	u3350
  7155  065C                     u3351:
  7156  065C  2EA8               	goto	l2467
  7157  065D                     u3350:
  7158  065D                     l2443:
  7159  065D  0868               	movf	___fladd@bexp,w
  7160  065E  1D03               	btfss	3,2
  7161  065F  2E61               	goto	u3361
  7162  0660  2E62               	goto	u3360
  7163  0661                     u3361:
  7164  0661  2E6B               	goto	l2449
  7165  0662                     u3360:
  7166  0662                     l2445:
  7167  0662  3000               	movlw	0
  7168  0663  00D9               	movwf	?___fladd+3
  7169  0664  3000               	movlw	0
  7170  0665  00D8               	movwf	?___fladd+2
  7171  0666  3000               	movlw	0
  7172  0667  00D7               	movwf	?___fladd+1
  7173  0668  3000               	movlw	0
  7174  0669  00D6               	movwf	?___fladd
  7175  066A  2FD6               	goto	l658
  7176  066B                     l2449:
  7177  066B  085A               	movf	___fladd@a,w
  7178  066C  07D6               	addwf	___fladd@b,f
  7179  066D  085B               	movf	___fladd@a+1,w
  7180  066E  1103               	clrz
  7181  066F  1803               	skipnc
  7182  0670  3E01               	addlw	1
  7183  0671  1903               	skipnz
  7184  0672  2E74               	goto	u3371
  7185  0673  07D7               	addwf	___fladd@b+1,f
  7186  0674                     u3371:
  7187  0674  085C               	movf	___fladd@a+2,w
  7188  0675  1103               	clrz
  7189  0676  1803               	skipnc
  7190  0677  3E01               	addlw	1
  7191  0678  1903               	skipnz
  7192  0679  2E7B               	goto	u3372
  7193  067A  07D8               	addwf	___fladd@b+2,f
  7194  067B                     u3372:
  7195  067B  085D               	movf	___fladd@a+3,w
  7196  067C  1103               	clrz
  7197  067D  1803               	skipnc
  7198  067E  3E01               	addlw	1
  7199  067F  1903               	skipnz
  7200  0680  2E82               	goto	u3373
  7201  0681  07D9               	addwf	___fladd@b+3,f
  7202  0682                     u3373:
  7203  0682                     l2451:
  7204  0682  1C59               	btfss	___fladd@b+3,0
  7205  0683  2E85               	goto	u3381
  7206  0684  2E86               	goto	u3380
  7207  0685                     u3381:
  7208  0685  2F5C               	goto	l2501
  7209  0686                     u3380:
  7210  0686                     l2453:
  7211  0686  1C69               	btfss	___fladd@grs,0
  7212  0687  2E89               	goto	u3391
  7213  0688  2E8A               	goto	u3390
  7214  0689                     u3391:
  7215  0689  2E93               	goto	l2457
  7216  068A                     u3390:
  7217  068A                     l2455:
  7218  068A  0869               	movf	___fladd@grs,w
  7219  068B  00DE               	movwf	??___fladd
  7220  068C  1003               	clrc
  7221  068D  0C5E               	rrf	??___fladd,w
  7222  068E  3801               	iorlw	1
  7223  068F  00DF               	movwf	??___fladd+1
  7224  0690  085F               	movf	??___fladd+1,w
  7225  0691  00E9               	movwf	___fladd@grs
  7226  0692  2E95               	goto	l2459
  7227  0693                     l2457:
  7228  0693  1003               	clrc
  7229  0694  0CE9               	rrf	___fladd@grs,f
  7230  0695                     l2459:
  7231  0695  1C56               	btfss	___fladd@b,0
  7232  0696  2E98               	goto	u3401
  7233  0697  2E99               	goto	u3400
  7234  0698                     u3401:
  7235  0698  2E9A               	goto	l2463
  7236  0699                     u3400:
  7237  0699                     l2461:
  7238  0699  17E9               	bsf	___fladd@grs,7
  7239  069A                     l2463:
  7240  069A  3001               	movlw	1
  7241  069B  00DE               	movwf	??___fladd
  7242  069C                     u3415:
  7243  069C  0D59               	rlf	___fladd@b+3,w
  7244  069D  0CD9               	rrf	___fladd@b+3,f
  7245  069E  0CD8               	rrf	___fladd@b+2,f
  7246  069F  0CD7               	rrf	___fladd@b+1,f
  7247  06A0  0CD6               	rrf	___fladd@b,f
  7248  06A1  0BDE               	decfsz	??___fladd& (0+127),f
  7249  06A2  2E9C               	goto	u3415
  7250  06A3                     l2465:
  7251  06A3  3001               	movlw	1
  7252  06A4  00DE               	movwf	??___fladd
  7253  06A5  085E               	movf	??___fladd,w
  7254  06A6  07E8               	addwf	___fladd@bexp,f
  7255  06A7  2F5C               	goto	l2501
  7256  06A8                     l2467:
  7257  06A8  0859               	movf	___fladd@b+3,w
  7258  06A9  3A80               	xorlw	128
  7259  06AA  00FF               	movwf	btemp+1
  7260  06AB  085D               	movf	___fladd@a+3,w
  7261  06AC  3A80               	xorlw	128
  7262  06AD  027F               	subwf	btemp+1,w
  7263  06AE  1D03               	skipz
  7264  06AF  2EBA               	goto	u3423
  7265  06B0  085C               	movf	___fladd@a+2,w
  7266  06B1  0258               	subwf	___fladd@b+2,w
  7267  06B2  1D03               	skipz
  7268  06B3  2EBA               	goto	u3423
  7269  06B4  085B               	movf	___fladd@a+1,w
  7270  06B5  0257               	subwf	___fladd@b+1,w
  7271  06B6  1D03               	skipz
  7272  06B7  2EBA               	goto	u3423
  7273  06B8  085A               	movf	___fladd@a,w
  7274  06B9  0256               	subwf	___fladd@b,w
  7275  06BA                     u3423:
  7276  06BA  1803               	skipnc
  7277  06BB  2EBD               	goto	u3421
  7278  06BC  2EBE               	goto	u3420
  7279  06BD                     u3421:
  7280  06BD  2F16               	goto	l2477
  7281  06BE                     u3420:
  7282  06BE                     l2469:
  7283  06BE  30FF               	movlw	255
  7284  06BF  00DE               	movwf	??___fladd
  7285  06C0  30FF               	movlw	255
  7286  06C1  00DF               	movwf	??___fladd+1
  7287  06C2  30FF               	movlw	255
  7288  06C3  00E0               	movwf	??___fladd+2
  7289  06C4  30FF               	movlw	255
  7290  06C5  00E1               	movwf	??___fladd+3
  7291  06C6  085A               	movf	___fladd@a,w
  7292  06C7  00E2               	movwf	??___fladd+4
  7293  06C8  085B               	movf	___fladd@a+1,w
  7294  06C9  00E3               	movwf	??___fladd+5
  7295  06CA  085C               	movf	___fladd@a+2,w
  7296  06CB  00E4               	movwf	??___fladd+6
  7297  06CC  085D               	movf	___fladd@a+3,w
  7298  06CD  00E5               	movwf	??___fladd+7
  7299  06CE  0856               	movf	___fladd@b,w
  7300  06CF  02E2               	subwf	??___fladd+4,f
  7301  06D0  0857               	movf	___fladd@b+1,w
  7302  06D1  1C03               	skipc
  7303  06D2  0F57               	incfsz	___fladd@b+1,w
  7304  06D3  2ED5               	goto	u3431
  7305  06D4  2ED6               	goto	u3432
  7306  06D5                     u3431:
  7307  06D5  02E3               	subwf	??___fladd+5,f
  7308  06D6                     u3432:
  7309  06D6  0858               	movf	___fladd@b+2,w
  7310  06D7  1C03               	skipc
  7311  06D8  0F58               	incfsz	___fladd@b+2,w
  7312  06D9  2EDB               	goto	u3433
  7313  06DA  2EDC               	goto	u3434
  7314  06DB                     u3433:
  7315  06DB  02E4               	subwf	??___fladd+6,f
  7316  06DC                     u3434:
  7317  06DC  0859               	movf	___fladd@b+3,w
  7318  06DD  1C03               	skipc
  7319  06DE  0F59               	incfsz	___fladd@b+3,w
  7320  06DF  2EE1               	goto	u3435
  7321  06E0  2EE2               	goto	u3436
  7322  06E1                     u3435:
  7323  06E1  02E5               	subwf	??___fladd+7,f
  7324  06E2                     u3436:
  7325  06E2  0862               	movf	??___fladd+4,w
  7326  06E3  07DE               	addwf	??___fladd,f
  7327  06E4  0863               	movf	??___fladd+5,w
  7328  06E5  1803               	skipnc
  7329  06E6  0F63               	incfsz	??___fladd+5,w
  7330  06E7  2EE9               	goto	u3440
  7331  06E8  2EEA               	goto	u3441
  7332  06E9                     u3440:
  7333  06E9  07DF               	addwf	??___fladd+1,f
  7334  06EA                     u3441:
  7335  06EA  0864               	movf	??___fladd+6,w
  7336  06EB  1803               	skipnc
  7337  06EC  0F64               	incfsz	??___fladd+6,w
  7338  06ED  2EEF               	goto	u3442
  7339  06EE  2EF0               	goto	u3443
  7340  06EF                     u3442:
  7341  06EF  07E0               	addwf	??___fladd+2,f
  7342  06F0                     u3443:
  7343  06F0  0865               	movf	??___fladd+7,w
  7344  06F1  1803               	skipnc
  7345  06F2  0A65               	incf	??___fladd+7,w
  7346  06F3  07E1               	addwf	??___fladd+3,f
  7347  06F4  0861               	movf	??___fladd+3,w
  7348  06F5  00D9               	movwf	___fladd@b+3
  7349  06F6  0860               	movf	??___fladd+2,w
  7350  06F7  00D8               	movwf	___fladd@b+2
  7351  06F8  085F               	movf	??___fladd+1,w
  7352  06F9  00D7               	movwf	___fladd@b+1
  7353  06FA  085E               	movf	??___fladd,w
  7354  06FB  00D6               	movwf	___fladd@b
  7355  06FC                     l2471:
  7356  06FC  3080               	movlw	128
  7357  06FD  00DE               	movwf	??___fladd
  7358  06FE  085E               	movf	??___fladd,w
  7359  06FF  06E6               	xorwf	___fladd@signs,f
  7360  0700  09E9               	comf	___fladd@grs,f
  7361  0701  0AE9               	incf	___fladd@grs,f
  7362  0702                     l2473:
  7363  0702  0869               	movf	___fladd@grs,w
  7364  0703  1D03               	btfss	3,2
  7365  0704  2F06               	goto	u3451
  7366  0705  2F07               	goto	u3450
  7367  0706                     u3451:
  7368  0706  2F24               	goto	l666
  7369  0707                     u3450:
  7370  0707                     l2475:
  7371  0707  3001               	movlw	1
  7372  0708  07D6               	addwf	___fladd@b,f
  7373  0709  3000               	movlw	0
  7374  070A  1803               	skipnc
  7375  070B  3001               	movlw	1
  7376  070C  07D7               	addwf	___fladd@b+1,f
  7377  070D  3000               	movlw	0
  7378  070E  1803               	skipnc
  7379  070F  3001               	movlw	1
  7380  0710  07D8               	addwf	___fladd@b+2,f
  7381  0711  3000               	movlw	0
  7382  0712  1803               	skipnc
  7383  0713  3001               	movlw	1
  7384  0714  07D9               	addwf	___fladd@b+3,f
  7385  0715  2F24               	goto	l666
  7386  0716                     l2477:
  7387  0716  085A               	movf	___fladd@a,w
  7388  0717  02D6               	subwf	___fladd@b,f
  7389  0718  085B               	movf	___fladd@a+1,w
  7390  0719  1C03               	skipc
  7391  071A  0F5B               	incfsz	___fladd@a+1,w
  7392  071B  02D7               	subwf	___fladd@b+1,f
  7393  071C  085C               	movf	___fladd@a+2,w
  7394  071D  1C03               	skipc
  7395  071E  0F5C               	incfsz	___fladd@a+2,w
  7396  071F  02D8               	subwf	___fladd@b+2,f
  7397  0720  085D               	movf	___fladd@a+3,w
  7398  0721  1C03               	skipc
  7399  0722  0F5D               	incfsz	___fladd@a+3,w
  7400  0723  02D9               	subwf	___fladd@b+3,f
  7401  0724                     l666:
  7402  0724  0859               	movf	___fladd@b+3,w
  7403  0725  0458               	iorwf	___fladd@b+2,w
  7404  0726  0457               	iorwf	___fladd@b+1,w
  7405  0727  0456               	iorwf	___fladd@b,w
  7406  0728  1D03               	skipz
  7407  0729  2F2B               	goto	u3461
  7408  072A  2F2C               	goto	u3460
  7409  072B                     u3461:
  7410  072B  2F58               	goto	l2499
  7411  072C                     u3460:
  7412  072C                     l2479:
  7413  072C  0869               	movf	___fladd@grs,w
  7414  072D  1D03               	btfss	3,2
  7415  072E  2F30               	goto	u3471
  7416  072F  2F31               	goto	u3470
  7417  0730                     u3471:
  7418  0730  2F58               	goto	l2499
  7419  0731                     u3470:
  7420  0731                     l2481:
  7421  0731  3000               	movlw	0
  7422  0732  00D9               	movwf	?___fladd+3
  7423  0733  3000               	movlw	0
  7424  0734  00D8               	movwf	?___fladd+2
  7425  0735  3000               	movlw	0
  7426  0736  00D7               	movwf	?___fladd+1
  7427  0737  3000               	movlw	0
  7428  0738  00D6               	movwf	?___fladd
  7429  0739  2FD6               	goto	l658
  7430  073A                     l2485:
  7431  073A  3001               	movlw	1
  7432  073B  00DE               	movwf	??___fladd
  7433  073C                     u3485:
  7434  073C  1003               	clrc
  7435  073D  0DD6               	rlf	___fladd@b,f
  7436  073E  0DD7               	rlf	___fladd@b+1,f
  7437  073F  0DD8               	rlf	___fladd@b+2,f
  7438  0740  0DD9               	rlf	___fladd@b+3,f
  7439  0741  0BDE               	decfsz	??___fladd,f
  7440  0742  2F3C               	goto	u3485
  7441  0743                     l2487:
  7442  0743  1FE9               	btfss	___fladd@grs,7
  7443  0744  2F46               	goto	u3491
  7444  0745  2F47               	goto	u3490
  7445  0746                     u3491:
  7446  0746  2F48               	goto	l670
  7447  0747                     u3490:
  7448  0747                     l2489:
  7449  0747  1456               	bsf	___fladd@b,0
  7450  0748                     l670:
  7451  0748  1C69               	btfss	___fladd@grs,0
  7452  0749  2F4B               	goto	u3501
  7453  074A  2F4C               	goto	u3500
  7454  074B                     u3501:
  7455  074B  2F4F               	goto	l2493
  7456  074C                     u3500:
  7457  074C                     l2491:
  7458  074C  1403               	setc
  7459  074D  0DE9               	rlf	___fladd@grs,f
  7460  074E  2F51               	goto	l2495
  7461  074F                     l2493:
  7462  074F  1003               	clrc
  7463  0750  0DE9               	rlf	___fladd@grs,f
  7464  0751                     l2495:
  7465  0751  0868               	movf	___fladd@bexp,w
  7466  0752  1903               	btfsc	3,2
  7467  0753  2F55               	goto	u3511
  7468  0754  2F56               	goto	u3510
  7469  0755                     u3511:
  7470  0755  2F58               	goto	l2499
  7471  0756                     u3510:
  7472  0756                     l2497:
  7473  0756  3001               	movlw	1
  7474  0757  02E8               	subwf	___fladd@bexp,f
  7475  0758                     l2499:
  7476  0758  1FD8               	btfss	___fladd@b+2,7
  7477  0759  2F5B               	goto	u3521
  7478  075A  2F5C               	goto	u3520
  7479  075B                     u3521:
  7480  075B  2F3A               	goto	l2485
  7481  075C                     u3520:
  7482  075C                     l2501:
  7483  075C  01E7               	clrf	___fladd@aexp
  7484  075D                     l2503:
  7485  075D  1FE9               	btfss	___fladd@grs,7
  7486  075E  2F60               	goto	u3531
  7487  075F  2F61               	goto	u3530
  7488  0760                     u3531:
  7489  0760  2F6F               	goto	l2511
  7490  0761                     u3530:
  7491  0761                     l2505:
  7492  0761  0869               	movf	___fladd@grs,w
  7493  0762  397F               	andlw	127
  7494  0763  1903               	btfsc	3,2
  7495  0764  2F66               	goto	u3541
  7496  0765  2F67               	goto	u3540
  7497  0766                     u3541:
  7498  0766  2F6A               	goto	l676
  7499  0767                     u3540:
  7500  0767                     l2507:
  7501  0767  01E7               	clrf	___fladd@aexp
  7502  0768  0AE7               	incf	___fladd@aexp,f
  7503  0769  2F6F               	goto	l2511
  7504  076A                     l676:
  7505  076A  1C56               	btfss	___fladd@b,0
  7506  076B  2F6D               	goto	u3551
  7507  076C  2F6E               	goto	u3550
  7508  076D                     u3551:
  7509  076D  2F6F               	goto	l2511
  7510  076E                     u3550:
  7511  076E  2F67               	goto	l2507
  7512  076F                     l2511:
  7513  076F  0867               	movf	___fladd@aexp,w
  7514  0770  1903               	btfsc	3,2
  7515  0771  2F73               	goto	u3561
  7516  0772  2F74               	goto	u3560
  7517  0773                     u3561:
  7518  0773  2FA8               	goto	l679
  7519  0774                     u3560:
  7520  0774                     l2513:
  7521  0774  3001               	movlw	1
  7522  0775  07D6               	addwf	___fladd@b,f
  7523  0776  3000               	movlw	0
  7524  0777  1803               	skipnc
  7525  0778  3001               	movlw	1
  7526  0779  07D7               	addwf	___fladd@b+1,f
  7527  077A  3000               	movlw	0
  7528  077B  1803               	skipnc
  7529  077C  3001               	movlw	1
  7530  077D  07D8               	addwf	___fladd@b+2,f
  7531  077E  3000               	movlw	0
  7532  077F  1803               	skipnc
  7533  0780  3001               	movlw	1
  7534  0781  07D9               	addwf	___fladd@b+3,f
  7535  0782                     l2515:
  7536  0782  1C59               	btfss	___fladd@b+3,0
  7537  0783  2F85               	goto	u3571
  7538  0784  2F86               	goto	u3570
  7539  0785                     u3571:
  7540  0785  2FA8               	goto	l679
  7541  0786                     u3570:
  7542  0786                     l2517:
  7543  0786  0856               	movf	___fladd@b,w
  7544  0787  00DE               	movwf	??___fladd
  7545  0788  0857               	movf	___fladd@b+1,w
  7546  0789  00DF               	movwf	??___fladd+1
  7547  078A  0858               	movf	___fladd@b+2,w
  7548  078B  00E0               	movwf	??___fladd+2
  7549  078C  0859               	movf	___fladd@b+3,w
  7550  078D  00E1               	movwf	??___fladd+3
  7551  078E  3001               	movlw	1
  7552  078F  00E2               	movwf	??___fladd+4
  7553  0790                     u3585:
  7554  0790  0D61               	rlf	??___fladd+3,w
  7555  0791  0CE1               	rrf	??___fladd+3,f
  7556  0792  0CE0               	rrf	??___fladd+2,f
  7557  0793  0CDF               	rrf	??___fladd+1,f
  7558  0794  0CDE               	rrf	??___fladd,f
  7559  0795                     u3580:
  7560  0795  0BE2               	decfsz	??___fladd+4,f
  7561  0796  2F90               	goto	u3585
  7562  0797  0861               	movf	??___fladd+3,w
  7563  0798  00D9               	movwf	___fladd@b+3
  7564  0799  0860               	movf	??___fladd+2,w
  7565  079A  00D8               	movwf	___fladd@b+2
  7566  079B  085F               	movf	??___fladd+1,w
  7567  079C  00D7               	movwf	___fladd@b+1
  7568  079D  085E               	movf	??___fladd,w
  7569  079E  00D6               	movwf	___fladd@b
  7570  079F  0A68               	incf	___fladd@bexp,w
  7571  07A0  1903               	btfsc	3,2
  7572  07A1  2FA3               	goto	u3591
  7573  07A2  2FA4               	goto	u3590
  7574  07A3                     u3591:
  7575  07A3  2FA8               	goto	l679
  7576  07A4                     u3590:
  7577  07A4                     l2519:
  7578  07A4  3001               	movlw	1
  7579  07A5  00DE               	movwf	??___fladd
  7580  07A6  085E               	movf	??___fladd,w
  7581  07A7  07E8               	addwf	___fladd@bexp,f
  7582  07A8                     l679:
  7583  07A8  0A68               	incf	___fladd@bexp,w
  7584  07A9  1903               	btfsc	3,2
  7585  07AA  2FAC               	goto	u3601
  7586  07AB  2FAD               	goto	u3600
  7587  07AC                     u3601:
  7588  07AC  2FB2               	goto	l2523
  7589  07AD                     u3600:
  7590  07AD                     l2521:
  7591  07AD  0868               	movf	___fladd@bexp,w
  7592  07AE  1D03               	btfss	3,2
  7593  07AF  2FB1               	goto	u3611
  7594  07B0  2FB2               	goto	u3610
  7595  07B1                     u3611:
  7596  07B1  2FC0               	goto	l2529
  7597  07B2                     u3610:
  7598  07B2                     l2523:
  7599  07B2  3000               	movlw	0
  7600  07B3  00D9               	movwf	___fladd@b+3
  7601  07B4  3000               	movlw	0
  7602  07B5  00D8               	movwf	___fladd@b+2
  7603  07B6  3000               	movlw	0
  7604  07B7  00D7               	movwf	___fladd@b+1
  7605  07B8  3000               	movlw	0
  7606  07B9  00D6               	movwf	___fladd@b
  7607  07BA                     l2525:
  7608  07BA  0868               	movf	___fladd@bexp,w
  7609  07BB  1D03               	btfss	3,2
  7610  07BC  2FBE               	goto	u3621
  7611  07BD  2FBF               	goto	u3620
  7612  07BE                     u3621:
  7613  07BE  2FC0               	goto	l2529
  7614  07BF                     u3620:
  7615  07BF                     l2527:
  7616  07BF  01E6               	clrf	___fladd@signs
  7617  07C0                     l2529:
  7618  07C0  1C68               	btfss	___fladd@bexp,0
  7619  07C1  2FC3               	goto	u3631
  7620  07C2  2FC4               	goto	u3630
  7621  07C3                     u3631:
  7622  07C3  2FC6               	goto	l2533
  7623  07C4                     u3630:
  7624  07C4                     l2531:
  7625  07C4  17D8               	bsf	___fladd@b+2,7
  7626  07C5  2FCA               	goto	l687
  7627  07C6                     l2533:
  7628  07C6  307F               	movlw	127
  7629  07C7  00DE               	movwf	??___fladd
  7630  07C8  085E               	movf	??___fladd,w
  7631  07C9  05D8               	andwf	___fladd@b+2,f
  7632  07CA                     l687:
  7633  07CA  0868               	movf	___fladd@bexp,w
  7634  07CB  00DE               	movwf	??___fladd
  7635  07CC  1003               	clrc
  7636  07CD  0C5E               	rrf	??___fladd,w
  7637  07CE  00DF               	movwf	??___fladd+1
  7638  07CF  085F               	movf	??___fladd+1,w
  7639  07D0  00D9               	movwf	___fladd@b+3
  7640  07D1                     l2535:
  7641  07D1  1FE6               	btfss	___fladd@signs,7
  7642  07D2  2FD4               	goto	u3641
  7643  07D3  2FD5               	goto	u3640
  7644  07D4                     u3641:
  7645  07D4  2FD6               	goto	l688
  7646  07D5                     u3640:
  7647  07D5                     l2537:
  7648  07D5  17D9               	bsf	___fladd@b+3,7
  7649  07D6                     l688:
  7650  07D6                     l658:
  7651  07D6  0008               	return
  7652  07D7                     __end_of___fladd:
  7653                           
  7654                           	psect	text20
  7655  1C45                     __ptext20:	
  7656 ;; *************** function ___flneg *****************
  7657 ;; Defined at:
  7658 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  f1              4    3[COMMON] unsigned char 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  4    3[COMMON] unsigned char 
  7665 ;; Registers used:
  7666 ;;		wreg
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7672 ;;      Params:         4       0       0       0       0
  7673 ;;      Locals:         0       0       0       0       0
  7674 ;;      Temps:          0       0       0       0       0
  7675 ;;      Totals:         4       0       0       0       0
  7676 ;;Total ram usage:        4 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; Hardware stack levels required when called: 1
  7679 ;; This function calls:
  7680 ;;		Nothing
  7681 ;; This function is called by:
  7682 ;;		_sprintf
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function ___flneg
  7688  1C45                     ___flneg:
  7689  1C45                     l2927:	
  7690                           ;incstack = 0
  7691                           ; Regs used in ___flneg: [wreg]
  7692                           
  7693  1C45  0876               	movf	___flneg@f1+3,w
  7694  1C46  0475               	iorwf	___flneg@f1+2,w
  7695  1C47  0474               	iorwf	___flneg@f1+1,w
  7696  1C48  0473               	iorwf	___flneg@f1,w
  7697  1C49  1903               	skipnz
  7698  1C4A  2C4C               	goto	u4771
  7699  1C4B  2C4D               	goto	u4770
  7700  1C4C                     u4771:
  7701  1C4C  2C4F               	goto	l2931
  7702  1C4D                     u4770:
  7703  1C4D                     l2929:
  7704  1C4D  3080               	movlw	128
  7705  1C4E  06F6               	xorwf	___flneg@f1+3,f
  7706  1C4F                     l2931:
  7707  1C4F                     l517:
  7708  1C4F  0008               	return
  7709  1C50                     __end_of___flneg:
  7710                           
  7711                           	psect	text21
  7712  10D3                     __ptext21:	
  7713 ;; *************** function ___flge *****************
  7714 ;; Defined at:
  7715 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  ff1             4    3[COMMON] unsigned char 
  7718 ;;  ff2             4    7[COMMON] unsigned char 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;		None
  7721 ;; Return value:  Size  Location     Type
  7722 ;;		None               void
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7730 ;;      Params:         8       0       0       0       0
  7731 ;;      Locals:         0       0       0       0       0
  7732 ;;      Temps:          0       4       0       0       0
  7733 ;;      Totals:         8       4       0       0       0
  7734 ;;Total ram usage:       12 bytes
  7735 ;; Hardware stack levels used: 1
  7736 ;; Hardware stack levels required when called: 1
  7737 ;; This function calls:
  7738 ;;		Nothing
  7739 ;; This function is called by:
  7740 ;;		_sprintf
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function ___flge
  7746  10D3                     ___flge:
  7747  10D3                     l2907:	
  7748                           ;incstack = 0
  7749                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7750                           
  7751  10D3  3000               	movlw	0
  7752  10D4  0573               	andwf	___flge@ff1,w
  7753  10D5  1283               	bcf	3,5	;RP0=0, select bank0
  7754  10D6  1303               	bcf	3,6	;RP1=0, select bank0
  7755  10D7  00A0               	movwf	??___flge
  7756  10D8  3000               	movlw	0
  7757  10D9  0574               	andwf	___flge@ff1+1,w
  7758  10DA  00A1               	movwf	??___flge+1
  7759  10DB  3080               	movlw	128
  7760  10DC  0575               	andwf	___flge@ff1+2,w
  7761  10DD  00A2               	movwf	??___flge+2
  7762  10DE  307F               	movlw	127
  7763  10DF  0576               	andwf	___flge@ff1+3,w
  7764  10E0  00A3               	movwf	??___flge+3
  7765  10E1  0823               	movf	??___flge+3,w
  7766  10E2  0422               	iorwf	??___flge+2,w
  7767  10E3  0421               	iorwf	??___flge+1,w
  7768  10E4  0420               	iorwf	??___flge,w
  7769  10E5  1D03               	skipz
  7770  10E6  28E8               	goto	u4701
  7771  10E7  28E9               	goto	u4700
  7772  10E8                     u4701:
  7773  10E8  28F1               	goto	l509
  7774  10E9                     u4700:
  7775  10E9                     l2909:
  7776  10E9  3000               	movlw	0
  7777  10EA  00F6               	movwf	___flge@ff1+3
  7778  10EB  3000               	movlw	0
  7779  10EC  00F5               	movwf	___flge@ff1+2
  7780  10ED  3000               	movlw	0
  7781  10EE  00F4               	movwf	___flge@ff1+1
  7782  10EF  3000               	movlw	0
  7783  10F0  00F3               	movwf	___flge@ff1
  7784  10F1                     l509:
  7785  10F1  3000               	movlw	0
  7786  10F2  0577               	andwf	___flge@ff2,w
  7787  10F3  00A0               	movwf	??___flge
  7788  10F4  3000               	movlw	0
  7789  10F5  0578               	andwf	___flge@ff2+1,w
  7790  10F6  00A1               	movwf	??___flge+1
  7791  10F7  3080               	movlw	128
  7792  10F8  0579               	andwf	___flge@ff2+2,w
  7793  10F9  00A2               	movwf	??___flge+2
  7794  10FA  307F               	movlw	127
  7795  10FB  057A               	andwf	___flge@ff2+3,w
  7796  10FC  00A3               	movwf	??___flge+3
  7797  10FD  0823               	movf	??___flge+3,w
  7798  10FE  0422               	iorwf	??___flge+2,w
  7799  10FF  0421               	iorwf	??___flge+1,w
  7800  1100  0420               	iorwf	??___flge,w
  7801  1101  1D03               	skipz
  7802  1102  2904               	goto	u4711
  7803  1103  2905               	goto	u4710
  7804  1104                     u4711:
  7805  1104  290D               	goto	l2913
  7806  1105                     u4710:
  7807  1105                     l2911:
  7808  1105  3000               	movlw	0
  7809  1106  00FA               	movwf	___flge@ff2+3
  7810  1107  3000               	movlw	0
  7811  1108  00F9               	movwf	___flge@ff2+2
  7812  1109  3000               	movlw	0
  7813  110A  00F8               	movwf	___flge@ff2+1
  7814  110B  3000               	movlw	0
  7815  110C  00F7               	movwf	___flge@ff2
  7816  110D                     l2913:
  7817  110D  1FF6               	btfss	___flge@ff1+3,7
  7818  110E  2910               	goto	u4721
  7819  110F  2911               	goto	u4720
  7820  1110                     u4721:
  7821  1110  2935               	goto	l2917
  7822  1111                     u4720:
  7823  1111                     l2915:
  7824  1111  3000               	movlw	0
  7825  1112  00A0               	movwf	??___flge
  7826  1113  3000               	movlw	0
  7827  1114  00A1               	movwf	??___flge+1
  7828  1115  3000               	movlw	0
  7829  1116  00A2               	movwf	??___flge+2
  7830  1117  3080               	movlw	128
  7831  1118  00A3               	movwf	??___flge+3
  7832  1119  0873               	movf	___flge@ff1,w
  7833  111A  02A0               	subwf	??___flge,f
  7834  111B  0874               	movf	___flge@ff1+1,w
  7835  111C  1C03               	skipc
  7836  111D  0F74               	incfsz	___flge@ff1+1,w
  7837  111E  2920               	goto	u4731
  7838  111F  2921               	goto	u4732
  7839  1120                     u4731:
  7840  1120  02A1               	subwf	??___flge+1,f
  7841  1121                     u4732:
  7842  1121  0875               	movf	___flge@ff1+2,w
  7843  1122  1C03               	skipc
  7844  1123  0F75               	incfsz	___flge@ff1+2,w
  7845  1124  2926               	goto	u4733
  7846  1125  2927               	goto	u4734
  7847  1126                     u4733:
  7848  1126  02A2               	subwf	??___flge+2,f
  7849  1127                     u4734:
  7850  1127  0876               	movf	___flge@ff1+3,w
  7851  1128  1C03               	skipc
  7852  1129  0F76               	incfsz	___flge@ff1+3,w
  7853  112A  292C               	goto	u4735
  7854  112B  292D               	goto	u4736
  7855  112C                     u4735:
  7856  112C  02A3               	subwf	??___flge+3,f
  7857  112D                     u4736:
  7858  112D  0823               	movf	??___flge+3,w
  7859  112E  00F6               	movwf	___flge@ff1+3
  7860  112F  0822               	movf	??___flge+2,w
  7861  1130  00F5               	movwf	___flge@ff1+2
  7862  1131  0821               	movf	??___flge+1,w
  7863  1132  00F4               	movwf	___flge@ff1+1
  7864  1133  0820               	movf	??___flge,w
  7865  1134  00F3               	movwf	___flge@ff1
  7866  1135                     l2917:
  7867  1135  1FFA               	btfss	___flge@ff2+3,7
  7868  1136  2938               	goto	u4741
  7869  1137  2939               	goto	u4740
  7870  1138                     u4741:
  7871  1138  295D               	goto	l512
  7872  1139                     u4740:
  7873  1139                     l2919:
  7874  1139  3000               	movlw	0
  7875  113A  00A0               	movwf	??___flge
  7876  113B  3000               	movlw	0
  7877  113C  00A1               	movwf	??___flge+1
  7878  113D  3000               	movlw	0
  7879  113E  00A2               	movwf	??___flge+2
  7880  113F  3080               	movlw	128
  7881  1140  00A3               	movwf	??___flge+3
  7882  1141  0877               	movf	___flge@ff2,w
  7883  1142  02A0               	subwf	??___flge,f
  7884  1143  0878               	movf	___flge@ff2+1,w
  7885  1144  1C03               	skipc
  7886  1145  0F78               	incfsz	___flge@ff2+1,w
  7887  1146  2948               	goto	u4751
  7888  1147  2949               	goto	u4752
  7889  1148                     u4751:
  7890  1148  02A1               	subwf	??___flge+1,f
  7891  1149                     u4752:
  7892  1149  0879               	movf	___flge@ff2+2,w
  7893  114A  1C03               	skipc
  7894  114B  0F79               	incfsz	___flge@ff2+2,w
  7895  114C  294E               	goto	u4753
  7896  114D  294F               	goto	u4754
  7897  114E                     u4753:
  7898  114E  02A2               	subwf	??___flge+2,f
  7899  114F                     u4754:
  7900  114F  087A               	movf	___flge@ff2+3,w
  7901  1150  1C03               	skipc
  7902  1151  0F7A               	incfsz	___flge@ff2+3,w
  7903  1152  2954               	goto	u4755
  7904  1153  2955               	goto	u4756
  7905  1154                     u4755:
  7906  1154  02A3               	subwf	??___flge+3,f
  7907  1155                     u4756:
  7908  1155  0823               	movf	??___flge+3,w
  7909  1156  00FA               	movwf	___flge@ff2+3
  7910  1157  0822               	movf	??___flge+2,w
  7911  1158  00F9               	movwf	___flge@ff2+2
  7912  1159  0821               	movf	??___flge+1,w
  7913  115A  00F8               	movwf	___flge@ff2+1
  7914  115B  0820               	movf	??___flge,w
  7915  115C  00F7               	movwf	___flge@ff2
  7916  115D                     l512:
  7917  115D  3080               	movlw	128
  7918  115E  06F6               	xorwf	___flge@ff1+3,f
  7919  115F  3080               	movlw	128
  7920  1160  06FA               	xorwf	___flge@ff2+3,f
  7921  1161  087A               	movf	___flge@ff2+3,w
  7922  1162  0276               	subwf	___flge@ff1+3,w
  7923  1163  1D03               	skipz
  7924  1164  296F               	goto	u4765
  7925  1165  0879               	movf	___flge@ff2+2,w
  7926  1166  0275               	subwf	___flge@ff1+2,w
  7927  1167  1D03               	skipz
  7928  1168  296F               	goto	u4765
  7929  1169  0878               	movf	___flge@ff2+1,w
  7930  116A  0274               	subwf	___flge@ff1+1,w
  7931  116B  1D03               	skipz
  7932  116C  296F               	goto	u4765
  7933  116D  0877               	movf	___flge@ff2,w
  7934  116E  0273               	subwf	___flge@ff1,w
  7935  116F                     u4765:
  7936  116F  1803               	skipnc
  7937  1170  2972               	goto	u4761
  7938  1171  2973               	goto	u4760
  7939  1172                     u4761:
  7940  1172  2975               	goto	l2923
  7941  1173                     u4760:
  7942  1173                     l2921:
  7943  1173  1003               	clrc
  7944  1174  2976               	goto	l513
  7945  1175                     l2923:
  7946  1175  1403               	setc
  7947  1176                     l513:
  7948  1176  0008               	return
  7949  1177                     __end_of___flge:
  7950                           
  7951                           	psect	text22
  7952  1D55                     __ptext22:	
  7953 ;; *************** function ___fleq *****************
  7954 ;; Defined at:
  7955 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  ff1             4    3[COMMON] unsigned char 
  7958 ;;  ff2             4    7[COMMON] unsigned char 
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;		None               void
  7963 ;; Registers used:
  7964 ;;		wreg, status,2, status,0
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7970 ;;      Params:         8       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0
  7972 ;;      Temps:          0       4       0       0       0
  7973 ;;      Totals:         8       4       0       0       0
  7974 ;;Total ram usage:       12 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; Hardware stack levels required when called: 1
  7977 ;; This function calls:
  7978 ;;		Nothing
  7979 ;; This function is called by:
  7980 ;;		_sprintf
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           
  7985                           ;psect for function ___fleq
  7986  1D55                     ___fleq:
  7987  1D55                     l2895:	
  7988                           ;incstack = 0
  7989                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7990                           
  7991  1D55  3000               	movlw	0
  7992  1D56  0573               	andwf	___fleq@ff1,w
  7993  1D57  1283               	bcf	3,5	;RP0=0, select bank0
  7994  1D58  1303               	bcf	3,6	;RP1=0, select bank0
  7995  1D59  00A0               	movwf	??___fleq
  7996  1D5A  3000               	movlw	0
  7997  1D5B  0574               	andwf	___fleq@ff1+1,w
  7998  1D5C  00A1               	movwf	??___fleq+1
  7999  1D5D  3080               	movlw	128
  8000  1D5E  0575               	andwf	___fleq@ff1+2,w
  8001  1D5F  00A2               	movwf	??___fleq+2
  8002  1D60  307F               	movlw	127
  8003  1D61  0576               	andwf	___fleq@ff1+3,w
  8004  1D62  00A3               	movwf	??___fleq+3
  8005  1D63  0823               	movf	??___fleq+3,w
  8006  1D64  0422               	iorwf	??___fleq+2,w
  8007  1D65  0421               	iorwf	??___fleq+1,w
  8008  1D66  0420               	iorwf	??___fleq,w
  8009  1D67  1D03               	skipz
  8010  1D68  2D6A               	goto	u4671
  8011  1D69  2D6B               	goto	u4670
  8012  1D6A                     u4671:
  8013  1D6A  2D73               	goto	l504
  8014  1D6B                     u4670:
  8015  1D6B                     l2897:
  8016  1D6B  3000               	movlw	0
  8017  1D6C  00F6               	movwf	___fleq@ff1+3
  8018  1D6D  3000               	movlw	0
  8019  1D6E  00F5               	movwf	___fleq@ff1+2
  8020  1D6F  3000               	movlw	0
  8021  1D70  00F4               	movwf	___fleq@ff1+1
  8022  1D71  3000               	movlw	0
  8023  1D72  00F3               	movwf	___fleq@ff1
  8024  1D73                     l504:
  8025  1D73  3000               	movlw	0
  8026  1D74  0577               	andwf	___fleq@ff2,w
  8027  1D75  00A0               	movwf	??___fleq
  8028  1D76  3000               	movlw	0
  8029  1D77  0578               	andwf	___fleq@ff2+1,w
  8030  1D78  00A1               	movwf	??___fleq+1
  8031  1D79  3080               	movlw	128
  8032  1D7A  0579               	andwf	___fleq@ff2+2,w
  8033  1D7B  00A2               	movwf	??___fleq+2
  8034  1D7C  307F               	movlw	127
  8035  1D7D  057A               	andwf	___fleq@ff2+3,w
  8036  1D7E  00A3               	movwf	??___fleq+3
  8037  1D7F  0823               	movf	??___fleq+3,w
  8038  1D80  0422               	iorwf	??___fleq+2,w
  8039  1D81  0421               	iorwf	??___fleq+1,w
  8040  1D82  0420               	iorwf	??___fleq,w
  8041  1D83  1D03               	skipz
  8042  1D84  2D86               	goto	u4681
  8043  1D85  2D87               	goto	u4680
  8044  1D86                     u4681:
  8045  1D86  2D8F               	goto	l505
  8046  1D87                     u4680:
  8047  1D87                     l2899:
  8048  1D87  3000               	movlw	0
  8049  1D88  00FA               	movwf	___fleq@ff2+3
  8050  1D89  3000               	movlw	0
  8051  1D8A  00F9               	movwf	___fleq@ff2+2
  8052  1D8B  3000               	movlw	0
  8053  1D8C  00F8               	movwf	___fleq@ff2+1
  8054  1D8D  3000               	movlw	0
  8055  1D8E  00F7               	movwf	___fleq@ff2
  8056  1D8F                     l505:
  8057  1D8F  087A               	movf	___fleq@ff2+3,w
  8058  1D90  0676               	xorwf	___fleq@ff1+3,w
  8059  1D91  1D03               	skipz
  8060  1D92  2D9D               	goto	u4695
  8061  1D93  0879               	movf	___fleq@ff2+2,w
  8062  1D94  0675               	xorwf	___fleq@ff1+2,w
  8063  1D95  1D03               	skipz
  8064  1D96  2D9D               	goto	u4695
  8065  1D97  0878               	movf	___fleq@ff2+1,w
  8066  1D98  0674               	xorwf	___fleq@ff1+1,w
  8067  1D99  1D03               	skipz
  8068  1D9A  2D9D               	goto	u4695
  8069  1D9B  0877               	movf	___fleq@ff2,w
  8070  1D9C  0673               	xorwf	___fleq@ff1,w
  8071  1D9D                     u4695:
  8072  1D9D  1903               	skipnz
  8073  1D9E  2DA0               	goto	u4691
  8074  1D9F  2DA1               	goto	u4690
  8075  1DA0                     u4691:
  8076  1DA0  2DA3               	goto	l2903
  8077  1DA1                     u4690:
  8078  1DA1                     l2901:
  8079  1DA1  1003               	clrc
  8080  1DA2  2DA4               	goto	l506
  8081  1DA3                     l2903:
  8082  1DA3  1403               	setc
  8083  1DA4                     l506:
  8084  1DA4  0008               	return
  8085  1DA5                     __end_of___fleq:
  8086                           
  8087                           	psect	text23
  8088  10A2                     __ptext23:	
  8089 ;; *************** function _setup *****************
  8090 ;; Defined at:
  8091 ;;		line 107 in file "Lab05.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;		None
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8105 ;;      Params:         0       0       0       0       0
  8106 ;;      Locals:         0       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0
  8108 ;;      Totals:         0       0       0       0       0
  8109 ;;Total ram usage:        0 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; Hardware stack levels required when called: 1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_main
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _setup
  8121  10A2                     _setup:
  8122  10A2                     l3041:	
  8123                           ;incstack = 0
  8124                           ; Regs used in _setup: [wreg+status,2]
  8125                           
  8126                           
  8127                           ;Lab05.c: 109:     ANSEL = 0x00;
  8128  10A2  1683               	bsf	3,5	;RP0=1, select bank3
  8129  10A3  1703               	bsf	3,6	;RP1=1, select bank3
  8130  10A4  0188               	clrf	8	;volatile
  8131                           
  8132                           ;Lab05.c: 110:     ANSELH = 0x00;
  8133  10A5  0189               	clrf	9	;volatile
  8134  10A6                     l3043:
  8135                           
  8136                           ;Lab05.c: 113:     TRISB = 0x03;
  8137  10A6  3003               	movlw	3
  8138  10A7  1683               	bsf	3,5	;RP0=1, select bank1
  8139  10A8  1303               	bcf	3,6	;RP1=0, select bank1
  8140  10A9  0086               	movwf	6	;volatile
  8141  10AA                     l3045:
  8142                           
  8143                           ;Lab05.c: 114:     TRISD = 0x00;
  8144  10AA  0188               	clrf	8	;volatile
  8145  10AB                     l3047:
  8146                           
  8147                           ;Lab05.c: 115:     TRISA = 0x00;
  8148  10AB  0185               	clrf	5	;volatile
  8149  10AC                     l3049:
  8150                           
  8151                           ;Lab05.c: 116:     TRISCbits.TRISC7= 1;
  8152  10AC  1787               	bsf	7,7	;volatile
  8153  10AD                     l3051:
  8154                           
  8155                           ;Lab05.c: 119:     OSCCONbits.IRCF2 = 1;
  8156  10AD  170F               	bsf	15,6	;volatile
  8157  10AE                     l3053:
  8158                           
  8159                           ;Lab05.c: 120:     OSCCONbits.IRCF1 = 1;
  8160  10AE  168F               	bsf	15,5	;volatile
  8161  10AF                     l3055:
  8162                           
  8163                           ;Lab05.c: 121:     OSCCONbits.IRCF0 = 1;
  8164  10AF  160F               	bsf	15,4	;volatile
  8165  10B0                     l3057:
  8166                           
  8167                           ;Lab05.c: 122:     OSCCONbits.SCS = 1;
  8168  10B0  140F               	bsf	15,0	;volatile
  8169  10B1                     l3059:
  8170                           
  8171                           ;Lab05.c: 125:     OPTION_REGbits.nRBPU = 0;
  8172  10B1  1381               	bcf	1,7	;volatile
  8173  10B2                     l3061:
  8174                           
  8175                           ;Lab05.c: 126:     WPUBbits.WPUB0 = 1;
  8176  10B2  1415               	bsf	21,0	;volatile
  8177  10B3                     l3063:
  8178                           
  8179                           ;Lab05.c: 127:     WPUBbits.WPUB1 = 1;
  8180  10B3  1495               	bsf	21,1	;volatile
  8181  10B4                     l3065:
  8182                           
  8183                           ;Lab05.c: 128:     IOCBbits.IOCB0 = 1;
  8184  10B4  1416               	bsf	22,0	;volatile
  8185  10B5                     l3067:
  8186                           
  8187                           ;Lab05.c: 129:     IOCBbits.IOCB1 = 1;
  8188  10B5  1496               	bsf	22,1	;volatile
  8189  10B6                     l3069:
  8190                           
  8191                           ;Lab05.c: 132:     TXSTAbits.SYNC = 0;
  8192  10B6  1218               	bcf	24,4	;volatile
  8193  10B7                     l3071:
  8194                           
  8195                           ;Lab05.c: 133:     TXSTAbits.BRGH = 0;
  8196  10B7  1118               	bcf	24,2	;volatile
  8197  10B8                     l3073:
  8198                           
  8199                           ;Lab05.c: 134:     BAUDCTLbits.BRG16 = 1;
  8200  10B8  1683               	bsf	3,5	;RP0=1, select bank3
  8201  10B9  1703               	bsf	3,6	;RP1=1, select bank3
  8202  10BA  1587               	bsf	7,3	;volatile
  8203  10BB                     l3075:
  8204                           
  8205                           ;Lab05.c: 135:     SPBRG = 51;
  8206  10BB  3033               	movlw	51
  8207  10BC  1683               	bsf	3,5	;RP0=1, select bank1
  8208  10BD  1303               	bcf	3,6	;RP1=0, select bank1
  8209  10BE  0099               	movwf	25	;volatile
  8210                           
  8211                           ;Lab05.c: 136:     SPBRGH = 0;
  8212  10BF  019A               	clrf	26	;volatile
  8213  10C0                     l3077:
  8214                           
  8215                           ;Lab05.c: 137:     RCSTAbits.SPEN = 1;
  8216  10C0  1283               	bcf	3,5	;RP0=0, select bank0
  8217  10C1  1303               	bcf	3,6	;RP1=0, select bank0
  8218  10C2  1798               	bsf	24,7	;volatile
  8219  10C3                     l3079:
  8220                           
  8221                           ;Lab05.c: 138:     RCSTAbits.RX9 = 0;
  8222  10C3  1318               	bcf	24,6	;volatile
  8223  10C4                     l3081:
  8224                           
  8225                           ;Lab05.c: 139:     RCSTAbits.CREN = 1;
  8226  10C4  1618               	bsf	24,4	;volatile
  8227  10C5                     l3083:
  8228                           
  8229                           ;Lab05.c: 140:     TXSTAbits.TXEN = 1;
  8230  10C5  1683               	bsf	3,5	;RP0=1, select bank1
  8231  10C6  1303               	bcf	3,6	;RP1=0, select bank1
  8232  10C7  1698               	bsf	24,5	;volatile
  8233  10C8                     l3085:
  8234                           
  8235                           ;Lab05.c: 143:     INTCONbits.GIE = 1;
  8236  10C8  178B               	bsf	11,7	;volatile
  8237  10C9                     l3087:
  8238                           
  8239                           ;Lab05.c: 144:     INTCONbits.PEIE = 1;
  8240  10C9  170B               	bsf	11,6	;volatile
  8241  10CA                     l3089:
  8242                           
  8243                           ;Lab05.c: 145:     INTCONbits.RBIE = 1;
  8244  10CA  158B               	bsf	11,3	;volatile
  8245  10CB                     l3091:
  8246                           
  8247                           ;Lab05.c: 146:     INTCONbits.RBIF = 0;
  8248  10CB  100B               	bcf	11,0	;volatile
  8249  10CC                     l3093:
  8250                           
  8251                           ;Lab05.c: 147:     PIR1bits.RCIF = 0;
  8252  10CC  1283               	bcf	3,5	;RP0=0, select bank0
  8253  10CD  1303               	bcf	3,6	;RP1=0, select bank0
  8254  10CE  128C               	bcf	12,5	;volatile
  8255  10CF                     l3095:
  8256                           
  8257                           ;Lab05.c: 148:     PIE1bits.RCIE = 1;
  8258  10CF  1683               	bsf	3,5	;RP0=1, select bank1
  8259  10D0  1303               	bcf	3,6	;RP1=0, select bank1
  8260  10D1  168C               	bsf	12,5	;volatile
  8261  10D2                     l86:
  8262  10D2  0008               	return
  8263  10D3                     __end_of_setup:
  8264                           
  8265                           	psect	text24
  8266  1C87                     __ptext24:	
  8267 ;; *************** function _send_str *****************
  8268 ;; Defined at:
  8269 ;;		line 27 in file "USART.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  st              1    wreg     PTR unsigned char 
  8272 ;;		 -> s(30), 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  st              1    7[COMMON] PTR unsigned char 
  8275 ;;		 -> s(30), 
  8276 ;;  i               2    5[COMMON] int 
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8286 ;;      Params:         0       0       0       0       0
  8287 ;;      Locals:         3       0       0       0       0
  8288 ;;      Temps:          1       0       0       0       0
  8289 ;;      Totals:         4       0       0       0       0
  8290 ;;Total ram usage:        4 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 2
  8293 ;; This function calls:
  8294 ;;		_send_char
  8295 ;; This function is called by:
  8296 ;;		_main
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _send_str
  8302  1C87                     _send_str:
  8303                           
  8304                           ;incstack = 0
  8305                           ; Regs used in _send_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8306                           ;send_str@st stored from wreg
  8307  1C87  00F7               	movwf	send_str@st
  8308  1C88                     l3403:
  8309                           
  8310                           ;USART.c: 28:     int i = 0;
  8311  1C88  01F5               	clrf	send_str@i
  8312  1C89  01F6               	clrf	send_str@i+1
  8313                           
  8314                           ;USART.c: 29:     while (st[i] != 0){
  8315  1C8A  2CA1               	goto	l3411
  8316  1C8B                     l3405:
  8317                           
  8318                           ;USART.c: 30:         send_char(st[i]);
  8319  1C8B  0875               	movf	send_str@i,w
  8320  1C8C  0777               	addwf	send_str@st,w
  8321  1C8D  00F4               	movwf	??_send_str
  8322  1C8E  0874               	movf	??_send_str,w
  8323  1C8F  0084               	movwf	4
  8324  1C90  0800               	movf	0,w
  8325  1C91  160A  158A  243B  160A  158A  	fcall	_send_char
  8326  1C96                     l3407:
  8327                           
  8328                           ;USART.c: 31:         i++;
  8329  1C96  3001               	movlw	1
  8330  1C97  07F5               	addwf	send_str@i,f
  8331  1C98  1803               	skipnc
  8332  1C99  0AF6               	incf	send_str@i+1,f
  8333  1C9A  3000               	movlw	0
  8334  1C9B  07F6               	addwf	send_str@i+1,f
  8335  1C9C                     l3409:
  8336                           
  8337                           ;USART.c: 32:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  8338  1C9C  3013               	movlw	19
  8339  1C9D  00F4               	movwf	??_send_str
  8340  1C9E                     u5687:
  8341  1C9E  0BF4               	decfsz	??_send_str,f
  8342  1C9F  2C9E               	goto	u5687
  8343  1CA0  2CA1               	nop2
  8344  1CA1                     l3411:
  8345                           
  8346                           ;USART.c: 29:     while (st[i] != 0){
  8347  1CA1  0875               	movf	send_str@i,w
  8348  1CA2  0777               	addwf	send_str@st,w
  8349  1CA3  00F4               	movwf	??_send_str
  8350  1CA4  0874               	movf	??_send_str,w
  8351  1CA5  0084               	movwf	4
  8352  1CA6  1383               	bcf	3,7	;select IRP bank0
  8353  1CA7  0800               	movf	0,w
  8354  1CA8  1D03               	btfss	3,2
  8355  1CA9  2CAB               	goto	u5621
  8356  1CAA  2CAC               	goto	u5620
  8357  1CAB                     u5621:
  8358  1CAB  2C8B               	goto	l3405
  8359  1CAC                     u5620:
  8360  1CAC                     l104:
  8361  1CAC  0008               	return
  8362  1CAD                     __end_of_send_str:
  8363                           
  8364                           	psect	text25
  8365  1C3B                     __ptext25:	
  8366 ;; *************** function _send_char *****************
  8367 ;; Defined at:
  8368 ;;		line 22 in file "USART.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  dato            1    wreg     unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  dato            1    3[COMMON] unsigned char 
  8373 ;; Return value:  Size  Location     Type
  8374 ;;                  1    wreg      void 
  8375 ;; Registers used:
  8376 ;;		wreg
  8377 ;; Tracked objects:
  8378 ;;		On entry : 0/0
  8379 ;;		On exit  : 0/0
  8380 ;;		Unchanged: 0/0
  8381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8382 ;;      Params:         0       0       0       0       0
  8383 ;;      Locals:         1       0       0       0       0
  8384 ;;      Temps:          0       0       0       0       0
  8385 ;;      Totals:         1       0       0       0       0
  8386 ;;Total ram usage:        1 bytes
  8387 ;; Hardware stack levels used: 1
  8388 ;; Hardware stack levels required when called: 1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_send_str
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           
  8397                           ;psect for function _send_char
  8398  1C3B                     _send_char:
  8399                           
  8400                           ;incstack = 0
  8401                           ; Regs used in _send_char: [wreg]
  8402                           ;send_char@dato stored from wreg
  8403  1C3B  00F3               	movwf	send_char@dato
  8404  1C3C                     l2679:
  8405  1C3C                     l95:	
  8406                           ;USART.c: 23:     while(!TXIF);
  8407                           
  8408  1C3C  1283               	bcf	3,5	;RP0=0, select bank0
  8409  1C3D  1303               	bcf	3,6	;RP1=0, select bank0
  8410  1C3E  1E0C               	btfss	12,4	;volatile
  8411  1C3F  2C41               	goto	u4021
  8412  1C40  2C42               	goto	u4020
  8413  1C41                     u4021:
  8414  1C41  2C3C               	goto	l95
  8415  1C42                     u4020:
  8416  1C42                     l2681:
  8417                           
  8418                           ;USART.c: 24:     TXREG = dato;
  8419  1C42  0873               	movf	send_char@dato,w
  8420  1C43  0099               	movwf	25	;volatile
  8421  1C44                     l98:
  8422  1C44  0008               	return
  8423  1C45                     __end_of_send_char:
  8424                           
  8425                           	psect	text26
  8426  1CAD                     __ptext26:	
  8427 ;; *************** function _isr *****************
  8428 ;; Defined at:
  8429 ;;		line 71 in file "Lab05.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;		None
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8443 ;;      Params:         0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0
  8445 ;;      Temps:          3       0       0       0       0
  8446 ;;      Totals:         3       0       0       0       0
  8447 ;;Total ram usage:        3 bytes
  8448 ;; Hardware stack levels used: 1
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		Interrupt level 1
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           
  8457                           ;psect for function _isr
  8458  1CAD                     _isr:
  8459  1CAD                     i1l3413:
  8460                           
  8461                           ;Lab05.c: 72:     if (RBIF == 1){
  8462  1CAD  1C0B               	btfss	11,0	;volatile
  8463  1CAE  2CB0               	goto	u563_21
  8464  1CAF  2CB1               	goto	u563_20
  8465  1CB0                     u563_21:
  8466  1CB0  2CC2               	goto	i1l3425
  8467  1CB1                     u563_20:
  8468  1CB1                     i1l3415:
  8469                           
  8470                           ;Lab05.c: 73:         if (PORTBbits.RB0 == 0){
  8471  1CB1  1283               	bcf	3,5	;RP0=0, select bank0
  8472  1CB2  1303               	bcf	3,6	;RP1=0, select bank0
  8473  1CB3  1806               	btfsc	6,0	;volatile
  8474  1CB4  2CB6               	goto	u564_21
  8475  1CB5  2CB7               	goto	u564_20
  8476  1CB6                     u564_21:
  8477  1CB6  2CBB               	goto	i1l3419
  8478  1CB7                     u564_20:
  8479  1CB7                     i1l3417:
  8480                           
  8481                           ;Lab05.c: 74:             dig1++;
  8482  1CB7  3001               	movlw	1
  8483  1CB8  00F0               	movwf	??_isr
  8484  1CB9  0870               	movf	??_isr,w
  8485  1CBA  07EF               	addwf	_dig1,f
  8486  1CBB                     i1l3419:
  8487                           
  8488                           ;Lab05.c: 76:         if (PORTBbits.RB1 == 0){
  8489  1CBB  1886               	btfsc	6,1	;volatile
  8490  1CBC  2CBE               	goto	u565_21
  8491  1CBD  2CBF               	goto	u565_20
  8492  1CBE                     u565_21:
  8493  1CBE  2CC1               	goto	i1l3423
  8494  1CBF                     u565_20:
  8495  1CBF                     i1l3421:
  8496                           
  8497                           ;Lab05.c: 77:            dig1--;
  8498  1CBF  3001               	movlw	1
  8499  1CC0  02EF               	subwf	_dig1,f
  8500  1CC1                     i1l3423:
  8501                           
  8502                           ;Lab05.c: 79:         INTCONbits.RBIF = 0;
  8503  1CC1  100B               	bcf	11,0	;volatile
  8504  1CC2                     i1l3425:
  8505                           
  8506                           ;Lab05.c: 81:     if(PIR1bits.RCIF){
  8507  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  8508  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  8509  1CC4  1E8C               	btfss	12,5	;volatile
  8510  1CC5  2CC7               	goto	u566_21
  8511  1CC6  2CC8               	goto	u566_20
  8512  1CC7                     u566_21:
  8513  1CC7  2CCE               	goto	i1l75
  8514  1CC8                     u566_20:
  8515  1CC8                     i1l3427:
  8516                           
  8517                           ;Lab05.c: 82:         dig2 = RCREG;
  8518  1CC8  081A               	movf	26,w	;volatile
  8519  1CC9  00F0               	movwf	??_isr
  8520  1CCA  0870               	movf	??_isr,w
  8521  1CCB  1683               	bsf	3,5	;RP0=1, select bank1
  8522  1CCC  1303               	bcf	3,6	;RP1=0, select bank1
  8523  1CCD  00CC               	movwf	_dig2^(0+128)
  8524  1CCE                     i1l75:
  8525  1CCE  0872               	movf	??_isr+2,w
  8526  1CCF  008A               	movwf	10
  8527  1CD0  0E71               	swapf	??_isr+1,w
  8528  1CD1  0083               	movwf	3
  8529  1CD2  0EFE               	swapf	btemp,f
  8530  1CD3  0E7E               	swapf	btemp,w
  8531  1CD4  0009               	retfie
  8532  1CD5                     __end_of_isr:
  8533  007E                     btemp	set	126	;btemp
  8534  007E                     wtemp0	set	126
  8535                           
  8536                           	psect	intentry
  8537  0004                     __pintentry:	
  8538                           ;incstack = 0
  8539                           ; Regs used in _isr: [wreg+status,2+status,0]
  8540                           
  8541  0004                     interrupt_function:
  8542  007E                     saved_w	set	btemp
  8543  0004  00FE               	movwf	btemp
  8544  0005  0E03               	swapf	3,w
  8545  0006  00F1               	movwf	??_isr+1
  8546  0007  080A               	movf	10,w
  8547  0008  00F2               	movwf	??_isr+2
  8548  0009  160A  158A  2CAD   	ljmp	_isr
  8549                           
  8550                           	psect	config
  8551                           
  8552                           ;Config register CONFIG1 @ 0x2007
  8553                           ;	Oscillator Selection bits
  8554                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8555                           ;	Watchdog Timer Enable bit
  8556                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8557                           ;	Power-up Timer Enable bit
  8558                           ;	PWRTE = OFF, PWRT disabled
  8559                           ;	RE3/MCLR pin function select bit
  8560                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8561                           ;	Code Protection bit
  8562                           ;	CP = OFF, Program memory code protection is disabled
  8563                           ;	Data Code Protection bit
  8564                           ;	CPD = OFF, Data memory code protection is disabled
  8565                           ;	Brown Out Reset Selection bits
  8566                           ;	BOREN = OFF, BOR disabled
  8567                           ;	Internal External Switchover bit
  8568                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8569                           ;	Fail-Safe Clock Monitor Enabled bit
  8570                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8571                           ;	Low Voltage Programming Enable bit
  8572                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  8573                           ;	In-Circuit Debugger Mode bit
  8574                           ;	DEBUG = 0x1, unprogrammed default
  8575  2007                     	org	8199
  8576  2007  30D4               	dw	12500
  8577                           
  8578                           ;Config register CONFIG2 @ 0x2008
  8579                           ;	Brown-out Reset Selection bit
  8580                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8581                           ;	Flash Program Memory Self Write Enable bits
  8582                           ;	WRT = OFF, Write protection off
  8583  2008                     	org	8200
  8584  2008  3FFF               	dw	16383
  8585                           
  8586                           	psect	text1_split_1
  8587  001F                     u5210:
  8588  001F                     l3199:
  8589  001F  1683               	bsf	3,5	;RP0=1, select bank1
  8590  0020  1303               	bcf	3,6	;RP1=0, select bank1
  8591  0021  0843               	movf	(sprintf@fval+3)^(0+128),w
  8592  0022  00F6               	movwf	___fleq@ff1+3
  8593  0023  0842               	movf	(sprintf@fval+2)^(0+128),w
  8594  0024  00F5               	movwf	___fleq@ff1+2
  8595  0025  0841               	movf	(sprintf@fval+1)^(0+128),w
  8596  0026  00F4               	movwf	___fleq@ff1+1
  8597  0027  0840               	movf	sprintf@fval^(0+128),w
  8598  0028  00F3               	movwf	___fleq@ff1
  8599  0029  3000               	movlw	0
  8600  002A  00FA               	movwf	___fleq@ff2+3
  8601  002B  3000               	movlw	0
  8602  002C  00F9               	movwf	___fleq@ff2+2
  8603  002D  3000               	movlw	0
  8604  002E  00F8               	movwf	___fleq@ff2+1
  8605  002F  3000               	movlw	0
  8606  0030  00F7               	movwf	___fleq@ff2
  8607  0031  160A  158A  2555  120A  118A  	fcall	___fleq
  8608  0036  1803               	btfsc	3,0
  8609  0037  2839               	goto	u5221
  8610  0038  283A               	goto	u5220
  8611  0039                     u5221:
  8612  0039  28E2               	goto	l3219
  8613  003A                     u5220:
  8614  003A                     l3201:
  8615  003A  1683               	bsf	3,5	;RP0=1, select bank1
  8616  003B  1303               	bcf	3,6	;RP1=0, select bank1
  8617  003C  0843               	movf	(sprintf@fval+3)^(0+128),w
  8618  003D  1283               	bcf	3,5	;RP0=0, select bank0
  8619  003E  1303               	bcf	3,6	;RP1=0, select bank0
  8620  003F  00D8               	movwf	___fltol@f1+3
  8621  0040  1683               	bsf	3,5	;RP0=1, select bank1
  8622  0041  1303               	bcf	3,6	;RP1=0, select bank1
  8623  0042  0842               	movf	(sprintf@fval+2)^(0+128),w
  8624  0043  1283               	bcf	3,5	;RP0=0, select bank0
  8625  0044  1303               	bcf	3,6	;RP1=0, select bank0
  8626  0045  00D7               	movwf	___fltol@f1+2
  8627  0046  1683               	bsf	3,5	;RP0=1, select bank1
  8628  0047  1303               	bcf	3,6	;RP1=0, select bank1
  8629  0048  0841               	movf	(sprintf@fval+1)^(0+128),w
  8630  0049  1283               	bcf	3,5	;RP0=0, select bank0
  8631  004A  1303               	bcf	3,6	;RP1=0, select bank0
  8632  004B  00D6               	movwf	___fltol@f1+1
  8633  004C  1683               	bsf	3,5	;RP0=1, select bank1
  8634  004D  1303               	bcf	3,6	;RP1=0, select bank1
  8635  004E  0840               	movf	sprintf@fval^(0+128),w
  8636  004F  1283               	bcf	3,5	;RP0=0, select bank0
  8637  0050  1303               	bcf	3,6	;RP1=0, select bank0
  8638  0051  00D5               	movwf	___fltol@f1
  8639  0052  120A  158A  2002  120A  118A  	fcall	___fltol
  8640  0057  1283               	bcf	3,5	;RP0=0, select bank0
  8641  0058  1303               	bcf	3,6	;RP1=0, select bank0
  8642  0059  0858               	movf	?___fltol+3,w
  8643  005A  0457               	iorwf	?___fltol+2,w
  8644  005B  0456               	iorwf	?___fltol+1,w
  8645  005C  0455               	iorwf	?___fltol,w
  8646  005D  1D03               	skipz
  8647  005E  2860               	goto	u5231
  8648  005F  2861               	goto	u5230
  8649  0060                     u5231:
  8650  0060  28E2               	goto	l3219
  8651  0061                     u5230:
  8652  0061                     l3203:
  8653  0061  1683               	bsf	3,5	;RP0=1, select bank1
  8654  0062  1303               	bcf	3,6	;RP1=0, select bank1
  8655  0063  083B               	movf	(sprintf@eexp+1)^(0+128),w
  8656  0064  3A80               	xorlw	128
  8657  0065  00FF               	movwf	btemp+1
  8658  0066  3080               	movlw	128
  8659  0067  027F               	subwf	btemp+1,w
  8660  0068  1D03               	skipz
  8661  0069  286C               	goto	u5245
  8662  006A  3002               	movlw	2
  8663  006B  023A               	subwf	sprintf@eexp^(0+128),w
  8664  006C                     u5245:
  8665  006C  1C03               	skipc
  8666  006D  286F               	goto	u5241
  8667  006E  2870               	goto	u5240
  8668  006F                     u5241:
  8669  006F  28E2               	goto	l3219
  8670  0070                     u5240:
  8671  0070                     l3205:
  8672                           
  8673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  8674  0070  1683               	bsf	3,5	;RP0=1, select bank1
  8675  0071  1303               	bcf	3,6	;RP1=0, select bank1
  8676  0072  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8677  0073  00F6               	movwf	___flge@ff1+3
  8678  0074  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8679  0075  00F5               	movwf	___flge@ff1+2
  8680  0076  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8681  0077  00F4               	movwf	___flge@ff1+1
  8682  0078  0836               	movf	sprintf@tmpval^(0+128),w
  8683  0079  00F3               	movwf	___flge@ff1
  8684  007A  3040               	movlw	64
  8685  007B  00FA               	movwf	___flge@ff2+3
  8686  007C  3089               	movlw	137
  8687  007D  00F9               	movwf	___flge@ff2+2
  8688  007E  3070               	movlw	112
  8689  007F  00F8               	movwf	___flge@ff2+1
  8690  0080  305F               	movlw	95
  8691  0081  00F7               	movwf	___flge@ff2
  8692  0082  160A  118A  20D3  120A  118A  	fcall	___flge
  8693  0087  1803               	btfsc	3,0
  8694  0088  288A               	goto	u5251
  8695  0089  288B               	goto	u5250
  8696  008A                     u5251:
  8697  008A  2894               	goto	l3209
  8698  008B                     u5250:
  8699  008B                     l3207:
  8700                           
  8701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  8702  008B  30F7               	movlw	247
  8703  008C  1683               	bsf	3,5	;RP0=1, select bank1
  8704  008D  1303               	bcf	3,6	;RP1=0, select bank1
  8705  008E  07BA               	addwf	sprintf@eexp^(0+128),f
  8706  008F  1803               	skipnc
  8707  0090  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8708  0091  30FF               	movlw	255
  8709  0092  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8710                           
  8711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  8712  0093  289C               	goto	l3211
  8713  0094                     l3209:
  8714                           
  8715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  8716  0094  30F8               	movlw	248
  8717  0095  1683               	bsf	3,5	;RP0=1, select bank1
  8718  0096  1303               	bcf	3,6	;RP1=0, select bank1
  8719  0097  07BA               	addwf	sprintf@eexp^(0+128),f
  8720  0098  1803               	skipnc
  8721  0099  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  8722  009A  30FF               	movlw	255
  8723  009B  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  8724  009C                     l3211:
  8725                           
  8726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  8727  009C  083A               	movf	sprintf@eexp^(0+128),w
  8728  009D  120A  158A  249D  120A  118A  	fcall	_scale
  8729  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  8730  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  8731  00A4  0845               	movf	?_scale+3,w
  8732  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  8733  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  8734  00A7  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  8735  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  8736  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  8737  00AA  0844               	movf	?_scale+2,w
  8738  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  8739  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  8740  00AD  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  8741  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  8742  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  8743  00B0  0843               	movf	?_scale+1,w
  8744  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  8745  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  8746  00B3  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  8747  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  8748  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  8749  00B6  0842               	movf	?_scale,w
  8750  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  8751  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  8752  00B9  00B6               	movwf	sprintf@tmpval^(0+128)
  8753  00BA                     l3213:
  8754  00BA  0843               	movf	(sprintf@fval+3)^(0+128),w
  8755  00BB  00F6               	movwf	__div_to_l_@f1+3
  8756  00BC  0842               	movf	(sprintf@fval+2)^(0+128),w
  8757  00BD  00F5               	movwf	__div_to_l_@f1+2
  8758  00BE  0841               	movf	(sprintf@fval+1)^(0+128),w
  8759  00BF  00F4               	movwf	__div_to_l_@f1+1
  8760  00C0  0840               	movf	sprintf@fval^(0+128),w
  8761  00C1  00F3               	movwf	__div_to_l_@f1
  8762  00C2  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  8763  00C3  00FA               	movwf	__div_to_l_@f2+3
  8764  00C4  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  8765  00C5  00F9               	movwf	__div_to_l_@f2+2
  8766  00C6  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  8767  00C7  00F8               	movwf	__div_to_l_@f2+1
  8768  00C8  0836               	movf	sprintf@tmpval^(0+128),w
  8769  00C9  00F7               	movwf	__div_to_l_@f2
  8770  00CA  120A  158A  207E  120A  118A  	fcall	__div_to_l_
  8771  00CF  0876               	movf	?__div_to_l_+3,w
  8772  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  8773  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  8774  00D2  00B5               	movwf	(sprintf@val+3)^(0+128)
  8775  00D3  0875               	movf	?__div_to_l_+2,w
  8776  00D4  00B4               	movwf	(sprintf@val+2)^(0+128)
  8777  00D5  0874               	movf	?__div_to_l_+1,w
  8778  00D6  00B3               	movwf	(sprintf@val+1)^(0+128)
  8779  00D7  0873               	movf	?__div_to_l_,w
  8780  00D8  00B2               	movwf	sprintf@val^(0+128)
  8781  00D9                     l3217:
  8782                           
  8783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  8784  00D9  3000               	movlw	0
  8785  00DA  00C3               	movwf	(sprintf@fval+3)^(0+128)
  8786  00DB  3000               	movlw	0
  8787  00DC  00C2               	movwf	(sprintf@fval+2)^(0+128)
  8788  00DD  3000               	movlw	0
  8789  00DE  00C1               	movwf	(sprintf@fval+1)^(0+128)
  8790  00DF  3000               	movlw	0
  8791  00E0  00C0               	movwf	sprintf@fval^(0+128)
  8792                           
  8793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  8794  00E1  2948               	goto	l3225
  8795  00E2                     l3219:
  8796                           
  8797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  8798  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  8799  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  8800  00E4  0843               	movf	(sprintf@fval+3)^(0+128),w
  8801  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  8802  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  8803  00E7  00D8               	movwf	___fltol@f1+3
  8804  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  8805  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  8806  00EA  0842               	movf	(sprintf@fval+2)^(0+128),w
  8807  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  8808  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  8809  00ED  00D7               	movwf	___fltol@f1+2
  8810  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  8811  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  8812  00F0  0841               	movf	(sprintf@fval+1)^(0+128),w
  8813  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  8814  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  8815  00F3  00D6               	movwf	___fltol@f1+1
  8816  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  8817  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  8818  00F6  0840               	movf	sprintf@fval^(0+128),w
  8819  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  8820  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  8821  00F9  00D5               	movwf	___fltol@f1
  8822  00FA  120A  158A  2002  120A  118A  	fcall	___fltol
  8823  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  8824  0100  1303               	bcf	3,6	;RP1=0, select bank0
  8825  0101  0858               	movf	?___fltol+3,w
  8826  0102  1683               	bsf	3,5	;RP0=1, select bank1
  8827  0103  1303               	bcf	3,6	;RP1=0, select bank1
  8828  0104  00B5               	movwf	(sprintf@val+3)^(0+128)
  8829  0105  1283               	bcf	3,5	;RP0=0, select bank0
  8830  0106  1303               	bcf	3,6	;RP1=0, select bank0
  8831  0107  0857               	movf	?___fltol+2,w
  8832  0108  1683               	bsf	3,5	;RP0=1, select bank1
  8833  0109  1303               	bcf	3,6	;RP1=0, select bank1
  8834  010A  00B4               	movwf	(sprintf@val+2)^(0+128)
  8835  010B  1283               	bcf	3,5	;RP0=0, select bank0
  8836  010C  1303               	bcf	3,6	;RP1=0, select bank0
  8837  010D  0856               	movf	?___fltol+1,w
  8838  010E  1683               	bsf	3,5	;RP0=1, select bank1
  8839  010F  1303               	bcf	3,6	;RP1=0, select bank1
  8840  0110  00B3               	movwf	(sprintf@val+1)^(0+128)
  8841  0111  1283               	bcf	3,5	;RP0=0, select bank0
  8842  0112  1303               	bcf	3,6	;RP1=0, select bank0
  8843  0113  0855               	movf	?___fltol,w
  8844  0114  1683               	bsf	3,5	;RP0=1, select bank1
  8845  0115  1303               	bcf	3,6	;RP1=0, select bank1
  8846  0116  00B2               	movwf	sprintf@val^(0+128)
  8847  0117                     l3221:
  8848                           
  8849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  8850  0117  0835               	movf	(sprintf@val+3)^(0+128),w
  8851  0118  00F6               	movwf	___xxtofl@val+3
  8852  0119  0834               	movf	(sprintf@val+2)^(0+128),w
  8853  011A  00F5               	movwf	___xxtofl@val+2
  8854  011B  0833               	movf	(sprintf@val+1)^(0+128),w
  8855  011C  00F4               	movwf	___xxtofl@val+1
  8856  011D  0832               	movf	sprintf@val^(0+128),w
  8857  011E  00F3               	movwf	___xxtofl@val
  8858  011F  3000               	movlw	0
  8859  0120  160A  118A  2177  120A  118A  	fcall	___xxtofl
  8860  0125  0876               	movf	?___xxtofl+3,w
  8861  0126  1683               	bsf	3,5	;RP0=1, select bank1
  8862  0127  1303               	bcf	3,6	;RP1=0, select bank1
  8863  0128  00A3               	movwf	(___flsub@a+3)^(0+128)
  8864  0129  0875               	movf	?___xxtofl+2,w
  8865  012A  00A2               	movwf	(___flsub@a+2)^(0+128)
  8866  012B  0874               	movf	?___xxtofl+1,w
  8867  012C  00A1               	movwf	(___flsub@a+1)^(0+128)
  8868  012D  0873               	movf	?___xxtofl,w
  8869  012E  00A0               	movwf	___flsub@a^(0+128)
  8870  012F  0843               	movf	(sprintf@fval+3)^(0+128),w
  8871  0130  00A7               	movwf	(___flsub@b+3)^(0+128)
  8872  0131  0842               	movf	(sprintf@fval+2)^(0+128),w
  8873  0132  00A6               	movwf	(___flsub@b+2)^(0+128)
  8874  0133  0841               	movf	(sprintf@fval+1)^(0+128),w
  8875  0134  00A5               	movwf	(___flsub@b+1)^(0+128)
  8876  0135  0840               	movf	sprintf@fval^(0+128),w
  8877  0136  00A4               	movwf	___flsub@b^(0+128)
  8878  0137  160A  158A  25A5  120A  118A  	fcall	___flsub
  8879  013C  1683               	bsf	3,5	;RP0=1, select bank1
  8880  013D  1303               	bcf	3,6	;RP1=0, select bank1
  8881  013E  0823               	movf	(?___flsub+3)^(0+128),w
  8882  013F  00C3               	movwf	(sprintf@fval+3)^(0+128)
  8883  0140  0822               	movf	(?___flsub+2)^(0+128),w
  8884  0141  00C2               	movwf	(sprintf@fval+2)^(0+128)
  8885  0142  0821               	movf	(?___flsub+1)^(0+128),w
  8886  0143  00C1               	movwf	(sprintf@fval+1)^(0+128)
  8887  0144  0820               	movf	?___flsub^(0+128),w
  8888  0145  00C0               	movwf	sprintf@fval^(0+128)
  8889  0146                     l3223:
  8890                           
  8891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  8892  0146  01BA               	clrf	sprintf@eexp^(0+128)
  8893  0147  01BB               	clrf	(sprintf@eexp+1)^(0+128)
  8894  0148                     l3225:
  8895                           
  8896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8897  0148  01C7               	clrf	sprintf@c^(0+128)
  8898  0149  0AC7               	incf	sprintf@c^(0+128),f
  8899  014A                     l3231:
  8900                           
  8901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  8902  014A  0847               	movf	sprintf@c^(0+128),w
  8903  014B  00A8               	movwf	??_sprintf^(0+128)
  8904  014C  3001               	movlw	1
  8905  014D                     u5265:
  8906  014D  1003               	clrc
  8907  014E  0DA8               	rlf	??_sprintf^(0+128),f
  8908  014F  3EFF               	addlw	-1
  8909  0150  1D03               	skipz
  8910  0151  294D               	goto	u5265
  8911  0152  1003               	clrc
  8912  0153  0D28               	rlf	??_sprintf^(0+128),w
  8913  0154  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  8914  0155  0084               	movwf	4
  8915  0156  160A  118A  2000  120A  118A  	fcall	stringdir
  8916  015B  00A9               	movwf	(??_sprintf+1)^(0+128)
  8917  015C  160A  118A  2000  120A  118A  	fcall	stringdir
  8918  0161  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  8919  0162  160A  118A  2000  120A  118A  	fcall	stringdir
  8920  0167  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  8921  0168  160A  118A  2000  120A  118A  	fcall	stringdir
  8922  016D  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  8923  016E  082C               	movf	(??_sprintf+4)^(0+128),w
  8924  016F  0235               	subwf	(sprintf@val+3)^(0+128),w
  8925  0170  1D03               	skipz
  8926  0171  297C               	goto	u5275
  8927  0172  082B               	movf	(??_sprintf+3)^(0+128),w
  8928  0173  0234               	subwf	(sprintf@val+2)^(0+128),w
  8929  0174  1D03               	skipz
  8930  0175  297C               	goto	u5275
  8931  0176  082A               	movf	(??_sprintf+2)^(0+128),w
  8932  0177  0233               	subwf	(sprintf@val+1)^(0+128),w
  8933  0178  1D03               	skipz
  8934  0179  297C               	goto	u5275
  8935  017A  0829               	movf	(??_sprintf+1)^(0+128),w
  8936  017B  0232               	subwf	sprintf@val^(0+128),w
  8937  017C                     u5275:
  8938  017C  1803               	skipnc
  8939  017D  297F               	goto	u5271
  8940  017E  2980               	goto	u5270
  8941  017F                     u5271:
  8942  017F  2981               	goto	l3235
  8943  0180                     u5270:
  8944  0180  298B               	goto	l3237
  8945  0181                     l3235:
  8946  0181  3001               	movlw	1
  8947  0182  00A8               	movwf	??_sprintf^(0+128)
  8948  0183  0828               	movf	??_sprintf^(0+128),w
  8949  0184  07C7               	addwf	sprintf@c^(0+128),f
  8950  0185  300A               	movlw	10
  8951  0186  0647               	xorwf	sprintf@c^(0+128),w
  8952  0187  1D03               	btfss	3,2
  8953  0188  298A               	goto	u5281
  8954  0189  298B               	goto	u5280
  8955  018A                     u5281:
  8956  018A  294A               	goto	l3231
  8957  018B                     u5280:
  8958  018B                     l3237:
  8959                           
  8960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  8961  018B  0847               	movf	sprintf@c^(0+128),w
  8962  018C  0744               	addwf	sprintf@prec^(0+128),w
  8963  018D  00A8               	movwf	??_sprintf^(0+128)
  8964  018E  0845               	movf	(sprintf@prec+1)^(0+128),w
  8965  018F  1803               	skipnc
  8966  0190  0A45               	incf	(sprintf@prec+1)^(0+128),w
  8967  0191  00A9               	movwf	(??_sprintf^(0+128)+1)
  8968  0192  083A               	movf	sprintf@eexp^(0+128),w
  8969  0193  0728               	addwf	??_sprintf^(0+128),w
  8970  0194  00AA               	movwf	(??_sprintf+2)^(0+128)
  8971  0195  083B               	movf	(sprintf@eexp+1)^(0+128),w
  8972  0196  1803               	skipnc
  8973  0197  0A3B               	incf	(sprintf@eexp+1)^(0+128),w
  8974  0198  0729               	addwf	(??_sprintf+1)^(0+128),w
  8975  0199  00AB               	movwf	(??_sprintf+3)^(0+128)
  8976  019A  082A               	movf	(??_sprintf+2)^(0+128),w
  8977  019B  02BE               	subwf	sprintf@width^(0+128),f
  8978  019C  082B               	movf	(??_sprintf+3)^(0+128),w
  8979  019D  1C03               	skipc
  8980  019E  03BF               	decf	(sprintf@width+1)^(0+128),f
  8981  019F  02BF               	subwf	(sprintf@width+1)^(0+128),f
  8982                           
  8983                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1169:     if(
  8984  01A0  0844               	movf	sprintf@prec^(0+128),w
  8985  01A1  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  8986  01A2  1903               	btfsc	3,2
  8987  01A3  29A5               	goto	u5291
  8988  01A4  29A6               	goto	u5290
  8989  01A5                     u5291:
  8990  01A5  29AC               	goto	l3241
  8991  01A6                     u5290:
  8992  01A6                     l3239:
  8993                           
  8994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  8995  01A6  30FF               	movlw	255
  8996  01A7  07BE               	addwf	sprintf@width^(0+128),f
  8997  01A8  1803               	skipnc
  8998  01A9  0ABF               	incf	(sprintf@width+1)^(0+128),f
  8999  01AA  30FF               	movlw	255
  9000  01AB  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9001  01AC                     l3241:
  9002                           
  9003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9004  01AC  3003               	movlw	3
  9005  01AD  053C               	andwf	sprintf@flag^(0+128),w
  9006  01AE  00A8               	movwf	??_sprintf^(0+128)
  9007  01AF  3000               	movlw	0
  9008  01B0  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9009  01B1  00A9               	movwf	(??_sprintf+1)^(0+128)
  9010  01B2  0828               	movf	??_sprintf^(0+128),w
  9011  01B3  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9012  01B4  1903               	btfsc	3,2
  9013  01B5  29B7               	goto	u5301
  9014  01B6  29B8               	goto	u5300
  9015  01B7                     u5301:
  9016  01B7  29BE               	goto	l3245
  9017  01B8                     u5300:
  9018  01B8                     l3243:
  9019                           
  9020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9021  01B8  30FF               	movlw	255
  9022  01B9  07BE               	addwf	sprintf@width^(0+128),f
  9023  01BA  1803               	skipnc
  9024  01BB  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9025  01BC  30FF               	movlw	255
  9026  01BD  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9027  01BE                     l3245:
  9028                           
  9029                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1179:     if(flag
      +                           & 0x04) {
  9030  01BE  1D3C               	btfss	sprintf@flag^(0+128),2
  9031  01BF  29C1               	goto	u5311
  9032  01C0  29C2               	goto	u5310
  9033  01C1                     u5311:
  9034  01C1  2A0E               	goto	l3267
  9035  01C2                     u5310:
  9036  01C2                     l3247:
  9037                           
  9038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1183:      if(fla
      +                          g & 0x03)
  9039  01C2  3003               	movlw	3
  9040  01C3  053C               	andwf	sprintf@flag^(0+128),w
  9041  01C4  00A8               	movwf	??_sprintf^(0+128)
  9042  01C5  3000               	movlw	0
  9043  01C6  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9044  01C7  00A9               	movwf	(??_sprintf+1)^(0+128)
  9045  01C8  0828               	movf	??_sprintf^(0+128),w
  9046  01C9  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9047  01CA  1903               	btfsc	3,2
  9048  01CB  29CD               	goto	u5321
  9049  01CC  29CE               	goto	u5320
  9050  01CD                     u5321:
  9051  01CD  29ED               	goto	l3259
  9052  01CE                     u5320:
  9053  01CE                     l3249:
  9054                           
  9055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1185:       ((*sp
      +                          ++ = ('-')));
  9056  01CE  302D               	movlw	45
  9057  01CF  00A8               	movwf	??_sprintf^(0+128)
  9058  01D0  0846               	movf	sprintf@sp^(0+128),w
  9059  01D1  0084               	movwf	4
  9060  01D2  0828               	movf	??_sprintf^(0+128),w
  9061  01D3  1383               	bcf	3,7	;select IRP bank0
  9062  01D4  0080               	movwf	0
  9063  01D5                     l3251:
  9064  01D5  3001               	movlw	1
  9065  01D6  00A8               	movwf	??_sprintf^(0+128)
  9066  01D7  0828               	movf	??_sprintf^(0+128),w
  9067  01D8  07C6               	addwf	sprintf@sp^(0+128),f
  9068  01D9  29ED               	goto	l3259
  9069  01DA                     l3253:
  9070                           
  9071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1195:       ((*sp
      +                          ++ = ('0')));
  9072  01DA  3030               	movlw	48
  9073  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  9074  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  9075  01DD  00A8               	movwf	??_sprintf^(0+128)
  9076  01DE  0846               	movf	sprintf@sp^(0+128),w
  9077  01DF  0084               	movwf	4
  9078  01E0  0828               	movf	??_sprintf^(0+128),w
  9079  01E1  1383               	bcf	3,7	;select IRP bank0
  9080  01E2  0080               	movwf	0
  9081  01E3                     l3255:
  9082  01E3  3001               	movlw	1
  9083  01E4  00A8               	movwf	??_sprintf^(0+128)
  9084  01E5  0828               	movf	??_sprintf^(0+128),w
  9085  01E6  07C6               	addwf	sprintf@sp^(0+128),f
  9086  01E7                     l3257:
  9087                           
  9088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1196:       width
      +                          --;
  9089  01E7  30FF               	movlw	255
  9090  01E8  07BE               	addwf	sprintf@width^(0+128),f
  9091  01E9  1803               	skipnc
  9092  01EA  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9093  01EB  30FF               	movlw	255
  9094  01EC  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9095  01ED                     l3259:
  9096                           
  9097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1194:      while(
      +                          width > 0) {
  9098  01ED  083F               	movf	(sprintf@width+1)^(0+128),w
  9099  01EE  3A80               	xorlw	128
  9100  01EF  00FF               	movwf	btemp+1
  9101  01F0  3080               	movlw	128
  9102  01F1  027F               	subwf	btemp+1,w
  9103  01F2  1D03               	skipz
  9104  01F3  29F6               	goto	u5335
  9105  01F4  3001               	movlw	1
  9106  01F5  023E               	subwf	sprintf@width^(0+128),w
  9107  01F6                     u5335:
  9108  01F6  1803               	skipnc
  9109  01F7  29F9               	goto	u5331
  9110  01F8  29FA               	goto	u5330
  9111  01F9                     u5331:
  9112  01F9  29DA               	goto	l3253
  9113  01FA                     u5330:
  9114  01FA  2A9B               	goto	l278
  9115  01FB                     l3261:
  9116                           
  9117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9118  01FB  3020               	movlw	32
  9119  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9120  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9121  01FE  00A8               	movwf	??_sprintf^(0+128)
  9122  01FF  0846               	movf	sprintf@sp^(0+128),w
  9123  0200  0084               	movwf	4
  9124  0201  0828               	movf	??_sprintf^(0+128),w
  9125  0202  1383               	bcf	3,7	;select IRP bank0
  9126  0203  0080               	movwf	0
  9127  0204                     l3263:
  9128  0204  3001               	movlw	1
  9129  0205  00A8               	movwf	??_sprintf^(0+128)
  9130  0206  0828               	movf	??_sprintf^(0+128),w
  9131  0207  07C6               	addwf	sprintf@sp^(0+128),f
  9132  0208                     l3265:
  9133                           
  9134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1208:       width
      +                          --;
  9135  0208  30FF               	movlw	255
  9136  0209  07BE               	addwf	sprintf@width^(0+128),f
  9137  020A  1803               	skipnc
  9138  020B  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9139  020C  30FF               	movlw	255
  9140  020D  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9141  020E                     l3267:
  9142                           
  9143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9144  020E  083F               	movf	(sprintf@width+1)^(0+128),w
  9145  020F  3A80               	xorlw	128
  9146  0210  00FF               	movwf	btemp+1
  9147  0211  3080               	movlw	128
  9148  0212  027F               	subwf	btemp+1,w
  9149  0213  1D03               	skipz
  9150  0214  2A17               	goto	u5345
  9151  0215  3001               	movlw	1
  9152  0216  023E               	subwf	sprintf@width^(0+128),w
  9153  0217                     u5345:
  9154  0217  1803               	skipnc
  9155  0218  2A1A               	goto	u5341
  9156  0219  2A1B               	goto	u5340
  9157  021A                     u5341:
  9158  021A  29FB               	goto	l3261
  9159  021B                     u5340:
  9160  021B                     l3269:
  9161                           
  9162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9163  021B  3003               	movlw	3
  9164  021C  1683               	bsf	3,5	;RP0=1, select bank1
  9165  021D  1303               	bcf	3,6	;RP1=0, select bank1
  9166  021E  053C               	andwf	sprintf@flag^(0+128),w
  9167  021F  00A8               	movwf	??_sprintf^(0+128)
  9168  0220  3000               	movlw	0
  9169  0221  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9170  0222  00A9               	movwf	(??_sprintf+1)^(0+128)
  9171  0223  0828               	movf	??_sprintf^(0+128),w
  9172  0224  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9173  0225  1903               	btfsc	3,2
  9174  0226  2A28               	goto	u5351
  9175  0227  2A29               	goto	u5350
  9176  0228                     u5351:
  9177  0228  2A9B               	goto	l278
  9178  0229                     u5350:
  9179  0229                     l3271:
  9180                           
  9181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9182  0229  302D               	movlw	45
  9183  022A  00A8               	movwf	??_sprintf^(0+128)
  9184  022B  0846               	movf	sprintf@sp^(0+128),w
  9185  022C  0084               	movwf	4
  9186  022D  0828               	movf	??_sprintf^(0+128),w
  9187  022E  1383               	bcf	3,7	;select IRP bank0
  9188  022F  0080               	movwf	0
  9189  0230                     l3273:
  9190  0230  3001               	movlw	1
  9191  0231  00A8               	movwf	??_sprintf^(0+128)
  9192  0232  0828               	movf	??_sprintf^(0+128),w
  9193  0233  07C6               	addwf	sprintf@sp^(0+128),f
  9194  0234  2A9B               	goto	l278
  9195  0235                     l3275:
  9196                           
  9197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9198  0235  0847               	movf	sprintf@c^(0+128),w
  9199  0236  00A8               	movwf	??_sprintf^(0+128)
  9200  0237  3001               	movlw	1
  9201  0238                     u5365:
  9202  0238  1003               	clrc
  9203  0239  0DA8               	rlf	??_sprintf^(0+128),f
  9204  023A  3EFF               	addlw	-1
  9205  023B  1D03               	skipz
  9206  023C  2A38               	goto	u5365
  9207  023D  1003               	clrc
  9208  023E  0D28               	rlf	??_sprintf^(0+128),w
  9209  023F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9210  0240  0084               	movwf	4
  9211  0241  160A  118A  2000  120A  118A  	fcall	stringdir
  9212  0246  00F3               	movwf	___lldiv@divisor
  9213  0247  160A  118A  2000  120A  118A  	fcall	stringdir
  9214  024C  00F4               	movwf	___lldiv@divisor+1
  9215  024D  160A  118A  2000  120A  118A  	fcall	stringdir
  9216  0252  00F5               	movwf	___lldiv@divisor+2
  9217  0253  160A  118A  2000  120A  118A  	fcall	stringdir
  9218  0258  00F6               	movwf	___lldiv@divisor+3
  9219  0259  0835               	movf	(sprintf@val+3)^(0+128),w
  9220  025A  00FA               	movwf	___lldiv@dividend+3
  9221  025B  0834               	movf	(sprintf@val+2)^(0+128),w
  9222  025C  00F9               	movwf	___lldiv@dividend+2
  9223  025D  0833               	movf	(sprintf@val+1)^(0+128),w
  9224  025E  00F8               	movwf	___lldiv@dividend+1
  9225  025F  0832               	movf	sprintf@val^(0+128),w
  9226  0260  00F7               	movwf	___lldiv@dividend
  9227  0261  160A  158A  26A4  120A  118A  	fcall	___lldiv
  9228  0266  0876               	movf	?___lldiv+3,w
  9229  0267  1683               	bsf	3,5	;RP0=1, select bank1
  9230  0268  1303               	bcf	3,6	;RP1=0, select bank1
  9231  0269  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9232  026A  0875               	movf	?___lldiv+2,w
  9233  026B  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9234  026C  0874               	movf	?___lldiv+1,w
  9235  026D  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9236  026E  0873               	movf	?___lldiv,w
  9237  026F  00B6               	movwf	sprintf@tmpval^(0+128)
  9238  0270                     l3277:
  9239                           
  9240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  9241  0270  3000               	movlw	0
  9242  0271  00F6               	movwf	___llmod@divisor+3
  9243  0272  3000               	movlw	0
  9244  0273  00F5               	movwf	___llmod@divisor+2
  9245  0274  3000               	movlw	0
  9246  0275  00F4               	movwf	___llmod@divisor+1
  9247  0276  300A               	movlw	10
  9248  0277  00F3               	movwf	___llmod@divisor
  9249  0278  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9250  0279  00FA               	movwf	___llmod@dividend+3
  9251  027A  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9252  027B  00F9               	movwf	___llmod@dividend+2
  9253  027C  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9254  027D  00F8               	movwf	___llmod@dividend+1
  9255  027E  0836               	movf	sprintf@tmpval^(0+128),w
  9256  027F  00F7               	movwf	___llmod@dividend
  9257  0280  160A  158A  25F5  120A  118A  	fcall	___llmod
  9258  0285  0876               	movf	?___llmod+3,w
  9259  0286  1683               	bsf	3,5	;RP0=1, select bank1
  9260  0287  1303               	bcf	3,6	;RP1=0, select bank1
  9261  0288  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9262  0289  0875               	movf	?___llmod+2,w
  9263  028A  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9264  028B  0874               	movf	?___llmod+1,w
  9265  028C  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9266  028D  0873               	movf	?___llmod,w
  9267  028E  00B6               	movwf	sprintf@tmpval^(0+128)
  9268  028F                     l3279:
  9269                           
  9270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  9271  028F  0836               	movf	sprintf@tmpval^(0+128),w
  9272  0290  3E30               	addlw	48
  9273  0291  00A8               	movwf	??_sprintf^(0+128)
  9274  0292  0846               	movf	sprintf@sp^(0+128),w
  9275  0293  0084               	movwf	4
  9276  0294  0828               	movf	??_sprintf^(0+128),w
  9277  0295  1383               	bcf	3,7	;select IRP bank0
  9278  0296  0080               	movwf	0
  9279  0297  3001               	movlw	1
  9280  0298  00A8               	movwf	??_sprintf^(0+128)
  9281  0299  0828               	movf	??_sprintf^(0+128),w
  9282  029A  07C6               	addwf	sprintf@sp^(0+128),f
  9283  029B                     l278:	
  9284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  9285                           
  9286                           
  9287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  9288  029B  3001               	movlw	1
  9289  029C  1683               	bsf	3,5	;RP0=1, select bank1
  9290  029D  1303               	bcf	3,6	;RP1=0, select bank1
  9291  029E  02C7               	subwf	sprintf@c^(0+128),f
  9292  029F  0A47               	incf	sprintf@c^(0+128),w
  9293  02A0  1D03               	btfss	3,2
  9294  02A1  2AA3               	goto	u5371
  9295  02A2  2AA4               	goto	u5370
  9296  02A3                     u5371:
  9297  02A3  2A35               	goto	l3275
  9298  02A4                     u5370:
  9299  02A4  2AB8               	goto	l3287
  9300  02A5                     l3281:
  9301                           
  9302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  9303  02A5  3030               	movlw	48
  9304  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  9305  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  9306  02A8  00A8               	movwf	??_sprintf^(0+128)
  9307  02A9  0846               	movf	sprintf@sp^(0+128),w
  9308  02AA  0084               	movwf	4
  9309  02AB  0828               	movf	??_sprintf^(0+128),w
  9310  02AC  1383               	bcf	3,7	;select IRP bank0
  9311  02AD  0080               	movwf	0
  9312  02AE                     l3283:
  9313  02AE  3001               	movlw	1
  9314  02AF  00A8               	movwf	??_sprintf^(0+128)
  9315  02B0  0828               	movf	??_sprintf^(0+128),w
  9316  02B1  07C6               	addwf	sprintf@sp^(0+128),f
  9317  02B2                     l3285:
  9318                           
  9319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  9320  02B2  30FF               	movlw	255
  9321  02B3  07BA               	addwf	sprintf@eexp^(0+128),f
  9322  02B4  1803               	skipnc
  9323  02B5  0ABB               	incf	(sprintf@eexp+1)^(0+128),f
  9324  02B6  30FF               	movlw	255
  9325  02B7  07BB               	addwf	(sprintf@eexp+1)^(0+128),f
  9326  02B8                     l3287:
  9327                           
  9328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  9329  02B8  083B               	movf	(sprintf@eexp+1)^(0+128),w
  9330  02B9  3A80               	xorlw	128
  9331  02BA  00FF               	movwf	btemp+1
  9332  02BB  3080               	movlw	128
  9333  02BC  027F               	subwf	btemp+1,w
  9334  02BD  1D03               	skipz
  9335  02BE  2AC1               	goto	u5385
  9336  02BF  3001               	movlw	1
  9337  02C0  023A               	subwf	sprintf@eexp^(0+128),w
  9338  02C1                     u5385:
  9339  02C1  1803               	skipnc
  9340  02C2  2AC4               	goto	u5381
  9341  02C3  2AC5               	goto	u5380
  9342  02C4                     u5381:
  9343  02C4  2AA5               	goto	l3281
  9344  02C5                     u5380:
  9345  02C5                     l3289:
  9346                           
  9347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9348  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  9349  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  9350  02C7  0845               	movf	(sprintf@prec+1)^(0+128),w
  9351  02C8  3A80               	xorlw	128
  9352  02C9  00FF               	movwf	btemp+1
  9353  02CA  3080               	movlw	128
  9354  02CB  027F               	subwf	btemp+1,w
  9355  02CC  1D03               	skipz
  9356  02CD  2AD0               	goto	u5395
  9357  02CE  3009               	movlw	9
  9358  02CF  0244               	subwf	sprintf@prec^(0+128),w
  9359  02D0                     u5395:
  9360  02D0  1C03               	skipc
  9361  02D1  2AD3               	goto	u5391
  9362  02D2  2AD4               	goto	u5390
  9363  02D3                     u5391:
  9364  02D3  2ADB               	goto	l3293
  9365  02D4                     u5390:
  9366  02D4                     l3291:
  9367                           
  9368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  9369  02D4  3008               	movlw	8
  9370  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  9371  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  9372  02D7  00A8               	movwf	??_sprintf^(0+128)
  9373  02D8  0828               	movf	??_sprintf^(0+128),w
  9374  02D9  00C7               	movwf	sprintf@c^(0+128)
  9375  02DA  2AE1               	goto	l285
  9376  02DB                     l3293:
  9377                           
  9378                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  9379  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  9380  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  9381  02DD  0844               	movf	sprintf@prec^(0+128),w
  9382  02DE  00A8               	movwf	??_sprintf^(0+128)
  9383  02DF  0828               	movf	??_sprintf^(0+128),w
  9384  02E0  00C7               	movwf	sprintf@c^(0+128)
  9385  02E1                     l285:
  9386                           
  9387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  9388  02E1  0847               	movf	sprintf@c^(0+128),w
  9389  02E2  00A8               	movwf	??_sprintf^(0+128)
  9390  02E3  01A9               	clrf	(??_sprintf^(0+128)+1)
  9391  02E4  0828               	movf	??_sprintf^(0+128),w
  9392  02E5  02C4               	subwf	sprintf@prec^(0+128),f
  9393  02E6  0829               	movf	(??_sprintf+1)^(0+128),w
  9394  02E7  1C03               	skipc
  9395  02E8  03C5               	decf	(sprintf@prec+1)^(0+128),f
  9396  02E9  02C5               	subwf	(sprintf@prec+1)^(0+128),f
  9397  02EA                     l3295:
  9398                           
  9399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  9400  02EA  0847               	movf	sprintf@c^(0+128),w
  9401  02EB  1903               	btfsc	3,2
  9402  02EC  2AEE               	goto	u5401
  9403  02ED  2AEF               	goto	u5400
  9404  02EE                     u5401:
  9405  02EE  2AFA               	goto	l3301
  9406  02EF                     u5400:
  9407  02EF                     l3297:
  9408                           
  9409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  9410  02EF  302E               	movlw	46
  9411  02F0  00A8               	movwf	??_sprintf^(0+128)
  9412  02F1  0846               	movf	sprintf@sp^(0+128),w
  9413  02F2  0084               	movwf	4
  9414  02F3  0828               	movf	??_sprintf^(0+128),w
  9415  02F4  1383               	bcf	3,7	;select IRP bank0
  9416  02F5  0080               	movwf	0
  9417  02F6                     l3299:
  9418  02F6  3001               	movlw	1
  9419  02F7  00A8               	movwf	??_sprintf^(0+128)
  9420  02F8  0828               	movf	??_sprintf^(0+128),w
  9421  02F9  07C6               	addwf	sprintf@sp^(0+128),f
  9422  02FA                     l3301:
  9423                           
  9424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9425  02FA  0847               	movf	sprintf@c^(0+128),w
  9426  02FB  120A  158A  249D  120A  118A  	fcall	_scale
  9427  0300  1283               	bcf	3,5	;RP0=0, select bank0
  9428  0301  1303               	bcf	3,6	;RP1=0, select bank0
  9429  0302  0845               	movf	?_scale+3,w
  9430  0303  1683               	bsf	3,5	;RP0=1, select bank1
  9431  0304  1303               	bcf	3,6	;RP1=0, select bank1
  9432  0305  00B0               	movwf	(_sprintf$1155+3)^(0+128)
  9433  0306  1283               	bcf	3,5	;RP0=0, select bank0
  9434  0307  1303               	bcf	3,6	;RP1=0, select bank0
  9435  0308  0844               	movf	?_scale+2,w
  9436  0309  1683               	bsf	3,5	;RP0=1, select bank1
  9437  030A  1303               	bcf	3,6	;RP1=0, select bank1
  9438  030B  00AF               	movwf	(_sprintf$1155+2)^(0+128)
  9439  030C  1283               	bcf	3,5	;RP0=0, select bank0
  9440  030D  1303               	bcf	3,6	;RP1=0, select bank0
  9441  030E  0843               	movf	?_scale+1,w
  9442  030F  1683               	bsf	3,5	;RP0=1, select bank1
  9443  0310  1303               	bcf	3,6	;RP1=0, select bank1
  9444  0311  00AE               	movwf	(_sprintf$1155+1)^(0+128)
  9445  0312  1283               	bcf	3,5	;RP0=0, select bank0
  9446  0313  1303               	bcf	3,6	;RP1=0, select bank0
  9447  0314  0842               	movf	?_scale,w
  9448  0315  1683               	bsf	3,5	;RP0=1, select bank1
  9449  0316  1303               	bcf	3,6	;RP1=0, select bank1
  9450  0317  00AD               	movwf	_sprintf$1155^(0+128)
  9451  0318                     l3303:
  9452                           
  9453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  9454  0318  0830               	movf	(_sprintf$1155+3)^(0+128),w
  9455  0319  1283               	bcf	3,5	;RP0=0, select bank0
  9456  031A  1303               	bcf	3,6	;RP1=0, select bank0
  9457  031B  00AF               	movwf	___flmul@a+3
  9458  031C  1683               	bsf	3,5	;RP0=1, select bank1
  9459  031D  1303               	bcf	3,6	;RP1=0, select bank1
  9460  031E  082F               	movf	(_sprintf$1155+2)^(0+128),w
  9461  031F  1283               	bcf	3,5	;RP0=0, select bank0
  9462  0320  1303               	bcf	3,6	;RP1=0, select bank0
  9463  0321  00AE               	movwf	___flmul@a+2
  9464  0322  1683               	bsf	3,5	;RP0=1, select bank1
  9465  0323  1303               	bcf	3,6	;RP1=0, select bank1
  9466  0324  082E               	movf	(_sprintf$1155+1)^(0+128),w
  9467  0325  1283               	bcf	3,5	;RP0=0, select bank0
  9468  0326  1303               	bcf	3,6	;RP1=0, select bank0
  9469  0327  00AD               	movwf	___flmul@a+1
  9470  0328  1683               	bsf	3,5	;RP0=1, select bank1
  9471  0329  1303               	bcf	3,6	;RP1=0, select bank1
  9472  032A  082D               	movf	_sprintf$1155^(0+128),w
  9473  032B  1283               	bcf	3,5	;RP0=0, select bank0
  9474  032C  1303               	bcf	3,6	;RP1=0, select bank0
  9475  032D  00AC               	movwf	___flmul@a
  9476  032E  1683               	bsf	3,5	;RP0=1, select bank1
  9477  032F  1303               	bcf	3,6	;RP1=0, select bank1
  9478  0330  0843               	movf	(sprintf@fval+3)^(0+128),w
  9479  0331  1283               	bcf	3,5	;RP0=0, select bank0
  9480  0332  1303               	bcf	3,6	;RP1=0, select bank0
  9481  0333  00AB               	movwf	___flmul@b+3
  9482  0334  1683               	bsf	3,5	;RP0=1, select bank1
  9483  0335  1303               	bcf	3,6	;RP1=0, select bank1
  9484  0336  0842               	movf	(sprintf@fval+2)^(0+128),w
  9485  0337  1283               	bcf	3,5	;RP0=0, select bank0
  9486  0338  1303               	bcf	3,6	;RP1=0, select bank0
  9487  0339  00AA               	movwf	___flmul@b+2
  9488  033A  1683               	bsf	3,5	;RP0=1, select bank1
  9489  033B  1303               	bcf	3,6	;RP1=0, select bank1
  9490  033C  0841               	movf	(sprintf@fval+1)^(0+128),w
  9491  033D  1283               	bcf	3,5	;RP0=0, select bank0
  9492  033E  1303               	bcf	3,6	;RP1=0, select bank0
  9493  033F  00A9               	movwf	___flmul@b+1
  9494  0340  1683               	bsf	3,5	;RP0=1, select bank1
  9495  0341  1303               	bcf	3,6	;RP1=0, select bank1
  9496  0342  0840               	movf	sprintf@fval^(0+128),w
  9497  0343  1283               	bcf	3,5	;RP0=0, select bank0
  9498  0344  1303               	bcf	3,6	;RP1=0, select bank0
  9499  0345  00A8               	movwf	___flmul@b
  9500  0346  120A  158A  213C  120A  118A  	fcall	___flmul
  9501  034B  1283               	bcf	3,5	;RP0=0, select bank0
  9502  034C  1303               	bcf	3,6	;RP1=0, select bank0
  9503  034D  082B               	movf	?___flmul+3,w
  9504  034E  00D8               	movwf	___fltol@f1+3
  9505  034F  082A               	movf	?___flmul+2,w
  9506  0350  00D7               	movwf	___fltol@f1+2
  9507  0351  0829               	movf	?___flmul+1,w
  9508  0352  00D6               	movwf	___fltol@f1+1
  9509  0353  0828               	movf	?___flmul,w
  9510  0354  00D5               	movwf	___fltol@f1
  9511  0355  120A  158A  2002  120A  118A  	fcall	___fltol
  9512  035A  1283               	bcf	3,5	;RP0=0, select bank0
  9513  035B  1303               	bcf	3,6	;RP1=0, select bank0
  9514  035C  0858               	movf	?___fltol+3,w
  9515  035D  1683               	bsf	3,5	;RP0=1, select bank1
  9516  035E  1303               	bcf	3,6	;RP1=0, select bank1
  9517  035F  00B5               	movwf	(sprintf@val+3)^(0+128)
  9518  0360  1283               	bcf	3,5	;RP0=0, select bank0
  9519  0361  1303               	bcf	3,6	;RP1=0, select bank0
  9520  0362  0857               	movf	?___fltol+2,w
  9521  0363  1683               	bsf	3,5	;RP0=1, select bank1
  9522  0364  1303               	bcf	3,6	;RP1=0, select bank1
  9523  0365  00B4               	movwf	(sprintf@val+2)^(0+128)
  9524  0366  1283               	bcf	3,5	;RP0=0, select bank0
  9525  0367  1303               	bcf	3,6	;RP1=0, select bank0
  9526  0368  0856               	movf	?___fltol+1,w
  9527  0369  1683               	bsf	3,5	;RP0=1, select bank1
  9528  036A  1303               	bcf	3,6	;RP1=0, select bank1
  9529  036B  00B3               	movwf	(sprintf@val+1)^(0+128)
  9530  036C  1283               	bcf	3,5	;RP0=0, select bank0
  9531  036D  1303               	bcf	3,6	;RP1=0, select bank0
  9532  036E  0855               	movf	?___fltol,w
  9533  036F  1683               	bsf	3,5	;RP0=1, select bank1
  9534  0370  1303               	bcf	3,6	;RP1=0, select bank1
  9535  0371  00B2               	movwf	sprintf@val^(0+128)
  9536                           
  9537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9538  0372  2C14               	goto	l3313
  9539  0373                     l3305:
  9540                           
  9541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  9542  0373  0847               	movf	sprintf@c^(0+128),w
  9543  0374  00A8               	movwf	??_sprintf^(0+128)
  9544  0375  3001               	movlw	1
  9545  0376                     u5415:
  9546  0376  1003               	clrc
  9547  0377  0DA8               	rlf	??_sprintf^(0+128),f
  9548  0378  3EFF               	addlw	-1
  9549  0379  1D03               	skipz
  9550  037A  2B76               	goto	u5415
  9551  037B  1003               	clrc
  9552  037C  0D28               	rlf	??_sprintf^(0+128),w
  9553  037D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9554  037E  0084               	movwf	4
  9555  037F  160A  118A  2000  120A  118A  	fcall	stringdir
  9556  0384  00F3               	movwf	___lldiv@divisor
  9557  0385  160A  118A  2000  120A  118A  	fcall	stringdir
  9558  038A  00F4               	movwf	___lldiv@divisor+1
  9559  038B  160A  118A  2000  120A  118A  	fcall	stringdir
  9560  0390  00F5               	movwf	___lldiv@divisor+2
  9561  0391  160A  118A  2000  120A  118A  	fcall	stringdir
  9562  0396  00F6               	movwf	___lldiv@divisor+3
  9563  0397  0835               	movf	(sprintf@val+3)^(0+128),w
  9564  0398  00FA               	movwf	___lldiv@dividend+3
  9565  0399  0834               	movf	(sprintf@val+2)^(0+128),w
  9566  039A  00F9               	movwf	___lldiv@dividend+2
  9567  039B  0833               	movf	(sprintf@val+1)^(0+128),w
  9568  039C  00F8               	movwf	___lldiv@dividend+1
  9569  039D  0832               	movf	sprintf@val^(0+128),w
  9570  039E  00F7               	movwf	___lldiv@dividend
  9571  039F  160A  158A  26A4  120A  118A  	fcall	___lldiv
  9572  03A4  0876               	movf	?___lldiv+3,w
  9573  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  9574  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  9575  03A7  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9576  03A8  0875               	movf	?___lldiv+2,w
  9577  03A9  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9578  03AA  0874               	movf	?___lldiv+1,w
  9579  03AB  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9580  03AC  0873               	movf	?___lldiv,w
  9581  03AD  00B6               	movwf	sprintf@tmpval^(0+128)
  9582  03AE                     l3307:
  9583                           
  9584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  9585  03AE  3000               	movlw	0
  9586  03AF  00F6               	movwf	___llmod@divisor+3
  9587  03B0  3000               	movlw	0
  9588  03B1  00F5               	movwf	___llmod@divisor+2
  9589  03B2  3000               	movlw	0
  9590  03B3  00F4               	movwf	___llmod@divisor+1
  9591  03B4  300A               	movlw	10
  9592  03B5  00F3               	movwf	___llmod@divisor
  9593  03B6  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  9594  03B7  00FA               	movwf	___llmod@dividend+3
  9595  03B8  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  9596  03B9  00F9               	movwf	___llmod@dividend+2
  9597  03BA  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  9598  03BB  00F8               	movwf	___llmod@dividend+1
  9599  03BC  0836               	movf	sprintf@tmpval^(0+128),w
  9600  03BD  00F7               	movwf	___llmod@dividend
  9601  03BE  160A  158A  25F5  120A  118A  	fcall	___llmod
  9602  03C3  0876               	movf	?___llmod+3,w
  9603  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  9604  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  9605  03C6  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  9606  03C7  0875               	movf	?___llmod+2,w
  9607  03C8  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  9608  03C9  0874               	movf	?___llmod+1,w
  9609  03CA  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  9610  03CB  0873               	movf	?___llmod,w
  9611  03CC  00B6               	movwf	sprintf@tmpval^(0+128)
  9612  03CD                     l3309:
  9613                           
  9614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  9615  03CD  0836               	movf	sprintf@tmpval^(0+128),w
  9616  03CE  3E30               	addlw	48
  9617  03CF  00A8               	movwf	??_sprintf^(0+128)
  9618  03D0  0846               	movf	sprintf@sp^(0+128),w
  9619  03D1  0084               	movwf	4
  9620  03D2  0828               	movf	??_sprintf^(0+128),w
  9621  03D3  1383               	bcf	3,7	;select IRP bank0
  9622  03D4  0080               	movwf	0
  9623  03D5  3001               	movlw	1
  9624  03D6  00A8               	movwf	??_sprintf^(0+128)
  9625  03D7  0828               	movf	??_sprintf^(0+128),w
  9626  03D8  07C6               	addwf	sprintf@sp^(0+128),f
  9627  03D9                     l3311:
  9628                           
  9629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  9630  03D9  0847               	movf	sprintf@c^(0+128),w
  9631  03DA  00A8               	movwf	??_sprintf^(0+128)
  9632  03DB  3001               	movlw	1
  9633  03DC                     u5425:
  9634  03DC  1003               	clrc
  9635  03DD  0DA8               	rlf	??_sprintf^(0+128),f
  9636  03DE  3EFF               	addlw	-1
  9637  03DF  1D03               	skipz
  9638  03E0  2BDC               	goto	u5425
  9639  03E1  1003               	clrc
  9640  03E2  0D28               	rlf	??_sprintf^(0+128),w
  9641  03E3  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9642  03E4  0084               	movwf	4
  9643  03E5  160A  118A  2000  120A  118A  	fcall	stringdir
  9644  03EA  00F3               	movwf	___llmod@divisor
  9645  03EB  160A  118A  2000  120A  118A  	fcall	stringdir
  9646  03F0  00F4               	movwf	___llmod@divisor+1
  9647  03F1  160A  118A  2000  120A  118A  	fcall	stringdir
  9648  03F6  00F5               	movwf	___llmod@divisor+2
  9649  03F7  160A  118A  2000  120A  118A  	fcall	stringdir
  9650  03FC  00F6               	movwf	___llmod@divisor+3
  9651  03FD  0835               	movf	(sprintf@val+3)^(0+128),w
  9652  03FE  00FA               	movwf	___llmod@dividend+3
  9653  03FF  0834               	movf	(sprintf@val+2)^(0+128),w
  9654  0400  00F9               	movwf	___llmod@dividend+2
  9655  0401  0833               	movf	(sprintf@val+1)^(0+128),w
  9656  0402  00F8               	movwf	___llmod@dividend+1
  9657  0403  0832               	movf	sprintf@val^(0+128),w
  9658  0404  00F7               	movwf	___llmod@dividend
  9659  0405  160A  158A  25F5  120A  118A  	fcall	___llmod
  9660  040A  0876               	movf	?___llmod+3,w
  9661  040B  1683               	bsf	3,5	;RP0=1, select bank1
  9662  040C  1303               	bcf	3,6	;RP1=0, select bank1
  9663  040D  00B5               	movwf	(sprintf@val+3)^(0+128)
  9664  040E  0875               	movf	?___llmod+2,w
  9665  040F  00B4               	movwf	(sprintf@val+2)^(0+128)
  9666  0410  0874               	movf	?___llmod+1,w
  9667  0411  00B3               	movwf	(sprintf@val+1)^(0+128)
  9668  0412  0873               	movf	?___llmod,w
  9669  0413  00B2               	movwf	sprintf@val^(0+128)
  9670  0414                     l3313:
  9671                           
  9672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  9673  0414  3001               	movlw	1
  9674  0415  02C7               	subwf	sprintf@c^(0+128),f
  9675  0416  0A47               	incf	sprintf@c^(0+128),w
  9676  0417  1D03               	btfss	3,2
  9677  0418  2C1A               	goto	u5431
  9678  0419  2C1B               	goto	u5430
  9679  041A                     u5431:
  9680  041A  2B73               	goto	l3305
  9681  041B                     u5430:
  9682  041B  2C2D               	goto	l3321
  9683  041C                     l3315:
  9684                           
  9685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  9686  041C  3030               	movlw	48
  9687  041D  00A8               	movwf	??_sprintf^(0+128)
  9688  041E  0846               	movf	sprintf@sp^(0+128),w
  9689  041F  0084               	movwf	4
  9690  0420  0828               	movf	??_sprintf^(0+128),w
  9691  0421  1383               	bcf	3,7	;select IRP bank0
  9692  0422  0080               	movwf	0
  9693  0423                     l3317:
  9694  0423  3001               	movlw	1
  9695  0424  00A8               	movwf	??_sprintf^(0+128)
  9696  0425  0828               	movf	??_sprintf^(0+128),w
  9697  0426  07C6               	addwf	sprintf@sp^(0+128),f
  9698  0427                     l3319:
  9699                           
  9700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  9701  0427  30FF               	movlw	255
  9702  0428  07C4               	addwf	sprintf@prec^(0+128),f
  9703  0429  1803               	skipnc
  9704  042A  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9705  042B  30FF               	movlw	255
  9706  042C  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9707  042D                     l3321:
  9708                           
  9709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  9710  042D  0844               	movf	sprintf@prec^(0+128),w
  9711  042E  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9712  042F  1D03               	btfss	3,2
  9713  0430  2C32               	goto	u5441
  9714  0431  2C33               	goto	u5440
  9715  0432                     u5441:
  9716  0432  2C1C               	goto	l3315
  9717  0433                     u5440:
  9718  0433  2D32               	goto	l3385
  9719  0434                     l3323:
  9720                           
  9721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  9722  0434  0844               	movf	sprintf@prec^(0+128),w
  9723  0435  0445               	iorwf	(sprintf@prec+1)^(0+128),w
  9724  0436  1D03               	btfss	3,2
  9725  0437  2C39               	goto	u5451
  9726  0438  2C3A               	goto	u5450
  9727  0439                     u5451:
  9728  0439  2C48               	goto	l293
  9729  043A                     u5450:
  9730  043A                     l3325:
  9731  043A  0835               	movf	(sprintf@val+3)^(0+128),w
  9732  043B  0434               	iorwf	(sprintf@val+2)^(0+128),w
  9733  043C  0433               	iorwf	(sprintf@val+1)^(0+128),w
  9734  043D  0432               	iorwf	sprintf@val^(0+128),w
  9735  043E  1D03               	skipz
  9736  043F  2C41               	goto	u5461
  9737  0440  2C42               	goto	u5460
  9738  0441                     u5461:
  9739  0441  2C48               	goto	l293
  9740  0442                     u5460:
  9741  0442                     l3327:
  9742                           
  9743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  9744  0442  3001               	movlw	1
  9745  0443  07C4               	addwf	sprintf@prec^(0+128),f
  9746  0444  1803               	skipnc
  9747  0445  0AC5               	incf	(sprintf@prec+1)^(0+128),f
  9748  0446  3000               	movlw	0
  9749  0447  07C5               	addwf	(sprintf@prec+1)^(0+128),f
  9750  0448                     l293:
  9751                           
  9752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  9753  0448  0845               	movf	(sprintf@prec+1)^(0+128),w
  9754  0449  3A80               	xorlw	128
  9755  044A  3C80               	sublw	128
  9756  044B  1D03               	skipz
  9757  044C  2C4F               	goto	u5475
  9758  044D  0844               	movf	sprintf@prec^(0+128),w
  9759  044E  0247               	subwf	sprintf@c^(0+128),w
  9760  044F                     u5475:
  9761  044F  1803               	skipnc
  9762  0450  2C52               	goto	u5471
  9763  0451  2C53               	goto	u5470
  9764  0452                     u5471:
  9765  0452  2C5A               	goto	l3331
  9766  0453                     u5470:
  9767  0453                     l3329:
  9768                           
  9769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  9770  0453  1683               	bsf	3,5	;RP0=1, select bank1
  9771  0454  1303               	bcf	3,6	;RP1=0, select bank1
  9772  0455  0844               	movf	sprintf@prec^(0+128),w
  9773  0456  00A8               	movwf	??_sprintf^(0+128)
  9774  0457  0828               	movf	??_sprintf^(0+128),w
  9775  0458  00C7               	movwf	sprintf@c^(0+128)
  9776  0459  2C72               	goto	l3335
  9777  045A                     l3331:
  9778  045A  1683               	bsf	3,5	;RP0=1, select bank1
  9779  045B  1303               	bcf	3,6	;RP1=0, select bank1
  9780  045C  0845               	movf	(sprintf@prec+1)^(0+128),w
  9781  045D  3A80               	xorlw	128
  9782  045E  00A8               	movwf	??_sprintf^(0+128)
  9783  045F  3080               	movlw	128
  9784  0460  0228               	subwf	??_sprintf^(0+128),w
  9785  0461  1D03               	skipz
  9786  0462  2C65               	goto	u5485
  9787  0463  0847               	movf	sprintf@c^(0+128),w
  9788  0464  0244               	subwf	sprintf@prec^(0+128),w
  9789  0465                     u5485:
  9790  0465  1803               	skipnc
  9791  0466  2C68               	goto	u5481
  9792  0467  2C69               	goto	u5480
  9793  0468                     u5481:
  9794  0468  2C72               	goto	l3335
  9795  0469                     u5480:
  9796  0469                     l3333:
  9797                           
  9798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  9799  0469  1683               	bsf	3,5	;RP0=1, select bank1
  9800  046A  1303               	bcf	3,6	;RP1=0, select bank1
  9801  046B  0847               	movf	sprintf@c^(0+128),w
  9802  046C  00A8               	movwf	??_sprintf^(0+128)
  9803  046D  01A9               	clrf	(??_sprintf^(0+128)+1)
  9804  046E  0828               	movf	??_sprintf^(0+128),w
  9805  046F  00C4               	movwf	sprintf@prec^(0+128)
  9806  0470  0829               	movf	(??_sprintf+1)^(0+128),w
  9807  0471  00C5               	movwf	(sprintf@prec+1)^(0+128)
  9808  0472                     l3335:
  9809                           
  9810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  9811  0472  1683               	bsf	3,5	;RP0=1, select bank1
  9812  0473  1303               	bcf	3,6	;RP1=0, select bank1
  9813  0474  083E               	movf	sprintf@width^(0+128),w
  9814  0475  043F               	iorwf	(sprintf@width+1)^(0+128),w
  9815  0476  1903               	btfsc	3,2
  9816  0477  2C79               	goto	u5491
  9817  0478  2C7A               	goto	u5490
  9818  0479                     u5491:
  9819  0479  2C8C               	goto	l3341
  9820  047A                     u5490:
  9821  047A                     l3337:
  9822  047A  3003               	movlw	3
  9823  047B  053C               	andwf	sprintf@flag^(0+128),w
  9824  047C  00A8               	movwf	??_sprintf^(0+128)
  9825  047D  3000               	movlw	0
  9826  047E  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9827  047F  00A9               	movwf	(??_sprintf+1)^(0+128)
  9828  0480  0828               	movf	??_sprintf^(0+128),w
  9829  0481  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9830  0482  1903               	btfsc	3,2
  9831  0483  2C85               	goto	u5501
  9832  0484  2C86               	goto	u5500
  9833  0485                     u5501:
  9834  0485  2C8C               	goto	l3341
  9835  0486                     u5500:
  9836  0486                     l3339:
  9837                           
  9838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1372:    width--;
  9839  0486  30FF               	movlw	255
  9840  0487  07BE               	addwf	sprintf@width^(0+128),f
  9841  0488  1803               	skipnc
  9842  0489  0ABF               	incf	(sprintf@width+1)^(0+128),f
  9843  048A  30FF               	movlw	255
  9844  048B  07BF               	addwf	(sprintf@width+1)^(0+128),f
  9845  048C                     l3341:
  9846                           
  9847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  9848  048C  1F3D               	btfss	(sprintf@flag+1)^(0+128),6
  9849  048D  2C8F               	goto	u5511
  9850  048E  2C90               	goto	u5510
  9851  048F                     u5511:
  9852  048F  2CAB               	goto	l3349
  9853  0490                     u5510:
  9854  0490                     l3343:
  9855                           
  9856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  9857  0490  0845               	movf	(sprintf@prec+1)^(0+128),w
  9858  0491  3A80               	xorlw	128
  9859  0492  00A8               	movwf	??_sprintf^(0+128)
  9860  0493  083F               	movf	(sprintf@width+1)^(0+128),w
  9861  0494  3A80               	xorlw	128
  9862  0495  0228               	subwf	??_sprintf^(0+128),w
  9863  0496  1D03               	skipz
  9864  0497  2C9A               	goto	u5525
  9865  0498  083E               	movf	sprintf@width^(0+128),w
  9866  0499  0244               	subwf	sprintf@prec^(0+128),w
  9867  049A                     u5525:
  9868  049A  1803               	skipnc
  9869  049B  2C9D               	goto	u5521
  9870  049C  2C9E               	goto	u5520
  9871  049D                     u5521:
  9872  049D  2CA7               	goto	l3347
  9873  049E                     u5520:
  9874  049E                     l3345:
  9875                           
  9876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  9877  049E  1683               	bsf	3,5	;RP0=1, select bank1
  9878  049F  1303               	bcf	3,6	;RP1=0, select bank1
  9879  04A0  0844               	movf	sprintf@prec^(0+128),w
  9880  04A1  02BE               	subwf	sprintf@width^(0+128),f
  9881  04A2  0845               	movf	(sprintf@prec+1)^(0+128),w
  9882  04A3  1C03               	skipc
  9883  04A4  03BF               	decf	(sprintf@width+1)^(0+128),f
  9884  04A5  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9885  04A6  2CAB               	goto	l3349
  9886  04A7                     l3347:
  9887                           
  9888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  9889  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  9890  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  9891  04A9  01BE               	clrf	sprintf@width^(0+128)
  9892  04AA  01BF               	clrf	(sprintf@width+1)^(0+128)
  9893  04AB                     l3349:
  9894                           
  9895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  9896  04AB  083F               	movf	(sprintf@width+1)^(0+128),w
  9897  04AC  3A80               	xorlw	128
  9898  04AD  3C80               	sublw	128
  9899  04AE  1D03               	skipz
  9900  04AF  2CB2               	goto	u5535
  9901  04B0  083E               	movf	sprintf@width^(0+128),w
  9902  04B1  0247               	subwf	sprintf@c^(0+128),w
  9903  04B2                     u5535:
  9904  04B2  1803               	skipnc
  9905  04B3  2CB5               	goto	u5531
  9906  04B4  2CB6               	goto	u5530
  9907  04B5                     u5531:
  9908  04B5  2CC2               	goto	l3353
  9909  04B6                     u5530:
  9910  04B6                     l3351:
  9911                           
  9912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  9913  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  9914  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  9915  04B8  0847               	movf	sprintf@c^(0+128),w
  9916  04B9  00A8               	movwf	??_sprintf^(0+128)
  9917  04BA  01A9               	clrf	(??_sprintf^(0+128)+1)
  9918  04BB  0828               	movf	??_sprintf^(0+128),w
  9919  04BC  02BE               	subwf	sprintf@width^(0+128),f
  9920  04BD  0829               	movf	(??_sprintf+1)^(0+128),w
  9921  04BE  1C03               	skipc
  9922  04BF  03BF               	decf	(sprintf@width+1)^(0+128),f
  9923  04C0  02BF               	subwf	(sprintf@width+1)^(0+128),f
  9924  04C1  2CC6               	goto	l3355
  9925  04C2                     l3353:
  9926                           
  9927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  9928  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  9929  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  9930  04C4  01BE               	clrf	sprintf@width^(0+128)
  9931  04C5  01BF               	clrf	(sprintf@width+1)^(0+128)
  9932  04C6                     l3355:
  9933                           
  9934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1413:   if(flag &
      +                           0x04) {
  9935  04C6  1D3C               	btfss	sprintf@flag^(0+128),2
  9936  04C7  2CC9               	goto	u5541
  9937  04C8  2CCA               	goto	u5540
  9938  04C9                     u5541:
  9939  04C9  2CFF               	goto	l3371
  9940  04CA                     u5540:
  9941  04CA                     l3357:
  9942                           
  9943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1418:    if(flag 
      +                          & 0x03)
  9944  04CA  3003               	movlw	3
  9945  04CB  053C               	andwf	sprintf@flag^(0+128),w
  9946  04CC  00A8               	movwf	??_sprintf^(0+128)
  9947  04CD  3000               	movlw	0
  9948  04CE  053D               	andwf	(sprintf@flag+1)^(0+128),w
  9949  04CF  00A9               	movwf	(??_sprintf+1)^(0+128)
  9950  04D0  0828               	movf	??_sprintf^(0+128),w
  9951  04D1  0429               	iorwf	(??_sprintf^(0+128)+1),w
  9952  04D2  1903               	btfsc	3,2
  9953  04D3  2CD5               	goto	u5551
  9954  04D4  2CD6               	goto	u5550
  9955  04D5                     u5551:
  9956  04D5  2CE1               	goto	l3363
  9957  04D6                     u5550:
  9958  04D6                     l3359:
  9959                           
  9960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1419:     ((*sp++
      +                           = ('-')));
  9961  04D6  302D               	movlw	45
  9962  04D7  00A8               	movwf	??_sprintf^(0+128)
  9963  04D8  0846               	movf	sprintf@sp^(0+128),w
  9964  04D9  0084               	movwf	4
  9965  04DA  0828               	movf	??_sprintf^(0+128),w
  9966  04DB  1383               	bcf	3,7	;select IRP bank0
  9967  04DC  0080               	movwf	0
  9968  04DD                     l3361:
  9969  04DD  3001               	movlw	1
  9970  04DE  00A8               	movwf	??_sprintf^(0+128)
  9971  04DF  0828               	movf	??_sprintf^(0+128),w
  9972  04E0  07C6               	addwf	sprintf@sp^(0+128),f
  9973  04E1                     l3363:
  9974                           
  9975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1441:    if(width
      +                          )
  9976  04E1  083E               	movf	sprintf@width^(0+128),w
  9977  04E2  043F               	iorwf	(sprintf@width+1)^(0+128),w
  9978  04E3  1903               	btfsc	3,2
  9979  04E4  2CE6               	goto	u5561
  9980  04E5  2CE7               	goto	u5560
  9981  04E6                     u5561:
  9982  04E6  2D32               	goto	l3385
  9983  04E7                     u5560:
  9984  04E7                     l3365:
  9985                           
  9986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1443:      ((*sp+
      +                          + = ('0')));
  9987  04E7  3030               	movlw	48
  9988  04E8  00A8               	movwf	??_sprintf^(0+128)
  9989  04E9  0846               	movf	sprintf@sp^(0+128),w
  9990  04EA  0084               	movwf	4
  9991  04EB  0828               	movf	??_sprintf^(0+128),w
  9992  04EC  1383               	bcf	3,7	;select IRP bank0
  9993  04ED  0080               	movwf	0
  9994  04EE                     l3367:
  9995  04EE  3001               	movlw	1
  9996  04EF  00A8               	movwf	??_sprintf^(0+128)
  9997  04F0  0828               	movf	??_sprintf^(0+128),w
  9998  04F1  07C6               	addwf	sprintf@sp^(0+128),f
  9999  04F2                     l3369:
 10000  04F2  30FF               	movlw	255
 10001  04F3  07BE               	addwf	sprintf@width^(0+128),f
 10002  04F4  1803               	skipnc
 10003  04F5  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10004  04F6  30FF               	movlw	255
 10005  04F7  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10006  04F8  083E               	movf	sprintf@width^(0+128),w
 10007  04F9  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10008  04FA  1D03               	btfss	3,2
 10009  04FB  2CFD               	goto	u5571
 10010  04FC  2CFE               	goto	u5570
 10011  04FD                     u5571:
 10012  04FD  2CE7               	goto	l3365
 10013  04FE                     u5570:
 10014  04FE  2D32               	goto	l3385
 10015  04FF                     l3371:
 10016                           
 10017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10018  04FF  083E               	movf	sprintf@width^(0+128),w
 10019  0500  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10020  0501  1903               	btfsc	3,2
 10021  0502  2D04               	goto	u5581
 10022  0503  2D05               	goto	u5580
 10023  0504                     u5581:
 10024  0504  2D1C               	goto	l3379
 10025  0505                     u5580:
 10026  0505                     l3373:
 10027                           
 10028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10029  0505  3020               	movlw	32
 10030  0506  00A8               	movwf	??_sprintf^(0+128)
 10031  0507  0846               	movf	sprintf@sp^(0+128),w
 10032  0508  0084               	movwf	4
 10033  0509  0828               	movf	??_sprintf^(0+128),w
 10034  050A  1383               	bcf	3,7	;select IRP bank0
 10035  050B  0080               	movwf	0
 10036  050C                     l3375:
 10037  050C  3001               	movlw	1
 10038  050D  00A8               	movwf	??_sprintf^(0+128)
 10039  050E  0828               	movf	??_sprintf^(0+128),w
 10040  050F  07C6               	addwf	sprintf@sp^(0+128),f
 10041  0510                     l3377:
 10042  0510  30FF               	movlw	255
 10043  0511  07BE               	addwf	sprintf@width^(0+128),f
 10044  0512  1803               	skipnc
 10045  0513  0ABF               	incf	(sprintf@width+1)^(0+128),f
 10046  0514  30FF               	movlw	255
 10047  0515  07BF               	addwf	(sprintf@width+1)^(0+128),f
 10048  0516  083E               	movf	sprintf@width^(0+128),w
 10049  0517  043F               	iorwf	(sprintf@width+1)^(0+128),w
 10050  0518  1D03               	btfss	3,2
 10051  0519  2D1B               	goto	u5591
 10052  051A  2D1C               	goto	u5590
 10053  051B                     u5591:
 10054  051B  2D05               	goto	l3373
 10055  051C                     u5590:
 10056  051C                     l3379:
 10057                           
 10058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10059  051C  3003               	movlw	3
 10060  051D  053C               	andwf	sprintf@flag^(0+128),w
 10061  051E  00A8               	movwf	??_sprintf^(0+128)
 10062  051F  3000               	movlw	0
 10063  0520  053D               	andwf	(sprintf@flag+1)^(0+128),w
 10064  0521  00A9               	movwf	(??_sprintf+1)^(0+128)
 10065  0522  0828               	movf	??_sprintf^(0+128),w
 10066  0523  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10067  0524  1903               	btfsc	3,2
 10068  0525  2D27               	goto	u5601
 10069  0526  2D28               	goto	u5600
 10070  0527                     u5601:
 10071  0527  2D32               	goto	l3385
 10072  0528                     u5600:
 10073  0528                     l3381:
 10074                           
 10075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10076  0528  302D               	movlw	45
 10077  0529  00A8               	movwf	??_sprintf^(0+128)
 10078  052A  0846               	movf	sprintf@sp^(0+128),w
 10079  052B  0084               	movwf	4
 10080  052C  0828               	movf	??_sprintf^(0+128),w
 10081  052D  1383               	bcf	3,7	;select IRP bank0
 10082  052E  0080               	movwf	0
 10083  052F  160A  118A  2D14   	goto	l3103
 10084  0532                     l3385:
 10085                           
 10086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10087  0532  3001               	movlw	1
 10088  0533  1283               	bcf	3,5	;RP0=0, select bank0
 10089  0534  1303               	bcf	3,6	;RP1=0, select bank0
 10090  0535  07EA               	addwf	sprintf@f,f
 10091  0536  30FF               	movlw	-1
 10092  0537  076A               	addwf	sprintf@f,w
 10093  0538  0084               	movwf	4
 10094  0539  160A  118A  2000  120A  118A  	fcall	stringdir
 10095  053E  1683               	bsf	3,5	;RP0=1, select bank1
 10096  053F  1303               	bcf	3,6	;RP1=0, select bank1
 10097  0540  00A8               	movwf	??_sprintf^(0+128)
 10098  0541  0828               	movf	??_sprintf^(0+128),w
 10099  0542  00C7               	movwf	sprintf@c^(0+128)
 10100  0543  0847               	movf	sprintf@c^(0+128),w
 10101  0544  1D03               	btfss	3,2
 10102  0545  2D47               	goto	u5611
 10103  0546  2D4A               	goto	u5610
 10104  0547                     u5611:
 10105  0547  160A  118A  2D07   	goto	l3099
 10106  054A                     u5610:
 10107  054A                     l3387:
 10108                           
 10109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10110  054A  0846               	movf	sprintf@sp^(0+128),w
 10111  054B  0084               	movwf	4
 10112  054C  1383               	bcf	3,7	;select IRP bank0
 10113  054D  0180               	clrf	0
 10114  054E                     l314:
 10115  054E  0008               	return
 10116  054F                     __end_of_sprintf:

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         32
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     44      79
    BANK3            96      0       4
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> s(BANK1[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_str@st	PTR unsigned char  size(1) Largest target is 30
		 -> s(BANK1[30]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flsub->___xxtofl
    _send_str->_send_char

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   32214
                                             40 BANK1      4     4      0
                           ___xxtofl
                           _send_str
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31519
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_str                                             4     4      0     145
                                              4 COMMON     4     4      0
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___xxtofl
   _send_str
     _send_char
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      4F       7       98.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       4       9        4.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AE      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Aug 19 00:56:52 2021

                      _s 00CD                        pc 0002                       l86 10D2  
                     l95 1C3C                       l98 1C44             ___awdiv@sign 0025  
                     fsr 0004      ___wmul@multiplicand 0075      __Umul8_16@word_mpld 0022  
                    l104 1CAC                      l213 0FFF                      l206 14FC  
                    l320 1C86                      l241 15F9                      l314 054E  
                    l226 151E                      l318 1C6E                      l504 1D73  
                    l512 115D                      l505 1D8F                      l513 1176  
                    l521 087D                      l506 1DA4                      l354 1F0B  
                    l531 087D                      l509 10F1                      l517 1C4F  
                    l293 0448                      l285 02E1                      l278 029B  
                    l535 12EF                      l471 1F74                      l528 0868  
                    l536 1261                      l624 1D54                      l546 12E2  
                    l634 1D0E                      l651 0630                      l539 12B2  
                    l492 08FE                      l484 1EA3                      l645 05B2  
                    l741 0C9C                      l805 1C61                      l670 0748  
                    l574 1E4A                      l488 093B                      l760 07ED  
                    l649 0659                      l489 08A0                      l753 0C90  
                    l666 0724                      l658 07D6                      l762 07FF  
                    l691 1DF4                      l499 092E                      l747 0C08  
                    l676 076A                      l687 07CA                      l679 07A8  
                    l791 11E0                      l688 07D6                      l785 119B  
                    l787 1232                      l798 11FC                      l799 1208  
                    _isr 1CAD                      fsr0 0004                      indf 0000  
           ___awmod@sign 0079             ___flmul@aexp 003A             ___flmul@bexp 003B  
           ___flmul@sign 0035             ___flmul@temp 0040             ___flmul@prod 003C  
           ___fltol@exp1 005F                     l3001 1183                     l2201 07DA  
                   l3011 11B1                     l3003 1193                     l2211 07FB  
                   l2203 07DC                     l3021 11E7                     l3013 11BE  
                   l3005 11A3                     l2205 07E3                     l2301 1D19  
                   l2221 1F18                     l3101 150D                     l3031 1220  
                   l3023 11F2                     l3015 11C5                     l2207 07E7  
                   l2311 1D3C                     l2303 1D1C                     l2231 1F29  
                   l2223 1F1A                     l2215 1F0C                     l3111 1525  
                   l3103 1514                     l3041 10A2                     l2401 05D0  
                   l3033 1225                     l3025 11F6                     l3017 11C9  
                   l3009 11AC                     l2209 07F6                     l2313 1D42  
                   l2305 1D23                     l2241 1F41                     l2233 1F2F  
                   l2225 1F1E                     l2217 1F0F                     l3201 003A  
                   l3121 157D                     l3113 153B                     l3105 1519  
                   l3051 10AD                     l3043 10A6                     l2411 05E4  
                   l2403 05D4                     l3035 1229                     l3027 1200  
                   l3019 11D7                     l2315 1D43                     l2307 1D27  
                   l2331 1CE9                     l2323 1CD5                     l2243 1F52  
                   l2235 1F32                     l2251 1F66                     l2227 1F23  
                   l2219 1F13                     l3211 009C                     l3203 0061  
                   l3131 15AA                     l3123 1583                     l3115 154D  
                   l3107 151F                     l3061 10B2                     l3053 10AE  
                   l3045 10AA                     l2501 075C                     l2421 05F8  
                   l2413 05E8                     l2405 05D8                     l3037 122A  
                   l3029 120A                     l2317 1D4A                     l2309 1D2B  
                   l2333 1CED                     l2325 1CDB                     l2341 1D0A  
                   l2253 1F6B                     l2245 1F58                     l2237 1F39  
                   l2229 1F27                     l2261 1E4C                     l3301 02FA  
                   l3221 0117                     l3213 00BA                     l3205 0070  
                   l3133 15AF                     l3141 15F3                     l3117 1551  
                   l3125 1593                     l3071 10B7                     l3063 10B3  
                   l3055 10AF                     l3047 10AB                     l2511 076F  
                   l2503 075D                     l2431 063D                     l2415 05EC  
                   l2407 05DC                     l2423 05FC                     l2351 0560  
                   l2319 1D50                     l2335 1CF7                     l2327 1CDE  
                   l2255 1F70                     l2247 1F59                     l2239 1F3D  
                   l2271 1E60                     l2263 1E50                     l3311 03D9  
                   l3303 0318                     l3231 014A                     l3223 0146  
                   l3207 008B                     l3151 1627                     l3143 15F7  
                   l3135 15C4                     l3127 15A1                     l3119 1566  
                   l3081 10C4                     l3073 10B8                     l3065 10B4  
                   l3057 10B0                     l3049 10AC                     l2521 07AD  
                   l2513 0774                     l2505 0761                     l2433 063F  
                   l2441 0651                     l2425 05FD                     l2417 05F0  
                   l2409 05E0                     l2361 0574                     l2353 0561  
                   l2345 054F                     l2601 0A7C                     l2337 1CFD  
                   l2329 1CE5                     l2249 1F60                     l2281 1E78  
                   l2273 1E66                     l2265 1E55                     l3321 042D  
                   l3305 0373                     l3313 0414                     l3241 01AC  
                   l3225 0148                     l3217 00D9                     l3209 0094  
                   l3161 165A                     l3153 162B                     l3137 15DB  
                   l3129 15A4                     l3411 1CA1                     l3403 1C88  
                   l3091 10CB                     l3083 10C5                     l3075 10BB  
                   l3067 10B5                     l3059 10B1                     l2531 07C4  
                   l2523 07B2                     l2515 0782                     l2507 0767  
                   l2451 0682                     l2443 065D                     l2435 0643  
                   l2427 0614                     l2419 05F4                     l2371 058A  
                   l2355 0566                     l2363 0576                     l2347 0556  
                   l2611 0AFC                     l2603 0A99                     l2339 1D04  
                   l2291 1E9A                     l2283 1E82                     l2275 1E69  
                   l2267 1E57                     l2259 1E4B                     l3331 045A  
                   l3315 041C                     l3307 03AE                     l3251 01D5  
                   l3243 01B8                     l3235 0181                     l3219 00E2  
                   l3171 169F                     l3163 1673                     l3155 162F  
                   l3323 0434                     l3147 15FB                     l3139 15E1  
                   l3405 1C8B                     l3093 10CC                     l3085 10C8  
                   l3077 10C0                     l3069 10B6                     l2533 07C6  
                   l2525 07BA                     l2517 0786                     l2461 0699  
                   l2453 0686                     l2445 0662                     l2437 0644  
                   l2429 0634                     l2381 059F                     l2373 0590  
                   l2365 057E                     l2357 056B                     l2349 055C  
                   l2621 0BB4                     l2613 0B29                     l2605 0AA9  
                   l2541 0943                     l2293 1E9F                     l2285 1E88  
                   l2277 1E70                     l2269 1E5B                     l2701 0CA0  
                   l3341 048C                     l3333 0469                     l3325 043A  
                   l3317 0423                     l3309 03CD                     l3261 01FB  
                   l3253 01DA                     l3245 01BE                     l3237 018B  
                   l3181 16E5                     l3173 16A5                     l3165 1677  
                   l3157 163D                     l3149 1619                     l3407 1C96  
                   l3095 10CF                     l3087 10C9                     l3079 10C3  
                   l2535 07D1                     l2527 07BF                     l2519 07A4  
                   l2471 06FC                     l2463 069A                     l2455 068A  
                   l2439 064D                     l2391 05BC                     l2383 05A7  
                   l2375 0594                     l2367 0583                     l2359 0573  
                   l2631 0BD9                     l2623 0BBD                     l2615 0B39  
                   l2607 0AC6                     l2551 0958                     l2543 0949  
                   l2287 1E8F                     l2279 1E74                     l2703 0CA4  
                   l3351 04B6                     l3343 0490                     l3335 0472  
                   l3327 0442                     l3319 0427                     l3271 0229  
                   l3263 0204                     l3255 01E3                     l3247 01C2  
                   l3239 01A6                     l3191 178C                     l3183 1704  
                   l3175 16B8                     l3167 167B                     l3159 1641  
                   l3503 1536                     l3431 1F7A                     l3409 1C9C  
                   l3089 10CA                     l2537 07D5                     l2529 07C0  
                   l2481 0731                     l2473 0702                     l2465 06A3  
                   l2457 0693                     l2449 066B                     l2393 05C0  
                   l2385 05A8                     l2377 0595                     l2369 0589  
                   l2801 12E7                     l2641 0BF1                     l2633 0BE2  
                   l2625 0BCB                     l2617 0B66                     l2609 0ADF  
                   l2561 0975                     l2553 0960                     l2545 094D  
                   l2297 1D0F                     l2289 1E95                     l2713 0D97  
                   l2705 0CA6                     l3361 04DD                     l3353 04C2  
                   l3345 049E                     l3337 047A                     l3329 0453  
                   l3281 02A5                     l3273 0230                     l3265 0208  
                   l3257 01E7                     l3249 01CE                     l3185 174F  
                   l3177 16DB                     l3169 1694                     l3193 1794  
                   l3505 1611                     l3097 1500                     l3441 1FF8  
                   l3433 1F80                     l2491 074C                     l2475 0707  
                   l2459 0695                     l2467 06A8                     l2395 05C4  
                   l2379 059A                     l2387 05AA                     l2811 0894  
                   l2651 0C20                     l2643 0C05                     l2627 0BD4  
                   l2635 0BE8                     l2619 0B8C                     l2571 098C  
                   l2563 0979                     l2555 0962                     l2547 094E  
                   l2539 093C                     l2299 1D13                     l2731 0F44  
                   l2715 0D9E                     l2707 0CAD                     l2723 0E53  
                   l3363 04E1                     l3371 04FF                     l3355 04C6  
                   l3347 04A7                     l3339 0486                     l3291 02D4  
                   l3283 02AE                     l3275 0235                     l3259 01ED  
                   l3267 020E                     l3195 17A3                     l3187 1768  
                   l3179 16DF                     l3099 1507                     l3435 1FBE  
                   l2901 1DA1                     l2493 074F                     l2485 073A  
                   l2469 06BE                     l2477 0716                     l2397 05C8  
                   l2389 05B8                     l2821 08BA                     l2805 087E  
                   l2661 0C5B                     l2653 0C24                     l2637 0BEC  
                   l2629 0BD8                     l2573 098E                     l2565 097A  
                   l2557 096A                     l2549 0953                     l2741 1C51  
                   l2733 0F4B                     l2725 0E5A                     l3381 0528  
                   l3373 0505                     l3365 04E7                     l3357 04CA  
                   l3349 04AB                     l3293 02DB                     l3285 02B2  
                   l3277 0270                     l3269 021B                     l3197 17EA  
                   l3189 1771                     l3437 1FE4                     l3429 1F75  
                   l2903 1DA3                     l2911 1105                     l2495 0751  
                   l2487 0743                     l2479 072C                     l2399 05CC  
                   l2831 08EE                     l2823 08BC                     l2807 088B  
                   l2671 0C88                     l2663 0C6A                     l2655 0C3D  
                   l2647 0C0D                     l2639 0BED                     l2591 09FF  
                   l2583 09A9                     l2575 0996                     l2567 097F  
                   l2559 096F                     l2743 1C52                     l2719 0E26  
                   l3375 050C                     l3367 04EE                     l3359 04D6  
                   l3295 02EA                     l3287 02B8                     l3279 028F  
                   l3199 001F                     l3439 1FEA                     l2681 1C42  
                   l2921 1173                     l2913 110D                     l2497 0756  
                   l2489 0747                     l2833 08EF                     l2825 08C5  
                   l2817 08A1                     l2753 1233                     l2673 0C89  
                   l2665 0C74                     l2649 0C12                     l2657 0C43  
                   l2593 0A2B                     l2585 09B9                     l2577 099B  
                   l2569 0984                     l2745 1C58                     l2737 0FD3  
                   l3377 0510                     l3369 04F2                     l3297 02EF  
                   l3289 02C5                     l3385 0532                     l2923 1175  
                   l2915 1111                     l2907 10D3                     l2931 1C4F  
                   l2499 0758                     l2851 0923                     l2843 090A  
                   l2835 08F8                     l2827 08CE                     l2819 08A9  
                   l2771 1279                     l2755 1246                     l2675 0C94  
                   l2667 0C76                     l2659 0C50                     l2595 0A47  
                   l2587 09C6                     l2579 09A0                     l2691 1408  
                   l2683 12F3                     l2747 1C5E                     l3379 051C  
                   l3299 02F6                     l3387 054A                     l2917 1135  
                   l2909 10E9                     l2941 0818                     l2861 1C68  
                   l2853 0933                     l2837 0902                     l2845 091C  
                   l2829 08E0                     l2781 12A4                     l2773 1282  
                   l2765 1262                     l2669 0C84                     l2597 0A63  
                   l2589 09E3                     l2693 140E                     l2685 12F9  
                   l2749 1C60                     l2679 1C3C                     l2919 1139  
                   l2927 1C45                     l2951 083C                     l2943 082D  
                   l2935 0802                     l2871 1EA4                     l2863 1C75  
                   l2791 12BE                     l2783 12AC                     l2775 128B  
                   l2767 1268                     l2759 124F                     l2599 0A6C  
                   l2929 1C4D                     l2945 082E                     l2937 080F  
                   l2881 1ED3                     l2873 1EB6                     l2865 1C7C  
                   l2857 1C62                     l2785 12B6                     l2793 12D0  
                   l2777 1299                     l2769 1277                     l2697 14B9  
                   l2947 0836                     l2883 1EE5                     l2875 1EB9  
                   l2891 1F03                     l2971 1DF5                     l2867 1C82  
                   l2859 1C64                     l2779 12A3                     l2965 085D  
                   l2957 0844                     l2949 0838                     l2885 1EF3  
                   l2877 1EC6                     l2981 1E25                     l2973 1DFD  
                   l2895 1D55                     l2991 1DA5                     l2967 086D  
                   l2959 0856                     l2887 1EF4                     l2879 1ECA  
                   l2983 1E33                     l2975 1E02                     l2799 12D7  
                   l2897 1D6B                     l2993 1DA9                     l2969 0872  
                   l2889 1EFD                     l2985 1E3C                     l2977 1E0F  
                   l2899 1D87                     l2979 1E13                     l2987 1E42  
                   l2997 117A                     l2999 117F                     ?_isr 0070  
                   STR_1 1096                     u3010 1E78                     u3011 1E77  
                   u3100 1D3C                     u3020 1E82                     u3101 1D3B  
                   u3021 1E81                     u3005 1E6A                     u3200 0566  
                   u4000 0C6A                     u3120 1D50                     u3040 1E95  
                   u3201 0565                     u4001 0C69                     u3121 1D4F  
                   u3105 1D38                     u3041 1E94                     u3025 1E7E  
                   u3210 056B                     u4010 0C88                     u3130 1CDB  
                   u3050 1E9A                     u3211 056A                     u4011 0C87  
                   u3115 1D44                     u3131 1CDA                     u3051 1E99  
                   u3035 1E89                     u4020 1C42                     u3300 0620  
                   u3220 0589                     u3060 1D19                     u4021 1C41  
                   u3221 0588                     u4005 0C66                     u3061 1D18  
                   u3310 0634                     u3230 0594                     u3150 1CED  
                   u4030 12F9                     u4110 0CA4                     u3311 0633  
                   u3231 0593                     u3151 1CEC                     u4031 12F8  
                   u4111 0CA3                     u3400 0699                     u3320 0643  
                   u3240 059A                     u5000 11E6                     u3080 1D2B  
                   u3160 1CF7                     u4200 0E5A                     u4120 0CAD  
                   u3401 0698                     u3321 0642                     u3241 0599  
                   u5001 11E5                     u3081 1D2A                     u3161 1CF6  
                   u3145 1CDF                     u4105 14C4                     u4201 0E59  
                   u4121 0CAC                     u3250 059F                     u3251 059E  
                   u3075 1D1D                     u3500 074C                     u3420 06BE  
                   u3340 0659                     u3260 05B8                     u5020 11F6  
                   u4300 1246                     u3180 1D0A                     u5100 1593  
                   u3501 074B                     u3421 06BD                     u3341 0658  
                   u3261 05B7                     u5021 11F5                     u4301 1245  
                   u3181 1D09                     u3165 1CF3                     u4045 1316  
                   u5101 1592                     u3510 0756                     u3350 065D  
                   u3270 05BC                     u3190 0560                     u5030 11FC  
                   u4310 1260                     u4070 140E                     u5110 15A1  
                   u3511 0755                     u3431 06D5                     u3423 06BA  
                   u3415 069C                     u3351 065C                     u3335 0646  
                   u3271 05BB                     u3191 055F                     u5031 11FB  
                   u5015 11EB                     u4311 125F                     u3095 1D2C  
                   u3175 1CFE                     u4071 140D                     u4055 1372  
                   u4215 0E7C                     u4135 0CCF                     u5111 15A0  
                   u3600 07AD                     u3520 075C                     u3440 06E9  
                   u3432 06D6                     u3360 0662                     u3280 0614  
                   u5040 1200                     u4400 12D6                     u4240 0F4B  
                   u4160 0D9E                     u5200 17A3                     u5120 15F2  
                   u3601 07AC                     u3521 075B                     u3441 06EA  
                   u3433 06DB                     u3361 0661                     u3281 0613  
                   u5041 11FF                     u4401 12D5                     u4065 13C7  
                   u4241 0F4A                     u4225 0EB8                     u4161 0D9D  
                   u4145 0D0B                     u5201 17A2                     u5121 15F1  
                   u3610 07B2                     u3530 0761                     u3450 0707  
                   u3442 06EF                     u3434 06DC                     u3290 061F  
                   u5050 1215                     u4330 1299                     u5210 001F  
                   u5130 1627                     u3611 07B1                     u3531 0760  
                   u3451 0706                     u3443 06F0                     u3435 06E1  
                   u3371 0674                     u3291 061D                     u4331 1298  
                   u4235 0F03                     u4155 0D56                     u5211 17FA  
                   u5131 1624                     u3620 07BF                     u3540 0767  
                   u3460 072C                     u3436 06E2                     u3380 0686  
                   u3372 067B                     u5060 1225                     u4500 0909  
                   u4420 12E7                     u3700 0984                     u5300 01B8  
                   u5220 003A                     u5140 162B                     u3621 07BE  
                   u3541 0766                     u3461 072B                     u3381 0685  
                   u3373 0682                     u3285 0610                     u5061 1224  
                   u4501 0908                     u4421 12E6                     u4325 1284  
                   u3701 0983                     u4085 142B                     u5301 01B7  
                   u5221 0039                     u5205 179F                     u5141 162A  
                   u3630 07C4                     u3550 076E                     u3470 0731  
                   u3390 068A                     u5070 1229                     u4430 088B  
                   u4350 12B2                     u3710 099B                     u2910 1F41  
                   u5310 01C2                     u5230 0061                     u5150 165A  
                   u3631 07C3                     u3551 076D                     u3471 0730  
                   u3391 0689                     u5071 1228                     u5055 1210  
                   u4431 088A                     u4415 12D9                     u4351 12B1  
                   u4335 1295                     u3711 099A                     u4095 1478  
                   u2911 1F40                     u4255 0F5E                     u4175 0DB1  
                   u5311 01C1                     u5231 0060                     u5215 17F5  
                   u5151 1659                     u3640 07D5                     u3560 0774  
                   u4600 1EB6                     u4520 091B                     u4440 089F  
                   u4360 12B6                     u2840 07E7                     u3720 09A0  
                   u4280 1C58                     u5400 02EF                     u5320 01CE  
                   u5240 0070                     u5160 1694                     u5080 150D  
                   u3641 07D4                     u3561 0773                     u4601 1EB5  
                   u4521 091A                     u4441 089E                     u4361 12B5  
                   u4345 12A5                     u2841 07E6                     u3721 099F  
                   u4281 1C57                     u2905 1F33                     u4265 0F9A  
                   u4185 0DED                     u5401 02EE                     u5321 01CD  
                   u5241 006F                     u5161 1693                     u5081 150C  
                   u3570 0786                     u3490 0747                     u4530 0922  
                   u4370 12BD                     u3650 094D                     u4290 1C5E  
                   u2930 1F52                     u5330 01FA                     u5250 008B  
                   u5170 16DF                     u5090 154D                     u3571 0785  
                   u3491 0746                     u4531 0921                     u4515 090B  
                   u4371 12BC                     u3811 0AEE                     u3731 09F1  
                   u3651 094C                     u4291 1C5D                     u2931 1F51  
                   u4275 0FD6                     u4195 0E29                     u5331 01F9  
                   u5251 008A                     u5171 16DE                     u5091 154C  
                   u4700 10E9                     u3580 0795                     u4620 1ECA  
                   u4460 08E0                     u2860 07FB                     u3900 0BD8  
                   u3812 0AF5                     u3732 09F8                     u3660 0953  
                   u5500 0486                     u5340 021B                     u5180 1768  
                   u4701 10E8                     u3485 073C                     u4621 1EC9  
                   u4461 08DF                     u2861 07FA                     u3901 0BD7  
                   u3821 0B1B                     u3813 0AFC                     u3805 0AC8  
                   u3741 0A0D                     u3733 09FF                     u3661 0952  
                   u2925 1F42                     u5501 0485                     u5341 021A  
                   u5245 006C                     u5181 1767                     u4710 1105  
                   u3590 07A4                     u4550 0933                     u4390 12CF  
                   u3822 0B22                     u3742 0A14                     u3670 0958  
                   u2950 1F66                     u2870 1F13                     u5510 0490  
                   u5430 041B                     u5350 0229                     u5270 0180  
                   u5190 178C                     u4711 1104                     u3591 07A3  
                   u4615 1EBB                     u4551 0932                     u4455 08C7  
                   u4391 12CE                     u2855 07EE                     u3831 0B48  
                   u3823 0B29                     u3751 0A39                     u3743 0A1B  
                   u3671 0957                     u2951 1F65                     u2935 1F4E  
                   u2871 1F12                     u5511 048F                     u5431 041A  
                   u5415 0376                     u5351 0228                     u5335 01F6  
                   u5271 017F                     u5191 178B                     u4720 1111  
                   u4800 083C                     u4640 1EE5                     u4560 1C68  
                   u4480 08FE                     u3920 0BEC                     u3840 0B72  
                   u3832 0B4F                     u3752 0A40                     u3680 0979  
                   u2960 1F6B                     u2880 1F1E                     u5600 0528  
                   u5520 049E                     u5440 0433                     u5280 018B  
                   _RBIF 0058                     u4721 1110                     u3585 0790  
                   u4801 083B                     u4641 1EE4                     u4561 1C67  
                   u4545 0925                     u4481 08FD                     u4465 08DC  
                   u4385 12BF                     u3921 0BEB                     u3833 0B56  
                   u3761 0A55                     u3753 0A47                     u3681 0978  
                   u2961 1F6A                     u2945 1F5A                     u2881 1F1D  
                   u5601 0527                     u5521 049D                     u5441 0432  
                   u5425 03DC                     u5345 0217                     u5281 018A  
                   u5265 014D                     u4810 0843                     u4490 0902  
                   u3930 0BF1                     u3762 0A5C                     u3690 097F  
                   u2890 1F2F                     u2970 1E50                     u5610 054A  
                   u5530 04B6                     u5450 043A                     u5370 02A4  
                   u5290 01A6                     u4731 1120                     u4811 0842  
                   u4635 1ECC                     u4491 0901                     u4475 08F1  
                   u3931 0BF0                     u3915 0BDB                     u3851 0B7E  
                   u3763 0A63                     u3691 097E                     u2891 1F2E  
                   u2971 1E4F                     u5611 0547                     u5531 04B5  
                   u5451 0439                     u5371 02A3                     u5291 01A5  
                   u5275 017C                     u5620 1CAC                     u4740 1139  
                   u4732 1121                     u4660 1F03                     u4900 1E13  
                   u3940 0C05                     u3860 0B9A                     u3852 0B85  
                   u2980 1E5B                     u5540 04CA                     u5460 0442  
                   u5380 02C5                     u5621 1CAB                     u4741 1138  
                   u4733 1126                     u4661 1F02                     u4645 1EE1  
                   u4901 1E12                     u3941 0C04                     u3853 0B8C  
                   u3845 0B6D                     u3781 0A8B                     u2981 1E5A  
                   u5541 04C9                     u5525 049A                     u5461 0441  
                   u5381 02C4                     u5365 0238                     u4670 1D6B  
                   u4734 1127                     u4830 0855                     u4910 1E25  
                   u4590 1C82                     u3950 0C0C                     u3782 0A92  
                   u2990 1E66                     u5550 04D6                     u5470 0453  
                   u5390 02D4                     u4671 1D6A                     u4751 1148  
                   u4735 112C                     u4831 0854                     u4655 1EF5  
                   u4911 1E24                     u4591 1C81                     u4575 1C6F  
                   u3951 0C0B                     u3871 0BA6                     u3791 0AB8  
                   u3783 0A99                     u3775 0A65                     u2991 1E65  
                   u5551 04D5                     u5535 04B2                     u5471 0452  
                   u5391 02D3                     u4680 1D87                     u4760 1173  
                   u4752 1149                     u4736 112D                     u4840 085C  
                   u3960 0C12                     u3872 0BAD                     u3792 0ABF  
                   u5560 04E7                     u5480 0469                     u4681 1D86  
                   u4761 1172                     u4753 114E                     u4841 085B  
                   u4825 0845                     u4585 1C76                     u3961 0C11  
                   u3873 0BB4                     u3865 0B95                     u3793 0AC6  
                   u5561 04E6                     u5481 0468                     u5385 02C1  
                   u4690 1DA1                     u4754 114F                     u4770 1C4D  
                   u4930 1E42                     u3970 0C24                     u5570 04FE  
                   u5490 047A                     i1l75 1CCE                     u4691 1DA0  
                   u4755 1154                     u4771 1C4C                     u4931 1E41  
                   u4915 1E21                     u3971 0C23                     u5571 04FD  
                   u5491 0479                     u5475 044F                     u5395 02D0  
                   u4756 1155                     u4860 086D                     u4780 080F  
                   u4940 117F                     u3980 0C33                     u5580 0505  
                   u4765 116F                     u4861 086C                     u4781 080E  
                   u4925 1E34                     u4941 117E                     u3885 0BB6  
                   u5581 0504                     u5485 0465                     u4870 0872  
                   u4790 0826                     u4950 1183                     u3990 0C50  
                   u5590 051C                     u4695 1D9D                     u4871 0871  
                   u4855 085F                     u4951 1182                     u3991 0C4F  
                   u3895 0BCD                     u5591 051B                     u4880 1DFD  
                   u4960 11A3                     u4881 1DFC                     u4961 11A2  
                   u3985 0C2E                     u4795 0821                     u3995 0C4C  
                   u4980 11C4                     u4981 11C3                     u5677 1FF2  
                   u5687 1C9E                     u4895 1E04                     u4975 11B6  
                   u4995 11D8                     _TXIF 0064                     _dig1 006F  
                   _dig2 00CC                     _main 1F75                     _val1 00EB  
                   _val2 0190                     btemp 007E                     start 000C  
           _sprintf$1155 00AD                    ??_isr 0070            ___fltol@sign1 005E  
        __end_of___fladd 07D7                    ?_main 0070          __end_of___awdiv 1F75  
        __end_of___flneg 1C50          __end_of___awmod 1EA4          __end_of___flmul 0C9D  
        __end_of___flsub 1DF5          __end_of___fltol 087E                    _ANSEL 0188  
        __end_of___lldiv 1F0C          ___awdiv@divisor 0020          __end_of___llmod 1E4B  
        __end_of___lwdiv 1D55          __end_of___lwmod 1D0F          ___awdiv@counter 0024  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019          __end_of_dpowers 1096  
                  _scale 0C9D          __end_of_isdigit 1C62                    _setup 10A2  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 054F          __initialization 000F             __end_of_main 2000  
                 ??_main 00C8     __size_of__tdiv_to_l_ 00BD         ___llmod@dividend 0077  
                 ?_scale 0042         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l3421 1CBF                   i1l3413 1CAD  
                 i1l3423 1CC1                   i1l3415 1CB1                   i1l3417 1CB7  
                 i1l3425 1CC2                   i1l3427 1CC8                   i1l3419 1CBB  
                 u563_20 1CB1                   u563_21 1CB0                   u564_20 1CB7  
                 u564_21 1CB6                   u565_20 1CBF                   u565_21 1CBE  
                 u566_20 1CC8                   u566_21 1CC7                   _SPBRGH 009A  
       __end_of___xxtofl 1233         __end_of__powers_ 103A                   ___flge 10D3  
                 ___fleq 1D55                ??___fladd 005E                   ___wmul 1C62  
              ??___awdiv 007A                ??___flneg 0077                ??___awmod 0077  
              ??___flmul 0030                ??___flsub 007B                ??___fltol 0059  
              ??___lldiv 0020                ??___llmod 0020                ??___lwdiv 0079  
              ??___lwmod 0077                   _fround 12F0         ___awdiv@quotient 0026  
        ___awmod@divisor 0073          ___awmod@counter 0078         __end_of_send_str 1CAD  
              ??_isdigit 0073       __size_of__Umul8_16 0029                   saved_w 007E  
              ??_sprintf 00A8               ___flge@ff1 0073               ___flge@ff2 0077  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0073  
             ___fleq@ff1 0073               ___fleq@ff2 0077  __end_of__initialization 001B  
             ___flneg@f1 0073               ___fltol@f1 0055           __pcstackCOMMON 0070  
          __end_of_scale 1000            __end_of_setup 10D3               __div_to_l_ 087E  
         _OPTION_REGbits 0081          __div_to_l_@exp1 0026          __div_to_l_@cntr 0025  
                ??_scale 0046          __div_to_l_@quot 0021             sprintf@width 00BE  
                ??_setup 0073               __pbssBANK0 006F               __pbssBANK1 00CC  
          __div_to_l_@f1 0073            __div_to_l_@f2 0077        __end_of__Umul8_16 0800  
             __pmaintext 1F75                  ?___flge 0073                  ?___fleq 0073  
                ?___wmul 0073               __pintentry 0004       __size_of_send_char 000A  
                ?_fround 0042                ?___xxtofl 0073               __stringtab 1000  
      __end_of__npowers_ 106E               _scale$1154 0050                ?_send_str 0070  
        __size_of___flge 00A4          __size_of___fleq 0050                  ___fladd 054F  
                ___awdiv 1F0C                  ___flneg 1C45                  ___awmod 1E4B  
                ___flmul 093C                  ___flsub 1DA5                  ___fltol 0802  
                ___lldiv 1EA4          __size_of___wmul 0025                  ___llmod 1DF5  
                ___lwdiv 1D0F                  ___lwmod 1CD5          __size_of_fround 020D  
                __ptext1 14FD                  __ptext2 0C9D                  __ptext3 1E4B  
                __ptext4 1F0C                  __ptext5 1C50                  __ptext6 12F0  
                __ptext7 1CD5                  __ptext8 1D0F                  __ptext9 093C  
            ?__div_to_l_ 0073                  _dpowers 106E                  _isdigit 1C50  
           __size_of_isr 0028               ??___xxtofl 0077         ___awmod@dividend 0075  
                _sprintf 14FD                  clrloop0 1C34     end_of_initialization 001B  
      __end_of_send_char 1C45          ___lldiv@divisor 0073          ___lldiv@counter 0025  
             ??_send_str 0074                _RCSTAbits 0018                  psplit$0 D0029  
         __tdiv_to_l_@f1 0073           __tdiv_to_l_@f2 0077            send_char@dato 0073  
          ??__tdiv_to_l_ 0020                _PORTBbits 0006              ___fladd@grs 0069  
          ___xxtofl@sign 0020                _TRISCbits 0087              ___flmul@grs 0036  
              _TXSTAbits 0098      __size_of__div_to_l_ 00BE           __end_of___flge 1177  
         __end_of___fleq 1DA5           __end_of___wmul 1C87        pnum$text1_split_1 0029  
            _BAUDCTLbits 0187           __end_of_fround 14FD      start_initialization 000F  
    __end_of__tdiv_to_l_ 12F0              __end_of_isr 1CD5          ___llmod@divisor 0073  
        ___llmod@counter 0021                 ??___flge 0020                 ??___fleq 0020  
               ??___wmul 0077                __Umul8_16 07D7                 ??_fround 0046  
          sprintf@tmpval 00B6                ___fladd@a 005A                ___fladd@b 0056  
             fround@prec 0055                ___flmul@a 002C                ___flmul@b 0028  
              ___flsub@a 00A0                ___flsub@b 00A4                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0        __size_of___xxtofl 00BC  
            sprintf@flag 00BC              sprintf@eexp 00BA              sprintf@fval 00C0  
            sprintf@prec 00C4                __pnvBANK1 00EB                __pnvBANK3 0190  
       ___lwdiv@dividend 0022                 ?___fladd 0056                 ?___awdiv 0020  
               ?___flneg 0073        __size_of_send_str 0026                 ?___awmod 0073  
               ?___flmul 0028                 ?___flsub 00A0                 ?___fltol 0055  
               ?___lldiv 0073                 ?___llmod 0073                __npowers_ 103A  
             ?__Umul8_16 0073                 ?___lwdiv 0020                 ?___lwmod 0073  
              __pstrings 1000              __tdiv_to_l_ 1233             ??__div_to_l_ 0020  
               ?_isdigit 0070               send_str@st 0077         ___lwdiv@quotient 0024  
               ?_sprintf 006A           __size_of_scale 0363           __size_of_setup 0031  
      interrupt_function 0004           ___wmul@product 0077                 _IOCBbits 0096  
              clear_ram0 1C33                 _PIE1bits 008C                _send_char 1C3B  
               _PIR1bits 000C       __end_of__div_to_l_ 093C              __stringbase 1005  
      ___wmul@multiplier 0073                 _WPUBbits 0095               ?_send_char 0070  
            ??__Umul8_16 0075         __size_of___fladd 0288         __size_of___awdiv 0069  
       __size_of___flneg 000B         __size_of___awmod 0059         __size_of___flmul 0361  
       __size_of___flsub 0050         __size_of___fltol 007C         __size_of___lldiv 0068  
       __size_of___llmod 0056         __size_of___lwdiv 0046         __size_of___lwmod 003A  
            _fround$1152 0051              _fround$1153 004D       __end_of__stringtab 1006  
            _isdigit$981 0073               sprintf@val 00B2                 ___xxtofl 1177  
       __size_of_isdigit 0012          ___lwdiv@divisor 0020          ___lwdiv@counter 0026  
               __ptext10 07D7                 __ptext11 1233                 __ptext20 1C45  
               __ptext12 087E                 __ptext21 10D3                 __ptext13 1177  
               __ptext22 1D55                 __ptext14 1C62                 __ptext23 10A2  
               __ptext15 1DF5                 __ptext24 1C87                 __ptext16 1EA4  
               __ptext25 1C3B                 __ptext17 0802                 __ptext26 1CAD  
               __ptext18 1DA5                 __ptext19 054F                 __powers_ 1006  
       __size_of_sprintf F052                send_str@i 0075            __size_of_main 008B  
              pnum$text1 000D                 _send_str 1C87               _INTCONbits 000B  
               isdigit@c 0074                 scale@scl 0054                 intlevel1 0000  
              sprintf@ap 00B1         __tdiv_to_l_@exp1 0029         __tdiv_to_l_@cntr 0028  
              sprintf@sp 00C6         __tdiv_to_l_@quot 0024         ___lwmod@dividend 0075  
       ___lldiv@dividend 0077              ??_send_char 0073                stringcode 1000  
             _OSCCONbits 008F             ?__tdiv_to_l_ 0073   __Umul8_16@multiplicand 0073  
               sprintf@c 00C7                 sprintf@f 006A         ___lldiv@quotient 0021  
        ___lwmod@divisor 0073          ___lwmod@counter 0078                 stringdir 1000  
               stringtab 1000            ___fladd@signs 0066             ___fladd@aexp 0067  
           ___fladd@bexp 0068     __Umul8_16@multiplier 0024        __Umul8_16@product 0020  
