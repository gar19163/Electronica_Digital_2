

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 18:10:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320  0000                     	;# 
   321  0001                     	;# 
   322  0002                     	;# 
   323  0003                     	;# 
   324  0004                     	;# 
   325  0005                     	;# 
   326  0006                     	;# 
   327  0007                     	;# 
   328  0008                     	;# 
   329  0009                     	;# 
   330  000A                     	;# 
   331  000B                     	;# 
   332  000C                     	;# 
   333  000D                     	;# 
   334  000E                     	;# 
   335  000E                     	;# 
   336  000F                     	;# 
   337  0010                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0013                     	;# 
   341  0014                     	;# 
   342  0015                     	;# 
   343  0015                     	;# 
   344  0016                     	;# 
   345  0017                     	;# 
   346  0018                     	;# 
   347  0019                     	;# 
   348  001A                     	;# 
   349  001B                     	;# 
   350  001B                     	;# 
   351  001C                     	;# 
   352  001D                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  0081                     	;# 
   356  0085                     	;# 
   357  0086                     	;# 
   358  0087                     	;# 
   359  0088                     	;# 
   360  0089                     	;# 
   361  008C                     	;# 
   362  008D                     	;# 
   363  008E                     	;# 
   364  008F                     	;# 
   365  0090                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0094                     	;# 
   372  0095                     	;# 
   373  0096                     	;# 
   374  0097                     	;# 
   375  0098                     	;# 
   376  0099                     	;# 
   377  009A                     	;# 
   378  009B                     	;# 
   379  009C                     	;# 
   380  009D                     	;# 
   381  009E                     	;# 
   382  009F                     	;# 
   383  0105                     	;# 
   384  0107                     	;# 
   385  0108                     	;# 
   386  0109                     	;# 
   387  010C                     	;# 
   388  010C                     	;# 
   389  010D                     	;# 
   390  010E                     	;# 
   391  010F                     	;# 
   392  0185                     	;# 
   393  0187                     	;# 
   394  0188                     	;# 
   395  0189                     	;# 
   396  018C                     	;# 
   397  018D                     	;# 
   398  0000                     	;# 
   399  0001                     	;# 
   400  0002                     	;# 
   401  0003                     	;# 
   402  0004                     	;# 
   403  0005                     	;# 
   404  0006                     	;# 
   405  0007                     	;# 
   406  0008                     	;# 
   407  0009                     	;# 
   408  000A                     	;# 
   409  000B                     	;# 
   410  000C                     	;# 
   411  000D                     	;# 
   412  000E                     	;# 
   413  000E                     	;# 
   414  000F                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0017                     	;# 
   424  0018                     	;# 
   425  0019                     	;# 
   426  001A                     	;# 
   427  001B                     	;# 
   428  001B                     	;# 
   429  001C                     	;# 
   430  001D                     	;# 
   431  001E                     	;# 
   432  001F                     	;# 
   433  0081                     	;# 
   434  0085                     	;# 
   435  0086                     	;# 
   436  0087                     	;# 
   437  0088                     	;# 
   438  0089                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  008F                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0094                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009C                     	;# 
   458  009D                     	;# 
   459  009E                     	;# 
   460  009F                     	;# 
   461  0105                     	;# 
   462  0107                     	;# 
   463  0108                     	;# 
   464  0109                     	;# 
   465  010C                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0185                     	;# 
   471  0187                     	;# 
   472  0188                     	;# 
   473  0189                     	;# 
   474  018C                     	;# 
   475  018D                     	;# 
   476                           
   477                           	psect	strings
   478  0800                     __pstrings:
   479  0800                     stringtab:
   480  0800                     __stringtab:
   481                           
   482                           ;	String table - string pointers are 1 byte each
   483  0800  1BFF               	btfsc	btemp+1,7
   484  0801  280A               	ljmp	stringcode
   485  0802  1383               	bcf	3,7
   486  0803  187F               	btfsc	btemp+1,0
   487  0804  1783               	bsf	3,7
   488  0805  0800               	movf	0,w
   489  0806  0A84               	incf	4,f
   490  0807  1903               	skipnz
   491  0808  0AFF               	incf	btemp+1,f
   492  0809  0008               	return
   493  080A                     stringcode:
   494  080A                     stringdir:
   495  080A  3008               	movlw	high stringdir
   496  080B  008A               	movwf	10
   497  080C  0804               	movf	4,w
   498  080D  0A84               	incf	4,f
   499  080E  0782               	addwf	2,f
   500  080F                     __stringbase:
   501  080F  3400               	retlw	0
   502  0810                     __end_of__stringtab:
   503  0810                     __powers_:
   504  0810  3400               	retlw	0
   505  0811  3400               	retlw	0
   506  0812  3480               	retlw	128
   507  0813  343F               	retlw	63
   508  0814  3400               	retlw	0
   509  0815  3400               	retlw	0
   510  0816  3420               	retlw	32
   511  0817  3441               	retlw	65
   512  0818  3400               	retlw	0
   513  0819  3400               	retlw	0
   514  081A  34C8               	retlw	200
   515  081B  3442               	retlw	66
   516  081C  3400               	retlw	0
   517  081D  3400               	retlw	0
   518  081E  347A               	retlw	122
   519  081F  3444               	retlw	68
   520  0820  3400               	retlw	0
   521  0821  3440               	retlw	64
   522  0822  341C               	retlw	28
   523  0823  3446               	retlw	70
   524  0824  3400               	retlw	0
   525  0825  3450               	retlw	80
   526  0826  34C3               	retlw	195
   527  0827  3447               	retlw	71
   528  0828  3400               	retlw	0
   529  0829  3424               	retlw	36
   530  082A  3474               	retlw	116
   531  082B  3449               	retlw	73
   532  082C  3480               	retlw	128
   533  082D  3496               	retlw	150
   534  082E  3418               	retlw	24
   535  082F  344B               	retlw	75
   536  0830  3420               	retlw	32
   537  0831  34BC               	retlw	188
   538  0832  34BE               	retlw	190
   539  0833  344C               	retlw	76
   540  0834  3428               	retlw	40
   541  0835  346B               	retlw	107
   542  0836  346E               	retlw	110
   543  0837  344E               	retlw	78
   544  0838  34F9               	retlw	249
   545  0839  3402               	retlw	2
   546  083A  3415               	retlw	21
   547  083B  3450               	retlw	80
   548  083C  34EC               	retlw	236
   549  083D  3478               	retlw	120
   550  083E  34AD               	retlw	173
   551  083F  3460               	retlw	96
   552  0840  34CA               	retlw	202
   553  0841  34F2               	retlw	242
   554  0842  3449               	retlw	73
   555  0843  3471               	retlw	113
   556  0844                     __end_of__powers_:
   557  0844                     __npowers_:
   558  0844  3400               	retlw	0
   559  0845  3400               	retlw	0
   560  0846  3480               	retlw	128
   561  0847  343F               	retlw	63
   562  0848  34CD               	retlw	205
   563  0849  34CC               	retlw	204
   564  084A  34CC               	retlw	204
   565  084B  343D               	retlw	61
   566  084C  340A               	retlw	10
   567  084D  34D7               	retlw	215
   568  084E  3423               	retlw	35
   569  084F  343C               	retlw	60
   570  0850  346F               	retlw	111
   571  0851  3412               	retlw	18
   572  0852  3483               	retlw	131
   573  0853  343A               	retlw	58
   574  0854  3417               	retlw	23
   575  0855  34B7               	retlw	183
   576  0856  34D1               	retlw	209
   577  0857  3438               	retlw	56
   578  0858  34AC               	retlw	172
   579  0859  34C5               	retlw	197
   580  085A  3427               	retlw	39
   581  085B  3437               	retlw	55
   582  085C  34BD               	retlw	189
   583  085D  3437               	retlw	55
   584  085E  3486               	retlw	134
   585  085F  3435               	retlw	53
   586  0860  3495               	retlw	149
   587  0861  34BF               	retlw	191
   588  0862  34D6               	retlw	214
   589  0863  3433               	retlw	51
   590  0864  3477               	retlw	119
   591  0865  34CC               	retlw	204
   592  0866  342B               	retlw	43
   593  0867  3432               	retlw	50
   594  0868  345F               	retlw	95
   595  0869  3470               	retlw	112
   596  086A  3489               	retlw	137
   597  086B  3430               	retlw	48
   598  086C  34FF               	retlw	255
   599  086D  34E6               	retlw	230
   600  086E  34DB               	retlw	219
   601  086F  342E               	retlw	46
   602  0870  3408               	retlw	8
   603  0871  34E5               	retlw	229
   604  0872  343C               	retlw	60
   605  0873  341E               	retlw	30
   606  0874  3460               	retlw	96
   607  0875  3442               	retlw	66
   608  0876  34A2               	retlw	162
   609  0877  340D               	retlw	13
   610  0878                     __end_of__npowers_:
   611  0878                     _dpowers:
   612  0878  3401               	retlw	1
   613  0879  3400               	retlw	0
   614  087A  3400               	retlw	0
   615  087B  3400               	retlw	0
   616  087C  340A               	retlw	10
   617  087D  3400               	retlw	0
   618  087E  3400               	retlw	0
   619  087F  3400               	retlw	0
   620  0880  3464               	retlw	100
   621  0881  3400               	retlw	0
   622  0882  3400               	retlw	0
   623  0883  3400               	retlw	0
   624  0884  34E8               	retlw	232
   625  0885  3403               	retlw	3
   626  0886  3400               	retlw	0
   627  0887  3400               	retlw	0
   628  0888  3410               	retlw	16
   629  0889  3427               	retlw	39
   630  088A  3400               	retlw	0
   631  088B  3400               	retlw	0
   632  088C  34A0               	retlw	160
   633  088D  3486               	retlw	134
   634  088E  3401               	retlw	1
   635  088F  3400               	retlw	0
   636  0890  3440               	retlw	64
   637  0891  3442               	retlw	66
   638  0892  340F               	retlw	15
   639  0893  3400               	retlw	0
   640  0894  3480               	retlw	128
   641  0895  3496               	retlw	150
   642  0896  3498               	retlw	152
   643  0897  3400               	retlw	0
   644  0898  3400               	retlw	0
   645  0899  34E1               	retlw	225
   646  089A  34F5               	retlw	245
   647  089B  3405               	retlw	5
   648  089C  3400               	retlw	0
   649  089D  34CA               	retlw	202
   650  089E  349A               	retlw	154
   651  089F  343B               	retlw	59
   652  08A0                     __end_of_dpowers:
   653  0007                     _PORTCbits	set	7
   654  0005                     _PORTA	set	5
   655  001E                     _ADRESH	set	30
   656  000B                     _INTCONbits	set	11
   657  0018                     _RCSTAbits	set	24
   658  0019                     _TXREG	set	25
   659  001F                     _ADCON0bits	set	31
   660  001A                     _RCREG	set	26
   661  000C                     _PIR1bits	set	12
   662  0064                     _TXIF	set	100
   663  008C                     _PIE1bits	set	140
   664  009A                     _SPBRGH	set	154
   665  0099                     _SPBRG	set	153
   666  0098                     _TXSTAbits	set	152
   667  009F                     _ADCON1bits	set	159
   668  0087                     _TRISCbits	set	135
   669  0085                     _TRISA	set	133
   670  0089                     _TRISE	set	137
   671  0187                     _BAUDCTLbits	set	391
   672  0189                     _ANSELH	set	393
   673  0188                     _ANSEL	set	392
   674  08A0                     STR_7:
   675  08A0  3449               	retlw	73	;'I'
   676  08A1  346E               	retlw	110	;'n'
   677  08A2  3463               	retlw	99	;'c'
   678  08A3  3472               	retlw	114	;'r'
   679  08A4  346D               	retlw	109	;'m'
   680  08A5  3465               	retlw	101	;'e'
   681  08A6  346E               	retlw	110	;'n'
   682  08A7  3474               	retlw	116	;'t'
   683  08A8  3461               	retlw	97	;'a'
   684  08A9  3472               	retlw	114	;'r'
   685  08AA  3428               	retlw	40	;'('
   686  08AB  342B               	retlw	43	;'+'
   687  08AC  3429               	retlw	41	;')'
   688  08AD  3420               	retlw	32	;' '
   689  08AE  3470               	retlw	112	;'p'
   690  08AF  3461               	retlw	97	;'a'
   691  08B0  3472               	retlw	114	;'r'
   692  08B1  3461               	retlw	97	;'a'
   693  08B2  3420               	retlw	32	;' '
   694  08B3  3464               	retlw	100	;'d'
   695  08B4  3465               	retlw	101	;'e'
   696  08B5  3463               	retlw	99	;'c'
   697  08B6  3472               	retlw	114	;'r'
   698  08B7  3465               	retlw	101	;'e'
   699  08B8  346D               	retlw	109	;'m'
   700  08B9  3465               	retlw	101	;'e'
   701  08BA  346E               	retlw	110	;'n'
   702  08BB  3474               	retlw	116	;'t'
   703  08BC  3461               	retlw	97	;'a'
   704  08BD  3472               	retlw	114	;'r'
   705  08BE  3428               	retlw	40	;'('
   706  08BF  342D               	retlw	45	;'-'
   707  08C0  3429               	retlw	41	;')'
   708  08C1  340D               	retlw	13
   709  08C2  3400               	retlw	0
   710  08C3                     STR_1:
   711  08C3  3453               	retlw	83	;'S'
   712  08C4  3431               	retlw	49	;'1'
   713  08C5  343A               	retlw	58	;':'
   714  08C6  3420               	retlw	32	;' '
   715  08C7  3420               	retlw	32	;' '
   716  08C8  3420               	retlw	32	;' '
   717  08C9  3453               	retlw	83	;'S'
   718  08CA  3432               	retlw	50	;'2'
   719  08CB  343A               	retlw	58	;':'
   720  08CC  3420               	retlw	32	;' '
   721  08CD  3420               	retlw	32	;' '
   722  08CE  3420               	retlw	32	;' '
   723  08CF  3453               	retlw	83	;'S'
   724  08D0  3433               	retlw	51	;'3'
   725  08D1  343A               	retlw	58	;':'
   726  08D2  3400               	retlw	0
   727  08D3                     STR_5:
   728  08D3  3453               	retlw	83	;'S'
   729  08D4  3431               	retlw	49	;'1'
   730  08D5  343A               	retlw	58	;':'
   731  08D6  3420               	retlw	32	;' '
   732  08D7  3425               	retlw	37	;'%'
   733  08D8  3433               	retlw	51	;'3'
   734  08D9  342E               	retlw	46	;'.'
   735  08DA  3432               	retlw	50	;'2'
   736  08DB  3466               	retlw	102	;'f'
   737  08DC  3456               	retlw	86	;'V'
   738  08DD  340D               	retlw	13
   739  08DE  3400               	retlw	0
   740  08DF                     STR_6:
   741  08DF  3453               	retlw	83	;'S'
   742  08E0  3432               	retlw	50	;'2'
   743  08E1  343A               	retlw	58	;':'
   744  08E2  3420               	retlw	32	;' '
   745  08E3  3425               	retlw	37	;'%'
   746  08E4  3433               	retlw	51	;'3'
   747  08E5  342E               	retlw	46	;'.'
   748  08E6  3432               	retlw	50	;'2'
   749  08E7  3466               	retlw	102	;'f'
   750  08E8  3456               	retlw	86	;'V'
   751  08E9  340D               	retlw	13
   752  08EA  3400               	retlw	0
   753  08EB                     STR_8:
   754  08EB  3453               	retlw	83	;'S'
   755  08EC  3433               	retlw	51	;'3'
   756  08ED  343A               	retlw	58	;':'
   757  08EE  3420               	retlw	32	;' '
   758  08EF  3425               	retlw	37	;'%'
   759  08F0  3433               	retlw	51	;'3'
   760  08F1  342E               	retlw	46	;'.'
   761  08F2  3430               	retlw	48	;'0'
   762  08F3  3466               	retlw	102	;'f'
   763  08F4  3400               	retlw	0
   764  08F5                     STR_2:
   765  08F5  3425               	retlw	37	;'%'
   766  08F6  3433               	retlw	51	;'3'
   767  08F7  342E               	retlw	46	;'.'
   768  08F8  3432               	retlw	50	;'2'
   769  08F9  3466               	retlw	102	;'f'
   770  08FA  3456               	retlw	86	;'V'
   771  08FB  3400               	retlw	0
   772  08F5                     
   773                           	psect	cinit
   774  000F                     start_initialization:	
   775                           ; #config settings
   776                           
   777  000F                     __initialization:
   778                           
   779                           ; Clear objects allocated to BANK0
   780  000F  1283               	bcf	3,5	;RP0=0, select bank0
   781  0010  1303               	bcf	3,6	;RP1=0, select bank0
   782  0011  01EF               	clrf	__pbssBANK0& (0+127)
   783                           
   784                           ; Clear objects allocated to BANK1
   785  0012  1383               	bcf	3,7	;select IRP bank0
   786  0013  30CC               	movlw	low __pbssBANK1
   787  0014  0084               	movwf	4
   788  0015  30DB               	movlw	low (__pbssBANK1+15)
   789  0016  160A  158A  2143  120A  118A  	fcall	clear_ram0
   790                           
   791                           ; Clear objects allocated to BANK3
   792  001B  1783               	bsf	3,7	;select IRP bank2
   793  001C  3090               	movlw	low __pbssBANK3
   794  001D  0084               	movwf	4
   795  001E  30AE               	movlw	low (__pbssBANK3+30)
   796  001F  160A  158A  2143  120A  118A  	fcall	clear_ram0
   797  0024                     end_of_initialization:	
   798                           ;End of C runtime variable initialization code
   799                           
   800  0024                     __end_of__initialization:
   801  0024  0183               	clrf	3
   802  0025  160A  118A  2D59   	ljmp	_main	;jump to C main() function
   803                           
   804                           	psect	bssBANK0
   805  006F                     __pbssBANK0:
   806  006F                     _op:
   807  006F                     	ds	1
   808                           
   809                           	psect	bssBANK1
   810  00CC                     __pbssBANK1:
   811  00CC                     _dig3:
   812  00CC                     	ds	4
   813  00D0                     _dig2:
   814  00D0                     	ds	4
   815  00D4                     _dig1:
   816  00D4                     	ds	4
   817  00D8                     _val2:
   818  00D8                     	ds	1
   819  00D9                     _val1:
   820  00D9                     	ds	1
   821  00DA                     _dig:
   822  00DA                     	ds	1
   823                           
   824                           	psect	bssBANK3
   825  0190                     __pbssBANK3:
   826  0190                     _s:
   827  0190                     	ds	30
   828                           
   829                           	psect	clrtext
   830  1943                     clear_ram0:	
   831                           ;	Called with FSR containing the base address, and
   832                           ;	W with the last address+1
   833                           
   834  1943  0064               	clrwdt	;clear the watchdog before getting into this loop
   835  1944                     clrloop0:
   836  1944  0180               	clrf	0	;clear RAM location pointed to by FSR
   837  1945  0A84               	incf	4,f	;increment pointer
   838  1946  0604               	xorwf	4,w	;XOR with final address
   839  1947  1903               	btfsc	3,2	;have we reached the end yet?
   840  1948  3400               	retlw	0	;all done for this memory range, return
   841  1949  0604               	xorwf	4,w	;XOR again to restore value
   842  194A  2944               	goto	clrloop0	;do the next byte
   843                           
   844                           	psect	cstackBANK1
   845  00A0                     __pcstackBANK1:
   846  00A0                     ?___flsub:
   847  00A0                     ___flsub@a:	
   848                           ; 4 bytes @ 0x0
   849                           
   850                           
   851                           ; 4 bytes @ 0x0
   852  00A0                     	ds	4
   853  00A4                     ___flsub@b:
   854                           
   855                           ; 4 bytes @ 0x4
   856  00A4                     	ds	4
   857  00A8                     ??_sprintf:
   858                           
   859                           ; 1 bytes @ 0x8
   860  00A8                     	ds	5
   861  00AD                     _sprintf$1158:
   862                           
   863                           ; 4 bytes @ 0xD
   864  00AD                     	ds	4
   865  00B1                     sprintf@ap:
   866                           
   867                           ; 1 bytes @ 0x11
   868  00B1                     	ds	1
   869  00B2                     sprintf@val:
   870                           
   871                           ; 4 bytes @ 0x12
   872  00B2                     	ds	4
   873  00B6                     sprintf@flag:
   874                           
   875                           ; 2 bytes @ 0x16
   876  00B6                     	ds	2
   877  00B8                     sprintf@width:
   878                           
   879                           ; 2 bytes @ 0x18
   880  00B8                     	ds	2
   881  00BA                     sprintf@tmpval:
   882                           
   883                           ; 4 bytes @ 0x1A
   884  00BA                     	ds	4
   885  00BE                     sprintf@eexp:
   886                           
   887                           ; 2 bytes @ 0x1E
   888  00BE                     	ds	2
   889  00C0                     sprintf@fval:
   890                           
   891                           ; 4 bytes @ 0x20
   892  00C0                     	ds	4
   893  00C4                     sprintf@sp:
   894                           
   895                           ; 1 bytes @ 0x24
   896  00C4                     	ds	1
   897  00C5                     sprintf@prec:
   898                           
   899                           ; 2 bytes @ 0x25
   900  00C5                     	ds	2
   901  00C7                     sprintf@c:
   902                           
   903                           ; 1 bytes @ 0x27
   904  00C7                     	ds	1
   905  00C8                     ??_main:
   906                           
   907                           ; 1 bytes @ 0x28
   908  00C8                     	ds	4
   909                           
   910                           	psect	cstackCOMMON
   911  0070                     __pcstackCOMMON:
   912  0070                     ?_isdigit:
   913  0070                     ?_setup:	
   914                           ; 1 bit 
   915                           
   916  0070                     ?_Lcd_Init:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_Lcd_Clear:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ?_ADC:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?_isr:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ??_isr:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_main:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_Lcd_Port:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_Lcd_Cmd:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_Lcd_Write_Char:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_send_char:	
   944                           ; 1 bytes @ 0x0
   945                           
   946                           
   947                           ; 1 bytes @ 0x0
   948  0070                     	ds	3
   949  0073                     ?___fleq:
   950  0073                     ?___flge:	
   951                           ; 1 bit 
   952                           
   953  0073                     ??_setup:	
   954                           ; 1 bit 
   955                           
   956  0073                     ??_ADC:	
   957                           ; 1 bytes @ 0x3
   958                           
   959  0073                     ??_isdigit:	
   960                           ; 1 bytes @ 0x3
   961                           
   962  0073                     ??_Lcd_Port:	
   963                           ; 1 bytes @ 0x3
   964                           
   965  0073                     ??_send_char:	
   966                           ; 1 bytes @ 0x3
   967                           
   968  0073                     ?__Umul8_16:	
   969                           ; 1 bytes @ 0x3
   970                           
   971  0073                     ?___wmul:	
   972                           ; 2 bytes @ 0x3
   973                           
   974  0073                     ?___awmod:	
   975                           ; 2 bytes @ 0x3
   976                           
   977  0073                     ?___lwmod:	
   978                           ; 2 bytes @ 0x3
   979                           
   980  0073                     ?__tdiv_to_l_:	
   981                           ; 2 bytes @ 0x3
   982                           
   983  0073                     ?__div_to_l_:	
   984                           ; 4 bytes @ 0x3
   985                           
   986  0073                     ?___lldiv:	
   987                           ; 4 bytes @ 0x3
   988                           
   989  0073                     ?___flneg:	
   990                           ; 4 bytes @ 0x3
   991                           
   992  0073                     ?___llmod:	
   993                           ; 4 bytes @ 0x3
   994                           
   995  0073                     ?___xxtofl:	
   996                           ; 4 bytes @ 0x3
   997                           
   998  0073                     Lcd_Port@a:	
   999                           ; 4 bytes @ 0x3
  1000                           
  1001  0073                     send_char@dato:	
  1002                           ; 1 bytes @ 0x3
  1003                           
  1004  0073                     __Umul8_16@multiplicand:	
  1005                           ; 1 bytes @ 0x3
  1006                           
  1007  0073                     _isdigit$978:	
  1008                           ; 1 bytes @ 0x3
  1009                           
  1010  0073                     ___wmul@multiplier:	
  1011                           ; 1 bytes @ 0x3
  1012                           
  1013  0073                     ___awmod@divisor:	
  1014                           ; 2 bytes @ 0x3
  1015                           
  1016  0073                     ___lwmod@divisor:	
  1017                           ; 2 bytes @ 0x3
  1018                           
  1019  0073                     ___lldiv@divisor:	
  1020                           ; 2 bytes @ 0x3
  1021                           
  1022  0073                     __div_to_l_@f1:	
  1023                           ; 4 bytes @ 0x3
  1024                           
  1025  0073                     ___fleq@ff1:	
  1026                           ; 4 bytes @ 0x3
  1027                           
  1028  0073                     ___flge@ff1:	
  1029                           ; 4 bytes @ 0x3
  1030                           
  1031  0073                     ___flneg@f1:	
  1032                           ; 4 bytes @ 0x3
  1033                           
  1034  0073                     __tdiv_to_l_@f1:	
  1035                           ; 4 bytes @ 0x3
  1036                           
  1037  0073                     ___llmod@divisor:	
  1038                           ; 4 bytes @ 0x3
  1039                           
  1040  0073                     ___xxtofl@val:	
  1041                           ; 4 bytes @ 0x3
  1042                           
  1043                           
  1044                           ; 4 bytes @ 0x3
  1045  0073                     	ds	1
  1046  0074                     ?_send_str:
  1047  0074                     ??_Lcd_Cmd:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050  0074                     ??_Lcd_Write_Char:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053  0074                     ADC@dig:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056  0074                     isdigit@c:	
  1057                           ; 1 bytes @ 0x4
  1058                           
  1059  0074                     send_str@st:	
  1060                           ; 1 bytes @ 0x4
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0x4
  1064  0074                     	ds	1
  1065  0075                     ??__Umul8_16:
  1066  0075                     Lcd_Write_Char@a:	
  1067                           ; 1 bytes @ 0x5
  1068                           
  1069  0075                     ___wmul@multiplicand:	
  1070                           ; 1 bytes @ 0x5
  1071                           
  1072  0075                     ___awmod@dividend:	
  1073                           ; 2 bytes @ 0x5
  1074                           
  1075  0075                     ___lwmod@dividend:	
  1076                           ; 2 bytes @ 0x5
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x5
  1080  0075                     	ds	1
  1081  0076                     ?_Lcd_Write_String:
  1082  0076                     ??_send_str:	
  1083                           ; 1 bytes @ 0x6
  1084                           
  1085  0076                     Lcd_Cmd@a:	
  1086                           ; 1 bytes @ 0x6
  1087                           
  1088  0076                     Lcd_Write_String@a:	
  1089                           ; 1 bytes @ 0x6
  1090                           
  1091                           
  1092                           ; 2 bytes @ 0x6
  1093  0076                     	ds	1
  1094  0077                     ??_Lcd_Init:
  1095  0077                     ??_Lcd_Clear:	
  1096                           ; 1 bytes @ 0x7
  1097                           
  1098  0077                     ?_Lcd_Set_Cursor:	
  1099                           ; 1 bytes @ 0x7
  1100                           
  1101  0077                     ??___wmul:	
  1102                           ; 1 bytes @ 0x7
  1103                           
  1104  0077                     ??___awmod:	
  1105                           ; 1 bytes @ 0x7
  1106                           
  1107  0077                     ??___flneg:	
  1108                           ; 1 bytes @ 0x7
  1109                           
  1110  0077                     ??___lwmod:	
  1111                           ; 1 bytes @ 0x7
  1112                           
  1113  0077                     ??___xxtofl:	
  1114                           ; 1 bytes @ 0x7
  1115                           
  1116  0077                     Lcd_Set_Cursor@b:	
  1117                           ; 1 bytes @ 0x7
  1118                           
  1119  0077                     ___wmul@product:	
  1120                           ; 1 bytes @ 0x7
  1121                           
  1122  0077                     ___lldiv@dividend:	
  1123                           ; 2 bytes @ 0x7
  1124                           
  1125  0077                     __div_to_l_@f2:	
  1126                           ; 4 bytes @ 0x7
  1127                           
  1128  0077                     ___fleq@ff2:	
  1129                           ; 4 bytes @ 0x7
  1130                           
  1131  0077                     ___flge@ff2:	
  1132                           ; 4 bytes @ 0x7
  1133                           
  1134  0077                     __tdiv_to_l_@f2:	
  1135                           ; 4 bytes @ 0x7
  1136                           
  1137  0077                     ___llmod@dividend:	
  1138                           ; 4 bytes @ 0x7
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x7
  1142  0077                     	ds	1
  1143  0078                     ??_Lcd_Set_Cursor:
  1144  0078                     ??_Lcd_Write_String:	
  1145                           ; 1 bytes @ 0x8
  1146                           
  1147  0078                     ___awmod@counter:	
  1148                           ; 1 bytes @ 0x8
  1149                           
  1150  0078                     ___lwmod@counter:	
  1151                           ; 1 bytes @ 0x8
  1152                           
  1153                           
  1154                           ; 1 bytes @ 0x8
  1155  0078                     	ds	1
  1156  0079                     ??___lwdiv:
  1157  0079                     Lcd_Set_Cursor@a:	
  1158                           ; 1 bytes @ 0x9
  1159                           
  1160  0079                     ___awmod@sign:	
  1161                           ; 1 bytes @ 0x9
  1162                           
  1163  0079                     send_str@i:	
  1164                           ; 1 bytes @ 0x9
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x9
  1168  0079                     	ds	1
  1169  007A                     ??___awdiv:
  1170  007A                     Lcd_Set_Cursor@temp:	
  1171                           ; 1 bytes @ 0xA
  1172                           
  1173                           
  1174                           ; 1 bytes @ 0xA
  1175  007A                     	ds	1
  1176  007B                     ??___flsub:
  1177                           
  1178                           	psect	cstackBANK0
  1179  0020                     __pcstackBANK0:	
  1180                           ; 1 bytes @ 0xB
  1181                           
  1182  0020                     ??__tdiv_to_l_:
  1183  0020                     ??__div_to_l_:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0020                     ??___lldiv:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0020                     ??___fleq:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0020                     ??___flge:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0020                     ??___llmod:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0020                     ?___awdiv:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0020                     ?___lwdiv:	
  1202                           ; 2 bytes @ 0x0
  1203                           
  1204  0020                     ___xxtofl@sign:	
  1205                           ; 2 bytes @ 0x0
  1206                           
  1207  0020                     Lcd_Write_String@i:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0020                     ___awdiv@divisor:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213  0020                     ___lwdiv@divisor:	
  1214                           ; 2 bytes @ 0x0
  1215                           
  1216  0020                     __Umul8_16@product:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219                           
  1220                           ; 2 bytes @ 0x0
  1221  0020                     	ds	1
  1222  0021                     ___llmod@counter:
  1223  0021                     ___xxtofl@exp:	
  1224                           ; 1 bytes @ 0x1
  1225                           
  1226  0021                     ___lldiv@quotient:	
  1227                           ; 1 bytes @ 0x1
  1228                           
  1229  0021                     __div_to_l_@quot:	
  1230                           ; 4 bytes @ 0x1
  1231                           
  1232                           
  1233                           ; 4 bytes @ 0x1
  1234  0021                     	ds	1
  1235  0022                     ___awdiv@dividend:
  1236  0022                     ___lwdiv@dividend:	
  1237                           ; 2 bytes @ 0x2
  1238                           
  1239  0022                     __Umul8_16@word_mpld:	
  1240                           ; 2 bytes @ 0x2
  1241                           
  1242  0022                     ___xxtofl@arg:	
  1243                           ; 2 bytes @ 0x2
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x2
  1247  0022                     	ds	2
  1248  0024                     ___awdiv@counter:
  1249  0024                     __Umul8_16@multiplier:	
  1250                           ; 1 bytes @ 0x4
  1251                           
  1252  0024                     ___lwdiv@quotient:	
  1253                           ; 1 bytes @ 0x4
  1254                           
  1255  0024                     __tdiv_to_l_@quot:	
  1256                           ; 2 bytes @ 0x4
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x4
  1260  0024                     	ds	1
  1261  0025                     ___lldiv@counter:
  1262  0025                     ___awdiv@sign:	
  1263                           ; 1 bytes @ 0x5
  1264                           
  1265  0025                     __div_to_l_@cntr:	
  1266                           ; 1 bytes @ 0x5
  1267                           
  1268                           
  1269                           ; 1 bytes @ 0x5
  1270  0025                     	ds	1
  1271  0026                     __div_to_l_@exp1:
  1272  0026                     ___lwdiv@counter:	
  1273                           ; 1 bytes @ 0x6
  1274                           
  1275  0026                     ___awdiv@quotient:	
  1276                           ; 1 bytes @ 0x6
  1277                           
  1278                           
  1279                           ; 2 bytes @ 0x6
  1280  0026                     	ds	2
  1281  0028                     ?___flmul:
  1282  0028                     __tdiv_to_l_@cntr:	
  1283                           ; 4 bytes @ 0x8
  1284                           
  1285  0028                     ___flmul@b:	
  1286                           ; 1 bytes @ 0x8
  1287                           
  1288                           
  1289                           ; 4 bytes @ 0x8
  1290  0028                     	ds	1
  1291  0029                     __tdiv_to_l_@exp1:
  1292                           
  1293                           ; 1 bytes @ 0x9
  1294  0029                     	ds	3
  1295  002C                     ___flmul@a:
  1296                           
  1297                           ; 4 bytes @ 0xC
  1298  002C                     	ds	4
  1299  0030                     ??___flmul:
  1300                           
  1301                           ; 1 bytes @ 0x10
  1302  0030                     	ds	5
  1303  0035                     ___flmul@sign:
  1304                           
  1305                           ; 1 bytes @ 0x15
  1306  0035                     	ds	1
  1307  0036                     ___flmul@grs:
  1308                           
  1309                           ; 4 bytes @ 0x16
  1310  0036                     	ds	4
  1311  003A                     ___flmul@aexp:
  1312                           
  1313                           ; 1 bytes @ 0x1A
  1314  003A                     	ds	1
  1315  003B                     ___flmul@bexp:
  1316                           
  1317                           ; 1 bytes @ 0x1B
  1318  003B                     	ds	1
  1319  003C                     ___flmul@prod:
  1320                           
  1321                           ; 4 bytes @ 0x1C
  1322  003C                     	ds	4
  1323  0040                     ___flmul@temp:
  1324                           
  1325                           ; 2 bytes @ 0x20
  1326  0040                     	ds	2
  1327  0042                     ?_fround:
  1328  0042                     ?_scale:	
  1329                           ; 4 bytes @ 0x22
  1330                           
  1331                           
  1332                           ; 4 bytes @ 0x22
  1333  0042                     	ds	4
  1334  0046                     ??_fround:
  1335  0046                     ??_scale:	
  1336                           ; 1 bytes @ 0x26
  1337                           
  1338                           
  1339                           ; 1 bytes @ 0x26
  1340  0046                     	ds	7
  1341  004D                     _fround$1156:
  1342                           
  1343                           ; 4 bytes @ 0x2D
  1344  004D                     	ds	3
  1345  0050                     _scale$1157:
  1346                           
  1347                           ; 4 bytes @ 0x30
  1348  0050                     	ds	1
  1349  0051                     _fround$1155:
  1350                           
  1351                           ; 4 bytes @ 0x31
  1352  0051                     	ds	3
  1353  0054                     scale@scl:
  1354                           
  1355                           ; 1 bytes @ 0x34
  1356  0054                     	ds	1
  1357  0055                     ?___fltol:
  1358  0055                     fround@prec:	
  1359                           ; 4 bytes @ 0x35
  1360                           
  1361  0055                     ___fltol@f1:	
  1362                           ; 1 bytes @ 0x35
  1363                           
  1364                           
  1365                           ; 4 bytes @ 0x35
  1366  0055                     	ds	1
  1367  0056                     ?___fladd:
  1368  0056                     ___fladd@b:	
  1369                           ; 4 bytes @ 0x36
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x36
  1373  0056                     	ds	3
  1374  0059                     ??___fltol:
  1375                           
  1376                           ; 1 bytes @ 0x39
  1377  0059                     	ds	1
  1378  005A                     ___fladd@a:
  1379                           
  1380                           ; 4 bytes @ 0x3A
  1381  005A                     	ds	4
  1382  005E                     ??___fladd:
  1383  005E                     ___fltol@sign1:	
  1384                           ; 1 bytes @ 0x3E
  1385                           
  1386                           
  1387                           ; 1 bytes @ 0x3E
  1388  005E                     	ds	1
  1389  005F                     ___fltol@exp1:
  1390                           
  1391                           ; 1 bytes @ 0x3F
  1392  005F                     	ds	7
  1393  0066                     ___fladd@signs:
  1394                           
  1395                           ; 1 bytes @ 0x46
  1396  0066                     	ds	1
  1397  0067                     ___fladd@aexp:
  1398                           
  1399                           ; 1 bytes @ 0x47
  1400  0067                     	ds	1
  1401  0068                     ___fladd@bexp:
  1402                           
  1403                           ; 1 bytes @ 0x48
  1404  0068                     	ds	1
  1405  0069                     ___fladd@grs:
  1406                           
  1407                           ; 1 bytes @ 0x49
  1408  0069                     	ds	1
  1409  006A                     ?_sprintf:
  1410  006A                     sprintf@f:	
  1411                           ; 2 bytes @ 0x4A
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x4A
  1415  006A                     	ds	5
  1416                           
  1417                           	psect	maintext
  1418  1559                     __pmaintext:	
  1419 ;;
  1420 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1421 ;;
  1422 ;; *************** function _main *****************
  1423 ;; Defined at:
  1424 ;;		line 90 in file "Lab02.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : B00/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          0       0       4       0       0
  1441 ;;      Totals:         0       0       4       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels required when called: 5
  1444 ;; This function calls:
  1445 ;;		_ADC
  1446 ;;		_Lcd_Clear
  1447 ;;		_Lcd_Init
  1448 ;;		_Lcd_Set_Cursor
  1449 ;;		_Lcd_Write_String
  1450 ;;		___fladd
  1451 ;;		___flmul
  1452 ;;		___flsub
  1453 ;;		___xxtofl
  1454 ;;		_send_str
  1455 ;;		_setup
  1456 ;;		_sprintf
  1457 ;; This function is called by:
  1458 ;;		Startup code after reset
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _main
  1464  1559                     _main:
  1465  1559                     l3484:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1468                           
  1469                           
  1470                           ;Lab02.c: 91:     setup();
  1471  1559  160A  158A  2278  160A  118A  	fcall	_setup
  1472                           
  1473                           ;Lab02.c: 92:     Lcd_Init();
  1474  155E  160A  158A  2237  160A  118A  	fcall	_Lcd_Init
  1475                           
  1476                           ;Lab02.c: 93:     Lcd_Clear();
  1477  1563  160A  158A  2160  160A  118A  	fcall	_Lcd_Clear
  1478  1568                     l3486:
  1479                           
  1480                           ;Lab02.c: 95:         if (op=='+'){
  1481  1568  302B               	movlw	43
  1482  1569  1283               	bcf	3,5	;RP0=0, select bank0
  1483  156A  1303               	bcf	3,6	;RP1=0, select bank0
  1484  156B  066F               	xorwf	_op,w
  1485  156C  1D03               	btfss	3,2
  1486  156D  2D6F               	goto	u5651
  1487  156E  2D70               	goto	u5650
  1488  156F                     u5651:
  1489  156F  2DB1               	goto	l3492
  1490  1570                     u5650:
  1491  1570                     l3488:
  1492                           
  1493                           ;Lab02.c: 96:             dig3++;
  1494  1570  303F               	movlw	63
  1495  1571  00D9               	movwf	___fladd@b+3
  1496  1572  3080               	movlw	128
  1497  1573  00D8               	movwf	___fladd@b+2
  1498  1574  3000               	movlw	0
  1499  1575  00D7               	movwf	___fladd@b+1
  1500  1576  3000               	movlw	0
  1501  1577  00D6               	movwf	___fladd@b
  1502  1578  1683               	bsf	3,5	;RP0=1, select bank1
  1503  1579  1303               	bcf	3,6	;RP1=0, select bank1
  1504  157A  084F               	movf	(_dig3+3)^(0+128),w
  1505  157B  1283               	bcf	3,5	;RP0=0, select bank0
  1506  157C  1303               	bcf	3,6	;RP1=0, select bank0
  1507  157D  00DD               	movwf	___fladd@a+3
  1508  157E  1683               	bsf	3,5	;RP0=1, select bank1
  1509  157F  1303               	bcf	3,6	;RP1=0, select bank1
  1510  1580  084E               	movf	(_dig3+2)^(0+128),w
  1511  1581  1283               	bcf	3,5	;RP0=0, select bank0
  1512  1582  1303               	bcf	3,6	;RP1=0, select bank0
  1513  1583  00DC               	movwf	___fladd@a+2
  1514  1584  1683               	bsf	3,5	;RP0=1, select bank1
  1515  1585  1303               	bcf	3,6	;RP1=0, select bank1
  1516  1586  084D               	movf	(_dig3+1)^(0+128),w
  1517  1587  1283               	bcf	3,5	;RP0=0, select bank0
  1518  1588  1303               	bcf	3,6	;RP1=0, select bank0
  1519  1589  00DB               	movwf	___fladd@a+1
  1520  158A  1683               	bsf	3,5	;RP0=1, select bank1
  1521  158B  1303               	bcf	3,6	;RP1=0, select bank1
  1522  158C  084C               	movf	_dig3^(0+128),w
  1523  158D  1283               	bcf	3,5	;RP0=0, select bank0
  1524  158E  1303               	bcf	3,6	;RP1=0, select bank0
  1525  158F  00DA               	movwf	___fladd@a
  1526  1590  160A  118A  22D1  160A  118A  	fcall	___fladd
  1527  1595  1283               	bcf	3,5	;RP0=0, select bank0
  1528  1596  1303               	bcf	3,6	;RP1=0, select bank0
  1529  1597  0859               	movf	?___fladd+3,w
  1530  1598  1683               	bsf	3,5	;RP0=1, select bank1
  1531  1599  1303               	bcf	3,6	;RP1=0, select bank1
  1532  159A  00CF               	movwf	(_dig3+3)^(0+128)
  1533  159B  1283               	bcf	3,5	;RP0=0, select bank0
  1534  159C  1303               	bcf	3,6	;RP1=0, select bank0
  1535  159D  0858               	movf	?___fladd+2,w
  1536  159E  1683               	bsf	3,5	;RP0=1, select bank1
  1537  159F  1303               	bcf	3,6	;RP1=0, select bank1
  1538  15A0  00CE               	movwf	(_dig3+2)^(0+128)
  1539  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  1540  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  1541  15A3  0857               	movf	?___fladd+1,w
  1542  15A4  1683               	bsf	3,5	;RP0=1, select bank1
  1543  15A5  1303               	bcf	3,6	;RP1=0, select bank1
  1544  15A6  00CD               	movwf	(_dig3+1)^(0+128)
  1545  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1546  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1547  15A9  0856               	movf	?___fladd,w
  1548  15AA  1683               	bsf	3,5	;RP0=1, select bank1
  1549  15AB  1303               	bcf	3,6	;RP1=0, select bank1
  1550  15AC  00CC               	movwf	_dig3^(0+128)
  1551  15AD                     l3490:
  1552                           
  1553                           ;Lab02.c: 97:             op = 0;
  1554  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  1555  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  1556  15AF  01EF               	clrf	_op
  1557                           
  1558                           ;Lab02.c: 98:         }
  1559  15B0  2DD9               	goto	l3498
  1560  15B1                     l3492:
  1561  15B1  302D               	movlw	45
  1562  15B2  066F               	xorwf	_op,w
  1563  15B3  1D03               	btfss	3,2
  1564  15B4  2DB6               	goto	u5661
  1565  15B5  2DB7               	goto	u5660
  1566  15B6                     u5661:
  1567  15B6  2DD9               	goto	l3498
  1568  15B7                     u5660:
  1569  15B7                     l3494:
  1570                           
  1571                           ;Lab02.c: 100:             dig3--;
  1572  15B7  303F               	movlw	63
  1573  15B8  1683               	bsf	3,5	;RP0=1, select bank1
  1574  15B9  1303               	bcf	3,6	;RP1=0, select bank1
  1575  15BA  00A3               	movwf	(___flsub@a+3)^(0+128)
  1576  15BB  3080               	movlw	128
  1577  15BC  00A2               	movwf	(___flsub@a+2)^(0+128)
  1578  15BD  3000               	movlw	0
  1579  15BE  00A1               	movwf	(___flsub@a+1)^(0+128)
  1580  15BF  3000               	movlw	0
  1581  15C0  00A0               	movwf	___flsub@a^(0+128)
  1582  15C1  084F               	movf	(_dig3+3)^(0+128),w
  1583  15C2  00A7               	movwf	(___flsub@b+3)^(0+128)
  1584  15C3  084E               	movf	(_dig3+2)^(0+128),w
  1585  15C4  00A6               	movwf	(___flsub@b+2)^(0+128)
  1586  15C5  084D               	movf	(_dig3+1)^(0+128),w
  1587  15C6  00A5               	movwf	(___flsub@b+1)^(0+128)
  1588  15C7  084C               	movf	_dig3^(0+128),w
  1589  15C8  00A4               	movwf	___flsub@b^(0+128)
  1590  15C9  160A  158A  2397  160A  118A  	fcall	___flsub
  1591  15CE  1683               	bsf	3,5	;RP0=1, select bank1
  1592  15CF  1303               	bcf	3,6	;RP1=0, select bank1
  1593  15D0  0823               	movf	(?___flsub+3)^(0+128),w
  1594  15D1  00CF               	movwf	(_dig3+3)^(0+128)
  1595  15D2  0822               	movf	(?___flsub+2)^(0+128),w
  1596  15D3  00CE               	movwf	(_dig3+2)^(0+128)
  1597  15D4  0821               	movf	(?___flsub+1)^(0+128),w
  1598  15D5  00CD               	movwf	(_dig3+1)^(0+128)
  1599  15D6  0820               	movf	?___flsub^(0+128),w
  1600  15D7  00CC               	movwf	_dig3^(0+128)
  1601  15D8  2DAD               	goto	l3490
  1602  15D9                     l3498:
  1603                           
  1604                           ;Lab02.c: 104:         if(ADCON0bits.GO == 0){
  1605  15D9  189F               	btfsc	31,1	;volatile
  1606  15DA  2DDC               	goto	u5671
  1607  15DB  2DDD               	goto	u5670
  1608  15DC                     u5671:
  1609  15DC  2E18               	goto	l83
  1610  15DD                     u5670:
  1611  15DD                     l3500:
  1612                           
  1613                           ;Lab02.c: 105:             if(ADCON0bits.CHS == 5){
  1614  15DD  0C1F               	rrf	31,w	;volatile
  1615  15DE  1683               	bsf	3,5	;RP0=1, select bank1
  1616  15DF  1303               	bcf	3,6	;RP1=0, select bank1
  1617  15E0  00C8               	movwf	??_main^(0+128)
  1618  15E1  0C48               	rrf	??_main^(0+128),w
  1619  15E2  390F               	andlw	15
  1620  15E3  3A05               	xorlw	5
  1621  15E4  1D03               	skipz
  1622  15E5  2DE7               	goto	u5681
  1623  15E6  2DE8               	goto	u5680
  1624  15E7                     u5681:
  1625  15E7  2DFA               	goto	l3506
  1626  15E8                     u5680:
  1627  15E8                     l3502:
  1628                           
  1629                           ;Lab02.c: 106:                 ADCON0bits.CHS = 6;
  1630  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  1631  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  1632  15EA  081F               	movf	31,w	;volatile
  1633  15EB  39C3               	andlw	-61
  1634  15EC  3818               	iorlw	24
  1635  15ED  009F               	movwf	31	;volatile
  1636  15EE                     l3504:
  1637                           
  1638                           ;Lab02.c: 107:                 val1 = ADC(dig);
  1639  15EE  3000               	movlw	0
  1640  15EF  160A  158A  213B  160A  118A  	fcall	_ADC
  1641  15F4  1683               	bsf	3,5	;RP0=1, select bank1
  1642  15F5  1303               	bcf	3,6	;RP1=0, select bank1
  1643  15F6  00C8               	movwf	??_main^(0+128)
  1644  15F7  0848               	movf	??_main^(0+128),w
  1645  15F8  00D9               	movwf	_val1^(0+128)
  1646                           
  1647                           ;Lab02.c: 108:             }
  1648  15F9  2E0B               	goto	l3510
  1649  15FA                     l3506:
  1650                           
  1651                           ;Lab02.c: 110:                 ADCON0bits.CHS = 5;
  1652  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  1653  15FB  1303               	bcf	3,6	;RP1=0, select bank0
  1654  15FC  081F               	movf	31,w	;volatile
  1655  15FD  39C3               	andlw	-61
  1656  15FE  3814               	iorlw	20
  1657  15FF  009F               	movwf	31	;volatile
  1658  1600                     l3508:
  1659                           
  1660                           ;Lab02.c: 111:                 val2 = ADC(dig);
  1661  1600  3000               	movlw	0
  1662  1601  160A  158A  213B  160A  118A  	fcall	_ADC
  1663  1606  1683               	bsf	3,5	;RP0=1, select bank1
  1664  1607  1303               	bcf	3,6	;RP1=0, select bank1
  1665  1608  00C8               	movwf	??_main^(0+128)
  1666  1609  0848               	movf	??_main^(0+128),w
  1667  160A  00D8               	movwf	_val2^(0+128)
  1668  160B                     l3510:
  1669                           
  1670                           ;Lab02.c: 113:             _delay((unsigned long)((50)*(8000000/4000.0)));
  1671  160B  3082               	movlw	130
  1672  160C  1683               	bsf	3,5	;RP0=1, select bank1
  1673  160D  1303               	bcf	3,6	;RP1=0, select bank1
  1674  160E  00C9               	movwf	(??_main^(0+128)+1)
  1675  160F  30DD               	movlw	221
  1676  1610  00C8               	movwf	??_main^(0+128)
  1677  1611                     u5697:
  1678  1611  0BC8               	decfsz	??_main^(0+128),f
  1679  1612  2E11               	goto	u5697
  1680  1613  0BC9               	decfsz	(??_main^(0+128)+1),f
  1681  1614  2E11               	goto	u5697
  1682  1615                     l3512:
  1683                           
  1684                           ;Lab02.c: 114:             ADCON0bits.GO = 1;
  1685  1615  1283               	bcf	3,5	;RP0=0, select bank0
  1686  1616  1303               	bcf	3,6	;RP1=0, select bank0
  1687  1617  149F               	bsf	31,1	;volatile
  1688  1618                     l83:	
  1689                           ;Lab02.c: 115:         }
  1690                           
  1691                           
  1692                           ;Lab02.c: 117:         Lcd_Set_Cursor(1,1);
  1693  1618  01F7               	clrf	Lcd_Set_Cursor@b
  1694  1619  0AF7               	incf	Lcd_Set_Cursor@b,f
  1695  161A  3001               	movlw	1
  1696  161B  160A  158A  21C5  160A  118A  	fcall	_Lcd_Set_Cursor
  1697  1620                     l3514:
  1698                           
  1699                           ;Lab02.c: 118:         Lcd_Write_String("S1:   S2:   S3:");
  1700  1620  30B4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1701  1621  00F6               	movwf	Lcd_Write_String@a
  1702  1622  3080               	movlw	128
  1703  1623  00F7               	movwf	Lcd_Write_String@a+1
  1704  1624  160A  158A  22BB  160A  118A  	fcall	_Lcd_Write_String
  1705  1629                     l3516:
  1706                           
  1707                           ;Lab02.c: 121:         dig1 = val1*0.0196;
  1708  1629  303C               	movlw	60
  1709  162A  1283               	bcf	3,5	;RP0=0, select bank0
  1710  162B  1303               	bcf	3,6	;RP1=0, select bank0
  1711  162C  00AB               	movwf	___flmul@b+3
  1712  162D  30A0               	movlw	160
  1713  162E  00AA               	movwf	___flmul@b+2
  1714  162F  3090               	movlw	144
  1715  1630  00A9               	movwf	___flmul@b+1
  1716  1631  302E               	movlw	46
  1717  1632  00A8               	movwf	___flmul@b
  1718  1633  1683               	bsf	3,5	;RP0=1, select bank1
  1719  1634  1303               	bcf	3,6	;RP1=0, select bank1
  1720  1635  0859               	movf	_val1^(0+128),w
  1721  1636  00C8               	movwf	??_main^(0+128)
  1722  1637  01C9               	clrf	(??_main^(0+128)+1)
  1723  1638  01CA               	clrf	(??_main^(0+128)+2)
  1724  1639  01CB               	clrf	(??_main^(0+128)+3)
  1725  163A  084B               	movf	(??_main+3)^(0+128),w
  1726  163B  00F6               	movwf	___xxtofl@val+3
  1727  163C  084A               	movf	(??_main+2)^(0+128),w
  1728  163D  00F5               	movwf	___xxtofl@val+2
  1729  163E  0849               	movf	(??_main+1)^(0+128),w
  1730  163F  00F4               	movwf	___xxtofl@val+1
  1731  1640  0848               	movf	??_main^(0+128),w
  1732  1641  00F3               	movwf	___xxtofl@val
  1733  1642  3001               	movlw	1
  1734  1643  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1735  1648  0876               	movf	?___xxtofl+3,w
  1736  1649  1283               	bcf	3,5	;RP0=0, select bank0
  1737  164A  1303               	bcf	3,6	;RP1=0, select bank0
  1738  164B  00AF               	movwf	___flmul@a+3
  1739  164C  0875               	movf	?___xxtofl+2,w
  1740  164D  00AE               	movwf	___flmul@a+2
  1741  164E  0874               	movf	?___xxtofl+1,w
  1742  164F  00AD               	movwf	___flmul@a+1
  1743  1650  0873               	movf	?___xxtofl,w
  1744  1651  00AC               	movwf	___flmul@a
  1745  1652  120A  158A  213C  160A  118A  	fcall	___flmul
  1746  1657  1283               	bcf	3,5	;RP0=0, select bank0
  1747  1658  1303               	bcf	3,6	;RP1=0, select bank0
  1748  1659  082B               	movf	?___flmul+3,w
  1749  165A  1683               	bsf	3,5	;RP0=1, select bank1
  1750  165B  1303               	bcf	3,6	;RP1=0, select bank1
  1751  165C  00D7               	movwf	(_dig1+3)^(0+128)
  1752  165D  1283               	bcf	3,5	;RP0=0, select bank0
  1753  165E  1303               	bcf	3,6	;RP1=0, select bank0
  1754  165F  082A               	movf	?___flmul+2,w
  1755  1660  1683               	bsf	3,5	;RP0=1, select bank1
  1756  1661  1303               	bcf	3,6	;RP1=0, select bank1
  1757  1662  00D6               	movwf	(_dig1+2)^(0+128)
  1758  1663  1283               	bcf	3,5	;RP0=0, select bank0
  1759  1664  1303               	bcf	3,6	;RP1=0, select bank0
  1760  1665  0829               	movf	?___flmul+1,w
  1761  1666  1683               	bsf	3,5	;RP0=1, select bank1
  1762  1667  1303               	bcf	3,6	;RP1=0, select bank1
  1763  1668  00D5               	movwf	(_dig1+1)^(0+128)
  1764  1669  1283               	bcf	3,5	;RP0=0, select bank0
  1765  166A  1303               	bcf	3,6	;RP1=0, select bank0
  1766  166B  0828               	movf	?___flmul,w
  1767  166C  1683               	bsf	3,5	;RP0=1, select bank1
  1768  166D  1303               	bcf	3,6	;RP1=0, select bank1
  1769  166E  00D4               	movwf	_dig1^(0+128)
  1770  166F                     l3518:
  1771                           
  1772                           ;Lab02.c: 122:         Lcd_Set_Cursor(2,1);
  1773  166F  01F7               	clrf	Lcd_Set_Cursor@b
  1774  1670  0AF7               	incf	Lcd_Set_Cursor@b,f
  1775  1671  3002               	movlw	2
  1776  1672  160A  158A  21C5  160A  118A  	fcall	_Lcd_Set_Cursor
  1777  1677                     l3520:
  1778                           
  1779                           ;Lab02.c: 123:         sprintf(s,"%3.2fV",dig1);
  1780  1677  30E6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1781  1678  1683               	bsf	3,5	;RP0=1, select bank1
  1782  1679  1303               	bcf	3,6	;RP1=0, select bank1
  1783  167A  00C8               	movwf	??_main^(0+128)
  1784  167B  0848               	movf	??_main^(0+128),w
  1785  167C  1283               	bcf	3,5	;RP0=0, select bank0
  1786  167D  1303               	bcf	3,6	;RP1=0, select bank0
  1787  167E  00EA               	movwf	sprintf@f
  1788  167F  1683               	bsf	3,5	;RP0=1, select bank1
  1789  1680  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1681  0857               	movf	(_dig1+3)^(0+128),w
  1791  1682  1283               	bcf	3,5	;RP0=0, select bank0
  1792  1683  1303               	bcf	3,6	;RP1=0, select bank0
  1793  1684  00EE               	movwf	?_sprintf+4
  1794  1685  1683               	bsf	3,5	;RP0=1, select bank1
  1795  1686  1303               	bcf	3,6	;RP1=0, select bank1
  1796  1687  0856               	movf	(_dig1+2)^(0+128),w
  1797  1688  1283               	bcf	3,5	;RP0=0, select bank0
  1798  1689  1303               	bcf	3,6	;RP1=0, select bank0
  1799  168A  00ED               	movwf	?_sprintf+3
  1800  168B  1683               	bsf	3,5	;RP0=1, select bank1
  1801  168C  1303               	bcf	3,6	;RP1=0, select bank1
  1802  168D  0855               	movf	(_dig1+1)^(0+128),w
  1803  168E  1283               	bcf	3,5	;RP0=0, select bank0
  1804  168F  1303               	bcf	3,6	;RP1=0, select bank0
  1805  1690  00EC               	movwf	?_sprintf+2
  1806  1691  1683               	bsf	3,5	;RP0=1, select bank1
  1807  1692  1303               	bcf	3,6	;RP1=0, select bank1
  1808  1693  0854               	movf	_dig1^(0+128),w
  1809  1694  1283               	bcf	3,5	;RP0=0, select bank0
  1810  1695  1303               	bcf	3,6	;RP1=0, select bank0
  1811  1696  00EB               	movwf	?_sprintf+1
  1812  1697  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1813  1698  120A  118A  2028  160A  118A  	fcall	_sprintf
  1814  169D                     l3522:
  1815                           
  1816                           ;Lab02.c: 124:         Lcd_Write_String(s);
  1817  169D  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1818  169E  00F6               	movwf	Lcd_Write_String@a
  1819  169F  3001               	movlw	1
  1820  16A0  00F7               	movwf	Lcd_Write_String@a+1
  1821  16A1  160A  158A  22BB  160A  118A  	fcall	_Lcd_Write_String
  1822  16A6                     l3524:
  1823                           
  1824                           ;Lab02.c: 126:         dig2 = val2*0.0196;
  1825  16A6  303C               	movlw	60
  1826  16A7  1283               	bcf	3,5	;RP0=0, select bank0
  1827  16A8  1303               	bcf	3,6	;RP1=0, select bank0
  1828  16A9  00AB               	movwf	___flmul@b+3
  1829  16AA  30A0               	movlw	160
  1830  16AB  00AA               	movwf	___flmul@b+2
  1831  16AC  3090               	movlw	144
  1832  16AD  00A9               	movwf	___flmul@b+1
  1833  16AE  302E               	movlw	46
  1834  16AF  00A8               	movwf	___flmul@b
  1835  16B0  1683               	bsf	3,5	;RP0=1, select bank1
  1836  16B1  1303               	bcf	3,6	;RP1=0, select bank1
  1837  16B2  0858               	movf	_val2^(0+128),w
  1838  16B3  00C8               	movwf	??_main^(0+128)
  1839  16B4  01C9               	clrf	(??_main^(0+128)+1)
  1840  16B5  01CA               	clrf	(??_main^(0+128)+2)
  1841  16B6  01CB               	clrf	(??_main^(0+128)+3)
  1842  16B7  084B               	movf	(??_main+3)^(0+128),w
  1843  16B8  00F6               	movwf	___xxtofl@val+3
  1844  16B9  084A               	movf	(??_main+2)^(0+128),w
  1845  16BA  00F5               	movwf	___xxtofl@val+2
  1846  16BB  0849               	movf	(??_main+1)^(0+128),w
  1847  16BC  00F4               	movwf	___xxtofl@val+1
  1848  16BD  0848               	movf	??_main^(0+128),w
  1849  16BE  00F3               	movwf	___xxtofl@val
  1850  16BF  3001               	movlw	1
  1851  16C0  160A  158A  2687  160A  118A  	fcall	___xxtofl
  1852  16C5  0876               	movf	?___xxtofl+3,w
  1853  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  1854  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  1855  16C8  00AF               	movwf	___flmul@a+3
  1856  16C9  0875               	movf	?___xxtofl+2,w
  1857  16CA  00AE               	movwf	___flmul@a+2
  1858  16CB  0874               	movf	?___xxtofl+1,w
  1859  16CC  00AD               	movwf	___flmul@a+1
  1860  16CD  0873               	movf	?___xxtofl,w
  1861  16CE  00AC               	movwf	___flmul@a
  1862  16CF  120A  158A  213C  160A  118A  	fcall	___flmul
  1863  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  1864  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  1865  16D6  082B               	movf	?___flmul+3,w
  1866  16D7  1683               	bsf	3,5	;RP0=1, select bank1
  1867  16D8  1303               	bcf	3,6	;RP1=0, select bank1
  1868  16D9  00D3               	movwf	(_dig2+3)^(0+128)
  1869  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  1870  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  1871  16DC  082A               	movf	?___flmul+2,w
  1872  16DD  1683               	bsf	3,5	;RP0=1, select bank1
  1873  16DE  1303               	bcf	3,6	;RP1=0, select bank1
  1874  16DF  00D2               	movwf	(_dig2+2)^(0+128)
  1875  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  1876  16E1  1303               	bcf	3,6	;RP1=0, select bank0
  1877  16E2  0829               	movf	?___flmul+1,w
  1878  16E3  1683               	bsf	3,5	;RP0=1, select bank1
  1879  16E4  1303               	bcf	3,6	;RP1=0, select bank1
  1880  16E5  00D1               	movwf	(_dig2+1)^(0+128)
  1881  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  1882  16E7  1303               	bcf	3,6	;RP1=0, select bank0
  1883  16E8  0828               	movf	?___flmul,w
  1884  16E9  1683               	bsf	3,5	;RP0=1, select bank1
  1885  16EA  1303               	bcf	3,6	;RP1=0, select bank1
  1886  16EB  00D0               	movwf	_dig2^(0+128)
  1887  16EC                     l3526:
  1888                           
  1889                           ;Lab02.c: 127:         Lcd_Set_Cursor(2,7);
  1890  16EC  3007               	movlw	7
  1891  16ED  00C8               	movwf	??_main^(0+128)
  1892  16EE  0848               	movf	??_main^(0+128),w
  1893  16EF  00F7               	movwf	Lcd_Set_Cursor@b
  1894  16F0  3002               	movlw	2
  1895  16F1  160A  158A  21C5  160A  118A  	fcall	_Lcd_Set_Cursor
  1896  16F6                     l3528:
  1897                           
  1898                           ;Lab02.c: 128:         sprintf(s,"%3.2fV",dig2);
  1899  16F6  30E6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1900  16F7  1683               	bsf	3,5	;RP0=1, select bank1
  1901  16F8  1303               	bcf	3,6	;RP1=0, select bank1
  1902  16F9  00C8               	movwf	??_main^(0+128)
  1903  16FA  0848               	movf	??_main^(0+128),w
  1904  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  1905  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  1906  16FD  00EA               	movwf	sprintf@f
  1907  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  1908  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  1909  1700  0853               	movf	(_dig2+3)^(0+128),w
  1910  1701  1283               	bcf	3,5	;RP0=0, select bank0
  1911  1702  1303               	bcf	3,6	;RP1=0, select bank0
  1912  1703  00EE               	movwf	?_sprintf+4
  1913  1704  1683               	bsf	3,5	;RP0=1, select bank1
  1914  1705  1303               	bcf	3,6	;RP1=0, select bank1
  1915  1706  0852               	movf	(_dig2+2)^(0+128),w
  1916  1707  1283               	bcf	3,5	;RP0=0, select bank0
  1917  1708  1303               	bcf	3,6	;RP1=0, select bank0
  1918  1709  00ED               	movwf	?_sprintf+3
  1919  170A  1683               	bsf	3,5	;RP0=1, select bank1
  1920  170B  1303               	bcf	3,6	;RP1=0, select bank1
  1921  170C  0851               	movf	(_dig2+1)^(0+128),w
  1922  170D  1283               	bcf	3,5	;RP0=0, select bank0
  1923  170E  1303               	bcf	3,6	;RP1=0, select bank0
  1924  170F  00EC               	movwf	?_sprintf+2
  1925  1710  1683               	bsf	3,5	;RP0=1, select bank1
  1926  1711  1303               	bcf	3,6	;RP1=0, select bank1
  1927  1712  0850               	movf	_dig2^(0+128),w
  1928  1713  1283               	bcf	3,5	;RP0=0, select bank0
  1929  1714  1303               	bcf	3,6	;RP1=0, select bank0
  1930  1715  00EB               	movwf	?_sprintf+1
  1931  1716  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1932  1717  120A  118A  2028  160A  118A  	fcall	_sprintf
  1933  171C                     l3530:
  1934                           
  1935                           ;Lab02.c: 129:         Lcd_Write_String(s);
  1936  171C  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1937  171D  00F6               	movwf	Lcd_Write_String@a
  1938  171E  3001               	movlw	1
  1939  171F  00F7               	movwf	Lcd_Write_String@a+1
  1940  1720  160A  158A  22BB  160A  118A  	fcall	_Lcd_Write_String
  1941  1725                     l3532:
  1942                           
  1943                           ;Lab02.c: 131:         sprintf(s,"%3.0f",dig3);
  1944  1725  30E0               	movlw	(low (((STR_8+4)-__stringbase)| (0+32768)))& (0+255)
  1945  1726  1683               	bsf	3,5	;RP0=1, select bank1
  1946  1727  1303               	bcf	3,6	;RP1=0, select bank1
  1947  1728  00C8               	movwf	??_main^(0+128)
  1948  1729  0848               	movf	??_main^(0+128),w
  1949  172A  1283               	bcf	3,5	;RP0=0, select bank0
  1950  172B  1303               	bcf	3,6	;RP1=0, select bank0
  1951  172C  00EA               	movwf	sprintf@f
  1952  172D  1683               	bsf	3,5	;RP0=1, select bank1
  1953  172E  1303               	bcf	3,6	;RP1=0, select bank1
  1954  172F  084F               	movf	(_dig3+3)^(0+128),w
  1955  1730  1283               	bcf	3,5	;RP0=0, select bank0
  1956  1731  1303               	bcf	3,6	;RP1=0, select bank0
  1957  1732  00EE               	movwf	?_sprintf+4
  1958  1733  1683               	bsf	3,5	;RP0=1, select bank1
  1959  1734  1303               	bcf	3,6	;RP1=0, select bank1
  1960  1735  084E               	movf	(_dig3+2)^(0+128),w
  1961  1736  1283               	bcf	3,5	;RP0=0, select bank0
  1962  1737  1303               	bcf	3,6	;RP1=0, select bank0
  1963  1738  00ED               	movwf	?_sprintf+3
  1964  1739  1683               	bsf	3,5	;RP0=1, select bank1
  1965  173A  1303               	bcf	3,6	;RP1=0, select bank1
  1966  173B  084D               	movf	(_dig3+1)^(0+128),w
  1967  173C  1283               	bcf	3,5	;RP0=0, select bank0
  1968  173D  1303               	bcf	3,6	;RP1=0, select bank0
  1969  173E  00EC               	movwf	?_sprintf+2
  1970  173F  1683               	bsf	3,5	;RP0=1, select bank1
  1971  1740  1303               	bcf	3,6	;RP1=0, select bank1
  1972  1741  084C               	movf	_dig3^(0+128),w
  1973  1742  1283               	bcf	3,5	;RP0=0, select bank0
  1974  1743  1303               	bcf	3,6	;RP1=0, select bank0
  1975  1744  00EB               	movwf	?_sprintf+1
  1976  1745  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1977  1746  120A  118A  2028  160A  118A  	fcall	_sprintf
  1978  174B                     l3534:
  1979                           
  1980                           ;Lab02.c: 132:         Lcd_Write_String(s);
  1981  174B  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1982  174C  00F6               	movwf	Lcd_Write_String@a
  1983  174D  3001               	movlw	1
  1984  174E  00F7               	movwf	Lcd_Write_String@a+1
  1985  174F  160A  158A  22BB  160A  118A  	fcall	_Lcd_Write_String
  1986  1754                     l3536:
  1987                           
  1988                           ;Lab02.c: 134:         sprintf(s, "S1: %3.2fV\r",dig1);
  1989  1754  30C4               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1990  1755  1683               	bsf	3,5	;RP0=1, select bank1
  1991  1756  1303               	bcf	3,6	;RP1=0, select bank1
  1992  1757  00C8               	movwf	??_main^(0+128)
  1993  1758  0848               	movf	??_main^(0+128),w
  1994  1759  1283               	bcf	3,5	;RP0=0, select bank0
  1995  175A  1303               	bcf	3,6	;RP1=0, select bank0
  1996  175B  00EA               	movwf	sprintf@f
  1997  175C  1683               	bsf	3,5	;RP0=1, select bank1
  1998  175D  1303               	bcf	3,6	;RP1=0, select bank1
  1999  175E  0857               	movf	(_dig1+3)^(0+128),w
  2000  175F  1283               	bcf	3,5	;RP0=0, select bank0
  2001  1760  1303               	bcf	3,6	;RP1=0, select bank0
  2002  1761  00EE               	movwf	?_sprintf+4
  2003  1762  1683               	bsf	3,5	;RP0=1, select bank1
  2004  1763  1303               	bcf	3,6	;RP1=0, select bank1
  2005  1764  0856               	movf	(_dig1+2)^(0+128),w
  2006  1765  1283               	bcf	3,5	;RP0=0, select bank0
  2007  1766  1303               	bcf	3,6	;RP1=0, select bank0
  2008  1767  00ED               	movwf	?_sprintf+3
  2009  1768  1683               	bsf	3,5	;RP0=1, select bank1
  2010  1769  1303               	bcf	3,6	;RP1=0, select bank1
  2011  176A  0855               	movf	(_dig1+1)^(0+128),w
  2012  176B  1283               	bcf	3,5	;RP0=0, select bank0
  2013  176C  1303               	bcf	3,6	;RP1=0, select bank0
  2014  176D  00EC               	movwf	?_sprintf+2
  2015  176E  1683               	bsf	3,5	;RP0=1, select bank1
  2016  176F  1303               	bcf	3,6	;RP1=0, select bank1
  2017  1770  0854               	movf	_dig1^(0+128),w
  2018  1771  1283               	bcf	3,5	;RP0=0, select bank0
  2019  1772  1303               	bcf	3,6	;RP1=0, select bank0
  2020  1773  00EB               	movwf	?_sprintf+1
  2021  1774  3090               	movlw	(low (_s| (0+256)))& (0+255)
  2022  1775  120A  118A  2028  160A  118A  	fcall	_sprintf
  2023  177A                     l3538:
  2024                           
  2025                           ;Lab02.c: 135:         send_str(s);
  2026  177A  3090               	movlw	(low (_s| (0+256)))& (0+255)
  2027  177B  00F4               	movwf	send_str@st
  2028  177C  3001               	movlw	1
  2029  177D  00F5               	movwf	send_str@st+1
  2030  177E  120A  118A  27B2  160A  118A  	fcall	_send_str
  2031  1783                     l3540:
  2032                           
  2033                           ;Lab02.c: 136:         sprintf(s, "S2: %3.2fV\r",dig2);
  2034  1783  30D0               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2035  1784  1683               	bsf	3,5	;RP0=1, select bank1
  2036  1785  1303               	bcf	3,6	;RP1=0, select bank1
  2037  1786  00C8               	movwf	??_main^(0+128)
  2038  1787  0848               	movf	??_main^(0+128),w
  2039  1788  1283               	bcf	3,5	;RP0=0, select bank0
  2040  1789  1303               	bcf	3,6	;RP1=0, select bank0
  2041  178A  00EA               	movwf	sprintf@f
  2042  178B  1683               	bsf	3,5	;RP0=1, select bank1
  2043  178C  1303               	bcf	3,6	;RP1=0, select bank1
  2044  178D  0853               	movf	(_dig2+3)^(0+128),w
  2045  178E  1283               	bcf	3,5	;RP0=0, select bank0
  2046  178F  1303               	bcf	3,6	;RP1=0, select bank0
  2047  1790  00EE               	movwf	?_sprintf+4
  2048  1791  1683               	bsf	3,5	;RP0=1, select bank1
  2049  1792  1303               	bcf	3,6	;RP1=0, select bank1
  2050  1793  0852               	movf	(_dig2+2)^(0+128),w
  2051  1794  1283               	bcf	3,5	;RP0=0, select bank0
  2052  1795  1303               	bcf	3,6	;RP1=0, select bank0
  2053  1796  00ED               	movwf	?_sprintf+3
  2054  1797  1683               	bsf	3,5	;RP0=1, select bank1
  2055  1798  1303               	bcf	3,6	;RP1=0, select bank1
  2056  1799  0851               	movf	(_dig2+1)^(0+128),w
  2057  179A  1283               	bcf	3,5	;RP0=0, select bank0
  2058  179B  1303               	bcf	3,6	;RP1=0, select bank0
  2059  179C  00EC               	movwf	?_sprintf+2
  2060  179D  1683               	bsf	3,5	;RP0=1, select bank1
  2061  179E  1303               	bcf	3,6	;RP1=0, select bank1
  2062  179F  0850               	movf	_dig2^(0+128),w
  2063  17A0  1283               	bcf	3,5	;RP0=0, select bank0
  2064  17A1  1303               	bcf	3,6	;RP1=0, select bank0
  2065  17A2  00EB               	movwf	?_sprintf+1
  2066  17A3  3090               	movlw	(low (_s| (0+256)))& (0+255)
  2067  17A4  120A  118A  2028  160A  118A  	fcall	_sprintf
  2068  17A9                     l3542:
  2069                           
  2070                           ;Lab02.c: 137:         send_str(s);
  2071  17A9  3090               	movlw	(low (_s| (0+256)))& (0+255)
  2072  17AA  00F4               	movwf	send_str@st
  2073  17AB  3001               	movlw	1
  2074  17AC  00F5               	movwf	send_str@st+1
  2075  17AD  120A  118A  27B2  160A  118A  	fcall	_send_str
  2076  17B2                     l3544:
  2077                           
  2078                           ;Lab02.c: 138:         send_str("Incrmentar(+) para decrementar(-)\r");
  2079  17B2  3091               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2080  17B3  00F4               	movwf	send_str@st
  2081  17B4  3080               	movlw	128
  2082  17B5  00F5               	movwf	send_str@st+1
  2083  17B6  120A  118A  27B2  160A  118A  	fcall	_send_str
  2084  17BB                     l3546:
  2085                           
  2086                           ;Lab02.c: 139:         sprintf(s, "S3: %3.0f",dig3);
  2087  17BB  30DC               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2088  17BC  1683               	bsf	3,5	;RP0=1, select bank1
  2089  17BD  1303               	bcf	3,6	;RP1=0, select bank1
  2090  17BE  00C8               	movwf	??_main^(0+128)
  2091  17BF  0848               	movf	??_main^(0+128),w
  2092  17C0  1283               	bcf	3,5	;RP0=0, select bank0
  2093  17C1  1303               	bcf	3,6	;RP1=0, select bank0
  2094  17C2  00EA               	movwf	sprintf@f
  2095  17C3  1683               	bsf	3,5	;RP0=1, select bank1
  2096  17C4  1303               	bcf	3,6	;RP1=0, select bank1
  2097  17C5  084F               	movf	(_dig3+3)^(0+128),w
  2098  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  2099  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  2100  17C8  00EE               	movwf	?_sprintf+4
  2101  17C9  1683               	bsf	3,5	;RP0=1, select bank1
  2102  17CA  1303               	bcf	3,6	;RP1=0, select bank1
  2103  17CB  084E               	movf	(_dig3+2)^(0+128),w
  2104  17CC  1283               	bcf	3,5	;RP0=0, select bank0
  2105  17CD  1303               	bcf	3,6	;RP1=0, select bank0
  2106  17CE  00ED               	movwf	?_sprintf+3
  2107  17CF  1683               	bsf	3,5	;RP0=1, select bank1
  2108  17D0  1303               	bcf	3,6	;RP1=0, select bank1
  2109  17D1  084D               	movf	(_dig3+1)^(0+128),w
  2110  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2111  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2112  17D4  00EC               	movwf	?_sprintf+2
  2113  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2114  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2115  17D7  084C               	movf	_dig3^(0+128),w
  2116  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2117  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2118  17DA  00EB               	movwf	?_sprintf+1
  2119  17DB  3090               	movlw	(low (_s| (0+256)))& (0+255)
  2120  17DC  120A  118A  2028  160A  118A  	fcall	_sprintf
  2121  17E1                     l3548:
  2122                           
  2123                           ;Lab02.c: 140:         send_str(s);
  2124  17E1  3090               	movlw	(low (_s| (0+256)))& (0+255)
  2125  17E2  00F4               	movwf	send_str@st
  2126  17E3  3001               	movlw	1
  2127  17E4  00F5               	movwf	send_str@st+1
  2128  17E5  120A  118A  27B2  160A  118A  	fcall	_send_str
  2129  17EA                     l3550:
  2130                           
  2131                           ;Lab02.c: 141:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2132  17EA  3006               	movlw	6
  2133  17EB  1683               	bsf	3,5	;RP0=1, select bank1
  2134  17EC  1303               	bcf	3,6	;RP1=0, select bank1
  2135  17ED  00CA               	movwf	(??_main^(0+128)+2)
  2136  17EE  3013               	movlw	19
  2137  17EF  00C9               	movwf	(??_main^(0+128)+1)
  2138  17F0  30AD               	movlw	173
  2139  17F1  00C8               	movwf	??_main^(0+128)
  2140  17F2                     u5707:
  2141  17F2  0BC8               	decfsz	??_main^(0+128),f
  2142  17F3  2FF2               	goto	u5707
  2143  17F4  0BC9               	decfsz	(??_main^(0+128)+1),f
  2144  17F5  2FF2               	goto	u5707
  2145  17F6  0BCA               	decfsz	(??_main^(0+128)+2),f
  2146  17F7  2FF2               	goto	u5707
  2147  17F8                     l3552:
  2148                           
  2149                           ;Lab02.c: 142:         TXREG = '\f';
  2150  17F8  300C               	movlw	12
  2151  17F9  1283               	bcf	3,5	;RP0=0, select bank0
  2152  17FA  1303               	bcf	3,6	;RP1=0, select bank0
  2153  17FB  0099               	movwf	25	;volatile
  2154  17FC  2D68               	goto	l3486
  2155  17FD  120A  118A  280C   	ljmp	start
  2156  1800                     __end_of_main:
  2157                           
  2158                           	psect	text1
  2159  0028                     __ptext1:	
  2160 ;; *************** function _sprintf *****************
  2161 ;; Defined at:
  2162 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  sp              1    wreg     PTR unsigned char 
  2165 ;;		 -> s(30), 
  2166 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  2167 ;;		 -> STR_8(10), STR_6(12), STR_5(12), STR_4(6), 
  2168 ;;		 -> STR_3(7), STR_2(7), 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  2171 ;;		 -> s(30), 
  2172 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  2173 ;;  tmpval          4   26[BANK1 ] struct .
  2174 ;;  val             4   18[BANK1 ] unsigned long 
  2175 ;;  prec            2   37[BANK1 ] int 
  2176 ;;  eexp            2   30[BANK1 ] int 
  2177 ;;  width           2   24[BANK1 ] int 
  2178 ;;  flag            2   22[BANK1 ] unsigned short 
  2179 ;;  cp              2    0        PTR const unsigned char 
  2180 ;;  len             2    0        unsigned int 
  2181 ;;  c               1   39[BANK1 ] unsigned char 
  2182 ;;  ap              1   17[BANK1 ] PTR void [1]
  2183 ;;		 -> ?_sprintf(2), 
  2184 ;;  d               1    0        unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  2   74[BANK0 ] int 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       5       0       0       0
  2195 ;;      Locals:         0       0      27       0       0
  2196 ;;      Temps:          0       0       5       0       0
  2197 ;;      Totals:         0       5      32       0       0
  2198 ;;Total ram usage:       37 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 4
  2201 ;; This function calls:
  2202 ;;		___awdiv
  2203 ;;		___fladd
  2204 ;;		___fleq
  2205 ;;		___flge
  2206 ;;		___flmul
  2207 ;;		___flneg
  2208 ;;		___flsub
  2209 ;;		___fltol
  2210 ;;		___lldiv
  2211 ;;		___llmod
  2212 ;;		___wmul
  2213 ;;		___xxtofl
  2214 ;;		__div_to_l_
  2215 ;;		__tdiv_to_l_
  2216 ;;		_fround
  2217 ;;		_isdigit
  2218 ;;		_scale
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function _sprintf
  2226  0028                     _sprintf:
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2230                           ;sprintf@sp stored from wreg
  2231  0028  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0029  1303               	bcf	3,6	;RP1=0, select bank1
  2233  002A  00C4               	movwf	sprintf@sp^(0+128)
  2234  002B                     l3208:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2237  002B  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2238  002C  00A8               	movwf	??_sprintf^(0+128)
  2239  002D  0828               	movf	??_sprintf^(0+128),w
  2240  002E  00B1               	movwf	sprintf@ap^(0+128)
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2243  002F  2F97               	goto	l3458
  2244  0030                     l3210:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2247  0030  3025               	movlw	37
  2248  0031  0647               	xorwf	sprintf@c^(0+128),w
  2249  0032  1903               	btfsc	3,2
  2250  0033  2835               	goto	u5141
  2251  0034  2836               	goto	u5140
  2252  0035                     u5141:
  2253  0035  2842               	goto	l3216
  2254  0036                     u5140:
  2255  0036                     l3212:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2258  0036  0847               	movf	sprintf@c^(0+128),w
  2259  0037  00A8               	movwf	??_sprintf^(0+128)
  2260  0038  0844               	movf	sprintf@sp^(0+128),w
  2261  0039  0084               	movwf	4
  2262  003A  0828               	movf	??_sprintf^(0+128),w
  2263  003B  1783               	bsf	3,7	;select IRP bank2
  2264  003C  0080               	movwf	0
  2265  003D                     l3214:
  2266  003D  3001               	movlw	1
  2267  003E  00A8               	movwf	??_sprintf^(0+128)
  2268  003F  0828               	movf	??_sprintf^(0+128),w
  2269  0040  07C4               	addwf	sprintf@sp^(0+128),f
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2272  0041  2F97               	goto	l3458
  2273  0042                     l3216:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2276  0042  01B8               	clrf	sprintf@width^(0+128)
  2277  0043  01B9               	clrf	(sprintf@width+1)^(0+128)
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2280  0044  01B6               	clrf	sprintf@flag^(0+128)
  2281  0045  01B7               	clrf	(sprintf@flag+1)^(0+128)
  2282  0046                     l3218:
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2285  0046  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0047  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0048  086A               	movf	sprintf@f,w
  2288  0049  0084               	movwf	4
  2289  004A  120A  158A  200A  120A  118A  	fcall	stringdir
  2290  004F  160A  158A  217E  120A  118A  	fcall	_isdigit
  2291  0054  1C03               	btfss	3,0
  2292  0055  2857               	goto	u5151
  2293  0056  2858               	goto	u5150
  2294  0057                     u5151:
  2295  0057  289E               	goto	l3230
  2296  0058                     u5150:
  2297  0058                     l3220:
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2300  0058  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0059  1303               	bcf	3,6	;RP1=0, select bank1
  2302  005A  01B8               	clrf	sprintf@width^(0+128)
  2303  005B  01B9               	clrf	(sprintf@width+1)^(0+128)
  2304  005C                     l3222:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2307  005C  300A               	movlw	10
  2308  005D  00F3               	movwf	___wmul@multiplier
  2309  005E  3000               	movlw	0
  2310  005F  00F4               	movwf	___wmul@multiplier+1
  2311  0060  1683               	bsf	3,5	;RP0=1, select bank1
  2312  0061  1303               	bcf	3,6	;RP1=0, select bank1
  2313  0062  0839               	movf	(sprintf@width+1)^(0+128),w
  2314  0063  00F6               	movwf	___wmul@multiplicand+1
  2315  0064  0838               	movf	sprintf@width^(0+128),w
  2316  0065  00F5               	movwf	___wmul@multiplicand
  2317  0066  160A  158A  21E9  120A  118A  	fcall	___wmul
  2318  006B  0874               	movf	?___wmul+1,w
  2319  006C  1683               	bsf	3,5	;RP0=1, select bank1
  2320  006D  1303               	bcf	3,6	;RP1=0, select bank1
  2321  006E  00B9               	movwf	(sprintf@width+1)^(0+128)
  2322  006F  0873               	movf	?___wmul,w
  2323  0070  00B8               	movwf	sprintf@width^(0+128)
  2324  0071                     l3224:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2327  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0073  086A               	movf	sprintf@f,w
  2330  0074  0084               	movwf	4
  2331  0075  120A  158A  200A  120A  118A  	fcall	stringdir
  2332  007A  3ED0               	addlw	208
  2333  007B  1683               	bsf	3,5	;RP0=1, select bank1
  2334  007C  1303               	bcf	3,6	;RP1=0, select bank1
  2335  007D  00A8               	movwf	??_sprintf^(0+128)
  2336  007E  30FF               	movlw	255
  2337  007F  1803               	skipnc
  2338  0080  3000               	movlw	0
  2339  0081  00A9               	movwf	(??_sprintf^(0+128)+1)
  2340  0082  0828               	movf	??_sprintf^(0+128),w
  2341  0083  07B8               	addwf	sprintf@width^(0+128),f
  2342  0084  1803               	skipnc
  2343  0085  0AB9               	incf	(sprintf@width+1)^(0+128),f
  2344  0086  0829               	movf	(??_sprintf+1)^(0+128),w
  2345  0087  07B9               	addwf	(sprintf@width+1)^(0+128),f
  2346  0088                     l3226:
  2347  0088  3001               	movlw	1
  2348  0089  00A8               	movwf	??_sprintf^(0+128)
  2349  008A  0828               	movf	??_sprintf^(0+128),w
  2350  008B  1283               	bcf	3,5	;RP0=0, select bank0
  2351  008C  1303               	bcf	3,6	;RP1=0, select bank0
  2352  008D  07EA               	addwf	sprintf@f,f
  2353  008E                     l3228:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2356  008E  086A               	movf	sprintf@f,w
  2357  008F  0084               	movwf	4
  2358  0090  120A  158A  200A  120A  118A  	fcall	stringdir
  2359  0095  160A  158A  217E  120A  118A  	fcall	_isdigit
  2360  009A  1803               	btfsc	3,0
  2361  009B  289D               	goto	u5161
  2362  009C  289E               	goto	u5160
  2363  009D                     u5161:
  2364  009D  285C               	goto	l3222
  2365  009E                     u5160:
  2366  009E                     l3230:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2369  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2370  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2371  00A0  086A               	movf	sprintf@f,w
  2372  00A1  0084               	movwf	4
  2373  00A2  120A  158A  200A  120A  118A  	fcall	stringdir
  2374  00A7  3A2E               	xorlw	46
  2375  00A8  1D03               	skipz
  2376  00A9  28AB               	goto	u5171
  2377  00AA  28AC               	goto	u5170
  2378  00AB                     u5171:
  2379  00AB  28FE               	goto	l3246
  2380  00AC                     u5170:
  2381  00AC                     l3232:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2384  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  2385  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  2386  00AE  1737               	bsf	(sprintf@flag^(0+128)+1),6
  2387  00AF                     l3234:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  2390  00AF  3001               	movlw	1
  2391  00B0  00A8               	movwf	??_sprintf^(0+128)
  2392  00B1  0828               	movf	??_sprintf^(0+128),w
  2393  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  2394  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  2395  00B4  07EA               	addwf	sprintf@f,f
  2396  00B5                     l3236:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2399  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  2400  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  2401  00B7  01C5               	clrf	sprintf@prec^(0+128)
  2402  00B8  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2405  00B9  28EC               	goto	l3244
  2406  00BA                     l3238:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2409  00BA  300A               	movlw	10
  2410  00BB  00F3               	movwf	___wmul@multiplier
  2411  00BC  3000               	movlw	0
  2412  00BD  00F4               	movwf	___wmul@multiplier+1
  2413  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  2414  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  2415  00C0  0846               	movf	(sprintf@prec+1)^(0+128),w
  2416  00C1  00F6               	movwf	___wmul@multiplicand+1
  2417  00C2  0845               	movf	sprintf@prec^(0+128),w
  2418  00C3  00F5               	movwf	___wmul@multiplicand
  2419  00C4  160A  158A  21E9  120A  118A  	fcall	___wmul
  2420  00C9  0874               	movf	?___wmul+1,w
  2421  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  2422  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  2423  00CC  00C6               	movwf	(sprintf@prec+1)^(0+128)
  2424  00CD  0873               	movf	?___wmul,w
  2425  00CE  00C5               	movwf	sprintf@prec^(0+128)
  2426  00CF                     l3240:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2429  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2430  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2431  00D1  086A               	movf	sprintf@f,w
  2432  00D2  0084               	movwf	4
  2433  00D3  120A  158A  200A  120A  118A  	fcall	stringdir
  2434  00D8  3ED0               	addlw	208
  2435  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  2436  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  2437  00DB  00A8               	movwf	??_sprintf^(0+128)
  2438  00DC  30FF               	movlw	255
  2439  00DD  1803               	skipnc
  2440  00DE  3000               	movlw	0
  2441  00DF  00A9               	movwf	(??_sprintf^(0+128)+1)
  2442  00E0  0828               	movf	??_sprintf^(0+128),w
  2443  00E1  07C5               	addwf	sprintf@prec^(0+128),f
  2444  00E2  1803               	skipnc
  2445  00E3  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  2446  00E4  0829               	movf	(??_sprintf+1)^(0+128),w
  2447  00E5  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  2448  00E6                     l3242:
  2449  00E6  3001               	movlw	1
  2450  00E7  00A8               	movwf	??_sprintf^(0+128)
  2451  00E8  0828               	movf	??_sprintf^(0+128),w
  2452  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  2453  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  2454  00EB  07EA               	addwf	sprintf@f,f
  2455  00EC                     l3244:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2458  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  2459  00ED  086A               	movf	sprintf@f,w
  2460  00EE  0084               	movwf	4
  2461  00EF  120A  158A  200A  120A  118A  	fcall	stringdir
  2462  00F4  160A  158A  217E  120A  118A  	fcall	_isdigit
  2463  00F9  1803               	btfsc	3,0
  2464  00FA  28FC               	goto	u5181
  2465  00FB  28FD               	goto	u5180
  2466  00FC                     u5181:
  2467  00FC  28BA               	goto	l3238
  2468  00FD                     u5180:
  2469  00FD  2906               	goto	l3252
  2470  00FE                     l3246:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2473  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  2474  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0100  01C5               	clrf	sprintf@prec^(0+128)
  2476  0101  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2477  0102                     l3248:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2480  0102  1637               	bsf	(sprintf@flag^(0+128)+1),4
  2481  0103  2906               	goto	l3252
  2482  0104                     l278:	
  2483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2484                           
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2487  0104  1537               	bsf	(sprintf@flag^(0+128)+1),2
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  2490  0105  2924               	goto	l3254
  2491  0106                     l3252:
  2492  0106  3001               	movlw	1
  2493  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0109  07EA               	addwf	sprintf@f,f
  2496  010A  30FF               	movlw	-1
  2497  010B  076A               	addwf	sprintf@f,w
  2498  010C  0084               	movwf	4
  2499  010D  120A  158A  200A  120A  118A  	fcall	stringdir
  2500  0112  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0113  1303               	bcf	3,6	;RP1=0, select bank1
  2502  0114  00C7               	movwf	sprintf@c^(0+128)
  2503  0115  00A8               	movwf	??_sprintf^(0+128)
  2504  0116  01A9               	clrf	(??_sprintf^(0+128)+1)
  2505                           
  2506                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2507                           ; Switch size 1, requested type "simple"
  2508                           ; Number of cases is 1, Range of values is 0 to 0
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte            4     3 (average)
  2512                           ; direct_byte           11     8 (fixed)
  2513                           ; jumptable            260     6 (fixed)
  2514                           ;	Chosen strategy is simple_byte
  2515  0117  0829               	movf	(??_sprintf+1)^(0+128),w
  2516  0118  3A00               	xorlw	0	; case 0
  2517  0119  1903               	skipnz
  2518  011A  291C               	goto	l3584
  2519  011B  2F97               	goto	l3458
  2520  011C                     l3584:
  2521                           
  2522                           ; Switch size 1, requested type "simple"
  2523                           ; Number of cases is 2, Range of values is 0 to 102
  2524                           ; switch strategies available:
  2525                           ; Name         Instructions Cycles
  2526                           ; simple_byte            7     4 (average)
  2527                           ; jumptable            260     6 (fixed)
  2528                           ;	Chosen strategy is simple_byte
  2529  011C  0828               	movf	??_sprintf^(0+128),w
  2530  011D  3A00               	xorlw	0	; case 0
  2531  011E  1903               	skipnz
  2532  011F  2FAD               	goto	l3460
  2533  0120  3A66               	xorlw	102	; case 102
  2534  0121  1903               	skipnz
  2535  0122  2904               	goto	l278
  2536  0123  2F97               	goto	l3458
  2537  0124                     l3254:
  2538                           
  2539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2540  0124  3000               	movlw	0
  2541  0125  0536               	andwf	sprintf@flag^(0+128),w
  2542  0126  00A8               	movwf	??_sprintf^(0+128)
  2543  0127  3007               	movlw	7
  2544  0128  0537               	andwf	(sprintf@flag+1)^(0+128),w
  2545  0129  00A9               	movwf	(??_sprintf+1)^(0+128)
  2546  012A  0828               	movf	??_sprintf^(0+128),w
  2547  012B  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2548  012C  1903               	btfsc	3,2
  2549  012D  292F               	goto	u5191
  2550  012E  2930               	goto	u5190
  2551  012F                     u5191:
  2552  012F  2ED4               	goto	l3412
  2553  0130                     u5190:
  2554  0130                     l3256:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2557  0130  1E37               	btfss	(sprintf@flag+1)^(0+128),4
  2558  0131  2933               	goto	u5201
  2559  0132  2934               	goto	u5200
  2560  0133                     u5201:
  2561  0133  2938               	goto	l3260
  2562  0134                     u5200:
  2563  0134                     l3258:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2566  0134  3006               	movlw	6
  2567  0135  00C5               	movwf	sprintf@prec^(0+128)
  2568  0136  3000               	movlw	0
  2569  0137  00C6               	movwf	(sprintf@prec^(0+128)+1)
  2570  0138                     l3260:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2573  0138  0831               	movf	sprintf@ap^(0+128),w
  2574  0139  0084               	movwf	4
  2575  013A  1383               	bcf	3,7	;select IRP bank0
  2576  013B  0800               	movf	0,w
  2577  013C  00C0               	movwf	sprintf@fval^(0+128)
  2578  013D  0A84               	incf	4,f
  2579  013E  0800               	movf	0,w
  2580  013F  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2581  0140  0A84               	incf	4,f
  2582  0141  0800               	movf	0,w
  2583  0142  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2584  0143  0A84               	incf	4,f
  2585  0144  0800               	movf	0,w
  2586  0145  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2587  0146                     l3262:
  2588  0146  3004               	movlw	4
  2589  0147  00A8               	movwf	??_sprintf^(0+128)
  2590  0148  0828               	movf	??_sprintf^(0+128),w
  2591  0149  07B1               	addwf	sprintf@ap^(0+128),f
  2592  014A                     l3264:
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2595  014A  0843               	movf	(sprintf@fval+3)^(0+128),w
  2596  014B  00F6               	movwf	___flge@ff1+3
  2597  014C  0842               	movf	(sprintf@fval+2)^(0+128),w
  2598  014D  00F5               	movwf	___flge@ff1+2
  2599  014E  0841               	movf	(sprintf@fval+1)^(0+128),w
  2600  014F  00F4               	movwf	___flge@ff1+1
  2601  0150  0840               	movf	sprintf@fval^(0+128),w
  2602  0151  00F3               	movwf	___flge@ff1
  2603  0152  3000               	movlw	0
  2604  0153  00FA               	movwf	___flge@ff2+3
  2605  0154  3000               	movlw	0
  2606  0155  00F9               	movwf	___flge@ff2+2
  2607  0156  3000               	movlw	0
  2608  0157  00F8               	movwf	___flge@ff2+1
  2609  0158  3000               	movlw	0
  2610  0159  00F7               	movwf	___flge@ff2
  2611  015A  160A  158A  25E3  120A  118A  	fcall	___flge
  2612  015F  1803               	btfsc	3,0
  2613  0160  2962               	goto	u5211
  2614  0161  2963               	goto	u5210
  2615  0162                     u5211:
  2616  0162  2980               	goto	l3270
  2617  0163                     u5210:
  2618  0163                     l3266:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2621  0163  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0164  1303               	bcf	3,6	;RP1=0, select bank1
  2623  0165  0843               	movf	(sprintf@fval+3)^(0+128),w
  2624  0166  00F6               	movwf	___flneg@f1+3
  2625  0167  0842               	movf	(sprintf@fval+2)^(0+128),w
  2626  0168  00F5               	movwf	___flneg@f1+2
  2627  0169  0841               	movf	(sprintf@fval+1)^(0+128),w
  2628  016A  00F4               	movwf	___flneg@f1+1
  2629  016B  0840               	movf	sprintf@fval^(0+128),w
  2630  016C  00F3               	movwf	___flneg@f1
  2631  016D  160A  158A  2155  120A  118A  	fcall	___flneg
  2632  0172  0876               	movf	?___flneg+3,w
  2633  0173  1683               	bsf	3,5	;RP0=1, select bank1
  2634  0174  1303               	bcf	3,6	;RP1=0, select bank1
  2635  0175  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2636  0176  0875               	movf	?___flneg+2,w
  2637  0177  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2638  0178  0874               	movf	?___flneg+1,w
  2639  0179  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2640  017A  0873               	movf	?___flneg,w
  2641  017B  00C0               	movwf	sprintf@fval^(0+128)
  2642  017C                     l3268:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2645  017C  3003               	movlw	3
  2646  017D  04B6               	iorwf	sprintf@flag^(0+128),f
  2647  017E  3000               	movlw	0
  2648  017F  04B7               	iorwf	(sprintf@flag+1)^(0+128),f
  2649  0180                     l3270:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2652  0180  1683               	bsf	3,5	;RP0=1, select bank1
  2653  0181  1303               	bcf	3,6	;RP1=0, select bank1
  2654  0182  01BE               	clrf	sprintf@eexp^(0+128)
  2655  0183  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2656  0184                     l3272:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2659  0184  0843               	movf	(sprintf@fval+3)^(0+128),w
  2660  0185  00F6               	movwf	___fleq@ff1+3
  2661  0186  0842               	movf	(sprintf@fval+2)^(0+128),w
  2662  0187  00F5               	movwf	___fleq@ff1+2
  2663  0188  0841               	movf	(sprintf@fval+1)^(0+128),w
  2664  0189  00F4               	movwf	___fleq@ff1+1
  2665  018A  0840               	movf	sprintf@fval^(0+128),w
  2666  018B  00F3               	movwf	___fleq@ff1
  2667  018C  3000               	movlw	0
  2668  018D  00FA               	movwf	___fleq@ff2+3
  2669  018E  3000               	movlw	0
  2670  018F  00F9               	movwf	___fleq@ff2+2
  2671  0190  3000               	movlw	0
  2672  0191  00F8               	movwf	___fleq@ff2+1
  2673  0192  3000               	movlw	0
  2674  0193  00F7               	movwf	___fleq@ff2
  2675  0194  160A  158A  2347  120A  118A  	fcall	___fleq
  2676  0199  1803               	btfsc	3,0
  2677  019A  299C               	goto	u5221
  2678  019B  299D               	goto	u5220
  2679  019C                     u5221:
  2680  019C  2A9D               	goto	l3298
  2681  019D                     u5220:
  2682  019D                     l3274:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2685  019D  1003               	clrc
  2686  019E  1683               	bsf	3,5	;RP0=1, select bank1
  2687  019F  1303               	bcf	3,6	;RP1=0, select bank1
  2688  01A0  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2689  01A1  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2690  01A2  3E82               	addlw	130
  2691  01A3  00BE               	movwf	sprintf@eexp^(0+128)
  2692  01A4  30FF               	movlw	255
  2693  01A5  1803               	skipnc
  2694  01A6  3000               	movlw	0
  2695  01A7  00BF               	movwf	(sprintf@eexp^(0+128)+1)
  2696  01A8                     l3276:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2699  01A8  30FF               	movlw	255
  2700  01A9  07BE               	addwf	sprintf@eexp^(0+128),f
  2701  01AA  1803               	skipnc
  2702  01AB  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2703  01AC  30FF               	movlw	255
  2704  01AD  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2705  01AE                     l3278:
  2706                           
  2707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2708  01AE  3003               	movlw	3
  2709  01AF  00F3               	movwf	___wmul@multiplier
  2710  01B0  3000               	movlw	0
  2711  01B1  00F4               	movwf	___wmul@multiplier+1
  2712  01B2  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2713  01B3  00F6               	movwf	___wmul@multiplicand+1
  2714  01B4  083E               	movf	sprintf@eexp^(0+128),w
  2715  01B5  00F5               	movwf	___wmul@multiplicand
  2716  01B6  160A  158A  21E9  120A  118A  	fcall	___wmul
  2717  01BB  0874               	movf	?___wmul+1,w
  2718  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2719  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  2720  01BE  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2721  01BF  0873               	movf	?___wmul,w
  2722  01C0  00BE               	movwf	sprintf@eexp^(0+128)
  2723  01C1                     l3280:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2726  01C1  300A               	movlw	10
  2727  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2728  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2729  01C4  00A0               	movwf	___awdiv@divisor
  2730  01C5  3000               	movlw	0
  2731  01C6  00A1               	movwf	___awdiv@divisor+1
  2732  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2733  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2734  01C9  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2735  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2736  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2737  01CC  00A3               	movwf	___awdiv@dividend+1
  2738  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2739  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2740  01CF  083E               	movf	sprintf@eexp^(0+128),w
  2741  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2742  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2743  01D2  00A2               	movwf	___awdiv@dividend
  2744  01D3  160A  158A  24FE  120A  118A  	fcall	___awdiv
  2745  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2746  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2747  01DA  0821               	movf	?___awdiv+1,w
  2748  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  2749  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  2750  01DD  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2751  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2752  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2753  01E0  0820               	movf	?___awdiv,w
  2754  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2755  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  2756  01E3  00BE               	movwf	sprintf@eexp^(0+128)
  2757  01E4                     l3282:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2760  01E4  1FBF               	btfss	(sprintf@eexp+1)^(0+128),7
  2761  01E5  29E7               	goto	u5231
  2762  01E6  29E8               	goto	u5230
  2763  01E7                     u5231:
  2764  01E7  29EE               	goto	l3286
  2765  01E8                     u5230:
  2766  01E8                     l3284:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2769  01E8  30FF               	movlw	255
  2770  01E9  07BE               	addwf	sprintf@eexp^(0+128),f
  2771  01EA  1803               	skipnc
  2772  01EB  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2773  01EC  30FF               	movlw	255
  2774  01ED  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2775  01EE                     l3286:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2778  01EE  033E               	decf	sprintf@eexp^(0+128),w
  2779  01EF  3AFF               	xorlw	255
  2780  01F0  120A  158A  249D  120A  118A  	fcall	_scale
  2781  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2782  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2783  01F7  0845               	movf	?_scale+3,w
  2784  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2785  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  2786  01FA  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2787  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2788  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2789  01FD  0844               	movf	?_scale+2,w
  2790  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2791  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2792  0200  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2793  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0203  0843               	movf	?_scale+1,w
  2796  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2798  0206  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2799  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2800  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2801  0209  0842               	movf	?_scale,w
  2802  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2803  020B  1303               	bcf	3,6	;RP1=0, select bank1
  2804  020C  00BA               	movwf	sprintf@tmpval^(0+128)
  2805  020D                     l3288:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2808  020D  0843               	movf	(sprintf@fval+3)^(0+128),w
  2809  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2810  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2811  0210  00AB               	movwf	___flmul@b+3
  2812  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2813  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2814  0213  0842               	movf	(sprintf@fval+2)^(0+128),w
  2815  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2817  0216  00AA               	movwf	___flmul@b+2
  2818  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2819  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2820  0219  0841               	movf	(sprintf@fval+1)^(0+128),w
  2821  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2822  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2823  021C  00A9               	movwf	___flmul@b+1
  2824  021D  1683               	bsf	3,5	;RP0=1, select bank1
  2825  021E  1303               	bcf	3,6	;RP1=0, select bank1
  2826  021F  0840               	movf	sprintf@fval^(0+128),w
  2827  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0222  00A8               	movwf	___flmul@b
  2830  0223  1683               	bsf	3,5	;RP0=1, select bank1
  2831  0224  1303               	bcf	3,6	;RP1=0, select bank1
  2832  0225  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2833  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2834  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2835  0228  00AF               	movwf	___flmul@a+3
  2836  0229  1683               	bsf	3,5	;RP0=1, select bank1
  2837  022A  1303               	bcf	3,6	;RP1=0, select bank1
  2838  022B  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2839  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2840  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2841  022E  00AE               	movwf	___flmul@a+2
  2842  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0231  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2845  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0234  00AD               	movwf	___flmul@a+1
  2848  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2849  0236  1303               	bcf	3,6	;RP1=0, select bank1
  2850  0237  083A               	movf	sprintf@tmpval^(0+128),w
  2851  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2853  023A  00AC               	movwf	___flmul@a
  2854  023B  120A  158A  213C  120A  118A  	fcall	___flmul
  2855  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0242  082B               	movf	?___flmul+3,w
  2858  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2859  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2860  0245  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2861  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0248  082A               	movf	?___flmul+2,w
  2864  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2865  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2866  024B  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2867  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2868  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2869  024E  0829               	movf	?___flmul+1,w
  2870  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0250  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0251  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2873  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0254  0828               	movf	?___flmul,w
  2876  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0256  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0257  00BA               	movwf	sprintf@tmpval^(0+128)
  2879  0258                     l3290:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2882  0258  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2883  0259  00F6               	movwf	___flge@ff1+3
  2884  025A  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2885  025B  00F5               	movwf	___flge@ff1+2
  2886  025C  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2887  025D  00F4               	movwf	___flge@ff1+1
  2888  025E  083A               	movf	sprintf@tmpval^(0+128),w
  2889  025F  00F3               	movwf	___flge@ff1
  2890  0260  303F               	movlw	63
  2891  0261  00FA               	movwf	___flge@ff2+3
  2892  0262  3080               	movlw	128
  2893  0263  00F9               	movwf	___flge@ff2+2
  2894  0264  3000               	movlw	0
  2895  0265  00F8               	movwf	___flge@ff2+1
  2896  0266  3000               	movlw	0
  2897  0267  00F7               	movwf	___flge@ff2
  2898  0268  160A  158A  25E3  120A  118A  	fcall	___flge
  2899  026D  1803               	btfsc	3,0
  2900  026E  2A70               	goto	u5241
  2901  026F  2A71               	goto	u5240
  2902  0270                     u5241:
  2903  0270  2A7A               	goto	l3294
  2904  0271                     u5240:
  2905  0271                     l3292:
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2908  0271  30FF               	movlw	255
  2909  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0273  1303               	bcf	3,6	;RP1=0, select bank1
  2911  0274  07BE               	addwf	sprintf@eexp^(0+128),f
  2912  0275  1803               	skipnc
  2913  0276  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2914  0277  30FF               	movlw	255
  2915  0278  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2916  0279  2A9D               	goto	l3298
  2917  027A                     l3294:
  2918  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2919  027B  1303               	bcf	3,6	;RP1=0, select bank1
  2920  027C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2921  027D  00F6               	movwf	___flge@ff1+3
  2922  027E  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2923  027F  00F5               	movwf	___flge@ff1+2
  2924  0280  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2925  0281  00F4               	movwf	___flge@ff1+1
  2926  0282  083A               	movf	sprintf@tmpval^(0+128),w
  2927  0283  00F3               	movwf	___flge@ff1
  2928  0284  3041               	movlw	65
  2929  0285  00FA               	movwf	___flge@ff2+3
  2930  0286  3020               	movlw	32
  2931  0287  00F9               	movwf	___flge@ff2+2
  2932  0288  3000               	movlw	0
  2933  0289  00F8               	movwf	___flge@ff2+1
  2934  028A  3000               	movlw	0
  2935  028B  00F7               	movwf	___flge@ff2
  2936  028C  160A  158A  25E3  120A  118A  	fcall	___flge
  2937  0291  1C03               	btfss	3,0
  2938  0292  2A94               	goto	u5251
  2939  0293  2A95               	goto	u5250
  2940  0294                     u5251:
  2941  0294  2A9D               	goto	l3298
  2942  0295                     u5250:
  2943  0295                     l3296:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2946  0295  3001               	movlw	1
  2947  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0297  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0298  07BE               	addwf	sprintf@eexp^(0+128),f
  2950  0299  1803               	skipnc
  2951  029A  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2952  029B  3000               	movlw	0
  2953  029C  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2954  029D                     l3298:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2957  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2958  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2959  029F  0846               	movf	(sprintf@prec+1)^(0+128),w
  2960  02A0  3A80               	xorlw	128
  2961  02A1  00FF               	movwf	btemp+1
  2962  02A2  3080               	movlw	128
  2963  02A3  027F               	subwf	btemp+1,w
  2964  02A4  1D03               	skipz
  2965  02A5  2AA8               	goto	u5265
  2966  02A6  300D               	movlw	13
  2967  02A7  0245               	subwf	sprintf@prec^(0+128),w
  2968  02A8                     u5265:
  2969  02A8  1803               	skipnc
  2970  02A9  2AAB               	goto	u5261
  2971  02AA  2AAC               	goto	u5260
  2972  02AB                     u5261:
  2973  02AB  2AF3               	goto	l3302
  2974  02AC                     u5260:
  2975  02AC                     l3300:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2978  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2979  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2980  02AE  0845               	movf	sprintf@prec^(0+128),w
  2981  02AF  160A  118A  20C4  120A  118A  	fcall	_fround
  2982  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2983  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2984  02B6  0845               	movf	?_fround+3,w
  2985  02B7  00D9               	movwf	___fladd@b+3
  2986  02B8  0844               	movf	?_fround+2,w
  2987  02B9  00D8               	movwf	___fladd@b+2
  2988  02BA  0843               	movf	?_fround+1,w
  2989  02BB  00D7               	movwf	___fladd@b+1
  2990  02BC  0842               	movf	?_fround,w
  2991  02BD  00D6               	movwf	___fladd@b
  2992  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2993  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2994  02C0  0843               	movf	(sprintf@fval+3)^(0+128),w
  2995  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2996  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2997  02C3  00DD               	movwf	___fladd@a+3
  2998  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2999  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3000  02C6  0842               	movf	(sprintf@fval+2)^(0+128),w
  3001  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  3002  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  3003  02C9  00DC               	movwf	___fladd@a+2
  3004  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  3005  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  3006  02CC  0841               	movf	(sprintf@fval+1)^(0+128),w
  3007  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3008  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3009  02CF  00DB               	movwf	___fladd@a+1
  3010  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  3011  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  3012  02D2  0840               	movf	sprintf@fval^(0+128),w
  3013  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3014  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3015  02D5  00DA               	movwf	___fladd@a
  3016  02D6  160A  118A  22D1  120A  118A  	fcall	___fladd
  3017  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  3018  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  3019  02DD  0859               	movf	?___fladd+3,w
  3020  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3021  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  3022  02E0  00C3               	movwf	(sprintf@fval+3)^(0+128)
  3023  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3024  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3025  02E3  0858               	movf	?___fladd+2,w
  3026  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  3027  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  3028  02E6  00C2               	movwf	(sprintf@fval+2)^(0+128)
  3029  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  3030  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  3031  02E9  0857               	movf	?___fladd+1,w
  3032  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  3033  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  3034  02EC  00C1               	movwf	(sprintf@fval+1)^(0+128)
  3035  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3036  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  3037  02EF  0856               	movf	?___fladd,w
  3038  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  3039  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  3040  02F2  00C0               	movwf	sprintf@fval^(0+128)
  3041  02F3                     l3302:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3044  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  3045  02F4  1303               	bcf	3,6	;RP1=0, select bank1
  3046  02F5  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3047  02F6  3A80               	xorlw	128
  3048  02F7  00FF               	movwf	btemp+1
  3049  02F8  3080               	movlw	128
  3050  02F9  027F               	subwf	btemp+1,w
  3051  02FA  1D03               	skipz
  3052  02FB  2AFE               	goto	u5275
  3053  02FC  300A               	movlw	10
  3054  02FD  023E               	subwf	sprintf@eexp^(0+128),w
  3055  02FE                     u5275:
  3056  02FE  1803               	skipnc
  3057  02FF  2B01               	goto	u5271
  3058  0300  2B02               	goto	u5270
  3059  0301                     u5271:
  3060  0301  2B53               	goto	l3310
  3061  0302                     u5270:
  3062  0302                     l3304:
  3063  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3064  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3065  0304  0843               	movf	(sprintf@fval+3)^(0+128),w
  3066  0305  00F6               	movwf	___fleq@ff1+3
  3067  0306  0842               	movf	(sprintf@fval+2)^(0+128),w
  3068  0307  00F5               	movwf	___fleq@ff1+2
  3069  0308  0841               	movf	(sprintf@fval+1)^(0+128),w
  3070  0309  00F4               	movwf	___fleq@ff1+1
  3071  030A  0840               	movf	sprintf@fval^(0+128),w
  3072  030B  00F3               	movwf	___fleq@ff1
  3073  030C  3000               	movlw	0
  3074  030D  00FA               	movwf	___fleq@ff2+3
  3075  030E  3000               	movlw	0
  3076  030F  00F9               	movwf	___fleq@ff2+2
  3077  0310  3000               	movlw	0
  3078  0311  00F8               	movwf	___fleq@ff2+1
  3079  0312  3000               	movlw	0
  3080  0313  00F7               	movwf	___fleq@ff2
  3081  0314  160A  158A  2347  120A  118A  	fcall	___fleq
  3082  0319  1803               	btfsc	3,0
  3083  031A  2B1C               	goto	u5281
  3084  031B  2B1D               	goto	u5280
  3085  031C                     u5281:
  3086  031C  2BC5               	goto	l3324
  3087  031D                     u5280:
  3088  031D                     l3306:
  3089  031D  1683               	bsf	3,5	;RP0=1, select bank1
  3090  031E  1303               	bcf	3,6	;RP1=0, select bank1
  3091  031F  0843               	movf	(sprintf@fval+3)^(0+128),w
  3092  0320  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0321  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0322  00D8               	movwf	___fltol@f1+3
  3095  0323  1683               	bsf	3,5	;RP0=1, select bank1
  3096  0324  1303               	bcf	3,6	;RP1=0, select bank1
  3097  0325  0842               	movf	(sprintf@fval+2)^(0+128),w
  3098  0326  1283               	bcf	3,5	;RP0=0, select bank0
  3099  0327  1303               	bcf	3,6	;RP1=0, select bank0
  3100  0328  00D7               	movwf	___fltol@f1+2
  3101  0329  1683               	bsf	3,5	;RP0=1, select bank1
  3102  032A  1303               	bcf	3,6	;RP1=0, select bank1
  3103  032B  0841               	movf	(sprintf@fval+1)^(0+128),w
  3104  032C  1283               	bcf	3,5	;RP0=0, select bank0
  3105  032D  1303               	bcf	3,6	;RP1=0, select bank0
  3106  032E  00D6               	movwf	___fltol@f1+1
  3107  032F  1683               	bsf	3,5	;RP0=1, select bank1
  3108  0330  1303               	bcf	3,6	;RP1=0, select bank1
  3109  0331  0840               	movf	sprintf@fval^(0+128),w
  3110  0332  1283               	bcf	3,5	;RP0=0, select bank0
  3111  0333  1303               	bcf	3,6	;RP1=0, select bank0
  3112  0334  00D5               	movwf	___fltol@f1
  3113  0335  160A  158A  2567  120A  118A  	fcall	___fltol
  3114  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3115  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3116  033C  0858               	movf	?___fltol+3,w
  3117  033D  0457               	iorwf	?___fltol+2,w
  3118  033E  0456               	iorwf	?___fltol+1,w
  3119  033F  0455               	iorwf	?___fltol,w
  3120  0340  1D03               	skipz
  3121  0341  2B43               	goto	u5291
  3122  0342  2B44               	goto	u5290
  3123  0343                     u5291:
  3124  0343  2BC5               	goto	l3324
  3125  0344                     u5290:
  3126  0344                     l3308:
  3127  0344  1683               	bsf	3,5	;RP0=1, select bank1
  3128  0345  1303               	bcf	3,6	;RP1=0, select bank1
  3129  0346  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3130  0347  3A80               	xorlw	128
  3131  0348  00FF               	movwf	btemp+1
  3132  0349  3080               	movlw	128
  3133  034A  027F               	subwf	btemp+1,w
  3134  034B  1D03               	skipz
  3135  034C  2B4F               	goto	u5305
  3136  034D  3002               	movlw	2
  3137  034E  023E               	subwf	sprintf@eexp^(0+128),w
  3138  034F                     u5305:
  3139  034F  1C03               	skipc
  3140  0350  2B52               	goto	u5301
  3141  0351  2B53               	goto	u5300
  3142  0352                     u5301:
  3143  0352  2BC5               	goto	l3324
  3144  0353                     u5300:
  3145  0353                     l3310:
  3146                           
  3147                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3148  0353  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0354  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0355  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3151  0356  00F6               	movwf	___flge@ff1+3
  3152  0357  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3153  0358  00F5               	movwf	___flge@ff1+2
  3154  0359  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3155  035A  00F4               	movwf	___flge@ff1+1
  3156  035B  083A               	movf	sprintf@tmpval^(0+128),w
  3157  035C  00F3               	movwf	___flge@ff1
  3158  035D  3040               	movlw	64
  3159  035E  00FA               	movwf	___flge@ff2+3
  3160  035F  3089               	movlw	137
  3161  0360  00F9               	movwf	___flge@ff2+2
  3162  0361  3070               	movlw	112
  3163  0362  00F8               	movwf	___flge@ff2+1
  3164  0363  305F               	movlw	95
  3165  0364  00F7               	movwf	___flge@ff2
  3166  0365  160A  158A  25E3  120A  118A  	fcall	___flge
  3167  036A  1803               	btfsc	3,0
  3168  036B  2B6D               	goto	u5311
  3169  036C  2B6E               	goto	u5310
  3170  036D                     u5311:
  3171  036D  2B77               	goto	l3314
  3172  036E                     u5310:
  3173  036E                     l3312:
  3174                           
  3175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3176  036E  30F7               	movlw	247
  3177  036F  1683               	bsf	3,5	;RP0=1, select bank1
  3178  0370  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0371  07BE               	addwf	sprintf@eexp^(0+128),f
  3180  0372  1803               	skipnc
  3181  0373  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3182  0374  30FF               	movlw	255
  3183  0375  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3186  0376  2B7F               	goto	l3316
  3187  0377                     l3314:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3190  0377  30F8               	movlw	248
  3191  0378  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0379  1303               	bcf	3,6	;RP1=0, select bank1
  3193  037A  07BE               	addwf	sprintf@eexp^(0+128),f
  3194  037B  1803               	skipnc
  3195  037C  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3196  037D  30FF               	movlw	255
  3197  037E  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3198  037F                     l3316:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3201  037F  083E               	movf	sprintf@eexp^(0+128),w
  3202  0380  120A  158A  249D  120A  118A  	fcall	_scale
  3203  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0387  0845               	movf	?_scale+3,w
  3206  0388  1683               	bsf	3,5	;RP0=1, select bank1
  3207  0389  1303               	bcf	3,6	;RP1=0, select bank1
  3208  038A  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3209  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3210  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3211  038D  0844               	movf	?_scale+2,w
  3212  038E  1683               	bsf	3,5	;RP0=1, select bank1
  3213  038F  1303               	bcf	3,6	;RP1=0, select bank1
  3214  0390  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3215  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0393  0843               	movf	?_scale+1,w
  3218  0394  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0395  1303               	bcf	3,6	;RP1=0, select bank1
  3220  0396  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3221  0397  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0398  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0399  0842               	movf	?_scale,w
  3224  039A  1683               	bsf	3,5	;RP0=1, select bank1
  3225  039B  1303               	bcf	3,6	;RP1=0, select bank1
  3226  039C  00BA               	movwf	sprintf@tmpval^(0+128)
  3227  039D                     l3318:
  3228  039D  0843               	movf	(sprintf@fval+3)^(0+128),w
  3229  039E  00F6               	movwf	__div_to_l_@f1+3
  3230  039F  0842               	movf	(sprintf@fval+2)^(0+128),w
  3231  03A0  00F5               	movwf	__div_to_l_@f1+2
  3232  03A1  0841               	movf	(sprintf@fval+1)^(0+128),w
  3233  03A2  00F4               	movwf	__div_to_l_@f1+1
  3234  03A3  0840               	movf	sprintf@fval^(0+128),w
  3235  03A4  00F3               	movwf	__div_to_l_@f1
  3236  03A5  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3237  03A6  00FA               	movwf	__div_to_l_@f2+3
  3238  03A7  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3239  03A8  00F9               	movwf	__div_to_l_@f2+2
  3240  03A9  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3241  03AA  00F8               	movwf	__div_to_l_@f2+1
  3242  03AB  083A               	movf	sprintf@tmpval^(0+128),w
  3243  03AC  00F7               	movwf	__div_to_l_@f2
  3244  03AD  160A  118A  2006  120A  118A  	fcall	__div_to_l_
  3245  03B2  0876               	movf	?__div_to_l_+3,w
  3246  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3247  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  3248  03B5  00B5               	movwf	(sprintf@val+3)^(0+128)
  3249  03B6  0875               	movf	?__div_to_l_+2,w
  3250  03B7  00B4               	movwf	(sprintf@val+2)^(0+128)
  3251  03B8  0874               	movf	?__div_to_l_+1,w
  3252  03B9  00B3               	movwf	(sprintf@val+1)^(0+128)
  3253  03BA  0873               	movf	?__div_to_l_,w
  3254  03BB  00B2               	movwf	sprintf@val^(0+128)
  3255  03BC                     l3322:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3258  03BC  3000               	movlw	0
  3259  03BD  00C3               	movwf	(sprintf@fval+3)^(0+128)
  3260  03BE  3000               	movlw	0
  3261  03BF  00C2               	movwf	(sprintf@fval+2)^(0+128)
  3262  03C0  3000               	movlw	0
  3263  03C1  00C1               	movwf	(sprintf@fval+1)^(0+128)
  3264  03C2  3000               	movlw	0
  3265  03C3  00C0               	movwf	sprintf@fval^(0+128)
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3268  03C4  2C2B               	goto	l3330
  3269  03C5                     l3324:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3272  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3273  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3274  03C7  0843               	movf	(sprintf@fval+3)^(0+128),w
  3275  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3276  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3277  03CA  00D8               	movwf	___fltol@f1+3
  3278  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  3279  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  3280  03CD  0842               	movf	(sprintf@fval+2)^(0+128),w
  3281  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3282  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3283  03D0  00D7               	movwf	___fltol@f1+2
  3284  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3285  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  3286  03D3  0841               	movf	(sprintf@fval+1)^(0+128),w
  3287  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3288  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3289  03D6  00D6               	movwf	___fltol@f1+1
  3290  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3291  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3292  03D9  0840               	movf	sprintf@fval^(0+128),w
  3293  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3294  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3295  03DC  00D5               	movwf	___fltol@f1
  3296  03DD  160A  158A  2567  120A  118A  	fcall	___fltol
  3297  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3298  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3299  03E4  0858               	movf	?___fltol+3,w
  3300  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  3301  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  3302  03E7  00B5               	movwf	(sprintf@val+3)^(0+128)
  3303  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3304  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3305  03EA  0857               	movf	?___fltol+2,w
  3306  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3307  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3308  03ED  00B4               	movwf	(sprintf@val+2)^(0+128)
  3309  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3310  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  3311  03F0  0856               	movf	?___fltol+1,w
  3312  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  3313  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  3314  03F3  00B3               	movwf	(sprintf@val+1)^(0+128)
  3315  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3316  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3317  03F6  0855               	movf	?___fltol,w
  3318  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  3319  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  3320  03F9  00B2               	movwf	sprintf@val^(0+128)
  3321  03FA                     l3326:
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3324  03FA  0835               	movf	(sprintf@val+3)^(0+128),w
  3325  03FB  00F6               	movwf	___xxtofl@val+3
  3326  03FC  0834               	movf	(sprintf@val+2)^(0+128),w
  3327  03FD  00F5               	movwf	___xxtofl@val+2
  3328  03FE  0833               	movf	(sprintf@val+1)^(0+128),w
  3329  03FF  00F4               	movwf	___xxtofl@val+1
  3330  0400  0832               	movf	sprintf@val^(0+128),w
  3331  0401  00F3               	movwf	___xxtofl@val
  3332  0402  3000               	movlw	0
  3333  0403  160A  158A  2687  120A  118A  	fcall	___xxtofl
  3334  0408  0876               	movf	?___xxtofl+3,w
  3335  0409  1683               	bsf	3,5	;RP0=1, select bank1
  3336  040A  1303               	bcf	3,6	;RP1=0, select bank1
  3337  040B  00A3               	movwf	(___flsub@a+3)^(0+128)
  3338  040C  0875               	movf	?___xxtofl+2,w
  3339  040D  00A2               	movwf	(___flsub@a+2)^(0+128)
  3340  040E  0874               	movf	?___xxtofl+1,w
  3341  040F  00A1               	movwf	(___flsub@a+1)^(0+128)
  3342  0410  0873               	movf	?___xxtofl,w
  3343  0411  00A0               	movwf	___flsub@a^(0+128)
  3344  0412  0843               	movf	(sprintf@fval+3)^(0+128),w
  3345  0413  00A7               	movwf	(___flsub@b+3)^(0+128)
  3346  0414  0842               	movf	(sprintf@fval+2)^(0+128),w
  3347  0415  00A6               	movwf	(___flsub@b+2)^(0+128)
  3348  0416  0841               	movf	(sprintf@fval+1)^(0+128),w
  3349  0417  00A5               	movwf	(___flsub@b+1)^(0+128)
  3350  0418  0840               	movf	sprintf@fval^(0+128),w
  3351  0419  00A4               	movwf	___flsub@b^(0+128)
  3352  041A  160A  158A  2397  120A  118A  	fcall	___flsub
  3353  041F  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0420  1303               	bcf	3,6	;RP1=0, select bank1
  3355  0421  0823               	movf	(?___flsub+3)^(0+128),w
  3356  0422  00C3               	movwf	(sprintf@fval+3)^(0+128)
  3357  0423  0822               	movf	(?___flsub+2)^(0+128),w
  3358  0424  00C2               	movwf	(sprintf@fval+2)^(0+128)
  3359  0425  0821               	movf	(?___flsub+1)^(0+128),w
  3360  0426  00C1               	movwf	(sprintf@fval+1)^(0+128)
  3361  0427  0820               	movf	?___flsub^(0+128),w
  3362  0428  00C0               	movwf	sprintf@fval^(0+128)
  3363  0429                     l3328:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3366  0429  01BE               	clrf	sprintf@eexp^(0+128)
  3367  042A  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  3368  042B                     l3330:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3371  042B  01C7               	clrf	sprintf@c^(0+128)
  3372  042C  0AC7               	incf	sprintf@c^(0+128),f
  3373  042D                     l3336:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3376  042D  0847               	movf	sprintf@c^(0+128),w
  3377  042E  00A8               	movwf	??_sprintf^(0+128)
  3378  042F  3001               	movlw	1
  3379  0430                     u5325:
  3380  0430  1003               	clrc
  3381  0431  0DA8               	rlf	??_sprintf^(0+128),f
  3382  0432  3EFF               	addlw	-1
  3383  0433  1D03               	skipz
  3384  0434  2C30               	goto	u5325
  3385  0435  1003               	clrc
  3386  0436  0D28               	rlf	??_sprintf^(0+128),w
  3387  0437  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3388  0438  0084               	movwf	4
  3389  0439  120A  158A  200A  120A  118A  	fcall	stringdir
  3390  043E  00A9               	movwf	(??_sprintf+1)^(0+128)
  3391  043F  120A  158A  200A  120A  118A  	fcall	stringdir
  3392  0444  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3393  0445  120A  158A  200A  120A  118A  	fcall	stringdir
  3394  044A  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3395  044B  120A  158A  200A  120A  118A  	fcall	stringdir
  3396  0450  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3397  0451  082C               	movf	(??_sprintf+4)^(0+128),w
  3398  0452  0235               	subwf	(sprintf@val+3)^(0+128),w
  3399  0453  1D03               	skipz
  3400  0454  2C5F               	goto	u5335
  3401  0455  082B               	movf	(??_sprintf+3)^(0+128),w
  3402  0456  0234               	subwf	(sprintf@val+2)^(0+128),w
  3403  0457  1D03               	skipz
  3404  0458  2C5F               	goto	u5335
  3405  0459  082A               	movf	(??_sprintf+2)^(0+128),w
  3406  045A  0233               	subwf	(sprintf@val+1)^(0+128),w
  3407  045B  1D03               	skipz
  3408  045C  2C5F               	goto	u5335
  3409  045D  0829               	movf	(??_sprintf+1)^(0+128),w
  3410  045E  0232               	subwf	sprintf@val^(0+128),w
  3411  045F                     u5335:
  3412  045F  1803               	skipnc
  3413  0460  2C62               	goto	u5331
  3414  0461  2C63               	goto	u5330
  3415  0462                     u5331:
  3416  0462  2C64               	goto	l3340
  3417  0463                     u5330:
  3418  0463  2C6E               	goto	l3342
  3419  0464                     l3340:
  3420  0464  3001               	movlw	1
  3421  0465  00A8               	movwf	??_sprintf^(0+128)
  3422  0466  0828               	movf	??_sprintf^(0+128),w
  3423  0467  07C7               	addwf	sprintf@c^(0+128),f
  3424  0468  300A               	movlw	10
  3425  0469  0647               	xorwf	sprintf@c^(0+128),w
  3426  046A  1D03               	btfss	3,2
  3427  046B  2C6D               	goto	u5341
  3428  046C  2C6E               	goto	u5340
  3429  046D                     u5341:
  3430  046D  2C2D               	goto	l3336
  3431  046E                     u5340:
  3432  046E                     l3342:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3435  046E  0847               	movf	sprintf@c^(0+128),w
  3436  046F  0745               	addwf	sprintf@prec^(0+128),w
  3437  0470  00A8               	movwf	??_sprintf^(0+128)
  3438  0471  0846               	movf	(sprintf@prec+1)^(0+128),w
  3439  0472  1803               	skipnc
  3440  0473  0A46               	incf	(sprintf@prec+1)^(0+128),w
  3441  0474  00A9               	movwf	(??_sprintf^(0+128)+1)
  3442  0475  083E               	movf	sprintf@eexp^(0+128),w
  3443  0476  0728               	addwf	??_sprintf^(0+128),w
  3444  0477  00AA               	movwf	(??_sprintf+2)^(0+128)
  3445  0478  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3446  0479  1803               	skipnc
  3447  047A  0A3F               	incf	(sprintf@eexp+1)^(0+128),w
  3448  047B  0729               	addwf	(??_sprintf+1)^(0+128),w
  3449  047C  00AB               	movwf	(??_sprintf+3)^(0+128)
  3450  047D  082A               	movf	(??_sprintf+2)^(0+128),w
  3451  047E  02B8               	subwf	sprintf@width^(0+128),f
  3452  047F  082B               	movf	(??_sprintf+3)^(0+128),w
  3453  0480  1C03               	skipc
  3454  0481  03B9               	decf	(sprintf@width+1)^(0+128),f
  3455  0482  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1169:     if(
  3458  0483  0845               	movf	sprintf@prec^(0+128),w
  3459  0484  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3460  0485  1903               	btfsc	3,2
  3461  0486  2C88               	goto	u5351
  3462  0487  2C89               	goto	u5350
  3463  0488                     u5351:
  3464  0488  2C8F               	goto	l3346
  3465  0489                     u5350:
  3466  0489                     l3344:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3469  0489  30FF               	movlw	255
  3470  048A  07B8               	addwf	sprintf@width^(0+128),f
  3471  048B  1803               	skipnc
  3472  048C  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3473  048D  30FF               	movlw	255
  3474  048E  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3475  048F                     l3346:
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3478  048F  3003               	movlw	3
  3479  0490  0536               	andwf	sprintf@flag^(0+128),w
  3480  0491  00A8               	movwf	??_sprintf^(0+128)
  3481  0492  3000               	movlw	0
  3482  0493  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3483  0494  00A9               	movwf	(??_sprintf+1)^(0+128)
  3484  0495  0828               	movf	??_sprintf^(0+128),w
  3485  0496  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3486  0497  1903               	btfsc	3,2
  3487  0498  2C9A               	goto	u5361
  3488  0499  2C9B               	goto	u5360
  3489  049A                     u5361:
  3490  049A  2CB0               	goto	l3356
  3491  049B                     u5360:
  3492  049B                     l3348:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3495  049B  30FF               	movlw	255
  3496  049C  07B8               	addwf	sprintf@width^(0+128),f
  3497  049D  1803               	skipnc
  3498  049E  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3499  049F  30FF               	movlw	255
  3500  04A0  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3501  04A1  2CB0               	goto	l3356
  3502  04A2                     l3350:
  3503                           
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3505  04A2  3020               	movlw	32
  3506  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  3507  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  3508  04A5  00A8               	movwf	??_sprintf^(0+128)
  3509  04A6  0844               	movf	sprintf@sp^(0+128),w
  3510  04A7  0084               	movwf	4
  3511  04A8  0828               	movf	??_sprintf^(0+128),w
  3512  04A9  1783               	bsf	3,7	;select IRP bank2
  3513  04AA  0080               	movwf	0
  3514  04AB                     l3352:
  3515  04AB  3001               	movlw	1
  3516  04AC  00A8               	movwf	??_sprintf^(0+128)
  3517  04AD  0828               	movf	??_sprintf^(0+128),w
  3518  04AE  07C4               	addwf	sprintf@sp^(0+128),f
  3519  04AF  2C9B               	goto	l3348
  3520  04B0                     l3356:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3523  04B0  0839               	movf	(sprintf@width+1)^(0+128),w
  3524  04B1  3A80               	xorlw	128
  3525  04B2  00FF               	movwf	btemp+1
  3526  04B3  3080               	movlw	128
  3527  04B4  027F               	subwf	btemp+1,w
  3528  04B5  1D03               	skipz
  3529  04B6  2CB9               	goto	u5375
  3530  04B7  3001               	movlw	1
  3531  04B8  0238               	subwf	sprintf@width^(0+128),w
  3532  04B9                     u5375:
  3533  04B9  1803               	skipnc
  3534  04BA  2CBC               	goto	u5371
  3535  04BB  2CBD               	goto	u5370
  3536  04BC                     u5371:
  3537  04BC  2CA2               	goto	l3350
  3538  04BD                     u5370:
  3539  04BD                     l3358:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3542  04BD  3003               	movlw	3
  3543  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  3544  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  3545  04C0  0536               	andwf	sprintf@flag^(0+128),w
  3546  04C1  00A8               	movwf	??_sprintf^(0+128)
  3547  04C2  3000               	movlw	0
  3548  04C3  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3549  04C4  00A9               	movwf	(??_sprintf+1)^(0+128)
  3550  04C5  0828               	movf	??_sprintf^(0+128),w
  3551  04C6  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3552  04C7  1903               	btfsc	3,2
  3553  04C8  2CCA               	goto	u5381
  3554  04C9  2CCB               	goto	u5380
  3555  04CA                     u5381:
  3556  04CA  2D3D               	goto	l309
  3557  04CB                     u5380:
  3558  04CB                     l3360:
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3561  04CB  302D               	movlw	45
  3562  04CC  00A8               	movwf	??_sprintf^(0+128)
  3563  04CD  0844               	movf	sprintf@sp^(0+128),w
  3564  04CE  0084               	movwf	4
  3565  04CF  0828               	movf	??_sprintf^(0+128),w
  3566  04D0  1783               	bsf	3,7	;select IRP bank2
  3567  04D1  0080               	movwf	0
  3568  04D2                     l3362:
  3569  04D2  3001               	movlw	1
  3570  04D3  00A8               	movwf	??_sprintf^(0+128)
  3571  04D4  0828               	movf	??_sprintf^(0+128),w
  3572  04D5  07C4               	addwf	sprintf@sp^(0+128),f
  3573  04D6  2D3D               	goto	l309
  3574  04D7                     l3364:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3577  04D7  0847               	movf	sprintf@c^(0+128),w
  3578  04D8  00A8               	movwf	??_sprintf^(0+128)
  3579  04D9  3001               	movlw	1
  3580  04DA                     u5395:
  3581  04DA  1003               	clrc
  3582  04DB  0DA8               	rlf	??_sprintf^(0+128),f
  3583  04DC  3EFF               	addlw	-1
  3584  04DD  1D03               	skipz
  3585  04DE  2CDA               	goto	u5395
  3586  04DF  1003               	clrc
  3587  04E0  0D28               	rlf	??_sprintf^(0+128),w
  3588  04E1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3589  04E2  0084               	movwf	4
  3590  04E3  120A  158A  200A  120A  118A  	fcall	stringdir
  3591  04E8  00F3               	movwf	___lldiv@divisor
  3592  04E9  120A  158A  200A  120A  118A  	fcall	stringdir
  3593  04EE  00F4               	movwf	___lldiv@divisor+1
  3594  04EF  120A  158A  200A  120A  118A  	fcall	stringdir
  3595  04F4  00F5               	movwf	___lldiv@divisor+2
  3596  04F5  120A  158A  200A  120A  118A  	fcall	stringdir
  3597  04FA  00F6               	movwf	___lldiv@divisor+3
  3598  04FB  0835               	movf	(sprintf@val+3)^(0+128),w
  3599  04FC  00FA               	movwf	___lldiv@dividend+3
  3600  04FD  0834               	movf	(sprintf@val+2)^(0+128),w
  3601  04FE  00F9               	movwf	___lldiv@dividend+2
  3602  04FF  0833               	movf	(sprintf@val+1)^(0+128),w
  3603  0500  00F8               	movwf	___lldiv@dividend+1
  3604  0501  0832               	movf	sprintf@val^(0+128),w
  3605  0502  00F7               	movwf	___lldiv@dividend
  3606  0503  160A  158A  2496  120A  118A  	fcall	___lldiv
  3607  0508  0876               	movf	?___lldiv+3,w
  3608  0509  1683               	bsf	3,5	;RP0=1, select bank1
  3609  050A  1303               	bcf	3,6	;RP1=0, select bank1
  3610  050B  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3611  050C  0875               	movf	?___lldiv+2,w
  3612  050D  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3613  050E  0874               	movf	?___lldiv+1,w
  3614  050F  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3615  0510  0873               	movf	?___lldiv,w
  3616  0511  00BA               	movwf	sprintf@tmpval^(0+128)
  3617  0512                     l3366:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3620  0512  3000               	movlw	0
  3621  0513  00F6               	movwf	___llmod@divisor+3
  3622  0514  3000               	movlw	0
  3623  0515  00F5               	movwf	___llmod@divisor+2
  3624  0516  3000               	movlw	0
  3625  0517  00F4               	movwf	___llmod@divisor+1
  3626  0518  300A               	movlw	10
  3627  0519  00F3               	movwf	___llmod@divisor
  3628  051A  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3629  051B  00FA               	movwf	___llmod@dividend+3
  3630  051C  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3631  051D  00F9               	movwf	___llmod@dividend+2
  3632  051E  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3633  051F  00F8               	movwf	___llmod@dividend+1
  3634  0520  083A               	movf	sprintf@tmpval^(0+128),w
  3635  0521  00F7               	movwf	___llmod@dividend
  3636  0522  160A  158A  23E7  120A  118A  	fcall	___llmod
  3637  0527  0876               	movf	?___llmod+3,w
  3638  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3639  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3640  052A  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3641  052B  0875               	movf	?___llmod+2,w
  3642  052C  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3643  052D  0874               	movf	?___llmod+1,w
  3644  052E  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3645  052F  0873               	movf	?___llmod,w
  3646  0530  00BA               	movwf	sprintf@tmpval^(0+128)
  3647  0531                     l3368:
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3650  0531  083A               	movf	sprintf@tmpval^(0+128),w
  3651  0532  3E30               	addlw	48
  3652  0533  00A8               	movwf	??_sprintf^(0+128)
  3653  0534  0844               	movf	sprintf@sp^(0+128),w
  3654  0535  0084               	movwf	4
  3655  0536  0828               	movf	??_sprintf^(0+128),w
  3656  0537  1783               	bsf	3,7	;select IRP bank2
  3657  0538  0080               	movwf	0
  3658  0539  3001               	movlw	1
  3659  053A  00A8               	movwf	??_sprintf^(0+128)
  3660  053B  0828               	movf	??_sprintf^(0+128),w
  3661  053C  07C4               	addwf	sprintf@sp^(0+128),f
  3662  053D                     l309:	
  3663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  3664                           
  3665                           
  3666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3667  053D  3001               	movlw	1
  3668  053E  02C7               	subwf	sprintf@c^(0+128),f
  3669  053F  0A47               	incf	sprintf@c^(0+128),w
  3670  0540  1D03               	btfss	3,2
  3671  0541  2D43               	goto	u5401
  3672  0542  2D44               	goto	u5400
  3673  0543                     u5401:
  3674  0543  2CD7               	goto	l3364
  3675  0544                     u5400:
  3676  0544  2D58               	goto	l3376
  3677  0545                     l3370:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3680  0545  3030               	movlw	48
  3681  0546  1683               	bsf	3,5	;RP0=1, select bank1
  3682  0547  1303               	bcf	3,6	;RP1=0, select bank1
  3683  0548  00A8               	movwf	??_sprintf^(0+128)
  3684  0549  0844               	movf	sprintf@sp^(0+128),w
  3685  054A  0084               	movwf	4
  3686  054B  0828               	movf	??_sprintf^(0+128),w
  3687  054C  1783               	bsf	3,7	;select IRP bank2
  3688  054D  0080               	movwf	0
  3689  054E                     l3372:
  3690  054E  3001               	movlw	1
  3691  054F  00A8               	movwf	??_sprintf^(0+128)
  3692  0550  0828               	movf	??_sprintf^(0+128),w
  3693  0551  07C4               	addwf	sprintf@sp^(0+128),f
  3694  0552                     l3374:
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3697  0552  30FF               	movlw	255
  3698  0553  07BE               	addwf	sprintf@eexp^(0+128),f
  3699  0554  1803               	skipnc
  3700  0555  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3701  0556  30FF               	movlw	255
  3702  0557  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3703  0558                     l3376:
  3704                           
  3705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3706  0558  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3707  0559  3A80               	xorlw	128
  3708  055A  00FF               	movwf	btemp+1
  3709  055B  3080               	movlw	128
  3710  055C  027F               	subwf	btemp+1,w
  3711  055D  1D03               	skipz
  3712  055E  2D61               	goto	u5415
  3713  055F  3001               	movlw	1
  3714  0560  023E               	subwf	sprintf@eexp^(0+128),w
  3715  0561                     u5415:
  3716  0561  1803               	skipnc
  3717  0562  2D64               	goto	u5411
  3718  0563  2D65               	goto	u5410
  3719  0564                     u5411:
  3720  0564  2D45               	goto	l3370
  3721  0565                     u5410:
  3722  0565                     l3378:
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3725  0565  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0566  1303               	bcf	3,6	;RP1=0, select bank1
  3727  0567  0846               	movf	(sprintf@prec+1)^(0+128),w
  3728  0568  3A80               	xorlw	128
  3729  0569  00FF               	movwf	btemp+1
  3730  056A  3080               	movlw	128
  3731  056B  027F               	subwf	btemp+1,w
  3732  056C  1D03               	skipz
  3733  056D  2D70               	goto	u5425
  3734  056E  3009               	movlw	9
  3735  056F  0245               	subwf	sprintf@prec^(0+128),w
  3736  0570                     u5425:
  3737  0570  1C03               	skipc
  3738  0571  2D73               	goto	u5421
  3739  0572  2D74               	goto	u5420
  3740  0573                     u5421:
  3741  0573  2D7B               	goto	l3382
  3742  0574                     u5420:
  3743  0574                     l3380:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3746  0574  3008               	movlw	8
  3747  0575  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0576  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0577  00A8               	movwf	??_sprintf^(0+128)
  3750  0578  0828               	movf	??_sprintf^(0+128),w
  3751  0579  00C7               	movwf	sprintf@c^(0+128)
  3752  057A  2D81               	goto	l316
  3753  057B                     l3382:
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3756  057B  1683               	bsf	3,5	;RP0=1, select bank1
  3757  057C  1303               	bcf	3,6	;RP1=0, select bank1
  3758  057D  0845               	movf	sprintf@prec^(0+128),w
  3759  057E  00A8               	movwf	??_sprintf^(0+128)
  3760  057F  0828               	movf	??_sprintf^(0+128),w
  3761  0580  00C7               	movwf	sprintf@c^(0+128)
  3762  0581                     l316:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3765  0581  0847               	movf	sprintf@c^(0+128),w
  3766  0582  00A8               	movwf	??_sprintf^(0+128)
  3767  0583  01A9               	clrf	(??_sprintf^(0+128)+1)
  3768  0584  0828               	movf	??_sprintf^(0+128),w
  3769  0585  02C5               	subwf	sprintf@prec^(0+128),f
  3770  0586  0829               	movf	(??_sprintf+1)^(0+128),w
  3771  0587  1C03               	skipc
  3772  0588  03C6               	decf	(sprintf@prec+1)^(0+128),f
  3773  0589  02C6               	subwf	(sprintf@prec+1)^(0+128),f
  3774  058A                     l3384:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3777  058A  0847               	movf	sprintf@c^(0+128),w
  3778  058B  1903               	btfsc	3,2
  3779  058C  2D8E               	goto	u5431
  3780  058D  2D8F               	goto	u5430
  3781  058E                     u5431:
  3782  058E  2D9A               	goto	l3390
  3783  058F                     u5430:
  3784  058F                     l3386:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3787  058F  302E               	movlw	46
  3788  0590  00A8               	movwf	??_sprintf^(0+128)
  3789  0591  0844               	movf	sprintf@sp^(0+128),w
  3790  0592  0084               	movwf	4
  3791  0593  0828               	movf	??_sprintf^(0+128),w
  3792  0594  1783               	bsf	3,7	;select IRP bank2
  3793  0595  0080               	movwf	0
  3794  0596                     l3388:
  3795  0596  3001               	movlw	1
  3796  0597  00A8               	movwf	??_sprintf^(0+128)
  3797  0598  0828               	movf	??_sprintf^(0+128),w
  3798  0599  07C4               	addwf	sprintf@sp^(0+128),f
  3799  059A                     l3390:
  3800                           
  3801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3802  059A  0847               	movf	sprintf@c^(0+128),w
  3803  059B  120A  158A  249D  120A  118A  	fcall	_scale
  3804  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3805  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  3806  05A2  0845               	movf	?_scale+3,w
  3807  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3808  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3809  05A5  00B0               	movwf	(_sprintf$1158+3)^(0+128)
  3810  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3811  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  3812  05A8  0844               	movf	?_scale+2,w
  3813  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  3814  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  3815  05AB  00AF               	movwf	(_sprintf$1158+2)^(0+128)
  3816  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3817  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  3818  05AE  0843               	movf	?_scale+1,w
  3819  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  3820  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  3821  05B1  00AE               	movwf	(_sprintf$1158+1)^(0+128)
  3822  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3823  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  3824  05B4  0842               	movf	?_scale,w
  3825  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  3826  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  3827  05B7  00AD               	movwf	_sprintf$1158^(0+128)
  3828  05B8                     l3392:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3831  05B8  0830               	movf	(_sprintf$1158+3)^(0+128),w
  3832  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3833  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3834  05BB  00AF               	movwf	___flmul@a+3
  3835  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  3836  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  3837  05BE  082F               	movf	(_sprintf$1158+2)^(0+128),w
  3838  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3839  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3840  05C1  00AE               	movwf	___flmul@a+2
  3841  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3842  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3843  05C4  082E               	movf	(_sprintf$1158+1)^(0+128),w
  3844  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3845  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3846  05C7  00AD               	movwf	___flmul@a+1
  3847  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  3848  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  3849  05CA  082D               	movf	_sprintf$1158^(0+128),w
  3850  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  3851  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  3852  05CD  00AC               	movwf	___flmul@a
  3853  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  3854  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  3855  05D0  0843               	movf	(sprintf@fval+3)^(0+128),w
  3856  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3857  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3858  05D3  00AB               	movwf	___flmul@b+3
  3859  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3860  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3861  05D6  0842               	movf	(sprintf@fval+2)^(0+128),w
  3862  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  3863  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  3864  05D9  00AA               	movwf	___flmul@b+2
  3865  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  3866  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  3867  05DC  0841               	movf	(sprintf@fval+1)^(0+128),w
  3868  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3869  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  3870  05DF  00A9               	movwf	___flmul@b+1
  3871  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3872  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3873  05E2  0840               	movf	sprintf@fval^(0+128),w
  3874  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3875  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3876  05E5  00A8               	movwf	___flmul@b
  3877  05E6  120A  158A  213C  120A  118A  	fcall	___flmul
  3878  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3879  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3880  05ED  082B               	movf	?___flmul+3,w
  3881  05EE  00D8               	movwf	___fltol@f1+3
  3882  05EF  082A               	movf	?___flmul+2,w
  3883  05F0  00D7               	movwf	___fltol@f1+2
  3884  05F1  0829               	movf	?___flmul+1,w
  3885  05F2  00D6               	movwf	___fltol@f1+1
  3886  05F3  0828               	movf	?___flmul,w
  3887  05F4  00D5               	movwf	___fltol@f1
  3888  05F5  160A  158A  2567  120A  118A  	fcall	___fltol
  3889  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3890  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3891  05FC  0858               	movf	?___fltol+3,w
  3892  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3893  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3894  05FF  00B5               	movwf	(sprintf@val+3)^(0+128)
  3895  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0602  0857               	movf	?___fltol+2,w
  3898  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0605  00B4               	movwf	(sprintf@val+2)^(0+128)
  3901  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0608  0856               	movf	?___fltol+1,w
  3904  0609  1683               	bsf	3,5	;RP0=1, select bank1
  3905  060A  1303               	bcf	3,6	;RP1=0, select bank1
  3906  060B  00B3               	movwf	(sprintf@val+1)^(0+128)
  3907  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3908  060D  1303               	bcf	3,6	;RP1=0, select bank0
  3909  060E  0855               	movf	?___fltol,w
  3910  060F  1683               	bsf	3,5	;RP0=1, select bank1
  3911  0610  1303               	bcf	3,6	;RP1=0, select bank1
  3912  0611  00B2               	movwf	sprintf@val^(0+128)
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3915  0612  2EB4               	goto	l3402
  3916  0613                     l3394:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3919  0613  0847               	movf	sprintf@c^(0+128),w
  3920  0614  00A8               	movwf	??_sprintf^(0+128)
  3921  0615  3001               	movlw	1
  3922  0616                     u5445:
  3923  0616  1003               	clrc
  3924  0617  0DA8               	rlf	??_sprintf^(0+128),f
  3925  0618  3EFF               	addlw	-1
  3926  0619  1D03               	skipz
  3927  061A  2E16               	goto	u5445
  3928  061B  1003               	clrc
  3929  061C  0D28               	rlf	??_sprintf^(0+128),w
  3930  061D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3931  061E  0084               	movwf	4
  3932  061F  120A  158A  200A  120A  118A  	fcall	stringdir
  3933  0624  00F3               	movwf	___lldiv@divisor
  3934  0625  120A  158A  200A  120A  118A  	fcall	stringdir
  3935  062A  00F4               	movwf	___lldiv@divisor+1
  3936  062B  120A  158A  200A  120A  118A  	fcall	stringdir
  3937  0630  00F5               	movwf	___lldiv@divisor+2
  3938  0631  120A  158A  200A  120A  118A  	fcall	stringdir
  3939  0636  00F6               	movwf	___lldiv@divisor+3
  3940  0637  0835               	movf	(sprintf@val+3)^(0+128),w
  3941  0638  00FA               	movwf	___lldiv@dividend+3
  3942  0639  0834               	movf	(sprintf@val+2)^(0+128),w
  3943  063A  00F9               	movwf	___lldiv@dividend+2
  3944  063B  0833               	movf	(sprintf@val+1)^(0+128),w
  3945  063C  00F8               	movwf	___lldiv@dividend+1
  3946  063D  0832               	movf	sprintf@val^(0+128),w
  3947  063E  00F7               	movwf	___lldiv@dividend
  3948  063F  160A  158A  2496  120A  118A  	fcall	___lldiv
  3949  0644  0876               	movf	?___lldiv+3,w
  3950  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3951  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3952  0647  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3953  0648  0875               	movf	?___lldiv+2,w
  3954  0649  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3955  064A  0874               	movf	?___lldiv+1,w
  3956  064B  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3957  064C  0873               	movf	?___lldiv,w
  3958  064D  00BA               	movwf	sprintf@tmpval^(0+128)
  3959  064E                     l3396:
  3960                           
  3961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3962  064E  3000               	movlw	0
  3963  064F  00F6               	movwf	___llmod@divisor+3
  3964  0650  3000               	movlw	0
  3965  0651  00F5               	movwf	___llmod@divisor+2
  3966  0652  3000               	movlw	0
  3967  0653  00F4               	movwf	___llmod@divisor+1
  3968  0654  300A               	movlw	10
  3969  0655  00F3               	movwf	___llmod@divisor
  3970  0656  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3971  0657  00FA               	movwf	___llmod@dividend+3
  3972  0658  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3973  0659  00F9               	movwf	___llmod@dividend+2
  3974  065A  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3975  065B  00F8               	movwf	___llmod@dividend+1
  3976  065C  083A               	movf	sprintf@tmpval^(0+128),w
  3977  065D  00F7               	movwf	___llmod@dividend
  3978  065E  160A  158A  23E7  120A  118A  	fcall	___llmod
  3979  0663  0876               	movf	?___llmod+3,w
  3980  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3981  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3982  0666  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3983  0667  0875               	movf	?___llmod+2,w
  3984  0668  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3985  0669  0874               	movf	?___llmod+1,w
  3986  066A  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3987  066B  0873               	movf	?___llmod,w
  3988  066C  00BA               	movwf	sprintf@tmpval^(0+128)
  3989  066D                     l3398:
  3990                           
  3991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3992  066D  083A               	movf	sprintf@tmpval^(0+128),w
  3993  066E  3E30               	addlw	48
  3994  066F  00A8               	movwf	??_sprintf^(0+128)
  3995  0670  0844               	movf	sprintf@sp^(0+128),w
  3996  0671  0084               	movwf	4
  3997  0672  0828               	movf	??_sprintf^(0+128),w
  3998  0673  1783               	bsf	3,7	;select IRP bank2
  3999  0674  0080               	movwf	0
  4000  0675  3001               	movlw	1
  4001  0676  00A8               	movwf	??_sprintf^(0+128)
  4002  0677  0828               	movf	??_sprintf^(0+128),w
  4003  0678  07C4               	addwf	sprintf@sp^(0+128),f
  4004  0679                     l3400:
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4007  0679  0847               	movf	sprintf@c^(0+128),w
  4008  067A  00A8               	movwf	??_sprintf^(0+128)
  4009  067B  3001               	movlw	1
  4010  067C                     u5455:
  4011  067C  1003               	clrc
  4012  067D  0DA8               	rlf	??_sprintf^(0+128),f
  4013  067E  3EFF               	addlw	-1
  4014  067F  1D03               	skipz
  4015  0680  2E7C               	goto	u5455
  4016  0681  1003               	clrc
  4017  0682  0D28               	rlf	??_sprintf^(0+128),w
  4018  0683  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4019  0684  0084               	movwf	4
  4020  0685  120A  158A  200A  120A  118A  	fcall	stringdir
  4021  068A  00F3               	movwf	___llmod@divisor
  4022  068B  120A  158A  200A  120A  118A  	fcall	stringdir
  4023  0690  00F4               	movwf	___llmod@divisor+1
  4024  0691  120A  158A  200A  120A  118A  	fcall	stringdir
  4025  0696  00F5               	movwf	___llmod@divisor+2
  4026  0697  120A  158A  200A  120A  118A  	fcall	stringdir
  4027  069C  00F6               	movwf	___llmod@divisor+3
  4028  069D  0835               	movf	(sprintf@val+3)^(0+128),w
  4029  069E  00FA               	movwf	___llmod@dividend+3
  4030  069F  0834               	movf	(sprintf@val+2)^(0+128),w
  4031  06A0  00F9               	movwf	___llmod@dividend+2
  4032  06A1  0833               	movf	(sprintf@val+1)^(0+128),w
  4033  06A2  00F8               	movwf	___llmod@dividend+1
  4034  06A3  0832               	movf	sprintf@val^(0+128),w
  4035  06A4  00F7               	movwf	___llmod@dividend
  4036  06A5  160A  158A  23E7  120A  118A  	fcall	___llmod
  4037  06AA  0876               	movf	?___llmod+3,w
  4038  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  4039  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  4040  06AD  00B5               	movwf	(sprintf@val+3)^(0+128)
  4041  06AE  0875               	movf	?___llmod+2,w
  4042  06AF  00B4               	movwf	(sprintf@val+2)^(0+128)
  4043  06B0  0874               	movf	?___llmod+1,w
  4044  06B1  00B3               	movwf	(sprintf@val+1)^(0+128)
  4045  06B2  0873               	movf	?___llmod,w
  4046  06B3  00B2               	movwf	sprintf@val^(0+128)
  4047  06B4                     l3402:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4050  06B4  3001               	movlw	1
  4051  06B5  02C7               	subwf	sprintf@c^(0+128),f
  4052  06B6  0A47               	incf	sprintf@c^(0+128),w
  4053  06B7  1D03               	btfss	3,2
  4054  06B8  2EBA               	goto	u5461
  4055  06B9  2EBB               	goto	u5460
  4056  06BA                     u5461:
  4057  06BA  2E13               	goto	l3394
  4058  06BB                     u5460:
  4059  06BB  2ECD               	goto	l3410
  4060  06BC                     l3404:
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4063  06BC  3030               	movlw	48
  4064  06BD  00A8               	movwf	??_sprintf^(0+128)
  4065  06BE  0844               	movf	sprintf@sp^(0+128),w
  4066  06BF  0084               	movwf	4
  4067  06C0  0828               	movf	??_sprintf^(0+128),w
  4068  06C1  1783               	bsf	3,7	;select IRP bank2
  4069  06C2  0080               	movwf	0
  4070  06C3                     l3406:
  4071  06C3  3001               	movlw	1
  4072  06C4  00A8               	movwf	??_sprintf^(0+128)
  4073  06C5  0828               	movf	??_sprintf^(0+128),w
  4074  06C6  07C4               	addwf	sprintf@sp^(0+128),f
  4075  06C7                     l3408:
  4076                           
  4077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4078  06C7  30FF               	movlw	255
  4079  06C8  07C5               	addwf	sprintf@prec^(0+128),f
  4080  06C9  1803               	skipnc
  4081  06CA  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  4082  06CB  30FF               	movlw	255
  4083  06CC  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  4084  06CD                     l3410:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4087  06CD  0845               	movf	sprintf@prec^(0+128),w
  4088  06CE  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4089  06CF  1D03               	btfss	3,2
  4090  06D0  2ED2               	goto	u5471
  4091  06D1  2ED3               	goto	u5470
  4092  06D2                     u5471:
  4093  06D2  2EBC               	goto	l3404
  4094  06D3                     u5470:
  4095  06D3  2F97               	goto	l3458
  4096  06D4                     l3412:
  4097                           
  4098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4099  06D4  0845               	movf	sprintf@prec^(0+128),w
  4100  06D5  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  4101  06D6  1D03               	btfss	3,2
  4102  06D7  2ED9               	goto	u5481
  4103  06D8  2EDA               	goto	u5480
  4104  06D9                     u5481:
  4105  06D9  2EE8               	goto	l324
  4106  06DA                     u5480:
  4107  06DA                     l3414:
  4108  06DA  0835               	movf	(sprintf@val+3)^(0+128),w
  4109  06DB  0434               	iorwf	(sprintf@val+2)^(0+128),w
  4110  06DC  0433               	iorwf	(sprintf@val+1)^(0+128),w
  4111  06DD  0432               	iorwf	sprintf@val^(0+128),w
  4112  06DE  1D03               	skipz
  4113  06DF  2EE1               	goto	u5491
  4114  06E0  2EE2               	goto	u5490
  4115  06E1                     u5491:
  4116  06E1  2EE8               	goto	l324
  4117  06E2                     u5490:
  4118  06E2                     l3416:
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4121  06E2  3001               	movlw	1
  4122  06E3  07C5               	addwf	sprintf@prec^(0+128),f
  4123  06E4  1803               	skipnc
  4124  06E5  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  4125  06E6  3000               	movlw	0
  4126  06E7  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  4127  06E8                     l324:
  4128                           
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4130  06E8  0846               	movf	(sprintf@prec+1)^(0+128),w
  4131  06E9  3A80               	xorlw	128
  4132  06EA  3C80               	sublw	128
  4133  06EB  1D03               	skipz
  4134  06EC  2EEF               	goto	u5505
  4135  06ED  0845               	movf	sprintf@prec^(0+128),w
  4136  06EE  0247               	subwf	sprintf@c^(0+128),w
  4137  06EF                     u5505:
  4138  06EF  1803               	skipnc
  4139  06F0  2EF2               	goto	u5501
  4140  06F1  2EF3               	goto	u5500
  4141  06F2                     u5501:
  4142  06F2  2EFA               	goto	l3420
  4143  06F3                     u5500:
  4144  06F3                     l3418:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  4147  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  4148  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  4149  06F5  0845               	movf	sprintf@prec^(0+128),w
  4150  06F6  00A8               	movwf	??_sprintf^(0+128)
  4151  06F7  0828               	movf	??_sprintf^(0+128),w
  4152  06F8  00C7               	movwf	sprintf@c^(0+128)
  4153  06F9  2F12               	goto	l3424
  4154  06FA                     l3420:
  4155  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  4156  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  4157  06FC  0846               	movf	(sprintf@prec+1)^(0+128),w
  4158  06FD  3A80               	xorlw	128
  4159  06FE  00A8               	movwf	??_sprintf^(0+128)
  4160  06FF  3080               	movlw	128
  4161  0700  0228               	subwf	??_sprintf^(0+128),w
  4162  0701  1D03               	skipz
  4163  0702  2F05               	goto	u5515
  4164  0703  0847               	movf	sprintf@c^(0+128),w
  4165  0704  0245               	subwf	sprintf@prec^(0+128),w
  4166  0705                     u5515:
  4167  0705  1803               	skipnc
  4168  0706  2F08               	goto	u5511
  4169  0707  2F09               	goto	u5510
  4170  0708                     u5511:
  4171  0708  2F12               	goto	l3424
  4172  0709                     u5510:
  4173  0709                     l3422:
  4174                           
  4175                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  4176  0709  1683               	bsf	3,5	;RP0=1, select bank1
  4177  070A  1303               	bcf	3,6	;RP1=0, select bank1
  4178  070B  0847               	movf	sprintf@c^(0+128),w
  4179  070C  00A8               	movwf	??_sprintf^(0+128)
  4180  070D  01A9               	clrf	(??_sprintf^(0+128)+1)
  4181  070E  0828               	movf	??_sprintf^(0+128),w
  4182  070F  00C5               	movwf	sprintf@prec^(0+128)
  4183  0710  0829               	movf	(??_sprintf+1)^(0+128),w
  4184  0711  00C6               	movwf	(sprintf@prec+1)^(0+128)
  4185  0712                     l3424:
  4186                           
  4187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  4188  0712  1683               	bsf	3,5	;RP0=1, select bank1
  4189  0713  1303               	bcf	3,6	;RP1=0, select bank1
  4190  0714  0838               	movf	sprintf@width^(0+128),w
  4191  0715  0439               	iorwf	(sprintf@width+1)^(0+128),w
  4192  0716  1903               	btfsc	3,2
  4193  0717  2F19               	goto	u5521
  4194  0718  2F1A               	goto	u5520
  4195  0719                     u5521:
  4196  0719  2F2C               	goto	l3430
  4197  071A                     u5520:
  4198  071A                     l3426:
  4199  071A  3003               	movlw	3
  4200  071B  0536               	andwf	sprintf@flag^(0+128),w
  4201  071C  00A8               	movwf	??_sprintf^(0+128)
  4202  071D  3000               	movlw	0
  4203  071E  0537               	andwf	(sprintf@flag+1)^(0+128),w
  4204  071F  00A9               	movwf	(??_sprintf+1)^(0+128)
  4205  0720  0828               	movf	??_sprintf^(0+128),w
  4206  0721  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4207  0722  1903               	btfsc	3,2
  4208  0723  2F25               	goto	u5531
  4209  0724  2F26               	goto	u5530
  4210  0725                     u5531:
  4211  0725  2F2C               	goto	l3430
  4212  0726                     u5530:
  4213  0726                     l3428:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1372:    width--;
  4216  0726  30FF               	movlw	255
  4217  0727  07B8               	addwf	sprintf@width^(0+128),f
  4218  0728  1803               	skipnc
  4219  0729  0AB9               	incf	(sprintf@width+1)^(0+128),f
  4220  072A  30FF               	movlw	255
  4221  072B  07B9               	addwf	(sprintf@width+1)^(0+128),f
  4222  072C                     l3430:
  4223                           
  4224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  4225  072C  1F37               	btfss	(sprintf@flag+1)^(0+128),6
  4226  072D  2F2F               	goto	u5541
  4227  072E  2F30               	goto	u5540
  4228  072F                     u5541:
  4229  072F  2F4B               	goto	l3438
  4230  0730                     u5540:
  4231  0730                     l3432:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  4234  0730  0846               	movf	(sprintf@prec+1)^(0+128),w
  4235  0731  3A80               	xorlw	128
  4236  0732  00A8               	movwf	??_sprintf^(0+128)
  4237  0733  0839               	movf	(sprintf@width+1)^(0+128),w
  4238  0734  3A80               	xorlw	128
  4239  0735  0228               	subwf	??_sprintf^(0+128),w
  4240  0736  1D03               	skipz
  4241  0737  2F3A               	goto	u5555
  4242  0738  0838               	movf	sprintf@width^(0+128),w
  4243  0739  0245               	subwf	sprintf@prec^(0+128),w
  4244  073A                     u5555:
  4245  073A  1803               	skipnc
  4246  073B  2F3D               	goto	u5551
  4247  073C  2F3E               	goto	u5550
  4248  073D                     u5551:
  4249  073D  2F47               	goto	l3436
  4250  073E                     u5550:
  4251  073E                     l3434:
  4252                           
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  4254  073E  1683               	bsf	3,5	;RP0=1, select bank1
  4255  073F  1303               	bcf	3,6	;RP1=0, select bank1
  4256  0740  0845               	movf	sprintf@prec^(0+128),w
  4257  0741  02B8               	subwf	sprintf@width^(0+128),f
  4258  0742  0846               	movf	(sprintf@prec+1)^(0+128),w
  4259  0743  1C03               	skipc
  4260  0744  03B9               	decf	(sprintf@width+1)^(0+128),f
  4261  0745  02B9               	subwf	(sprintf@width+1)^(0+128),f
  4262  0746  2F4B               	goto	l3438
  4263  0747                     l3436:
  4264                           
  4265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  4266  0747  1683               	bsf	3,5	;RP0=1, select bank1
  4267  0748  1303               	bcf	3,6	;RP1=0, select bank1
  4268  0749  01B8               	clrf	sprintf@width^(0+128)
  4269  074A  01B9               	clrf	(sprintf@width+1)^(0+128)
  4270  074B                     l3438:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  4273  074B  0839               	movf	(sprintf@width+1)^(0+128),w
  4274  074C  3A80               	xorlw	128
  4275  074D  3C80               	sublw	128
  4276  074E  1D03               	skipz
  4277  074F  2F52               	goto	u5565
  4278  0750  0838               	movf	sprintf@width^(0+128),w
  4279  0751  0247               	subwf	sprintf@c^(0+128),w
  4280  0752                     u5565:
  4281  0752  1803               	skipnc
  4282  0753  2F55               	goto	u5561
  4283  0754  2F56               	goto	u5560
  4284  0755                     u5561:
  4285  0755  2F62               	goto	l3442
  4286  0756                     u5560:
  4287  0756                     l3440:
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  4290  0756  1683               	bsf	3,5	;RP0=1, select bank1
  4291  0757  1303               	bcf	3,6	;RP1=0, select bank1
  4292  0758  0847               	movf	sprintf@c^(0+128),w
  4293  0759  00A8               	movwf	??_sprintf^(0+128)
  4294  075A  01A9               	clrf	(??_sprintf^(0+128)+1)
  4295  075B  0828               	movf	??_sprintf^(0+128),w
  4296  075C  02B8               	subwf	sprintf@width^(0+128),f
  4297  075D  0829               	movf	(??_sprintf+1)^(0+128),w
  4298  075E  1C03               	skipc
  4299  075F  03B9               	decf	(sprintf@width+1)^(0+128),f
  4300  0760  02B9               	subwf	(sprintf@width+1)^(0+128),f
  4301  0761  2F66               	goto	l3444
  4302  0762                     l3442:
  4303                           
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  4305  0762  1683               	bsf	3,5	;RP0=1, select bank1
  4306  0763  1303               	bcf	3,6	;RP1=0, select bank1
  4307  0764  01B8               	clrf	sprintf@width^(0+128)
  4308  0765  01B9               	clrf	(sprintf@width+1)^(0+128)
  4309  0766                     l3444:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1450:    if(width
  4312  0766  0838               	movf	sprintf@width^(0+128),w
  4313  0767  0439               	iorwf	(sprintf@width+1)^(0+128),w
  4314  0768  1903               	btfsc	3,2
  4315  0769  2F6B               	goto	u5571
  4316  076A  2F6C               	goto	u5570
  4317  076B                     u5571:
  4318  076B  2F83               	goto	l3452
  4319  076C                     u5570:
  4320  076C                     l3446:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  4323  076C  3020               	movlw	32
  4324  076D  00A8               	movwf	??_sprintf^(0+128)
  4325  076E  0844               	movf	sprintf@sp^(0+128),w
  4326  076F  0084               	movwf	4
  4327  0770  0828               	movf	??_sprintf^(0+128),w
  4328  0771  1783               	bsf	3,7	;select IRP bank2
  4329  0772  0080               	movwf	0
  4330  0773                     l3448:
  4331  0773  3001               	movlw	1
  4332  0774  00A8               	movwf	??_sprintf^(0+128)
  4333  0775  0828               	movf	??_sprintf^(0+128),w
  4334  0776  07C4               	addwf	sprintf@sp^(0+128),f
  4335  0777                     l3450:
  4336  0777  30FF               	movlw	255
  4337  0778  07B8               	addwf	sprintf@width^(0+128),f
  4338  0779  1803               	skipnc
  4339  077A  0AB9               	incf	(sprintf@width+1)^(0+128),f
  4340  077B  30FF               	movlw	255
  4341  077C  07B9               	addwf	(sprintf@width+1)^(0+128),f
  4342  077D  0838               	movf	sprintf@width^(0+128),w
  4343  077E  0439               	iorwf	(sprintf@width+1)^(0+128),w
  4344  077F  1D03               	btfss	3,2
  4345  0780  2F82               	goto	u5581
  4346  0781  2F83               	goto	u5580
  4347  0782                     u5581:
  4348  0782  2F6C               	goto	l3446
  4349  0783                     u5580:
  4350  0783                     l3452:
  4351                           
  4352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4353  0783  3003               	movlw	3
  4354  0784  0536               	andwf	sprintf@flag^(0+128),w
  4355  0785  00A8               	movwf	??_sprintf^(0+128)
  4356  0786  3000               	movlw	0
  4357  0787  0537               	andwf	(sprintf@flag+1)^(0+128),w
  4358  0788  00A9               	movwf	(??_sprintf+1)^(0+128)
  4359  0789  0828               	movf	??_sprintf^(0+128),w
  4360  078A  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4361  078B  1903               	btfsc	3,2
  4362  078C  2F8E               	goto	u5591
  4363  078D  2F8F               	goto	u5590
  4364  078E                     u5591:
  4365  078E  2F97               	goto	l3458
  4366  078F                     u5590:
  4367  078F                     l3454:
  4368                           
  4369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4370  078F  302D               	movlw	45
  4371  0790  00A8               	movwf	??_sprintf^(0+128)
  4372  0791  0844               	movf	sprintf@sp^(0+128),w
  4373  0792  0084               	movwf	4
  4374  0793  0828               	movf	??_sprintf^(0+128),w
  4375  0794  1783               	bsf	3,7	;select IRP bank2
  4376  0795  0080               	movwf	0
  4377  0796  283D               	goto	l3214
  4378  0797                     l3458:
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4381  0797  3001               	movlw	1
  4382  0798  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0799  1303               	bcf	3,6	;RP1=0, select bank0
  4384  079A  07EA               	addwf	sprintf@f,f
  4385  079B  30FF               	movlw	-1
  4386  079C  076A               	addwf	sprintf@f,w
  4387  079D  0084               	movwf	4
  4388  079E  120A  158A  200A  120A  118A  	fcall	stringdir
  4389  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  4390  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  4391  07A5  00A8               	movwf	??_sprintf^(0+128)
  4392  07A6  0828               	movf	??_sprintf^(0+128),w
  4393  07A7  00C7               	movwf	sprintf@c^(0+128)
  4394  07A8  0847               	movf	sprintf@c^(0+128),w
  4395  07A9  1D03               	btfss	3,2
  4396  07AA  2FAC               	goto	u5601
  4397  07AB  2FAD               	goto	u5600
  4398  07AC                     u5601:
  4399  07AC  2830               	goto	l3210
  4400  07AD                     u5600:
  4401  07AD                     l3460:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4404  07AD  0844               	movf	sprintf@sp^(0+128),w
  4405  07AE  0084               	movwf	4
  4406  07AF  1783               	bsf	3,7	;select IRP bank2
  4407  07B0  0180               	clrf	0
  4408  07B1                     l339:
  4409  07B1  0008               	return
  4410  07B2                     __end_of_sprintf:
  4411                           
  4412                           	psect	text2
  4413  0C9D                     __ptext2:	
  4414 ;; *************** function _scale *****************
  4415 ;; Defined at:
  4416 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  scl             1    wreg     char 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  scl             1   52[BANK0 ] char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  4   34[BANK0 ] char 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       4       0       0       0
  4431 ;;      Locals:         0       5       0       0       0
  4432 ;;      Temps:          0      10       0       0       0
  4433 ;;      Totals:         0      19       0       0       0
  4434 ;;Total ram usage:       19 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 3
  4437 ;; This function calls:
  4438 ;;		___awdiv
  4439 ;;		___awmod
  4440 ;;		___flmul
  4441 ;; This function is called by:
  4442 ;;		_sprintf
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _scale
  4448  0C9D                     _scale:
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4452                           ;scale@scl stored from wreg
  4453  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4454  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4455  0C9F  00D4               	movwf	scale@scl
  4456  0CA0                     l2778:
  4457                           
  4458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4459  0CA0  1FD4               	btfss	scale@scl,7
  4460  0CA1  2CA3               	goto	u4121
  4461  0CA2  2CA4               	goto	u4120
  4462  0CA3                     u4121:
  4463  0CA3  2E53               	goto	l2800
  4464  0CA4                     u4120:
  4465  0CA4                     l2780:
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4468  0CA4  09D4               	comf	scale@scl,f
  4469  0CA5  0AD4               	incf	scale@scl,f
  4470  0CA6                     l2782:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4473  0CA6  0854               	movf	scale@scl,w
  4474  0CA7  3A80               	xorlw	128
  4475  0CA8  3E12               	addlw	-238
  4476  0CA9  1C03               	skipc
  4477  0CAA  2CAC               	goto	u4131
  4478  0CAB  2CAD               	goto	u4130
  4479  0CAC                     u4131:
  4480  0CAC  2D97               	goto	l2790
  4481  0CAD                     u4130:
  4482  0CAD                     l2784:
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4485  0CAD  300A               	movlw	10
  4486  0CAE  00A0               	movwf	___awdiv@divisor
  4487  0CAF  3000               	movlw	0
  4488  0CB0  00A1               	movwf	___awdiv@divisor+1
  4489  0CB1  0854               	movf	scale@scl,w
  4490  0CB2  00F5               	movwf	___awmod@dividend
  4491  0CB3  01F6               	clrf	___awmod@dividend+1
  4492  0CB4  1BF5               	btfsc	___awmod@dividend,7
  4493  0CB5  03F6               	decf	___awmod@dividend+1,f
  4494  0CB6  3064               	movlw	100
  4495  0CB7  00F3               	movwf	___awmod@divisor
  4496  0CB8  3000               	movlw	0
  4497  0CB9  00F4               	movwf	___awmod@divisor+1
  4498  0CBA  160A  158A  243D  120A  158A  	fcall	___awmod
  4499  0CBF  0874               	movf	?___awmod+1,w
  4500  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0CC2  00A3               	movwf	___awdiv@dividend+1
  4503  0CC3  0873               	movf	?___awmod,w
  4504  0CC4  00A2               	movwf	___awdiv@dividend
  4505  0CC5  160A  158A  24FE  120A  158A  	fcall	___awdiv
  4506  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0CCC  0820               	movf	?___awdiv,w
  4509  0CCD  00C6               	movwf	??_scale
  4510  0CCE  3001               	movlw	1
  4511  0CCF                     u4145:
  4512  0CCF  1003               	clrc
  4513  0CD0  0DC6               	rlf	??_scale,f
  4514  0CD1  3EFF               	addlw	-1
  4515  0CD2  1D03               	skipz
  4516  0CD3  2CCF               	goto	u4145
  4517  0CD4  1003               	clrc
  4518  0CD5  0D46               	rlf	??_scale,w
  4519  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4520  0CD7  0084               	movwf	4
  4521  0CD8  120A  158A  200A  120A  158A  	fcall	stringdir
  4522  0CDD  00C7               	movwf	??_scale+1
  4523  0CDE  120A  158A  200A  120A  158A  	fcall	stringdir
  4524  0CE3  00C8               	movwf	??_scale+2
  4525  0CE4  120A  158A  200A  120A  158A  	fcall	stringdir
  4526  0CE9  00C9               	movwf	??_scale+3
  4527  0CEA  120A  158A  200A  120A  158A  	fcall	stringdir
  4528  0CEF  00CA               	movwf	??_scale+4
  4529  0CF0  084A               	movf	??_scale+4,w
  4530  0CF1  00AB               	movwf	___flmul@b+3
  4531  0CF2  0849               	movf	??_scale+3,w
  4532  0CF3  00AA               	movwf	___flmul@b+2
  4533  0CF4  0848               	movf	??_scale+2,w
  4534  0CF5  00A9               	movwf	___flmul@b+1
  4535  0CF6  0847               	movf	??_scale+1,w
  4536  0CF7  00A8               	movwf	___flmul@b
  4537  0CF8  3064               	movlw	100
  4538  0CF9  00A0               	movwf	___awdiv@divisor
  4539  0CFA  3000               	movlw	0
  4540  0CFB  00A1               	movwf	___awdiv@divisor+1
  4541  0CFC  0854               	movf	scale@scl,w
  4542  0CFD  00A2               	movwf	___awdiv@dividend
  4543  0CFE  01A3               	clrf	___awdiv@dividend+1
  4544  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4545  0D00  03A3               	decf	___awdiv@dividend+1,f
  4546  0D01  160A  158A  24FE  120A  158A  	fcall	___awdiv
  4547  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4548  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4549  0D08  0820               	movf	?___awdiv,w
  4550  0D09  00CB               	movwf	??_scale+5
  4551  0D0A  3001               	movlw	1
  4552  0D0B                     u4155:
  4553  0D0B  1003               	clrc
  4554  0D0C  0DCB               	rlf	??_scale+5,f
  4555  0D0D  3EFF               	addlw	-1
  4556  0D0E  1D03               	skipz
  4557  0D0F  2D0B               	goto	u4155
  4558  0D10  1003               	clrc
  4559  0D11  0D4B               	rlf	??_scale+5,w
  4560  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4561  0D13  0084               	movwf	4
  4562  0D14  120A  158A  200A  120A  158A  	fcall	stringdir
  4563  0D19  00CC               	movwf	??_scale+6
  4564  0D1A  120A  158A  200A  120A  158A  	fcall	stringdir
  4565  0D1F  00CD               	movwf	??_scale+7
  4566  0D20  120A  158A  200A  120A  158A  	fcall	stringdir
  4567  0D25  00CE               	movwf	??_scale+8
  4568  0D26  120A  158A  200A  120A  158A  	fcall	stringdir
  4569  0D2B  00CF               	movwf	??_scale+9
  4570  0D2C  084F               	movf	??_scale+9,w
  4571  0D2D  00AF               	movwf	___flmul@a+3
  4572  0D2E  084E               	movf	??_scale+8,w
  4573  0D2F  00AE               	movwf	___flmul@a+2
  4574  0D30  084D               	movf	??_scale+7,w
  4575  0D31  00AD               	movwf	___flmul@a+1
  4576  0D32  084C               	movf	??_scale+6,w
  4577  0D33  00AC               	movwf	___flmul@a
  4578  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4579  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4580  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4581  0D3B  082B               	movf	?___flmul+3,w
  4582  0D3C  00D3               	movwf	_scale$1157+3
  4583  0D3D  082A               	movf	?___flmul+2,w
  4584  0D3E  00D2               	movwf	_scale$1157+2
  4585  0D3F  0829               	movf	?___flmul+1,w
  4586  0D40  00D1               	movwf	_scale$1157+1
  4587  0D41  0828               	movf	?___flmul,w
  4588  0D42  00D0               	movwf	_scale$1157
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4591  0D43  300A               	movlw	10
  4592  0D44  00F3               	movwf	___awmod@divisor
  4593  0D45  3000               	movlw	0
  4594  0D46  00F4               	movwf	___awmod@divisor+1
  4595  0D47  0854               	movf	scale@scl,w
  4596  0D48  00F5               	movwf	___awmod@dividend
  4597  0D49  01F6               	clrf	___awmod@dividend+1
  4598  0D4A  1BF5               	btfsc	___awmod@dividend,7
  4599  0D4B  03F6               	decf	___awmod@dividend+1,f
  4600  0D4C  160A  158A  243D  120A  158A  	fcall	___awmod
  4601  0D51  0873               	movf	?___awmod,w
  4602  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0D54  00C6               	movwf	??_scale
  4605  0D55  3001               	movlw	1
  4606  0D56                     u4165:
  4607  0D56  1003               	clrc
  4608  0D57  0DC6               	rlf	??_scale,f
  4609  0D58  3EFF               	addlw	-1
  4610  0D59  1D03               	skipz
  4611  0D5A  2D56               	goto	u4165
  4612  0D5B  1003               	clrc
  4613  0D5C  0D46               	rlf	??_scale,w
  4614  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4615  0D5E  0084               	movwf	4
  4616  0D5F  120A  158A  200A  120A  158A  	fcall	stringdir
  4617  0D64  00C7               	movwf	??_scale+1
  4618  0D65  120A  158A  200A  120A  158A  	fcall	stringdir
  4619  0D6A  00C8               	movwf	??_scale+2
  4620  0D6B  120A  158A  200A  120A  158A  	fcall	stringdir
  4621  0D70  00C9               	movwf	??_scale+3
  4622  0D71  120A  158A  200A  120A  158A  	fcall	stringdir
  4623  0D76  00CA               	movwf	??_scale+4
  4624  0D77  084A               	movf	??_scale+4,w
  4625  0D78  00AB               	movwf	___flmul@b+3
  4626  0D79  0849               	movf	??_scale+3,w
  4627  0D7A  00AA               	movwf	___flmul@b+2
  4628  0D7B  0848               	movf	??_scale+2,w
  4629  0D7C  00A9               	movwf	___flmul@b+1
  4630  0D7D  0847               	movf	??_scale+1,w
  4631  0D7E  00A8               	movwf	___flmul@b
  4632  0D7F  0853               	movf	_scale$1157+3,w
  4633  0D80  00AF               	movwf	___flmul@a+3
  4634  0D81  0852               	movf	_scale$1157+2,w
  4635  0D82  00AE               	movwf	___flmul@a+2
  4636  0D83  0851               	movf	_scale$1157+1,w
  4637  0D84  00AD               	movwf	___flmul@a+1
  4638  0D85  0850               	movf	_scale$1157,w
  4639  0D86  00AC               	movwf	___flmul@a
  4640  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4641  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4642  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4643  0D8E  082B               	movf	?___flmul+3,w
  4644  0D8F  00C5               	movwf	?_scale+3
  4645  0D90  082A               	movf	?___flmul+2,w
  4646  0D91  00C4               	movwf	?_scale+2
  4647  0D92  0829               	movf	?___flmul+1,w
  4648  0D93  00C3               	movwf	?_scale+1
  4649  0D94  0828               	movf	?___flmul,w
  4650  0D95  00C2               	movwf	?_scale
  4651  0D96  2FFF               	goto	l256
  4652  0D97                     l2790:
  4653  0D97  0854               	movf	scale@scl,w
  4654  0D98  3A80               	xorlw	128
  4655  0D99  3E75               	addlw	-139
  4656  0D9A  1C03               	skipc
  4657  0D9B  2D9D               	goto	u4171
  4658  0D9C  2D9E               	goto	u4170
  4659  0D9D                     u4171:
  4660  0D9D  2E26               	goto	l2796
  4661  0D9E                     u4170:
  4662  0D9E                     l2792:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4665  0D9E  300A               	movlw	10
  4666  0D9F  00F3               	movwf	___awmod@divisor
  4667  0DA0  3000               	movlw	0
  4668  0DA1  00F4               	movwf	___awmod@divisor+1
  4669  0DA2  0854               	movf	scale@scl,w
  4670  0DA3  00F5               	movwf	___awmod@dividend
  4671  0DA4  01F6               	clrf	___awmod@dividend+1
  4672  0DA5  1BF5               	btfsc	___awmod@dividend,7
  4673  0DA6  03F6               	decf	___awmod@dividend+1,f
  4674  0DA7  160A  158A  243D  120A  158A  	fcall	___awmod
  4675  0DAC  0873               	movf	?___awmod,w
  4676  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0DAF  00C6               	movwf	??_scale
  4679  0DB0  3001               	movlw	1
  4680  0DB1                     u4185:
  4681  0DB1  1003               	clrc
  4682  0DB2  0DC6               	rlf	??_scale,f
  4683  0DB3  3EFF               	addlw	-1
  4684  0DB4  1D03               	skipz
  4685  0DB5  2DB1               	goto	u4185
  4686  0DB6  1003               	clrc
  4687  0DB7  0D46               	rlf	??_scale,w
  4688  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4689  0DB9  0084               	movwf	4
  4690  0DBA  120A  158A  200A  120A  158A  	fcall	stringdir
  4691  0DBF  00C7               	movwf	??_scale+1
  4692  0DC0  120A  158A  200A  120A  158A  	fcall	stringdir
  4693  0DC5  00C8               	movwf	??_scale+2
  4694  0DC6  120A  158A  200A  120A  158A  	fcall	stringdir
  4695  0DCB  00C9               	movwf	??_scale+3
  4696  0DCC  120A  158A  200A  120A  158A  	fcall	stringdir
  4697  0DD1  00CA               	movwf	??_scale+4
  4698  0DD2  084A               	movf	??_scale+4,w
  4699  0DD3  00AB               	movwf	___flmul@b+3
  4700  0DD4  0849               	movf	??_scale+3,w
  4701  0DD5  00AA               	movwf	___flmul@b+2
  4702  0DD6  0848               	movf	??_scale+2,w
  4703  0DD7  00A9               	movwf	___flmul@b+1
  4704  0DD8  0847               	movf	??_scale+1,w
  4705  0DD9  00A8               	movwf	___flmul@b
  4706  0DDA  300A               	movlw	10
  4707  0DDB  00A0               	movwf	___awdiv@divisor
  4708  0DDC  3000               	movlw	0
  4709  0DDD  00A1               	movwf	___awdiv@divisor+1
  4710  0DDE  0854               	movf	scale@scl,w
  4711  0DDF  00A2               	movwf	___awdiv@dividend
  4712  0DE0  01A3               	clrf	___awdiv@dividend+1
  4713  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4714  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4715  0DE3  160A  158A  24FE  120A  158A  	fcall	___awdiv
  4716  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4717  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4718  0DEA  0820               	movf	?___awdiv,w
  4719  0DEB  00CB               	movwf	??_scale+5
  4720  0DEC  3001               	movlw	1
  4721  0DED                     u4195:
  4722  0DED  1003               	clrc
  4723  0DEE  0DCB               	rlf	??_scale+5,f
  4724  0DEF  3EFF               	addlw	-1
  4725  0DF0  1D03               	skipz
  4726  0DF1  2DED               	goto	u4195
  4727  0DF2  1003               	clrc
  4728  0DF3  0D4B               	rlf	??_scale+5,w
  4729  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4730  0DF5  0084               	movwf	4
  4731  0DF6  120A  158A  200A  120A  158A  	fcall	stringdir
  4732  0DFB  00CC               	movwf	??_scale+6
  4733  0DFC  120A  158A  200A  120A  158A  	fcall	stringdir
  4734  0E01  00CD               	movwf	??_scale+7
  4735  0E02  120A  158A  200A  120A  158A  	fcall	stringdir
  4736  0E07  00CE               	movwf	??_scale+8
  4737  0E08  120A  158A  200A  120A  158A  	fcall	stringdir
  4738  0E0D  00CF               	movwf	??_scale+9
  4739  0E0E  084F               	movf	??_scale+9,w
  4740  0E0F  00AF               	movwf	___flmul@a+3
  4741  0E10  084E               	movf	??_scale+8,w
  4742  0E11  00AE               	movwf	___flmul@a+2
  4743  0E12  084D               	movf	??_scale+7,w
  4744  0E13  00AD               	movwf	___flmul@a+1
  4745  0E14  084C               	movf	??_scale+6,w
  4746  0E15  00AC               	movwf	___flmul@a
  4747  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4748  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4749  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4750  0E1D  082B               	movf	?___flmul+3,w
  4751  0E1E  00C5               	movwf	?_scale+3
  4752  0E1F  082A               	movf	?___flmul+2,w
  4753  0E20  00C4               	movwf	?_scale+2
  4754  0E21  0829               	movf	?___flmul+1,w
  4755  0E22  00C3               	movwf	?_scale+1
  4756  0E23  0828               	movf	?___flmul,w
  4757  0E24  00C2               	movwf	?_scale
  4758  0E25  2FFF               	goto	l256
  4759  0E26                     l2796:
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4762  0E26  0854               	movf	scale@scl,w
  4763  0E27  00C6               	movwf	??_scale
  4764  0E28  3001               	movlw	1
  4765  0E29                     u4205:
  4766  0E29  1003               	clrc
  4767  0E2A  0DC6               	rlf	??_scale,f
  4768  0E2B  3EFF               	addlw	-1
  4769  0E2C  1D03               	skipz
  4770  0E2D  2E29               	goto	u4205
  4771  0E2E  1003               	clrc
  4772  0E2F  0D46               	rlf	??_scale,w
  4773  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4774  0E31  0084               	movwf	4
  4775  0E32  120A  158A  200A  120A  158A  	fcall	stringdir
  4776  0E37  00C7               	movwf	??_scale+1
  4777  0E38  120A  158A  200A  120A  158A  	fcall	stringdir
  4778  0E3D  00C8               	movwf	??_scale+2
  4779  0E3E  120A  158A  200A  120A  158A  	fcall	stringdir
  4780  0E43  00C9               	movwf	??_scale+3
  4781  0E44  120A  158A  200A  120A  158A  	fcall	stringdir
  4782  0E49  00CA               	movwf	??_scale+4
  4783  0E4A  084A               	movf	??_scale+4,w
  4784  0E4B  00C5               	movwf	?_scale+3
  4785  0E4C  0849               	movf	??_scale+3,w
  4786  0E4D  00C4               	movwf	?_scale+2
  4787  0E4E  0848               	movf	??_scale+2,w
  4788  0E4F  00C3               	movwf	?_scale+1
  4789  0E50  0847               	movf	??_scale+1,w
  4790  0E51  00C2               	movwf	?_scale
  4791  0E52  2FFF               	goto	l256
  4792  0E53                     l2800:
  4793                           
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4795  0E53  0854               	movf	scale@scl,w
  4796  0E54  3A80               	xorlw	128
  4797  0E55  3E12               	addlw	-238
  4798  0E56  1C03               	skipc
  4799  0E57  2E59               	goto	u4211
  4800  0E58  2E5A               	goto	u4210
  4801  0E59                     u4211:
  4802  0E59  2F44               	goto	l2808
  4803  0E5A                     u4210:
  4804  0E5A                     l2802:
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4807  0E5A  300A               	movlw	10
  4808  0E5B  00A0               	movwf	___awdiv@divisor
  4809  0E5C  3000               	movlw	0
  4810  0E5D  00A1               	movwf	___awdiv@divisor+1
  4811  0E5E  0854               	movf	scale@scl,w
  4812  0E5F  00F5               	movwf	___awmod@dividend
  4813  0E60  01F6               	clrf	___awmod@dividend+1
  4814  0E61  1BF5               	btfsc	___awmod@dividend,7
  4815  0E62  03F6               	decf	___awmod@dividend+1,f
  4816  0E63  3064               	movlw	100
  4817  0E64  00F3               	movwf	___awmod@divisor
  4818  0E65  3000               	movlw	0
  4819  0E66  00F4               	movwf	___awmod@divisor+1
  4820  0E67  160A  158A  243D  120A  158A  	fcall	___awmod
  4821  0E6C  0874               	movf	?___awmod+1,w
  4822  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0E6F  00A3               	movwf	___awdiv@dividend+1
  4825  0E70  0873               	movf	?___awmod,w
  4826  0E71  00A2               	movwf	___awdiv@dividend
  4827  0E72  160A  158A  24FE  120A  158A  	fcall	___awdiv
  4828  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0E79  0820               	movf	?___awdiv,w
  4831  0E7A  00C6               	movwf	??_scale
  4832  0E7B  3001               	movlw	1
  4833  0E7C                     u4225:
  4834  0E7C  1003               	clrc
  4835  0E7D  0DC6               	rlf	??_scale,f
  4836  0E7E  3EFF               	addlw	-1
  4837  0E7F  1D03               	skipz
  4838  0E80  2E7C               	goto	u4225
  4839  0E81  1003               	clrc
  4840  0E82  0D46               	rlf	??_scale,w
  4841  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4842  0E84  0084               	movwf	4
  4843  0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  4844  0E8A  00C7               	movwf	??_scale+1
  4845  0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  4846  0E90  00C8               	movwf	??_scale+2
  4847  0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  4848  0E96  00C9               	movwf	??_scale+3
  4849  0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  4850  0E9C  00CA               	movwf	??_scale+4
  4851  0E9D  084A               	movf	??_scale+4,w
  4852  0E9E  00AB               	movwf	___flmul@b+3
  4853  0E9F  0849               	movf	??_scale+3,w
  4854  0EA0  00AA               	movwf	___flmul@b+2
  4855  0EA1  0848               	movf	??_scale+2,w
  4856  0EA2  00A9               	movwf	___flmul@b+1
  4857  0EA3  0847               	movf	??_scale+1,w
  4858  0EA4  00A8               	movwf	___flmul@b
  4859  0EA5  3064               	movlw	100
  4860  0EA6  00A0               	movwf	___awdiv@divisor
  4861  0EA7  3000               	movlw	0
  4862  0EA8  00A1               	movwf	___awdiv@divisor+1
  4863  0EA9  0854               	movf	scale@scl,w
  4864  0EAA  00A2               	movwf	___awdiv@dividend
  4865  0EAB  01A3               	clrf	___awdiv@dividend+1
  4866  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4867  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4868  0EAE  160A  158A  24FE  120A  158A  	fcall	___awdiv
  4869  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4870  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4871  0EB5  0820               	movf	?___awdiv,w
  4872  0EB6  00CB               	movwf	??_scale+5
  4873  0EB7  3001               	movlw	1
  4874  0EB8                     u4235:
  4875  0EB8  1003               	clrc
  4876  0EB9  0DCB               	rlf	??_scale+5,f
  4877  0EBA  3EFF               	addlw	-1
  4878  0EBB  1D03               	skipz
  4879  0EBC  2EB8               	goto	u4235
  4880  0EBD  1003               	clrc
  4881  0EBE  0D4B               	rlf	??_scale+5,w
  4882  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4883  0EC0  0084               	movwf	4
  4884  0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  4885  0EC6  00CC               	movwf	??_scale+6
  4886  0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  4887  0ECC  00CD               	movwf	??_scale+7
  4888  0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  4889  0ED2  00CE               	movwf	??_scale+8
  4890  0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  4891  0ED8  00CF               	movwf	??_scale+9
  4892  0ED9  084F               	movf	??_scale+9,w
  4893  0EDA  00AF               	movwf	___flmul@a+3
  4894  0EDB  084E               	movf	??_scale+8,w
  4895  0EDC  00AE               	movwf	___flmul@a+2
  4896  0EDD  084D               	movf	??_scale+7,w
  4897  0EDE  00AD               	movwf	___flmul@a+1
  4898  0EDF  084C               	movf	??_scale+6,w
  4899  0EE0  00AC               	movwf	___flmul@a
  4900  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4901  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0EE8  082B               	movf	?___flmul+3,w
  4904  0EE9  00D3               	movwf	_scale$1157+3
  4905  0EEA  082A               	movf	?___flmul+2,w
  4906  0EEB  00D2               	movwf	_scale$1157+2
  4907  0EEC  0829               	movf	?___flmul+1,w
  4908  0EED  00D1               	movwf	_scale$1157+1
  4909  0EEE  0828               	movf	?___flmul,w
  4910  0EEF  00D0               	movwf	_scale$1157
  4911                           
  4912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4913  0EF0  300A               	movlw	10
  4914  0EF1  00F3               	movwf	___awmod@divisor
  4915  0EF2  3000               	movlw	0
  4916  0EF3  00F4               	movwf	___awmod@divisor+1
  4917  0EF4  0854               	movf	scale@scl,w
  4918  0EF5  00F5               	movwf	___awmod@dividend
  4919  0EF6  01F6               	clrf	___awmod@dividend+1
  4920  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4921  0EF8  03F6               	decf	___awmod@dividend+1,f
  4922  0EF9  160A  158A  243D  120A  158A  	fcall	___awmod
  4923  0EFE  0873               	movf	?___awmod,w
  4924  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0F01  00C6               	movwf	??_scale
  4927  0F02  3001               	movlw	1
  4928  0F03                     u4245:
  4929  0F03  1003               	clrc
  4930  0F04  0DC6               	rlf	??_scale,f
  4931  0F05  3EFF               	addlw	-1
  4932  0F06  1D03               	skipz
  4933  0F07  2F03               	goto	u4245
  4934  0F08  1003               	clrc
  4935  0F09  0D46               	rlf	??_scale,w
  4936  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4937  0F0B  0084               	movwf	4
  4938  0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4939  0F11  00C7               	movwf	??_scale+1
  4940  0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  4941  0F17  00C8               	movwf	??_scale+2
  4942  0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  4943  0F1D  00C9               	movwf	??_scale+3
  4944  0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  4945  0F23  00CA               	movwf	??_scale+4
  4946  0F24  084A               	movf	??_scale+4,w
  4947  0F25  00AB               	movwf	___flmul@b+3
  4948  0F26  0849               	movf	??_scale+3,w
  4949  0F27  00AA               	movwf	___flmul@b+2
  4950  0F28  0848               	movf	??_scale+2,w
  4951  0F29  00A9               	movwf	___flmul@b+1
  4952  0F2A  0847               	movf	??_scale+1,w
  4953  0F2B  00A8               	movwf	___flmul@b
  4954  0F2C  0853               	movf	_scale$1157+3,w
  4955  0F2D  00AF               	movwf	___flmul@a+3
  4956  0F2E  0852               	movf	_scale$1157+2,w
  4957  0F2F  00AE               	movwf	___flmul@a+2
  4958  0F30  0851               	movf	_scale$1157+1,w
  4959  0F31  00AD               	movwf	___flmul@a+1
  4960  0F32  0850               	movf	_scale$1157,w
  4961  0F33  00AC               	movwf	___flmul@a
  4962  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4963  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4965  0F3B  082B               	movf	?___flmul+3,w
  4966  0F3C  00C5               	movwf	?_scale+3
  4967  0F3D  082A               	movf	?___flmul+2,w
  4968  0F3E  00C4               	movwf	?_scale+2
  4969  0F3F  0829               	movf	?___flmul+1,w
  4970  0F40  00C3               	movwf	?_scale+1
  4971  0F41  0828               	movf	?___flmul,w
  4972  0F42  00C2               	movwf	?_scale
  4973  0F43  2FFF               	goto	l256
  4974  0F44                     l2808:
  4975  0F44  0854               	movf	scale@scl,w
  4976  0F45  3A80               	xorlw	128
  4977  0F46  3E75               	addlw	-139
  4978  0F47  1C03               	skipc
  4979  0F48  2F4A               	goto	u4251
  4980  0F49  2F4B               	goto	u4250
  4981  0F4A                     u4251:
  4982  0F4A  2FD3               	goto	l2814
  4983  0F4B                     u4250:
  4984  0F4B                     l2810:
  4985                           
  4986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4987  0F4B  300A               	movlw	10
  4988  0F4C  00F3               	movwf	___awmod@divisor
  4989  0F4D  3000               	movlw	0
  4990  0F4E  00F4               	movwf	___awmod@divisor+1
  4991  0F4F  0854               	movf	scale@scl,w
  4992  0F50  00F5               	movwf	___awmod@dividend
  4993  0F51  01F6               	clrf	___awmod@dividend+1
  4994  0F52  1BF5               	btfsc	___awmod@dividend,7
  4995  0F53  03F6               	decf	___awmod@dividend+1,f
  4996  0F54  160A  158A  243D  120A  158A  	fcall	___awmod
  4997  0F59  0873               	movf	?___awmod,w
  4998  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5000  0F5C  00C6               	movwf	??_scale
  5001  0F5D  3001               	movlw	1
  5002  0F5E                     u4265:
  5003  0F5E  1003               	clrc
  5004  0F5F  0DC6               	rlf	??_scale,f
  5005  0F60  3EFF               	addlw	-1
  5006  0F61  1D03               	skipz
  5007  0F62  2F5E               	goto	u4265
  5008  0F63  1003               	clrc
  5009  0F64  0D46               	rlf	??_scale,w
  5010  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5011  0F66  0084               	movwf	4
  5012  0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  5013  0F6C  00C7               	movwf	??_scale+1
  5014  0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  5015  0F72  00C8               	movwf	??_scale+2
  5016  0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  5017  0F78  00C9               	movwf	??_scale+3
  5018  0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  5019  0F7E  00CA               	movwf	??_scale+4
  5020  0F7F  084A               	movf	??_scale+4,w
  5021  0F80  00AB               	movwf	___flmul@b+3
  5022  0F81  0849               	movf	??_scale+3,w
  5023  0F82  00AA               	movwf	___flmul@b+2
  5024  0F83  0848               	movf	??_scale+2,w
  5025  0F84  00A9               	movwf	___flmul@b+1
  5026  0F85  0847               	movf	??_scale+1,w
  5027  0F86  00A8               	movwf	___flmul@b
  5028  0F87  300A               	movlw	10
  5029  0F88  00A0               	movwf	___awdiv@divisor
  5030  0F89  3000               	movlw	0
  5031  0F8A  00A1               	movwf	___awdiv@divisor+1
  5032  0F8B  0854               	movf	scale@scl,w
  5033  0F8C  00A2               	movwf	___awdiv@dividend
  5034  0F8D  01A3               	clrf	___awdiv@dividend+1
  5035  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  5036  0F8F  03A3               	decf	___awdiv@dividend+1,f
  5037  0F90  160A  158A  24FE  120A  158A  	fcall	___awdiv
  5038  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0F97  0820               	movf	?___awdiv,w
  5041  0F98  00CB               	movwf	??_scale+5
  5042  0F99  3001               	movlw	1
  5043  0F9A                     u4275:
  5044  0F9A  1003               	clrc
  5045  0F9B  0DCB               	rlf	??_scale+5,f
  5046  0F9C  3EFF               	addlw	-1
  5047  0F9D  1D03               	skipz
  5048  0F9E  2F9A               	goto	u4275
  5049  0F9F  1003               	clrc
  5050  0FA0  0D4B               	rlf	??_scale+5,w
  5051  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5052  0FA2  0084               	movwf	4
  5053  0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  5054  0FA8  00CC               	movwf	??_scale+6
  5055  0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  5056  0FAE  00CD               	movwf	??_scale+7
  5057  0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  5058  0FB4  00CE               	movwf	??_scale+8
  5059  0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  5060  0FBA  00CF               	movwf	??_scale+9
  5061  0FBB  084F               	movf	??_scale+9,w
  5062  0FBC  00AF               	movwf	___flmul@a+3
  5063  0FBD  084E               	movf	??_scale+8,w
  5064  0FBE  00AE               	movwf	___flmul@a+2
  5065  0FBF  084D               	movf	??_scale+7,w
  5066  0FC0  00AD               	movwf	___flmul@a+1
  5067  0FC1  084C               	movf	??_scale+6,w
  5068  0FC2  00AC               	movwf	___flmul@a
  5069  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  5070  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0FCA  082B               	movf	?___flmul+3,w
  5073  0FCB  00C5               	movwf	?_scale+3
  5074  0FCC  082A               	movf	?___flmul+2,w
  5075  0FCD  00C4               	movwf	?_scale+2
  5076  0FCE  0829               	movf	?___flmul+1,w
  5077  0FCF  00C3               	movwf	?_scale+1
  5078  0FD0  0828               	movf	?___flmul,w
  5079  0FD1  00C2               	movwf	?_scale
  5080  0FD2  2FFF               	goto	l256
  5081  0FD3                     l2814:
  5082                           
  5083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5084  0FD3  0854               	movf	scale@scl,w
  5085  0FD4  00C6               	movwf	??_scale
  5086  0FD5  3001               	movlw	1
  5087  0FD6                     u4285:
  5088  0FD6  1003               	clrc
  5089  0FD7  0DC6               	rlf	??_scale,f
  5090  0FD8  3EFF               	addlw	-1
  5091  0FD9  1D03               	skipz
  5092  0FDA  2FD6               	goto	u4285
  5093  0FDB  1003               	clrc
  5094  0FDC  0D46               	rlf	??_scale,w
  5095  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5096  0FDE  0084               	movwf	4
  5097  0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  5098  0FE4  00C7               	movwf	??_scale+1
  5099  0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  5100  0FEA  00C8               	movwf	??_scale+2
  5101  0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  5102  0FF0  00C9               	movwf	??_scale+3
  5103  0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  5104  0FF6  00CA               	movwf	??_scale+4
  5105  0FF7  084A               	movf	??_scale+4,w
  5106  0FF8  00C5               	movwf	?_scale+3
  5107  0FF9  0849               	movf	??_scale+3,w
  5108  0FFA  00C4               	movwf	?_scale+2
  5109  0FFB  0848               	movf	??_scale+2,w
  5110  0FFC  00C3               	movwf	?_scale+1
  5111  0FFD  0847               	movf	??_scale+1,w
  5112  0FFE  00C2               	movwf	?_scale
  5113  0FFF                     l256:
  5114  0FFF  0008               	return
  5115  1000                     __end_of_scale:
  5116                           
  5117                           	psect	text3
  5118  1C3D                     __ptext3:	
  5119 ;; *************** function ___awmod *****************
  5120 ;; Defined at:
  5121 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  divisor         2    3[COMMON] int 
  5124 ;;  dividend        2    5[COMMON] int 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  sign            1    9[COMMON] unsigned char 
  5127 ;;  counter         1    8[COMMON] unsigned char 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  2    3[COMMON] int 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5137 ;;      Params:         4       0       0       0       0
  5138 ;;      Locals:         2       0       0       0       0
  5139 ;;      Temps:          1       0       0       0       0
  5140 ;;      Totals:         7       0       0       0       0
  5141 ;;Total ram usage:        7 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 1
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_scale
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function ___awmod
  5153  1C3D                     ___awmod:
  5154  1C3D                     l2314:	
  5155                           ;incstack = 0
  5156                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5157                           
  5158  1C3D  01F9               	clrf	___awmod@sign
  5159  1C3E                     l2316:
  5160  1C3E  1FF6               	btfss	___awmod@dividend+1,7
  5161  1C3F  2C41               	goto	u2981
  5162  1C40  2C42               	goto	u2980
  5163  1C41                     u2981:
  5164  1C41  2C49               	goto	l2322
  5165  1C42                     u2980:
  5166  1C42                     l2318:
  5167  1C42  09F5               	comf	___awmod@dividend,f
  5168  1C43  09F6               	comf	___awmod@dividend+1,f
  5169  1C44  0AF5               	incf	___awmod@dividend,f
  5170  1C45  1903               	skipnz
  5171  1C46  0AF6               	incf	___awmod@dividend+1,f
  5172  1C47                     l2320:
  5173  1C47  01F9               	clrf	___awmod@sign
  5174  1C48  0AF9               	incf	___awmod@sign,f
  5175  1C49                     l2322:
  5176  1C49  1FF4               	btfss	___awmod@divisor+1,7
  5177  1C4A  2C4C               	goto	u2991
  5178  1C4B  2C4D               	goto	u2990
  5179  1C4C                     u2991:
  5180  1C4C  2C52               	goto	l2326
  5181  1C4D                     u2990:
  5182  1C4D                     l2324:
  5183  1C4D  09F3               	comf	___awmod@divisor,f
  5184  1C4E  09F4               	comf	___awmod@divisor+1,f
  5185  1C4F  0AF3               	incf	___awmod@divisor,f
  5186  1C50  1903               	skipnz
  5187  1C51  0AF4               	incf	___awmod@divisor+1,f
  5188  1C52                     l2326:
  5189  1C52  0873               	movf	___awmod@divisor,w
  5190  1C53  0474               	iorwf	___awmod@divisor+1,w
  5191  1C54  1903               	btfsc	3,2
  5192  1C55  2C57               	goto	u3001
  5193  1C56  2C58               	goto	u3000
  5194  1C57                     u3001:
  5195  1C57  2C87               	goto	l2344
  5196  1C58                     u3000:
  5197  1C58                     l2328:
  5198  1C58  01F8               	clrf	___awmod@counter
  5199  1C59  0AF8               	incf	___awmod@counter,f
  5200  1C5A  2C66               	goto	l2334
  5201  1C5B                     l2330:
  5202  1C5B  3001               	movlw	1
  5203  1C5C                     u3015:
  5204  1C5C  1003               	clrc
  5205  1C5D  0DF3               	rlf	___awmod@divisor,f
  5206  1C5E  0DF4               	rlf	___awmod@divisor+1,f
  5207  1C5F  3EFF               	addlw	-1
  5208  1C60  1D03               	skipz
  5209  1C61  2C5C               	goto	u3015
  5210  1C62                     l2332:
  5211  1C62  3001               	movlw	1
  5212  1C63  00F7               	movwf	??___awmod
  5213  1C64  0877               	movf	??___awmod,w
  5214  1C65  07F8               	addwf	___awmod@counter,f
  5215  1C66                     l2334:
  5216  1C66  1FF4               	btfss	___awmod@divisor+1,7
  5217  1C67  2C69               	goto	u3021
  5218  1C68  2C6A               	goto	u3020
  5219  1C69                     u3021:
  5220  1C69  2C5B               	goto	l2330
  5221  1C6A                     u3020:
  5222  1C6A                     l2336:
  5223  1C6A  0874               	movf	___awmod@divisor+1,w
  5224  1C6B  0276               	subwf	___awmod@dividend+1,w
  5225  1C6C  1D03               	skipz
  5226  1C6D  2C70               	goto	u3035
  5227  1C6E  0873               	movf	___awmod@divisor,w
  5228  1C6F  0275               	subwf	___awmod@dividend,w
  5229  1C70                     u3035:
  5230  1C70  1C03               	skipc
  5231  1C71  2C73               	goto	u3031
  5232  1C72  2C74               	goto	u3030
  5233  1C73                     u3031:
  5234  1C73  2C7A               	goto	l2340
  5235  1C74                     u3030:
  5236  1C74                     l2338:
  5237  1C74  0873               	movf	___awmod@divisor,w
  5238  1C75  02F5               	subwf	___awmod@dividend,f
  5239  1C76  0874               	movf	___awmod@divisor+1,w
  5240  1C77  1C03               	skipc
  5241  1C78  03F6               	decf	___awmod@dividend+1,f
  5242  1C79  02F6               	subwf	___awmod@dividend+1,f
  5243  1C7A                     l2340:
  5244  1C7A  3001               	movlw	1
  5245  1C7B                     u3045:
  5246  1C7B  1003               	clrc
  5247  1C7C  0CF4               	rrf	___awmod@divisor+1,f
  5248  1C7D  0CF3               	rrf	___awmod@divisor,f
  5249  1C7E  3EFF               	addlw	-1
  5250  1C7F  1D03               	skipz
  5251  1C80  2C7B               	goto	u3045
  5252  1C81                     l2342:
  5253  1C81  3001               	movlw	1
  5254  1C82  02F8               	subwf	___awmod@counter,f
  5255  1C83  1D03               	btfss	3,2
  5256  1C84  2C86               	goto	u3051
  5257  1C85  2C87               	goto	u3050
  5258  1C86                     u3051:
  5259  1C86  2C6A               	goto	l2336
  5260  1C87                     u3050:
  5261  1C87                     l2344:
  5262  1C87  0879               	movf	___awmod@sign,w
  5263  1C88  1903               	btfsc	3,2
  5264  1C89  2C8B               	goto	u3061
  5265  1C8A  2C8C               	goto	u3060
  5266  1C8B                     u3061:
  5267  1C8B  2C91               	goto	l2348
  5268  1C8C                     u3060:
  5269  1C8C                     l2346:
  5270  1C8C  09F5               	comf	___awmod@dividend,f
  5271  1C8D  09F6               	comf	___awmod@dividend+1,f
  5272  1C8E  0AF5               	incf	___awmod@dividend,f
  5273  1C8F  1903               	skipnz
  5274  1C90  0AF6               	incf	___awmod@dividend+1,f
  5275  1C91                     l2348:
  5276  1C91  0876               	movf	___awmod@dividend+1,w
  5277  1C92  00F4               	movwf	?___awmod+1
  5278  1C93  0875               	movf	___awmod@dividend,w
  5279  1C94  00F3               	movwf	?___awmod
  5280  1C95                     l509:
  5281  1C95  0008               	return
  5282  1C96                     __end_of___awmod:
  5283                           
  5284                           	psect	text4
  5285  1CFE                     __ptext4:	
  5286 ;; *************** function ___awdiv *****************
  5287 ;; Defined at:
  5288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;  divisor         2    0[BANK0 ] int 
  5291 ;;  dividend        2    2[BANK0 ] int 
  5292 ;; Auto vars:     Size  Location     Type
  5293 ;;  quotient        2    6[BANK0 ] int 
  5294 ;;  sign            1    5[BANK0 ] unsigned char 
  5295 ;;  counter         1    4[BANK0 ] unsigned char 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  2    0[BANK0 ] int 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5305 ;;      Params:         0       4       0       0       0
  5306 ;;      Locals:         0       4       0       0       0
  5307 ;;      Temps:          1       0       0       0       0
  5308 ;;      Totals:         1       8       0       0       0
  5309 ;;Total ram usage:        9 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 1
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_scale
  5316 ;;		_sprintf
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           
  5321                           ;psect for function ___awdiv
  5322  1CFE                     ___awdiv:
  5323  1CFE                     l2270:	
  5324                           ;incstack = 0
  5325                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5326                           
  5327  1CFE  1283               	bcf	3,5	;RP0=0, select bank0
  5328  1CFF  1303               	bcf	3,6	;RP1=0, select bank0
  5329  1D00  01A5               	clrf	___awdiv@sign
  5330  1D01                     l2272:
  5331  1D01  1FA1               	btfss	___awdiv@divisor+1,7
  5332  1D02  2D04               	goto	u2881
  5333  1D03  2D05               	goto	u2880
  5334  1D04                     u2881:
  5335  1D04  2D0C               	goto	l2278
  5336  1D05                     u2880:
  5337  1D05                     l2274:
  5338  1D05  09A0               	comf	___awdiv@divisor,f
  5339  1D06  09A1               	comf	___awdiv@divisor+1,f
  5340  1D07  0AA0               	incf	___awdiv@divisor,f
  5341  1D08  1903               	skipnz
  5342  1D09  0AA1               	incf	___awdiv@divisor+1,f
  5343  1D0A                     l2276:
  5344  1D0A  01A5               	clrf	___awdiv@sign
  5345  1D0B  0AA5               	incf	___awdiv@sign,f
  5346  1D0C                     l2278:
  5347  1D0C  1FA3               	btfss	___awdiv@dividend+1,7
  5348  1D0D  2D0F               	goto	u2891
  5349  1D0E  2D10               	goto	u2890
  5350  1D0F                     u2891:
  5351  1D0F  2D19               	goto	l2284
  5352  1D10                     u2890:
  5353  1D10                     l2280:
  5354  1D10  09A2               	comf	___awdiv@dividend,f
  5355  1D11  09A3               	comf	___awdiv@dividend+1,f
  5356  1D12  0AA2               	incf	___awdiv@dividend,f
  5357  1D13  1903               	skipnz
  5358  1D14  0AA3               	incf	___awdiv@dividend+1,f
  5359  1D15                     l2282:
  5360  1D15  3001               	movlw	1
  5361  1D16  00FA               	movwf	??___awdiv
  5362  1D17  087A               	movf	??___awdiv,w
  5363  1D18  06A5               	xorwf	___awdiv@sign,f
  5364  1D19                     l2284:
  5365  1D19  01A6               	clrf	___awdiv@quotient
  5366  1D1A  01A7               	clrf	___awdiv@quotient+1
  5367  1D1B                     l2286:
  5368  1D1B  0820               	movf	___awdiv@divisor,w
  5369  1D1C  0421               	iorwf	___awdiv@divisor+1,w
  5370  1D1D  1903               	btfsc	3,2
  5371  1D1E  2D20               	goto	u2901
  5372  1D1F  2D21               	goto	u2900
  5373  1D20                     u2901:
  5374  1D20  2D58               	goto	l2306
  5375  1D21                     u2900:
  5376  1D21                     l2288:
  5377  1D21  01A4               	clrf	___awdiv@counter
  5378  1D22  0AA4               	incf	___awdiv@counter,f
  5379  1D23  2D2F               	goto	l2294
  5380  1D24                     l2290:
  5381  1D24  3001               	movlw	1
  5382  1D25                     u2915:
  5383  1D25  1003               	clrc
  5384  1D26  0DA0               	rlf	___awdiv@divisor,f
  5385  1D27  0DA1               	rlf	___awdiv@divisor+1,f
  5386  1D28  3EFF               	addlw	-1
  5387  1D29  1D03               	skipz
  5388  1D2A  2D25               	goto	u2915
  5389  1D2B                     l2292:
  5390  1D2B  3001               	movlw	1
  5391  1D2C  00FA               	movwf	??___awdiv
  5392  1D2D  087A               	movf	??___awdiv,w
  5393  1D2E  07A4               	addwf	___awdiv@counter,f
  5394  1D2F                     l2294:
  5395  1D2F  1FA1               	btfss	___awdiv@divisor+1,7
  5396  1D30  2D32               	goto	u2921
  5397  1D31  2D33               	goto	u2920
  5398  1D32                     u2921:
  5399  1D32  2D24               	goto	l2290
  5400  1D33                     u2920:
  5401  1D33                     l2296:
  5402  1D33  3001               	movlw	1
  5403  1D34                     u2935:
  5404  1D34  1003               	clrc
  5405  1D35  0DA6               	rlf	___awdiv@quotient,f
  5406  1D36  0DA7               	rlf	___awdiv@quotient+1,f
  5407  1D37  3EFF               	addlw	-1
  5408  1D38  1D03               	skipz
  5409  1D39  2D34               	goto	u2935
  5410  1D3A  0821               	movf	___awdiv@divisor+1,w
  5411  1D3B  0223               	subwf	___awdiv@dividend+1,w
  5412  1D3C  1D03               	skipz
  5413  1D3D  2D40               	goto	u2945
  5414  1D3E  0820               	movf	___awdiv@divisor,w
  5415  1D3F  0222               	subwf	___awdiv@dividend,w
  5416  1D40                     u2945:
  5417  1D40  1C03               	skipc
  5418  1D41  2D43               	goto	u2941
  5419  1D42  2D44               	goto	u2940
  5420  1D43                     u2941:
  5421  1D43  2D4B               	goto	l2302
  5422  1D44                     u2940:
  5423  1D44                     l2298:
  5424  1D44  0820               	movf	___awdiv@divisor,w
  5425  1D45  02A2               	subwf	___awdiv@dividend,f
  5426  1D46  0821               	movf	___awdiv@divisor+1,w
  5427  1D47  1C03               	skipc
  5428  1D48  03A3               	decf	___awdiv@dividend+1,f
  5429  1D49  02A3               	subwf	___awdiv@dividend+1,f
  5430  1D4A                     l2300:
  5431  1D4A  1426               	bsf	___awdiv@quotient,0
  5432  1D4B                     l2302:
  5433  1D4B  3001               	movlw	1
  5434  1D4C                     u2955:
  5435  1D4C  1003               	clrc
  5436  1D4D  0CA1               	rrf	___awdiv@divisor+1,f
  5437  1D4E  0CA0               	rrf	___awdiv@divisor,f
  5438  1D4F  3EFF               	addlw	-1
  5439  1D50  1D03               	skipz
  5440  1D51  2D4C               	goto	u2955
  5441  1D52                     l2304:
  5442  1D52  3001               	movlw	1
  5443  1D53  02A4               	subwf	___awdiv@counter,f
  5444  1D54  1D03               	btfss	3,2
  5445  1D55  2D57               	goto	u2961
  5446  1D56  2D58               	goto	u2960
  5447  1D57                     u2961:
  5448  1D57  2D33               	goto	l2296
  5449  1D58                     u2960:
  5450  1D58                     l2306:
  5451  1D58  0825               	movf	___awdiv@sign,w
  5452  1D59  1903               	btfsc	3,2
  5453  1D5A  2D5C               	goto	u2971
  5454  1D5B  2D5D               	goto	u2970
  5455  1D5C                     u2971:
  5456  1D5C  2D62               	goto	l2310
  5457  1D5D                     u2970:
  5458  1D5D                     l2308:
  5459  1D5D  09A6               	comf	___awdiv@quotient,f
  5460  1D5E  09A7               	comf	___awdiv@quotient+1,f
  5461  1D5F  0AA6               	incf	___awdiv@quotient,f
  5462  1D60  1903               	skipnz
  5463  1D61  0AA7               	incf	___awdiv@quotient+1,f
  5464  1D62                     l2310:
  5465  1D62  0827               	movf	___awdiv@quotient+1,w
  5466  1D63  00A1               	movwf	?___awdiv+1
  5467  1D64  0826               	movf	___awdiv@quotient,w
  5468  1D65  00A0               	movwf	?___awdiv
  5469  1D66                     l496:
  5470  1D66  0008               	return
  5471  1D67                     __end_of___awdiv:
  5472                           
  5473                           	psect	text5
  5474  197E                     __ptext5:	
  5475 ;; *************** function _isdigit *****************
  5476 ;; Defined at:
  5477 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  c               1    wreg     unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  c               1    4[COMMON] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       0       0       0       0
  5492 ;;      Locals:         2       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0
  5494 ;;      Totals:         2       0       0       0       0
  5495 ;;Total ram usage:        2 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; Hardware stack levels required when called: 1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_sprintf
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           
  5506                           ;psect for function _isdigit
  5507  197E                     _isdigit:
  5508                           
  5509                           ;incstack = 0
  5510                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5511                           ;isdigit@c stored from wreg
  5512  197E  00F4               	movwf	isdigit@c
  5513  197F                     l2818:
  5514  197F  01F3               	clrf	_isdigit$978
  5515  1980                     l2820:
  5516  1980  303A               	movlw	58
  5517  1981  0274               	subwf	isdigit@c,w
  5518  1982  1803               	skipnc
  5519  1983  2985               	goto	u4291
  5520  1984  2986               	goto	u4290
  5521  1985                     u4291:
  5522  1985  298E               	goto	l2826
  5523  1986                     u4290:
  5524  1986                     l2822:
  5525  1986  3030               	movlw	48
  5526  1987  0274               	subwf	isdigit@c,w
  5527  1988  1C03               	skipc
  5528  1989  298B               	goto	u4301
  5529  198A  298C               	goto	u4300
  5530  198B                     u4301:
  5531  198B  298E               	goto	l2826
  5532  198C                     u4300:
  5533  198C                     l2824:
  5534  198C  01F3               	clrf	_isdigit$978
  5535  198D  0AF3               	incf	_isdigit$978,f
  5536  198E                     l2826:
  5537  198E  0C73               	rrf	_isdigit$978,w
  5538  198F                     l830:
  5539  198F  0008               	return
  5540  1990                     __end_of_isdigit:
  5541                           
  5542                           	psect	text6
  5543  10C4                     __ptext6:	
  5544 ;; *************** function _fround *****************
  5545 ;; Defined at:
  5546 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  prec            1    wreg     unsigned char 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  prec            1   53[BANK0 ] unsigned char 
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  4   34[BANK0 ] unsigned char 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5560 ;;      Params:         0       4       0       0       0
  5561 ;;      Locals:         0       9       0       0       0
  5562 ;;      Temps:          0       7       0       0       0
  5563 ;;      Totals:         0      20       0       0       0
  5564 ;;Total ram usage:       20 bytes
  5565 ;; Hardware stack levels used: 1
  5566 ;; Hardware stack levels required when called: 3
  5567 ;; This function calls:
  5568 ;;		___flmul
  5569 ;;		___lwdiv
  5570 ;;		___lwmod
  5571 ;; This function is called by:
  5572 ;;		_sprintf
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           
  5577                           ;psect for function _fround
  5578  10C4                     _fround:
  5579                           
  5580                           ;incstack = 0
  5581                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5582                           ;fround@prec stored from wreg
  5583  10C4  1283               	bcf	3,5	;RP0=0, select bank0
  5584  10C5  1303               	bcf	3,6	;RP1=0, select bank0
  5585  10C6  00D5               	movwf	fround@prec
  5586  10C7                     l2760:
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5589  10C7  306E               	movlw	110
  5590  10C8  0255               	subwf	fround@prec,w
  5591  10C9  1C03               	skipc
  5592  10CA  28CC               	goto	u4041
  5593  10CB  28CD               	goto	u4040
  5594  10CC                     u4041:
  5595  10CC  29DC               	goto	l2768
  5596  10CD                     u4040:
  5597  10CD                     l2762:
  5598                           
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5600  10CD  303F               	movlw	63
  5601  10CE  00AB               	movwf	___flmul@b+3
  5602  10CF  3000               	movlw	0
  5603  10D0  00AA               	movwf	___flmul@b+2
  5604  10D1  3000               	movlw	0
  5605  10D2  00A9               	movwf	___flmul@b+1
  5606  10D3  3000               	movlw	0
  5607  10D4  00A8               	movwf	___flmul@b
  5608  10D5  3064               	movlw	100
  5609  10D6  00A0               	movwf	___lwdiv@divisor
  5610  10D7  3000               	movlw	0
  5611  10D8  00A1               	movwf	___lwdiv@divisor+1
  5612  10D9  0855               	movf	fround@prec,w
  5613  10DA  00C6               	movwf	??_fround
  5614  10DB  01C7               	clrf	??_fround+1
  5615  10DC  0846               	movf	??_fround,w
  5616  10DD  00A2               	movwf	___lwdiv@dividend
  5617  10DE  0847               	movf	??_fround+1,w
  5618  10DF  00A3               	movwf	___lwdiv@dividend+1
  5619  10E0  160A  158A  2301  160A  118A  	fcall	___lwdiv
  5620  10E5  1283               	bcf	3,5	;RP0=0, select bank0
  5621  10E6  1303               	bcf	3,6	;RP1=0, select bank0
  5622  10E7  0820               	movf	?___lwdiv,w
  5623  10E8  00C8               	movwf	??_fround+2
  5624  10E9  3001               	movlw	1
  5625  10EA                     u4055:
  5626  10EA  1003               	clrc
  5627  10EB  0DC8               	rlf	??_fround+2,f
  5628  10EC  3EFF               	addlw	-1
  5629  10ED  1D03               	skipz
  5630  10EE  28EA               	goto	u4055
  5631  10EF  1003               	clrc
  5632  10F0  0D48               	rlf	??_fround+2,w
  5633  10F1  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5634  10F2  0084               	movwf	4
  5635  10F3  120A  158A  200A  160A  118A  	fcall	stringdir
  5636  10F8  00C9               	movwf	??_fround+3
  5637  10F9  120A  158A  200A  160A  118A  	fcall	stringdir
  5638  10FE  00CA               	movwf	??_fround+4
  5639  10FF  120A  158A  200A  160A  118A  	fcall	stringdir
  5640  1104  00CB               	movwf	??_fround+5
  5641  1105  120A  158A  200A  160A  118A  	fcall	stringdir
  5642  110A  00CC               	movwf	??_fround+6
  5643  110B  084C               	movf	??_fround+6,w
  5644  110C  00AF               	movwf	___flmul@a+3
  5645  110D  084B               	movf	??_fround+5,w
  5646  110E  00AE               	movwf	___flmul@a+2
  5647  110F  084A               	movf	??_fround+4,w
  5648  1110  00AD               	movwf	___flmul@a+1
  5649  1111  0849               	movf	??_fround+3,w
  5650  1112  00AC               	movwf	___flmul@a
  5651  1113  120A  158A  213C  160A  118A  	fcall	___flmul
  5652  1118  1283               	bcf	3,5	;RP0=0, select bank0
  5653  1119  1303               	bcf	3,6	;RP1=0, select bank0
  5654  111A  082B               	movf	?___flmul+3,w
  5655  111B  00D4               	movwf	_fround$1155+3
  5656  111C  082A               	movf	?___flmul+2,w
  5657  111D  00D3               	movwf	_fround$1155+2
  5658  111E  0829               	movf	?___flmul+1,w
  5659  111F  00D2               	movwf	_fround$1155+1
  5660  1120  0828               	movf	?___flmul,w
  5661  1121  00D1               	movwf	_fround$1155
  5662                           
  5663                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5664  1122  300A               	movlw	10
  5665  1123  00A0               	movwf	___lwdiv@divisor
  5666  1124  3000               	movlw	0
  5667  1125  00A1               	movwf	___lwdiv@divisor+1
  5668  1126  0855               	movf	fround@prec,w
  5669  1127  00C6               	movwf	??_fround
  5670  1128  01C7               	clrf	??_fround+1
  5671  1129  0846               	movf	??_fround,w
  5672  112A  00F5               	movwf	___lwmod@dividend
  5673  112B  0847               	movf	??_fround+1,w
  5674  112C  00F6               	movwf	___lwmod@dividend+1
  5675  112D  3064               	movlw	100
  5676  112E  00F3               	movwf	___lwmod@divisor
  5677  112F  3000               	movlw	0
  5678  1130  00F4               	movwf	___lwmod@divisor+1
  5679  1131  120A  158A  2102  160A  118A  	fcall	___lwmod
  5680  1136  0874               	movf	?___lwmod+1,w
  5681  1137  1283               	bcf	3,5	;RP0=0, select bank0
  5682  1138  1303               	bcf	3,6	;RP1=0, select bank0
  5683  1139  00A3               	movwf	___lwdiv@dividend+1
  5684  113A  0873               	movf	?___lwmod,w
  5685  113B  00A2               	movwf	___lwdiv@dividend
  5686  113C  160A  158A  2301  160A  118A  	fcall	___lwdiv
  5687  1141  1283               	bcf	3,5	;RP0=0, select bank0
  5688  1142  1303               	bcf	3,6	;RP1=0, select bank0
  5689  1143  0820               	movf	?___lwdiv,w
  5690  1144  00C8               	movwf	??_fround+2
  5691  1145  3001               	movlw	1
  5692  1146                     u4065:
  5693  1146  1003               	clrc
  5694  1147  0DC8               	rlf	??_fround+2,f
  5695  1148  3EFF               	addlw	-1
  5696  1149  1D03               	skipz
  5697  114A  2946               	goto	u4065
  5698  114B  1003               	clrc
  5699  114C  0D48               	rlf	??_fround+2,w
  5700  114D  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5701  114E  0084               	movwf	4
  5702  114F  120A  158A  200A  160A  118A  	fcall	stringdir
  5703  1154  00C9               	movwf	??_fround+3
  5704  1155  120A  158A  200A  160A  118A  	fcall	stringdir
  5705  115A  00CA               	movwf	??_fround+4
  5706  115B  120A  158A  200A  160A  118A  	fcall	stringdir
  5707  1160  00CB               	movwf	??_fround+5
  5708  1161  120A  158A  200A  160A  118A  	fcall	stringdir
  5709  1166  00CC               	movwf	??_fround+6
  5710  1167  084C               	movf	??_fround+6,w
  5711  1168  00AB               	movwf	___flmul@b+3
  5712  1169  084B               	movf	??_fround+5,w
  5713  116A  00AA               	movwf	___flmul@b+2
  5714  116B  084A               	movf	??_fround+4,w
  5715  116C  00A9               	movwf	___flmul@b+1
  5716  116D  0849               	movf	??_fround+3,w
  5717  116E  00A8               	movwf	___flmul@b
  5718  116F  0854               	movf	_fround$1155+3,w
  5719  1170  00AF               	movwf	___flmul@a+3
  5720  1171  0853               	movf	_fround$1155+2,w
  5721  1172  00AE               	movwf	___flmul@a+2
  5722  1173  0852               	movf	_fround$1155+1,w
  5723  1174  00AD               	movwf	___flmul@a+1
  5724  1175  0851               	movf	_fround$1155,w
  5725  1176  00AC               	movwf	___flmul@a
  5726  1177  120A  158A  213C  160A  118A  	fcall	___flmul
  5727  117C  1283               	bcf	3,5	;RP0=0, select bank0
  5728  117D  1303               	bcf	3,6	;RP1=0, select bank0
  5729  117E  082B               	movf	?___flmul+3,w
  5730  117F  00D0               	movwf	_fround$1156+3
  5731  1180  082A               	movf	?___flmul+2,w
  5732  1181  00CF               	movwf	_fround$1156+2
  5733  1182  0829               	movf	?___flmul+1,w
  5734  1183  00CE               	movwf	_fround$1156+1
  5735  1184  0828               	movf	?___flmul,w
  5736  1185  00CD               	movwf	_fround$1156
  5737                           
  5738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5739  1186  300A               	movlw	10
  5740  1187  00F3               	movwf	___lwmod@divisor
  5741  1188  3000               	movlw	0
  5742  1189  00F4               	movwf	___lwmod@divisor+1
  5743  118A  0855               	movf	fround@prec,w
  5744  118B  00C6               	movwf	??_fround
  5745  118C  01C7               	clrf	??_fround+1
  5746  118D  0846               	movf	??_fround,w
  5747  118E  00F5               	movwf	___lwmod@dividend
  5748  118F  0847               	movf	??_fround+1,w
  5749  1190  00F6               	movwf	___lwmod@dividend+1
  5750  1191  120A  158A  2102  160A  118A  	fcall	___lwmod
  5751  1196  0873               	movf	?___lwmod,w
  5752  1197  1283               	bcf	3,5	;RP0=0, select bank0
  5753  1198  1303               	bcf	3,6	;RP1=0, select bank0
  5754  1199  00C8               	movwf	??_fround+2
  5755  119A  3001               	movlw	1
  5756  119B                     u4075:
  5757  119B  1003               	clrc
  5758  119C  0DC8               	rlf	??_fround+2,f
  5759  119D  3EFF               	addlw	-1
  5760  119E  1D03               	skipz
  5761  119F  299B               	goto	u4075
  5762  11A0  1003               	clrc
  5763  11A1  0D48               	rlf	??_fround+2,w
  5764  11A2  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5765  11A3  0084               	movwf	4
  5766  11A4  120A  158A  200A  160A  118A  	fcall	stringdir
  5767  11A9  00C9               	movwf	??_fround+3
  5768  11AA  120A  158A  200A  160A  118A  	fcall	stringdir
  5769  11AF  00CA               	movwf	??_fround+4
  5770  11B0  120A  158A  200A  160A  118A  	fcall	stringdir
  5771  11B5  00CB               	movwf	??_fround+5
  5772  11B6  120A  158A  200A  160A  118A  	fcall	stringdir
  5773  11BB  00CC               	movwf	??_fround+6
  5774  11BC  084C               	movf	??_fround+6,w
  5775  11BD  00AB               	movwf	___flmul@b+3
  5776  11BE  084B               	movf	??_fround+5,w
  5777  11BF  00AA               	movwf	___flmul@b+2
  5778  11C0  084A               	movf	??_fround+4,w
  5779  11C1  00A9               	movwf	___flmul@b+1
  5780  11C2  0849               	movf	??_fround+3,w
  5781  11C3  00A8               	movwf	___flmul@b
  5782  11C4  0850               	movf	_fround$1156+3,w
  5783  11C5  00AF               	movwf	___flmul@a+3
  5784  11C6  084F               	movf	_fround$1156+2,w
  5785  11C7  00AE               	movwf	___flmul@a+2
  5786  11C8  084E               	movf	_fround$1156+1,w
  5787  11C9  00AD               	movwf	___flmul@a+1
  5788  11CA  084D               	movf	_fround$1156,w
  5789  11CB  00AC               	movwf	___flmul@a
  5790  11CC  120A  158A  213C  160A  118A  	fcall	___flmul
  5791  11D1  1283               	bcf	3,5	;RP0=0, select bank0
  5792  11D2  1303               	bcf	3,6	;RP1=0, select bank0
  5793  11D3  082B               	movf	?___flmul+3,w
  5794  11D4  00C5               	movwf	?_fround+3
  5795  11D5  082A               	movf	?___flmul+2,w
  5796  11D6  00C4               	movwf	?_fround+2
  5797  11D7  0829               	movf	?___flmul+1,w
  5798  11D8  00C3               	movwf	?_fround+1
  5799  11D9  0828               	movf	?___flmul,w
  5800  11DA  00C2               	movwf	?_fround
  5801  11DB  2AD0               	goto	l249
  5802  11DC                     l2768:
  5803  11DC  300B               	movlw	11
  5804  11DD  0255               	subwf	fround@prec,w
  5805  11DE  1C03               	skipc
  5806  11DF  29E1               	goto	u4081
  5807  11E0  29E2               	goto	u4080
  5808  11E1                     u4081:
  5809  11E1  2A8D               	goto	l2774
  5810  11E2                     u4080:
  5811  11E2                     l2770:
  5812                           
  5813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5814  11E2  303F               	movlw	63
  5815  11E3  00AB               	movwf	___flmul@b+3
  5816  11E4  3000               	movlw	0
  5817  11E5  00AA               	movwf	___flmul@b+2
  5818  11E6  3000               	movlw	0
  5819  11E7  00A9               	movwf	___flmul@b+1
  5820  11E8  3000               	movlw	0
  5821  11E9  00A8               	movwf	___flmul@b
  5822  11EA  300A               	movlw	10
  5823  11EB  00A0               	movwf	___lwdiv@divisor
  5824  11EC  3000               	movlw	0
  5825  11ED  00A1               	movwf	___lwdiv@divisor+1
  5826  11EE  0855               	movf	fround@prec,w
  5827  11EF  00C6               	movwf	??_fround
  5828  11F0  01C7               	clrf	??_fround+1
  5829  11F1  0846               	movf	??_fround,w
  5830  11F2  00A2               	movwf	___lwdiv@dividend
  5831  11F3  0847               	movf	??_fround+1,w
  5832  11F4  00A3               	movwf	___lwdiv@dividend+1
  5833  11F5  160A  158A  2301  160A  118A  	fcall	___lwdiv
  5834  11FA  1283               	bcf	3,5	;RP0=0, select bank0
  5835  11FB  1303               	bcf	3,6	;RP1=0, select bank0
  5836  11FC  0820               	movf	?___lwdiv,w
  5837  11FD  00C8               	movwf	??_fround+2
  5838  11FE  3001               	movlw	1
  5839  11FF                     u4095:
  5840  11FF  1003               	clrc
  5841  1200  0DC8               	rlf	??_fround+2,f
  5842  1201  3EFF               	addlw	-1
  5843  1202  1D03               	skipz
  5844  1203  29FF               	goto	u4095
  5845  1204  1003               	clrc
  5846  1205  0D48               	rlf	??_fround+2,w
  5847  1206  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5848  1207  0084               	movwf	4
  5849  1208  120A  158A  200A  160A  118A  	fcall	stringdir
  5850  120D  00C9               	movwf	??_fround+3
  5851  120E  120A  158A  200A  160A  118A  	fcall	stringdir
  5852  1213  00CA               	movwf	??_fround+4
  5853  1214  120A  158A  200A  160A  118A  	fcall	stringdir
  5854  1219  00CB               	movwf	??_fround+5
  5855  121A  120A  158A  200A  160A  118A  	fcall	stringdir
  5856  121F  00CC               	movwf	??_fround+6
  5857  1220  084C               	movf	??_fround+6,w
  5858  1221  00AF               	movwf	___flmul@a+3
  5859  1222  084B               	movf	??_fround+5,w
  5860  1223  00AE               	movwf	___flmul@a+2
  5861  1224  084A               	movf	??_fround+4,w
  5862  1225  00AD               	movwf	___flmul@a+1
  5863  1226  0849               	movf	??_fround+3,w
  5864  1227  00AC               	movwf	___flmul@a
  5865  1228  120A  158A  213C  160A  118A  	fcall	___flmul
  5866  122D  1283               	bcf	3,5	;RP0=0, select bank0
  5867  122E  1303               	bcf	3,6	;RP1=0, select bank0
  5868  122F  082B               	movf	?___flmul+3,w
  5869  1230  00D4               	movwf	_fround$1155+3
  5870  1231  082A               	movf	?___flmul+2,w
  5871  1232  00D3               	movwf	_fround$1155+2
  5872  1233  0829               	movf	?___flmul+1,w
  5873  1234  00D2               	movwf	_fround$1155+1
  5874  1235  0828               	movf	?___flmul,w
  5875  1236  00D1               	movwf	_fround$1155
  5876                           
  5877                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5878  1237  300A               	movlw	10
  5879  1238  00F3               	movwf	___lwmod@divisor
  5880  1239  3000               	movlw	0
  5881  123A  00F4               	movwf	___lwmod@divisor+1
  5882  123B  0855               	movf	fround@prec,w
  5883  123C  00C6               	movwf	??_fround
  5884  123D  01C7               	clrf	??_fround+1
  5885  123E  0846               	movf	??_fround,w
  5886  123F  00F5               	movwf	___lwmod@dividend
  5887  1240  0847               	movf	??_fround+1,w
  5888  1241  00F6               	movwf	___lwmod@dividend+1
  5889  1242  120A  158A  2102  160A  118A  	fcall	___lwmod
  5890  1247  0873               	movf	?___lwmod,w
  5891  1248  1283               	bcf	3,5	;RP0=0, select bank0
  5892  1249  1303               	bcf	3,6	;RP1=0, select bank0
  5893  124A  00C8               	movwf	??_fround+2
  5894  124B  3001               	movlw	1
  5895  124C                     u4105:
  5896  124C  1003               	clrc
  5897  124D  0DC8               	rlf	??_fround+2,f
  5898  124E  3EFF               	addlw	-1
  5899  124F  1D03               	skipz
  5900  1250  2A4C               	goto	u4105
  5901  1251  1003               	clrc
  5902  1252  0D48               	rlf	??_fround+2,w
  5903  1253  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5904  1254  0084               	movwf	4
  5905  1255  120A  158A  200A  160A  118A  	fcall	stringdir
  5906  125A  00C9               	movwf	??_fround+3
  5907  125B  120A  158A  200A  160A  118A  	fcall	stringdir
  5908  1260  00CA               	movwf	??_fround+4
  5909  1261  120A  158A  200A  160A  118A  	fcall	stringdir
  5910  1266  00CB               	movwf	??_fround+5
  5911  1267  120A  158A  200A  160A  118A  	fcall	stringdir
  5912  126C  00CC               	movwf	??_fround+6
  5913  126D  084C               	movf	??_fround+6,w
  5914  126E  00AB               	movwf	___flmul@b+3
  5915  126F  084B               	movf	??_fround+5,w
  5916  1270  00AA               	movwf	___flmul@b+2
  5917  1271  084A               	movf	??_fround+4,w
  5918  1272  00A9               	movwf	___flmul@b+1
  5919  1273  0849               	movf	??_fround+3,w
  5920  1274  00A8               	movwf	___flmul@b
  5921  1275  0854               	movf	_fround$1155+3,w
  5922  1276  00AF               	movwf	___flmul@a+3
  5923  1277  0853               	movf	_fround$1155+2,w
  5924  1278  00AE               	movwf	___flmul@a+2
  5925  1279  0852               	movf	_fround$1155+1,w
  5926  127A  00AD               	movwf	___flmul@a+1
  5927  127B  0851               	movf	_fround$1155,w
  5928  127C  00AC               	movwf	___flmul@a
  5929  127D  120A  158A  213C  160A  118A  	fcall	___flmul
  5930  1282  1283               	bcf	3,5	;RP0=0, select bank0
  5931  1283  1303               	bcf	3,6	;RP1=0, select bank0
  5932  1284  082B               	movf	?___flmul+3,w
  5933  1285  00C5               	movwf	?_fround+3
  5934  1286  082A               	movf	?___flmul+2,w
  5935  1287  00C4               	movwf	?_fround+2
  5936  1288  0829               	movf	?___flmul+1,w
  5937  1289  00C3               	movwf	?_fround+1
  5938  128A  0828               	movf	?___flmul,w
  5939  128B  00C2               	movwf	?_fround
  5940  128C  2AD0               	goto	l249
  5941  128D                     l2774:
  5942                           
  5943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5944  128D  303F               	movlw	63
  5945  128E  00AB               	movwf	___flmul@b+3
  5946  128F  3000               	movlw	0
  5947  1290  00AA               	movwf	___flmul@b+2
  5948  1291  3000               	movlw	0
  5949  1292  00A9               	movwf	___flmul@b+1
  5950  1293  3000               	movlw	0
  5951  1294  00A8               	movwf	___flmul@b
  5952  1295  0855               	movf	fround@prec,w
  5953  1296  00C6               	movwf	??_fround
  5954  1297  3001               	movlw	1
  5955  1298                     u4115:
  5956  1298  1003               	clrc
  5957  1299  0DC6               	rlf	??_fround,f
  5958  129A  3EFF               	addlw	-1
  5959  129B  1D03               	skipz
  5960  129C  2A98               	goto	u4115
  5961  129D  1003               	clrc
  5962  129E  0D46               	rlf	??_fround,w
  5963  129F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5964  12A0  0084               	movwf	4
  5965  12A1  120A  158A  200A  160A  118A  	fcall	stringdir
  5966  12A6  00C7               	movwf	??_fround+1
  5967  12A7  120A  158A  200A  160A  118A  	fcall	stringdir
  5968  12AC  00C8               	movwf	??_fround+2
  5969  12AD  120A  158A  200A  160A  118A  	fcall	stringdir
  5970  12B2  00C9               	movwf	??_fround+3
  5971  12B3  120A  158A  200A  160A  118A  	fcall	stringdir
  5972  12B8  00CA               	movwf	??_fround+4
  5973  12B9  084A               	movf	??_fround+4,w
  5974  12BA  00AF               	movwf	___flmul@a+3
  5975  12BB  0849               	movf	??_fround+3,w
  5976  12BC  00AE               	movwf	___flmul@a+2
  5977  12BD  0848               	movf	??_fround+2,w
  5978  12BE  00AD               	movwf	___flmul@a+1
  5979  12BF  0847               	movf	??_fround+1,w
  5980  12C0  00AC               	movwf	___flmul@a
  5981  12C1  120A  158A  213C  160A  118A  	fcall	___flmul
  5982  12C6  1283               	bcf	3,5	;RP0=0, select bank0
  5983  12C7  1303               	bcf	3,6	;RP1=0, select bank0
  5984  12C8  082B               	movf	?___flmul+3,w
  5985  12C9  00C5               	movwf	?_fround+3
  5986  12CA  082A               	movf	?___flmul+2,w
  5987  12CB  00C4               	movwf	?_fround+2
  5988  12CC  0829               	movf	?___flmul+1,w
  5989  12CD  00C3               	movwf	?_fround+1
  5990  12CE  0828               	movf	?___flmul,w
  5991  12CF  00C2               	movwf	?_fround
  5992  12D0                     l249:
  5993  12D0  0008               	return
  5994  12D1                     __end_of_fround:
  5995                           
  5996                           	psect	text7
  5997  0902                     __ptext7:	
  5998 ;; *************** function ___lwmod *****************
  5999 ;; Defined at:
  6000 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6001 ;; Parameters:    Size  Location     Type
  6002 ;;  divisor         2    3[COMMON] unsigned int 
  6003 ;;  dividend        2    5[COMMON] unsigned int 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  counter         1    8[COMMON] unsigned char 
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  2    3[COMMON] unsigned int 
  6008 ;; Registers used:
  6009 ;;		wreg, status,2, status,0
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6015 ;;      Params:         4       0       0       0       0
  6016 ;;      Locals:         1       0       0       0       0
  6017 ;;      Temps:          1       0       0       0       0
  6018 ;;      Totals:         6       0       0       0       0
  6019 ;;Total ram usage:        6 bytes
  6020 ;; Hardware stack levels used: 1
  6021 ;; Hardware stack levels required when called: 1
  6022 ;; This function calls:
  6023 ;;		Nothing
  6024 ;; This function is called by:
  6025 ;;		_fround
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           
  6030                           ;psect for function ___lwmod
  6031  0902                     ___lwmod:
  6032  0902                     l2378:	
  6033                           ;incstack = 0
  6034                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6035                           
  6036  0902  0873               	movf	___lwmod@divisor,w
  6037  0903  0474               	iorwf	___lwmod@divisor+1,w
  6038  0904  1903               	btfsc	3,2
  6039  0905  2907               	goto	u3141
  6040  0906  2908               	goto	u3140
  6041  0907                     u3141:
  6042  0907  2937               	goto	l2396
  6043  0908                     u3140:
  6044  0908                     l2380:
  6045  0908  01F8               	clrf	___lwmod@counter
  6046  0909  0AF8               	incf	___lwmod@counter,f
  6047  090A  2916               	goto	l2386
  6048  090B                     l2382:
  6049  090B  3001               	movlw	1
  6050  090C                     u3155:
  6051  090C  1003               	clrc
  6052  090D  0DF3               	rlf	___lwmod@divisor,f
  6053  090E  0DF4               	rlf	___lwmod@divisor+1,f
  6054  090F  3EFF               	addlw	-1
  6055  0910  1D03               	skipz
  6056  0911  290C               	goto	u3155
  6057  0912                     l2384:
  6058  0912  3001               	movlw	1
  6059  0913  00F7               	movwf	??___lwmod
  6060  0914  0877               	movf	??___lwmod,w
  6061  0915  07F8               	addwf	___lwmod@counter,f
  6062  0916                     l2386:
  6063  0916  1FF4               	btfss	___lwmod@divisor+1,7
  6064  0917  2919               	goto	u3161
  6065  0918  291A               	goto	u3160
  6066  0919                     u3161:
  6067  0919  290B               	goto	l2382
  6068  091A                     u3160:
  6069  091A                     l2388:
  6070  091A  0874               	movf	___lwmod@divisor+1,w
  6071  091B  0276               	subwf	___lwmod@dividend+1,w
  6072  091C  1D03               	skipz
  6073  091D  2920               	goto	u3175
  6074  091E  0873               	movf	___lwmod@divisor,w
  6075  091F  0275               	subwf	___lwmod@dividend,w
  6076  0920                     u3175:
  6077  0920  1C03               	skipc
  6078  0921  2923               	goto	u3171
  6079  0922  2924               	goto	u3170
  6080  0923                     u3171:
  6081  0923  292A               	goto	l2392
  6082  0924                     u3170:
  6083  0924                     l2390:
  6084  0924  0873               	movf	___lwmod@divisor,w
  6085  0925  02F5               	subwf	___lwmod@dividend,f
  6086  0926  0874               	movf	___lwmod@divisor+1,w
  6087  0927  1C03               	skipc
  6088  0928  03F6               	decf	___lwmod@dividend+1,f
  6089  0929  02F6               	subwf	___lwmod@dividend+1,f
  6090  092A                     l2392:
  6091  092A  3001               	movlw	1
  6092  092B                     u3185:
  6093  092B  1003               	clrc
  6094  092C  0CF4               	rrf	___lwmod@divisor+1,f
  6095  092D  0CF3               	rrf	___lwmod@divisor,f
  6096  092E  3EFF               	addlw	-1
  6097  092F  1D03               	skipz
  6098  0930  292B               	goto	u3185
  6099  0931                     l2394:
  6100  0931  3001               	movlw	1
  6101  0932  02F8               	subwf	___lwmod@counter,f
  6102  0933  1D03               	btfss	3,2
  6103  0934  2936               	goto	u3191
  6104  0935  2937               	goto	u3190
  6105  0936                     u3191:
  6106  0936  291A               	goto	l2388
  6107  0937                     u3190:
  6108  0937                     l2396:
  6109  0937  0876               	movf	___lwmod@dividend+1,w
  6110  0938  00F4               	movwf	?___lwmod+1
  6111  0939  0875               	movf	___lwmod@dividend,w
  6112  093A  00F3               	movwf	?___lwmod
  6113  093B                     l659:
  6114  093B  0008               	return
  6115  093C                     __end_of___lwmod:
  6116                           
  6117                           	psect	text8
  6118  1B01                     __ptext8:	
  6119 ;; *************** function ___lwdiv *****************
  6120 ;; Defined at:
  6121 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  divisor         2    0[BANK0 ] unsigned int 
  6124 ;;  dividend        2    2[BANK0 ] unsigned int 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  quotient        2    4[BANK0 ] unsigned int 
  6127 ;;  counter         1    6[BANK0 ] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  2    0[BANK0 ] unsigned int 
  6130 ;; Registers used:
  6131 ;;		wreg, status,2, status,0
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6137 ;;      Params:         0       4       0       0       0
  6138 ;;      Locals:         0       3       0       0       0
  6139 ;;      Temps:          1       0       0       0       0
  6140 ;;      Totals:         1       7       0       0       0
  6141 ;;Total ram usage:        8 bytes
  6142 ;; Hardware stack levels used: 1
  6143 ;; Hardware stack levels required when called: 1
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_fround
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           
  6152                           ;psect for function ___lwdiv
  6153  1B01                     ___lwdiv:
  6154  1B01                     l2352:	
  6155                           ;incstack = 0
  6156                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6157                           
  6158  1B01  1283               	bcf	3,5	;RP0=0, select bank0
  6159  1B02  1303               	bcf	3,6	;RP1=0, select bank0
  6160  1B03  01A4               	clrf	___lwdiv@quotient
  6161  1B04  01A5               	clrf	___lwdiv@quotient+1
  6162  1B05                     l2354:
  6163  1B05  0820               	movf	___lwdiv@divisor,w
  6164  1B06  0421               	iorwf	___lwdiv@divisor+1,w
  6165  1B07  1903               	btfsc	3,2
  6166  1B08  2B0A               	goto	u3071
  6167  1B09  2B0B               	goto	u3070
  6168  1B0A                     u3071:
  6169  1B0A  2B42               	goto	l2374
  6170  1B0B                     u3070:
  6171  1B0B                     l2356:
  6172  1B0B  01A6               	clrf	___lwdiv@counter
  6173  1B0C  0AA6               	incf	___lwdiv@counter,f
  6174  1B0D  2B19               	goto	l2362
  6175  1B0E                     l2358:
  6176  1B0E  3001               	movlw	1
  6177  1B0F                     u3085:
  6178  1B0F  1003               	clrc
  6179  1B10  0DA0               	rlf	___lwdiv@divisor,f
  6180  1B11  0DA1               	rlf	___lwdiv@divisor+1,f
  6181  1B12  3EFF               	addlw	-1
  6182  1B13  1D03               	skipz
  6183  1B14  2B0F               	goto	u3085
  6184  1B15                     l2360:
  6185  1B15  3001               	movlw	1
  6186  1B16  00F9               	movwf	??___lwdiv
  6187  1B17  0879               	movf	??___lwdiv,w
  6188  1B18  07A6               	addwf	___lwdiv@counter,f
  6189  1B19                     l2362:
  6190  1B19  1FA1               	btfss	___lwdiv@divisor+1,7
  6191  1B1A  2B1C               	goto	u3091
  6192  1B1B  2B1D               	goto	u3090
  6193  1B1C                     u3091:
  6194  1B1C  2B0E               	goto	l2358
  6195  1B1D                     u3090:
  6196  1B1D                     l2364:
  6197  1B1D  3001               	movlw	1
  6198  1B1E                     u3105:
  6199  1B1E  1003               	clrc
  6200  1B1F  0DA4               	rlf	___lwdiv@quotient,f
  6201  1B20  0DA5               	rlf	___lwdiv@quotient+1,f
  6202  1B21  3EFF               	addlw	-1
  6203  1B22  1D03               	skipz
  6204  1B23  2B1E               	goto	u3105
  6205  1B24  0821               	movf	___lwdiv@divisor+1,w
  6206  1B25  0223               	subwf	___lwdiv@dividend+1,w
  6207  1B26  1D03               	skipz
  6208  1B27  2B2A               	goto	u3115
  6209  1B28  0820               	movf	___lwdiv@divisor,w
  6210  1B29  0222               	subwf	___lwdiv@dividend,w
  6211  1B2A                     u3115:
  6212  1B2A  1C03               	skipc
  6213  1B2B  2B2D               	goto	u3111
  6214  1B2C  2B2E               	goto	u3110
  6215  1B2D                     u3111:
  6216  1B2D  2B35               	goto	l2370
  6217  1B2E                     u3110:
  6218  1B2E                     l2366:
  6219  1B2E  0820               	movf	___lwdiv@divisor,w
  6220  1B2F  02A2               	subwf	___lwdiv@dividend,f
  6221  1B30  0821               	movf	___lwdiv@divisor+1,w
  6222  1B31  1C03               	skipc
  6223  1B32  03A3               	decf	___lwdiv@dividend+1,f
  6224  1B33  02A3               	subwf	___lwdiv@dividend+1,f
  6225  1B34                     l2368:
  6226  1B34  1424               	bsf	___lwdiv@quotient,0
  6227  1B35                     l2370:
  6228  1B35  3001               	movlw	1
  6229  1B36                     u3125:
  6230  1B36  1003               	clrc
  6231  1B37  0CA1               	rrf	___lwdiv@divisor+1,f
  6232  1B38  0CA0               	rrf	___lwdiv@divisor,f
  6233  1B39  3EFF               	addlw	-1
  6234  1B3A  1D03               	skipz
  6235  1B3B  2B36               	goto	u3125
  6236  1B3C                     l2372:
  6237  1B3C  3001               	movlw	1
  6238  1B3D  02A6               	subwf	___lwdiv@counter,f
  6239  1B3E  1D03               	btfss	3,2
  6240  1B3F  2B41               	goto	u3131
  6241  1B40  2B42               	goto	u3130
  6242  1B41                     u3131:
  6243  1B41  2B1D               	goto	l2364
  6244  1B42                     u3130:
  6245  1B42                     l2374:
  6246  1B42  0825               	movf	___lwdiv@quotient+1,w
  6247  1B43  00A1               	movwf	?___lwdiv+1
  6248  1B44  0824               	movf	___lwdiv@quotient,w
  6249  1B45  00A0               	movwf	?___lwdiv
  6250  1B46                     l649:
  6251  1B46  0008               	return
  6252  1B47                     __end_of___lwdiv:
  6253                           
  6254                           	psect	text9
  6255  093C                     __ptext9:	
  6256 ;; *************** function ___flmul *****************
  6257 ;; Defined at:
  6258 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  b               4    8[BANK0 ] unsigned int 
  6261 ;;  a               4   12[BANK0 ] unsigned int 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  prod            4   28[BANK0 ] struct .
  6264 ;;  grs             4   22[BANK0 ] unsigned long 
  6265 ;;  temp            2   32[BANK0 ] struct .
  6266 ;;  bexp            1   27[BANK0 ] unsigned char 
  6267 ;;  aexp            1   26[BANK0 ] unsigned char 
  6268 ;;  sign            1   21[BANK0 ] unsigned char 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  4    8[BANK0 ] unsigned char 
  6271 ;; Registers used:
  6272 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6278 ;;      Params:         0       8       0       0       0
  6279 ;;      Locals:         0      13       0       0       0
  6280 ;;      Temps:          0       5       0       0       0
  6281 ;;      Totals:         0      26       0       0       0
  6282 ;;Total ram usage:       26 bytes
  6283 ;; Hardware stack levels used: 1
  6284 ;; Hardware stack levels required when called: 2
  6285 ;; This function calls:
  6286 ;;		__Umul8_16
  6287 ;; This function is called by:
  6288 ;;		_main
  6289 ;;		_fround
  6290 ;;		_scale
  6291 ;;		_sprintf
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294                           
  6295                           
  6296                           ;psect for function ___flmul
  6297  093C                     ___flmul:
  6298  093C                     l2594:	
  6299                           ;incstack = 0
  6300                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6301                           
  6302  093C  1283               	bcf	3,5	;RP0=0, select bank0
  6303  093D  1303               	bcf	3,6	;RP1=0, select bank0
  6304  093E  082B               	movf	___flmul@b+3,w
  6305  093F  3980               	andlw	128
  6306  0940  00B0               	movwf	??___flmul
  6307  0941  0830               	movf	??___flmul,w
  6308  0942  00B5               	movwf	___flmul@sign
  6309  0943                     l2596:
  6310  0943  082B               	movf	___flmul@b+3,w
  6311  0944  00B0               	movwf	??___flmul
  6312  0945  0730               	addwf	??___flmul,w
  6313  0946  00B1               	movwf	??___flmul+1
  6314  0947  0831               	movf	??___flmul+1,w
  6315  0948  00BB               	movwf	___flmul@bexp
  6316  0949                     l2598:
  6317  0949  1FAA               	btfss	___flmul@b+2,7
  6318  094A  294C               	goto	u3661
  6319  094B  294D               	goto	u3660
  6320  094C                     u3661:
  6321  094C  294E               	goto	l2602
  6322  094D                     u3660:
  6323  094D                     l2600:
  6324  094D  143B               	bsf	___flmul@bexp,0
  6325  094E                     l2602:
  6326  094E  083B               	movf	___flmul@bexp,w
  6327  094F  1903               	btfsc	3,2
  6328  0950  2952               	goto	u3671
  6329  0951  2953               	goto	u3670
  6330  0952                     u3671:
  6331  0952  2962               	goto	l2610
  6332  0953                     u3670:
  6333  0953                     l2604:
  6334  0953  0A3B               	incf	___flmul@bexp,w
  6335  0954  1D03               	btfss	3,2
  6336  0955  2957               	goto	u3681
  6337  0956  2958               	goto	u3680
  6338  0957                     u3681:
  6339  0957  2960               	goto	l2608
  6340  0958                     u3680:
  6341  0958                     l2606:
  6342  0958  3000               	movlw	0
  6343  0959  00AB               	movwf	___flmul@b+3
  6344  095A  3000               	movlw	0
  6345  095B  00AA               	movwf	___flmul@b+2
  6346  095C  3000               	movlw	0
  6347  095D  00A9               	movwf	___flmul@b+1
  6348  095E  3000               	movlw	0
  6349  095F  00A8               	movwf	___flmul@b
  6350  0960                     l2608:
  6351  0960  17AA               	bsf	___flmul@b+2,7
  6352  0961  296A               	goto	l2612
  6353  0962                     l2610:
  6354  0962  3000               	movlw	0
  6355  0963  00AB               	movwf	___flmul@b+3
  6356  0964  3000               	movlw	0
  6357  0965  00AA               	movwf	___flmul@b+2
  6358  0966  3000               	movlw	0
  6359  0967  00A9               	movwf	___flmul@b+1
  6360  0968  3000               	movlw	0
  6361  0969  00A8               	movwf	___flmul@b
  6362  096A                     l2612:
  6363  096A  082F               	movf	___flmul@a+3,w
  6364  096B  3980               	andlw	128
  6365  096C  00B0               	movwf	??___flmul
  6366  096D  0830               	movf	??___flmul,w
  6367  096E  06B5               	xorwf	___flmul@sign,f
  6368  096F                     l2614:
  6369  096F  082F               	movf	___flmul@a+3,w
  6370  0970  00B0               	movwf	??___flmul
  6371  0971  0730               	addwf	??___flmul,w
  6372  0972  00B1               	movwf	??___flmul+1
  6373  0973  0831               	movf	??___flmul+1,w
  6374  0974  00BA               	movwf	___flmul@aexp
  6375  0975                     l2616:
  6376  0975  1FAE               	btfss	___flmul@a+2,7
  6377  0976  2978               	goto	u3691
  6378  0977  2979               	goto	u3690
  6379  0978                     u3691:
  6380  0978  297A               	goto	l2620
  6381  0979                     u3690:
  6382  0979                     l2618:
  6383  0979  143A               	bsf	___flmul@aexp,0
  6384  097A                     l2620:
  6385  097A  083A               	movf	___flmul@aexp,w
  6386  097B  1903               	btfsc	3,2
  6387  097C  297E               	goto	u3701
  6388  097D  297F               	goto	u3700
  6389  097E                     u3701:
  6390  097E  298E               	goto	l2628
  6391  097F                     u3700:
  6392  097F                     l2622:
  6393  097F  0A3A               	incf	___flmul@aexp,w
  6394  0980  1D03               	btfss	3,2
  6395  0981  2983               	goto	u3711
  6396  0982  2984               	goto	u3710
  6397  0983                     u3711:
  6398  0983  298C               	goto	l2626
  6399  0984                     u3710:
  6400  0984                     l2624:
  6401  0984  3000               	movlw	0
  6402  0985  00AF               	movwf	___flmul@a+3
  6403  0986  3000               	movlw	0
  6404  0987  00AE               	movwf	___flmul@a+2
  6405  0988  3000               	movlw	0
  6406  0989  00AD               	movwf	___flmul@a+1
  6407  098A  3000               	movlw	0
  6408  098B  00AC               	movwf	___flmul@a
  6409  098C                     l2626:
  6410  098C  17AE               	bsf	___flmul@a+2,7
  6411  098D  2996               	goto	l2630
  6412  098E                     l2628:
  6413  098E  3000               	movlw	0
  6414  098F  00AF               	movwf	___flmul@a+3
  6415  0990  3000               	movlw	0
  6416  0991  00AE               	movwf	___flmul@a+2
  6417  0992  3000               	movlw	0
  6418  0993  00AD               	movwf	___flmul@a+1
  6419  0994  3000               	movlw	0
  6420  0995  00AC               	movwf	___flmul@a
  6421  0996                     l2630:
  6422  0996  083A               	movf	___flmul@aexp,w
  6423  0997  1903               	btfsc	3,2
  6424  0998  299A               	goto	u3721
  6425  0999  299B               	goto	u3720
  6426  099A                     u3721:
  6427  099A  29A0               	goto	l2634
  6428  099B                     u3720:
  6429  099B                     l2632:
  6430  099B  083B               	movf	___flmul@bexp,w
  6431  099C  1D03               	btfss	3,2
  6432  099D  299F               	goto	u3731
  6433  099E  29A0               	goto	u3730
  6434  099F                     u3731:
  6435  099F  29A9               	goto	l2638
  6436  09A0                     u3730:
  6437  09A0                     l2634:
  6438  09A0  3000               	movlw	0
  6439  09A1  00AB               	movwf	?___flmul+3
  6440  09A2  3000               	movlw	0
  6441  09A3  00AA               	movwf	?___flmul+2
  6442  09A4  3000               	movlw	0
  6443  09A5  00A9               	movwf	?___flmul+1
  6444  09A6  3000               	movlw	0
  6445  09A7  00A8               	movwf	?___flmul
  6446  09A8  2C9C               	goto	l766
  6447  09A9                     l2638:
  6448  09A9  0828               	movf	___flmul@b,w
  6449  09AA  00B0               	movwf	??___flmul
  6450  09AB  0830               	movf	??___flmul,w
  6451  09AC  00F3               	movwf	__Umul8_16@multiplicand
  6452  09AD  082E               	movf	___flmul@a+2,w
  6453  09AE  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6454  09B3  0874               	movf	?__Umul8_16+1,w
  6455  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6456  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  6457  09B6  00C1               	movwf	___flmul@temp+1
  6458  09B7  0873               	movf	?__Umul8_16,w
  6459  09B8  00C0               	movwf	___flmul@temp
  6460  09B9                     l2640:
  6461  09B9  0840               	movf	___flmul@temp,w
  6462  09BA  00B0               	movwf	??___flmul
  6463  09BB  01B1               	clrf	??___flmul+1
  6464  09BC  01B2               	clrf	??___flmul+2
  6465  09BD  01B3               	clrf	??___flmul+3
  6466  09BE  0833               	movf	??___flmul+3,w
  6467  09BF  00B9               	movwf	___flmul@grs+3
  6468  09C0  0832               	movf	??___flmul+2,w
  6469  09C1  00B8               	movwf	___flmul@grs+2
  6470  09C2  0831               	movf	??___flmul+1,w
  6471  09C3  00B7               	movwf	___flmul@grs+1
  6472  09C4  0830               	movf	??___flmul,w
  6473  09C5  00B6               	movwf	___flmul@grs
  6474  09C6                     l2642:
  6475  09C6  0841               	movf	___flmul@temp+1,w
  6476  09C7  00B0               	movwf	??___flmul
  6477  09C8  01B1               	clrf	??___flmul+1
  6478  09C9  01B2               	clrf	??___flmul+2
  6479  09CA  01B3               	clrf	??___flmul+3
  6480  09CB  0833               	movf	??___flmul+3,w
  6481  09CC  00BF               	movwf	___flmul@prod+3
  6482  09CD  0832               	movf	??___flmul+2,w
  6483  09CE  00BE               	movwf	___flmul@prod+2
  6484  09CF  0831               	movf	??___flmul+1,w
  6485  09D0  00BD               	movwf	___flmul@prod+1
  6486  09D1  0830               	movf	??___flmul,w
  6487  09D2  00BC               	movwf	___flmul@prod
  6488  09D3  0829               	movf	___flmul@b+1,w
  6489  09D4  00B0               	movwf	??___flmul
  6490  09D5  0830               	movf	??___flmul,w
  6491  09D6  00F3               	movwf	__Umul8_16@multiplicand
  6492  09D7  082D               	movf	___flmul@a+1,w
  6493  09D8  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6494  09DD  0874               	movf	?__Umul8_16+1,w
  6495  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  6496  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  6497  09E0  00C1               	movwf	___flmul@temp+1
  6498  09E1  0873               	movf	?__Umul8_16,w
  6499  09E2  00C0               	movwf	___flmul@temp
  6500  09E3                     l2644:
  6501  09E3  0840               	movf	___flmul@temp,w
  6502  09E4  00B0               	movwf	??___flmul
  6503  09E5  01B1               	clrf	??___flmul+1
  6504  09E6  01B2               	clrf	??___flmul+2
  6505  09E7  01B3               	clrf	??___flmul+3
  6506  09E8  0830               	movf	??___flmul,w
  6507  09E9  07B6               	addwf	___flmul@grs,f
  6508  09EA  0831               	movf	??___flmul+1,w
  6509  09EB  1103               	clrz
  6510  09EC  1803               	skipnc
  6511  09ED  3E01               	addlw	1
  6512  09EE  1903               	skipnz
  6513  09EF  29F1               	goto	u3741
  6514  09F0  07B7               	addwf	___flmul@grs+1,f
  6515  09F1                     u3741:
  6516  09F1  0832               	movf	??___flmul+2,w
  6517  09F2  1103               	clrz
  6518  09F3  1803               	skipnc
  6519  09F4  3E01               	addlw	1
  6520  09F5  1903               	skipnz
  6521  09F6  29F8               	goto	u3742
  6522  09F7  07B8               	addwf	___flmul@grs+2,f
  6523  09F8                     u3742:
  6524  09F8  0833               	movf	??___flmul+3,w
  6525  09F9  1103               	clrz
  6526  09FA  1803               	skipnc
  6527  09FB  3E01               	addlw	1
  6528  09FC  1903               	skipnz
  6529  09FD  29FF               	goto	u3743
  6530  09FE  07B9               	addwf	___flmul@grs+3,f
  6531  09FF                     u3743:
  6532  09FF                     l2646:
  6533  09FF  0841               	movf	___flmul@temp+1,w
  6534  0A00  00B0               	movwf	??___flmul
  6535  0A01  01B1               	clrf	??___flmul+1
  6536  0A02  01B2               	clrf	??___flmul+2
  6537  0A03  01B3               	clrf	??___flmul+3
  6538  0A04  0830               	movf	??___flmul,w
  6539  0A05  07BC               	addwf	___flmul@prod,f
  6540  0A06  0831               	movf	??___flmul+1,w
  6541  0A07  1103               	clrz
  6542  0A08  1803               	skipnc
  6543  0A09  3E01               	addlw	1
  6544  0A0A  1903               	skipnz
  6545  0A0B  2A0D               	goto	u3751
  6546  0A0C  07BD               	addwf	___flmul@prod+1,f
  6547  0A0D                     u3751:
  6548  0A0D  0832               	movf	??___flmul+2,w
  6549  0A0E  1103               	clrz
  6550  0A0F  1803               	skipnc
  6551  0A10  3E01               	addlw	1
  6552  0A11  1903               	skipnz
  6553  0A12  2A14               	goto	u3752
  6554  0A13  07BE               	addwf	___flmul@prod+2,f
  6555  0A14                     u3752:
  6556  0A14  0833               	movf	??___flmul+3,w
  6557  0A15  1103               	clrz
  6558  0A16  1803               	skipnc
  6559  0A17  3E01               	addlw	1
  6560  0A18  1903               	skipnz
  6561  0A19  2A1B               	goto	u3753
  6562  0A1A  07BF               	addwf	___flmul@prod+3,f
  6563  0A1B                     u3753:
  6564  0A1B  082A               	movf	___flmul@b+2,w
  6565  0A1C  00B0               	movwf	??___flmul
  6566  0A1D  0830               	movf	??___flmul,w
  6567  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  6568  0A1F  082C               	movf	___flmul@a,w
  6569  0A20  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6570  0A25  0874               	movf	?__Umul8_16+1,w
  6571  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6572  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6573  0A28  00C1               	movwf	___flmul@temp+1
  6574  0A29  0873               	movf	?__Umul8_16,w
  6575  0A2A  00C0               	movwf	___flmul@temp
  6576  0A2B                     l2648:
  6577  0A2B  0840               	movf	___flmul@temp,w
  6578  0A2C  00B0               	movwf	??___flmul
  6579  0A2D  01B1               	clrf	??___flmul+1
  6580  0A2E  01B2               	clrf	??___flmul+2
  6581  0A2F  01B3               	clrf	??___flmul+3
  6582  0A30  0830               	movf	??___flmul,w
  6583  0A31  07B6               	addwf	___flmul@grs,f
  6584  0A32  0831               	movf	??___flmul+1,w
  6585  0A33  1103               	clrz
  6586  0A34  1803               	skipnc
  6587  0A35  3E01               	addlw	1
  6588  0A36  1903               	skipnz
  6589  0A37  2A39               	goto	u3761
  6590  0A38  07B7               	addwf	___flmul@grs+1,f
  6591  0A39                     u3761:
  6592  0A39  0832               	movf	??___flmul+2,w
  6593  0A3A  1103               	clrz
  6594  0A3B  1803               	skipnc
  6595  0A3C  3E01               	addlw	1
  6596  0A3D  1903               	skipnz
  6597  0A3E  2A40               	goto	u3762
  6598  0A3F  07B8               	addwf	___flmul@grs+2,f
  6599  0A40                     u3762:
  6600  0A40  0833               	movf	??___flmul+3,w
  6601  0A41  1103               	clrz
  6602  0A42  1803               	skipnc
  6603  0A43  3E01               	addlw	1
  6604  0A44  1903               	skipnz
  6605  0A45  2A47               	goto	u3763
  6606  0A46  07B9               	addwf	___flmul@grs+3,f
  6607  0A47                     u3763:
  6608  0A47                     l2650:
  6609  0A47  0841               	movf	___flmul@temp+1,w
  6610  0A48  00B0               	movwf	??___flmul
  6611  0A49  01B1               	clrf	??___flmul+1
  6612  0A4A  01B2               	clrf	??___flmul+2
  6613  0A4B  01B3               	clrf	??___flmul+3
  6614  0A4C  0830               	movf	??___flmul,w
  6615  0A4D  07BC               	addwf	___flmul@prod,f
  6616  0A4E  0831               	movf	??___flmul+1,w
  6617  0A4F  1103               	clrz
  6618  0A50  1803               	skipnc
  6619  0A51  3E01               	addlw	1
  6620  0A52  1903               	skipnz
  6621  0A53  2A55               	goto	u3771
  6622  0A54  07BD               	addwf	___flmul@prod+1,f
  6623  0A55                     u3771:
  6624  0A55  0832               	movf	??___flmul+2,w
  6625  0A56  1103               	clrz
  6626  0A57  1803               	skipnc
  6627  0A58  3E01               	addlw	1
  6628  0A59  1903               	skipnz
  6629  0A5A  2A5C               	goto	u3772
  6630  0A5B  07BE               	addwf	___flmul@prod+2,f
  6631  0A5C                     u3772:
  6632  0A5C  0833               	movf	??___flmul+3,w
  6633  0A5D  1103               	clrz
  6634  0A5E  1803               	skipnc
  6635  0A5F  3E01               	addlw	1
  6636  0A60  1903               	skipnz
  6637  0A61  2A63               	goto	u3773
  6638  0A62  07BF               	addwf	___flmul@prod+3,f
  6639  0A63                     u3773:
  6640  0A63                     l2652:
  6641  0A63  3008               	movlw	8
  6642  0A64  00B0               	movwf	??___flmul
  6643  0A65                     u3785:
  6644  0A65  1003               	clrc
  6645  0A66  0DB6               	rlf	___flmul@grs,f
  6646  0A67  0DB7               	rlf	___flmul@grs+1,f
  6647  0A68  0DB8               	rlf	___flmul@grs+2,f
  6648  0A69  0DB9               	rlf	___flmul@grs+3,f
  6649  0A6A  0BB0               	decfsz	??___flmul,f
  6650  0A6B  2A65               	goto	u3785
  6651  0A6C                     l2654:
  6652  0A6C  0829               	movf	___flmul@b+1,w
  6653  0A6D  00B0               	movwf	??___flmul
  6654  0A6E  0830               	movf	??___flmul,w
  6655  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  6656  0A70  082C               	movf	___flmul@a,w
  6657  0A71  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6658  0A76  0874               	movf	?__Umul8_16+1,w
  6659  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6660  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6661  0A79  00C1               	movwf	___flmul@temp+1
  6662  0A7A  0873               	movf	?__Umul8_16,w
  6663  0A7B  00C0               	movwf	___flmul@temp
  6664  0A7C                     l2656:
  6665  0A7C  0840               	movf	___flmul@temp,w
  6666  0A7D  00B0               	movwf	??___flmul
  6667  0A7E  0841               	movf	___flmul@temp+1,w
  6668  0A7F  00B1               	movwf	??___flmul+1
  6669  0A80  01B2               	clrf	??___flmul+2
  6670  0A81  01B3               	clrf	??___flmul+3
  6671  0A82  0830               	movf	??___flmul,w
  6672  0A83  07B6               	addwf	___flmul@grs,f
  6673  0A84  0831               	movf	??___flmul+1,w
  6674  0A85  1103               	clrz
  6675  0A86  1803               	skipnc
  6676  0A87  3E01               	addlw	1
  6677  0A88  1903               	skipnz
  6678  0A89  2A8B               	goto	u3791
  6679  0A8A  07B7               	addwf	___flmul@grs+1,f
  6680  0A8B                     u3791:
  6681  0A8B  0832               	movf	??___flmul+2,w
  6682  0A8C  1103               	clrz
  6683  0A8D  1803               	skipnc
  6684  0A8E  3E01               	addlw	1
  6685  0A8F  1903               	skipnz
  6686  0A90  2A92               	goto	u3792
  6687  0A91  07B8               	addwf	___flmul@grs+2,f
  6688  0A92                     u3792:
  6689  0A92  0833               	movf	??___flmul+3,w
  6690  0A93  1103               	clrz
  6691  0A94  1803               	skipnc
  6692  0A95  3E01               	addlw	1
  6693  0A96  1903               	skipnz
  6694  0A97  2A99               	goto	u3793
  6695  0A98  07B9               	addwf	___flmul@grs+3,f
  6696  0A99                     u3793:
  6697  0A99                     l2658:
  6698  0A99  0828               	movf	___flmul@b,w
  6699  0A9A  00B0               	movwf	??___flmul
  6700  0A9B  0830               	movf	??___flmul,w
  6701  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  6702  0A9D  082D               	movf	___flmul@a+1,w
  6703  0A9E  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6704  0AA3  0874               	movf	?__Umul8_16+1,w
  6705  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6706  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6707  0AA6  00C1               	movwf	___flmul@temp+1
  6708  0AA7  0873               	movf	?__Umul8_16,w
  6709  0AA8  00C0               	movwf	___flmul@temp
  6710  0AA9                     l2660:
  6711  0AA9  0840               	movf	___flmul@temp,w
  6712  0AAA  00B0               	movwf	??___flmul
  6713  0AAB  0841               	movf	___flmul@temp+1,w
  6714  0AAC  00B1               	movwf	??___flmul+1
  6715  0AAD  01B2               	clrf	??___flmul+2
  6716  0AAE  01B3               	clrf	??___flmul+3
  6717  0AAF  0830               	movf	??___flmul,w
  6718  0AB0  07B6               	addwf	___flmul@grs,f
  6719  0AB1  0831               	movf	??___flmul+1,w
  6720  0AB2  1103               	clrz
  6721  0AB3  1803               	skipnc
  6722  0AB4  3E01               	addlw	1
  6723  0AB5  1903               	skipnz
  6724  0AB6  2AB8               	goto	u3801
  6725  0AB7  07B7               	addwf	___flmul@grs+1,f
  6726  0AB8                     u3801:
  6727  0AB8  0832               	movf	??___flmul+2,w
  6728  0AB9  1103               	clrz
  6729  0ABA  1803               	skipnc
  6730  0ABB  3E01               	addlw	1
  6731  0ABC  1903               	skipnz
  6732  0ABD  2ABF               	goto	u3802
  6733  0ABE  07B8               	addwf	___flmul@grs+2,f
  6734  0ABF                     u3802:
  6735  0ABF  0833               	movf	??___flmul+3,w
  6736  0AC0  1103               	clrz
  6737  0AC1  1803               	skipnc
  6738  0AC2  3E01               	addlw	1
  6739  0AC3  1903               	skipnz
  6740  0AC4  2AC6               	goto	u3803
  6741  0AC5  07B9               	addwf	___flmul@grs+3,f
  6742  0AC6                     u3803:
  6743  0AC6                     l2662:
  6744  0AC6  3008               	movlw	8
  6745  0AC7  00B0               	movwf	??___flmul
  6746  0AC8                     u3815:
  6747  0AC8  1003               	clrc
  6748  0AC9  0DB6               	rlf	___flmul@grs,f
  6749  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6750  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6751  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6752  0ACD  0BB0               	decfsz	??___flmul,f
  6753  0ACE  2AC8               	goto	u3815
  6754  0ACF  0828               	movf	___flmul@b,w
  6755  0AD0  00B0               	movwf	??___flmul
  6756  0AD1  0830               	movf	??___flmul,w
  6757  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  6758  0AD3  082C               	movf	___flmul@a,w
  6759  0AD4  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6760  0AD9  0874               	movf	?__Umul8_16+1,w
  6761  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6763  0ADC  00C1               	movwf	___flmul@temp+1
  6764  0ADD  0873               	movf	?__Umul8_16,w
  6765  0ADE  00C0               	movwf	___flmul@temp
  6766  0ADF                     l2664:
  6767  0ADF  0840               	movf	___flmul@temp,w
  6768  0AE0  00B0               	movwf	??___flmul
  6769  0AE1  0841               	movf	___flmul@temp+1,w
  6770  0AE2  00B1               	movwf	??___flmul+1
  6771  0AE3  01B2               	clrf	??___flmul+2
  6772  0AE4  01B3               	clrf	??___flmul+3
  6773  0AE5  0830               	movf	??___flmul,w
  6774  0AE6  07B6               	addwf	___flmul@grs,f
  6775  0AE7  0831               	movf	??___flmul+1,w
  6776  0AE8  1103               	clrz
  6777  0AE9  1803               	skipnc
  6778  0AEA  3E01               	addlw	1
  6779  0AEB  1903               	skipnz
  6780  0AEC  2AEE               	goto	u3821
  6781  0AED  07B7               	addwf	___flmul@grs+1,f
  6782  0AEE                     u3821:
  6783  0AEE  0832               	movf	??___flmul+2,w
  6784  0AEF  1103               	clrz
  6785  0AF0  1803               	skipnc
  6786  0AF1  3E01               	addlw	1
  6787  0AF2  1903               	skipnz
  6788  0AF3  2AF5               	goto	u3822
  6789  0AF4  07B8               	addwf	___flmul@grs+2,f
  6790  0AF5                     u3822:
  6791  0AF5  0833               	movf	??___flmul+3,w
  6792  0AF6  1103               	clrz
  6793  0AF7  1803               	skipnc
  6794  0AF8  3E01               	addlw	1
  6795  0AF9  1903               	skipnz
  6796  0AFA  2AFC               	goto	u3823
  6797  0AFB  07B9               	addwf	___flmul@grs+3,f
  6798  0AFC                     u3823:
  6799  0AFC                     l2666:
  6800  0AFC  0829               	movf	___flmul@b+1,w
  6801  0AFD  00B0               	movwf	??___flmul
  6802  0AFE  0830               	movf	??___flmul,w
  6803  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  6804  0B00  082E               	movf	___flmul@a+2,w
  6805  0B01  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6806  0B06  0874               	movf	?__Umul8_16+1,w
  6807  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6808  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6809  0B09  00C1               	movwf	___flmul@temp+1
  6810  0B0A  0873               	movf	?__Umul8_16,w
  6811  0B0B  00C0               	movwf	___flmul@temp
  6812  0B0C  0840               	movf	___flmul@temp,w
  6813  0B0D  00B0               	movwf	??___flmul
  6814  0B0E  0841               	movf	___flmul@temp+1,w
  6815  0B0F  00B1               	movwf	??___flmul+1
  6816  0B10  01B2               	clrf	??___flmul+2
  6817  0B11  01B3               	clrf	??___flmul+3
  6818  0B12  0830               	movf	??___flmul,w
  6819  0B13  07BC               	addwf	___flmul@prod,f
  6820  0B14  0831               	movf	??___flmul+1,w
  6821  0B15  1103               	clrz
  6822  0B16  1803               	skipnc
  6823  0B17  3E01               	addlw	1
  6824  0B18  1903               	skipnz
  6825  0B19  2B1B               	goto	u3831
  6826  0B1A  07BD               	addwf	___flmul@prod+1,f
  6827  0B1B                     u3831:
  6828  0B1B  0832               	movf	??___flmul+2,w
  6829  0B1C  1103               	clrz
  6830  0B1D  1803               	skipnc
  6831  0B1E  3E01               	addlw	1
  6832  0B1F  1903               	skipnz
  6833  0B20  2B22               	goto	u3832
  6834  0B21  07BE               	addwf	___flmul@prod+2,f
  6835  0B22                     u3832:
  6836  0B22  0833               	movf	??___flmul+3,w
  6837  0B23  1103               	clrz
  6838  0B24  1803               	skipnc
  6839  0B25  3E01               	addlw	1
  6840  0B26  1903               	skipnz
  6841  0B27  2B29               	goto	u3833
  6842  0B28  07BF               	addwf	___flmul@prod+3,f
  6843  0B29                     u3833:
  6844  0B29                     l2668:
  6845  0B29  082A               	movf	___flmul@b+2,w
  6846  0B2A  00B0               	movwf	??___flmul
  6847  0B2B  0830               	movf	??___flmul,w
  6848  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  6849  0B2D  082D               	movf	___flmul@a+1,w
  6850  0B2E  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6851  0B33  0874               	movf	?__Umul8_16+1,w
  6852  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6853  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6854  0B36  00C1               	movwf	___flmul@temp+1
  6855  0B37  0873               	movf	?__Umul8_16,w
  6856  0B38  00C0               	movwf	___flmul@temp
  6857  0B39                     l2670:
  6858  0B39  0840               	movf	___flmul@temp,w
  6859  0B3A  00B0               	movwf	??___flmul
  6860  0B3B  0841               	movf	___flmul@temp+1,w
  6861  0B3C  00B1               	movwf	??___flmul+1
  6862  0B3D  01B2               	clrf	??___flmul+2
  6863  0B3E  01B3               	clrf	??___flmul+3
  6864  0B3F  0830               	movf	??___flmul,w
  6865  0B40  07BC               	addwf	___flmul@prod,f
  6866  0B41  0831               	movf	??___flmul+1,w
  6867  0B42  1103               	clrz
  6868  0B43  1803               	skipnc
  6869  0B44  3E01               	addlw	1
  6870  0B45  1903               	skipnz
  6871  0B46  2B48               	goto	u3841
  6872  0B47  07BD               	addwf	___flmul@prod+1,f
  6873  0B48                     u3841:
  6874  0B48  0832               	movf	??___flmul+2,w
  6875  0B49  1103               	clrz
  6876  0B4A  1803               	skipnc
  6877  0B4B  3E01               	addlw	1
  6878  0B4C  1903               	skipnz
  6879  0B4D  2B4F               	goto	u3842
  6880  0B4E  07BE               	addwf	___flmul@prod+2,f
  6881  0B4F                     u3842:
  6882  0B4F  0833               	movf	??___flmul+3,w
  6883  0B50  1103               	clrz
  6884  0B51  1803               	skipnc
  6885  0B52  3E01               	addlw	1
  6886  0B53  1903               	skipnz
  6887  0B54  2B56               	goto	u3843
  6888  0B55  07BF               	addwf	___flmul@prod+3,f
  6889  0B56                     u3843:
  6890  0B56  082A               	movf	___flmul@b+2,w
  6891  0B57  00B0               	movwf	??___flmul
  6892  0B58  0830               	movf	??___flmul,w
  6893  0B59  00F3               	movwf	__Umul8_16@multiplicand
  6894  0B5A  082E               	movf	___flmul@a+2,w
  6895  0B5B  160A  158A  220E  120A  158A  	fcall	__Umul8_16
  6896  0B60  0874               	movf	?__Umul8_16+1,w
  6897  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6898  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6899  0B63  00C1               	movwf	___flmul@temp+1
  6900  0B64  0873               	movf	?__Umul8_16,w
  6901  0B65  00C0               	movwf	___flmul@temp
  6902  0B66                     l2672:
  6903  0B66  0840               	movf	___flmul@temp,w
  6904  0B67  00B0               	movwf	??___flmul
  6905  0B68  0841               	movf	___flmul@temp+1,w
  6906  0B69  00B1               	movwf	??___flmul+1
  6907  0B6A  01B2               	clrf	??___flmul+2
  6908  0B6B  01B3               	clrf	??___flmul+3
  6909  0B6C  3008               	movlw	8
  6910  0B6D                     u3855:
  6911  0B6D  1003               	clrc
  6912  0B6E  0DB0               	rlf	??___flmul,f
  6913  0B6F  0DB1               	rlf	??___flmul+1,f
  6914  0B70  0DB2               	rlf	??___flmul+2,f
  6915  0B71  0DB3               	rlf	??___flmul+3,f
  6916  0B72                     u3850:
  6917  0B72  3EFF               	addlw	-1
  6918  0B73  1D03               	skipz
  6919  0B74  2B6D               	goto	u3855
  6920  0B75  0830               	movf	??___flmul,w
  6921  0B76  07BC               	addwf	___flmul@prod,f
  6922  0B77  0831               	movf	??___flmul+1,w
  6923  0B78  1103               	clrz
  6924  0B79  1803               	skipnc
  6925  0B7A  3E01               	addlw	1
  6926  0B7B  1903               	skipnz
  6927  0B7C  2B7E               	goto	u3861
  6928  0B7D  07BD               	addwf	___flmul@prod+1,f
  6929  0B7E                     u3861:
  6930  0B7E  0832               	movf	??___flmul+2,w
  6931  0B7F  1103               	clrz
  6932  0B80  1803               	skipnc
  6933  0B81  3E01               	addlw	1
  6934  0B82  1903               	skipnz
  6935  0B83  2B85               	goto	u3862
  6936  0B84  07BE               	addwf	___flmul@prod+2,f
  6937  0B85                     u3862:
  6938  0B85  0833               	movf	??___flmul+3,w
  6939  0B86  1103               	clrz
  6940  0B87  1803               	skipnc
  6941  0B88  3E01               	addlw	1
  6942  0B89  1903               	skipnz
  6943  0B8A  2B8C               	goto	u3863
  6944  0B8B  07BF               	addwf	___flmul@prod+3,f
  6945  0B8C                     u3863:
  6946  0B8C                     l2674:
  6947  0B8C  0836               	movf	___flmul@grs,w
  6948  0B8D  00B0               	movwf	??___flmul
  6949  0B8E  0837               	movf	___flmul@grs+1,w
  6950  0B8F  00B1               	movwf	??___flmul+1
  6951  0B90  0838               	movf	___flmul@grs+2,w
  6952  0B91  00B2               	movwf	??___flmul+2
  6953  0B92  0839               	movf	___flmul@grs+3,w
  6954  0B93  00B3               	movwf	??___flmul+3
  6955  0B94  3018               	movlw	24
  6956  0B95                     u3875:
  6957  0B95  1003               	clrc
  6958  0B96  0CB3               	rrf	??___flmul+3,f
  6959  0B97  0CB2               	rrf	??___flmul+2,f
  6960  0B98  0CB1               	rrf	??___flmul+1,f
  6961  0B99  0CB0               	rrf	??___flmul,f
  6962  0B9A                     u3870:
  6963  0B9A  3EFF               	addlw	-1
  6964  0B9B  1D03               	skipz
  6965  0B9C  2B95               	goto	u3875
  6966  0B9D  0830               	movf	??___flmul,w
  6967  0B9E  07BC               	addwf	___flmul@prod,f
  6968  0B9F  0831               	movf	??___flmul+1,w
  6969  0BA0  1103               	clrz
  6970  0BA1  1803               	skipnc
  6971  0BA2  3E01               	addlw	1
  6972  0BA3  1903               	skipnz
  6973  0BA4  2BA6               	goto	u3881
  6974  0BA5  07BD               	addwf	___flmul@prod+1,f
  6975  0BA6                     u3881:
  6976  0BA6  0832               	movf	??___flmul+2,w
  6977  0BA7  1103               	clrz
  6978  0BA8  1803               	skipnc
  6979  0BA9  3E01               	addlw	1
  6980  0BAA  1903               	skipnz
  6981  0BAB  2BAD               	goto	u3882
  6982  0BAC  07BE               	addwf	___flmul@prod+2,f
  6983  0BAD                     u3882:
  6984  0BAD  0833               	movf	??___flmul+3,w
  6985  0BAE  1103               	clrz
  6986  0BAF  1803               	skipnc
  6987  0BB0  3E01               	addlw	1
  6988  0BB1  1903               	skipnz
  6989  0BB2  2BB4               	goto	u3883
  6990  0BB3  07BF               	addwf	___flmul@prod+3,f
  6991  0BB4                     u3883:
  6992  0BB4                     l2676:
  6993  0BB4  3008               	movlw	8
  6994  0BB5  00B0               	movwf	??___flmul
  6995  0BB6                     u3895:
  6996  0BB6  1003               	clrc
  6997  0BB7  0DB6               	rlf	___flmul@grs,f
  6998  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6999  0BB9  0DB8               	rlf	___flmul@grs+2,f
  7000  0BBA  0DB9               	rlf	___flmul@grs+3,f
  7001  0BBB  0BB0               	decfsz	??___flmul,f
  7002  0BBC  2BB6               	goto	u3895
  7003  0BBD                     l2678:
  7004  0BBD  083B               	movf	___flmul@bexp,w
  7005  0BBE  073A               	addwf	___flmul@aexp,w
  7006  0BBF  00B0               	movwf	??___flmul
  7007  0BC0  01B1               	clrf	??___flmul+1
  7008  0BC1  0DB1               	rlf	??___flmul+1,f
  7009  0BC2  0830               	movf	??___flmul,w
  7010  0BC3  3E82               	addlw	130
  7011  0BC4  00C0               	movwf	___flmul@temp
  7012  0BC5  0831               	movf	??___flmul+1,w
  7013  0BC6  1803               	skipnc
  7014  0BC7  3E01               	addlw	1
  7015  0BC8  3EFF               	addlw	255
  7016  0BC9  00C1               	movwf	___flmul@temp+1
  7017  0BCA  2BE8               	goto	l2690
  7018  0BCB                     l2680:
  7019  0BCB  3001               	movlw	1
  7020  0BCC  00B0               	movwf	??___flmul
  7021  0BCD                     u3905:
  7022  0BCD  1003               	clrc
  7023  0BCE  0DBC               	rlf	___flmul@prod,f
  7024  0BCF  0DBD               	rlf	___flmul@prod+1,f
  7025  0BD0  0DBE               	rlf	___flmul@prod+2,f
  7026  0BD1  0DBF               	rlf	___flmul@prod+3,f
  7027  0BD2  0BB0               	decfsz	??___flmul,f
  7028  0BD3  2BCD               	goto	u3905
  7029  0BD4                     l2682:
  7030  0BD4  1FB9               	btfss	___flmul@grs+3,7
  7031  0BD5  2BD7               	goto	u3911
  7032  0BD6  2BD8               	goto	u3910
  7033  0BD7                     u3911:
  7034  0BD7  2BD9               	goto	l2686
  7035  0BD8                     u3910:
  7036  0BD8                     l2684:
  7037  0BD8  143C               	bsf	___flmul@prod,0
  7038  0BD9                     l2686:
  7039  0BD9  3001               	movlw	1
  7040  0BDA  00B0               	movwf	??___flmul
  7041  0BDB                     u3925:
  7042  0BDB  1003               	clrc
  7043  0BDC  0DB6               	rlf	___flmul@grs,f
  7044  0BDD  0DB7               	rlf	___flmul@grs+1,f
  7045  0BDE  0DB8               	rlf	___flmul@grs+2,f
  7046  0BDF  0DB9               	rlf	___flmul@grs+3,f
  7047  0BE0  0BB0               	decfsz	??___flmul,f
  7048  0BE1  2BDB               	goto	u3925
  7049  0BE2                     l2688:
  7050  0BE2  30FF               	movlw	255
  7051  0BE3  07C0               	addwf	___flmul@temp,f
  7052  0BE4  1803               	skipnc
  7053  0BE5  0AC1               	incf	___flmul@temp+1,f
  7054  0BE6  30FF               	movlw	255
  7055  0BE7  07C1               	addwf	___flmul@temp+1,f
  7056  0BE8                     l2690:
  7057  0BE8  1FBE               	btfss	___flmul@prod+2,7
  7058  0BE9  2BEB               	goto	u3931
  7059  0BEA  2BEC               	goto	u3930
  7060  0BEB                     u3931:
  7061  0BEB  2BCB               	goto	l2680
  7062  0BEC                     u3930:
  7063  0BEC                     l2692:
  7064  0BEC  01BA               	clrf	___flmul@aexp
  7065  0BED                     l2694:
  7066  0BED  1FB9               	btfss	___flmul@grs+3,7
  7067  0BEE  2BF0               	goto	u3941
  7068  0BEF  2BF1               	goto	u3940
  7069  0BF0                     u3941:
  7070  0BF0  2C0D               	goto	l2702
  7071  0BF1                     u3940:
  7072  0BF1                     l2696:
  7073  0BF1  30FF               	movlw	255
  7074  0BF2  0536               	andwf	___flmul@grs,w
  7075  0BF3  00B0               	movwf	??___flmul
  7076  0BF4  30FF               	movlw	255
  7077  0BF5  0537               	andwf	___flmul@grs+1,w
  7078  0BF6  00B1               	movwf	??___flmul+1
  7079  0BF7  30FF               	movlw	255
  7080  0BF8  0538               	andwf	___flmul@grs+2,w
  7081  0BF9  00B2               	movwf	??___flmul+2
  7082  0BFA  307F               	movlw	127
  7083  0BFB  0539               	andwf	___flmul@grs+3,w
  7084  0BFC  00B3               	movwf	??___flmul+3
  7085  0BFD  0833               	movf	??___flmul+3,w
  7086  0BFE  0432               	iorwf	??___flmul+2,w
  7087  0BFF  0431               	iorwf	??___flmul+1,w
  7088  0C00  0430               	iorwf	??___flmul,w
  7089  0C01  1903               	skipnz
  7090  0C02  2C04               	goto	u3951
  7091  0C03  2C05               	goto	u3950
  7092  0C04                     u3951:
  7093  0C04  2C08               	goto	l772
  7094  0C05                     u3950:
  7095  0C05                     l2698:
  7096  0C05  01BA               	clrf	___flmul@aexp
  7097  0C06  0ABA               	incf	___flmul@aexp,f
  7098  0C07  2C0D               	goto	l2702
  7099  0C08                     l772:
  7100  0C08  1C3C               	btfss	___flmul@prod,0
  7101  0C09  2C0B               	goto	u3961
  7102  0C0A  2C0C               	goto	u3960
  7103  0C0B                     u3961:
  7104  0C0B  2C0D               	goto	l2702
  7105  0C0C                     u3960:
  7106  0C0C  2C05               	goto	l2698
  7107  0C0D                     l2702:
  7108  0C0D  083A               	movf	___flmul@aexp,w
  7109  0C0E  1903               	btfsc	3,2
  7110  0C0F  2C11               	goto	u3971
  7111  0C10  2C12               	goto	u3970
  7112  0C11                     u3971:
  7113  0C11  2C43               	goto	l2712
  7114  0C12                     u3970:
  7115  0C12                     l2704:
  7116  0C12  3001               	movlw	1
  7117  0C13  07BC               	addwf	___flmul@prod,f
  7118  0C14  3000               	movlw	0
  7119  0C15  1803               	skipnc
  7120  0C16  3001               	movlw	1
  7121  0C17  07BD               	addwf	___flmul@prod+1,f
  7122  0C18  3000               	movlw	0
  7123  0C19  1803               	skipnc
  7124  0C1A  3001               	movlw	1
  7125  0C1B  07BE               	addwf	___flmul@prod+2,f
  7126  0C1C  3000               	movlw	0
  7127  0C1D  1803               	skipnc
  7128  0C1E  3001               	movlw	1
  7129  0C1F  07BF               	addwf	___flmul@prod+3,f
  7130  0C20                     l2706:
  7131  0C20  1C3F               	btfss	___flmul@prod+3,0
  7132  0C21  2C23               	goto	u3981
  7133  0C22  2C24               	goto	u3980
  7134  0C23                     u3981:
  7135  0C23  2C43               	goto	l2712
  7136  0C24                     u3980:
  7137  0C24                     l2708:
  7138  0C24  083C               	movf	___flmul@prod,w
  7139  0C25  00B0               	movwf	??___flmul
  7140  0C26  083D               	movf	___flmul@prod+1,w
  7141  0C27  00B1               	movwf	??___flmul+1
  7142  0C28  083E               	movf	___flmul@prod+2,w
  7143  0C29  00B2               	movwf	??___flmul+2
  7144  0C2A  083F               	movf	___flmul@prod+3,w
  7145  0C2B  00B3               	movwf	??___flmul+3
  7146  0C2C  3001               	movlw	1
  7147  0C2D  00B4               	movwf	??___flmul+4
  7148  0C2E                     u3995:
  7149  0C2E  0D33               	rlf	??___flmul+3,w
  7150  0C2F  0CB3               	rrf	??___flmul+3,f
  7151  0C30  0CB2               	rrf	??___flmul+2,f
  7152  0C31  0CB1               	rrf	??___flmul+1,f
  7153  0C32  0CB0               	rrf	??___flmul,f
  7154  0C33                     u3990:
  7155  0C33  0BB4               	decfsz	??___flmul+4,f
  7156  0C34  2C2E               	goto	u3995
  7157  0C35  0833               	movf	??___flmul+3,w
  7158  0C36  00BF               	movwf	___flmul@prod+3
  7159  0C37  0832               	movf	??___flmul+2,w
  7160  0C38  00BE               	movwf	___flmul@prod+2
  7161  0C39  0831               	movf	??___flmul+1,w
  7162  0C3A  00BD               	movwf	___flmul@prod+1
  7163  0C3B  0830               	movf	??___flmul,w
  7164  0C3C  00BC               	movwf	___flmul@prod
  7165  0C3D                     l2710:
  7166  0C3D  3001               	movlw	1
  7167  0C3E  07C0               	addwf	___flmul@temp,f
  7168  0C3F  1803               	skipnc
  7169  0C40  0AC1               	incf	___flmul@temp+1,f
  7170  0C41  3000               	movlw	0
  7171  0C42  07C1               	addwf	___flmul@temp+1,f
  7172  0C43                     l2712:
  7173  0C43  0841               	movf	___flmul@temp+1,w
  7174  0C44  3A80               	xorlw	128
  7175  0C45  00FF               	movwf	btemp+1
  7176  0C46  3080               	movlw	128
  7177  0C47  027F               	subwf	btemp+1,w
  7178  0C48  1D03               	skipz
  7179  0C49  2C4C               	goto	u4005
  7180  0C4A  30FF               	movlw	255
  7181  0C4B  0240               	subwf	___flmul@temp,w
  7182  0C4C                     u4005:
  7183  0C4C  1C03               	skipc
  7184  0C4D  2C4F               	goto	u4001
  7185  0C4E  2C50               	goto	u4000
  7186  0C4F                     u4001:
  7187  0C4F  2C5B               	goto	l2716
  7188  0C50                     u4000:
  7189  0C50                     l2714:
  7190  0C50  307F               	movlw	127
  7191  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  7192  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  7193  0C53  00BF               	movwf	___flmul@prod+3
  7194  0C54  3080               	movlw	128
  7195  0C55  00BE               	movwf	___flmul@prod+2
  7196  0C56  3000               	movlw	0
  7197  0C57  00BD               	movwf	___flmul@prod+1
  7198  0C58  3000               	movlw	0
  7199  0C59  00BC               	movwf	___flmul@prod
  7200  0C5A  2C90               	goto	l778
  7201  0C5B                     l2716:
  7202  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  7203  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  7204  0C5D  0841               	movf	___flmul@temp+1,w
  7205  0C5E  3A80               	xorlw	128
  7206  0C5F  00FF               	movwf	btemp+1
  7207  0C60  3080               	movlw	128
  7208  0C61  027F               	subwf	btemp+1,w
  7209  0C62  1D03               	skipz
  7210  0C63  2C66               	goto	u4015
  7211  0C64  3001               	movlw	1
  7212  0C65  0240               	subwf	___flmul@temp,w
  7213  0C66                     u4015:
  7214  0C66  1803               	skipnc
  7215  0C67  2C69               	goto	u4011
  7216  0C68  2C6A               	goto	u4010
  7217  0C69                     u4011:
  7218  0C69  2C76               	goto	l2722
  7219  0C6A                     u4010:
  7220  0C6A                     l2718:
  7221  0C6A  3000               	movlw	0
  7222  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  7223  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  7224  0C6D  00BF               	movwf	___flmul@prod+3
  7225  0C6E  3000               	movlw	0
  7226  0C6F  00BE               	movwf	___flmul@prod+2
  7227  0C70  3000               	movlw	0
  7228  0C71  00BD               	movwf	___flmul@prod+1
  7229  0C72  3000               	movlw	0
  7230  0C73  00BC               	movwf	___flmul@prod
  7231  0C74                     l2720:
  7232  0C74  01B5               	clrf	___flmul@sign
  7233  0C75  2C90               	goto	l778
  7234  0C76                     l2722:
  7235  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  7236  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  7237  0C78  0840               	movf	___flmul@temp,w
  7238  0C79  00B0               	movwf	??___flmul
  7239  0C7A  0830               	movf	??___flmul,w
  7240  0C7B  00BB               	movwf	___flmul@bexp
  7241  0C7C  30FF               	movlw	255
  7242  0C7D  05BC               	andwf	___flmul@prod,f
  7243  0C7E  30FF               	movlw	255
  7244  0C7F  05BD               	andwf	___flmul@prod+1,f
  7245  0C80  307F               	movlw	127
  7246  0C81  05BE               	andwf	___flmul@prod+2,f
  7247  0C82  3000               	movlw	0
  7248  0C83  05BF               	andwf	___flmul@prod+3,f
  7249  0C84                     l2724:
  7250  0C84  1C3B               	btfss	___flmul@bexp,0
  7251  0C85  2C87               	goto	u4021
  7252  0C86  2C88               	goto	u4020
  7253  0C87                     u4021:
  7254  0C87  2C89               	goto	l2728
  7255  0C88                     u4020:
  7256  0C88                     l2726:
  7257  0C88  17BE               	bsf	___flmul@prod+2,7
  7258  0C89                     l2728:
  7259  0C89  083B               	movf	___flmul@bexp,w
  7260  0C8A  00B0               	movwf	??___flmul
  7261  0C8B  1003               	clrc
  7262  0C8C  0C30               	rrf	??___flmul,w
  7263  0C8D  00B1               	movwf	??___flmul+1
  7264  0C8E  0831               	movf	??___flmul+1,w
  7265  0C8F  00BF               	movwf	___flmul@prod+3
  7266  0C90                     l778:
  7267  0C90  0835               	movf	___flmul@sign,w
  7268  0C91  00B0               	movwf	??___flmul
  7269  0C92  0830               	movf	??___flmul,w
  7270  0C93  04BF               	iorwf	___flmul@prod+3,f
  7271  0C94                     l2730:
  7272  0C94  083F               	movf	___flmul@prod+3,w
  7273  0C95  00AB               	movwf	?___flmul+3
  7274  0C96  083E               	movf	___flmul@prod+2,w
  7275  0C97  00AA               	movwf	?___flmul+2
  7276  0C98  083D               	movf	___flmul@prod+1,w
  7277  0C99  00A9               	movwf	?___flmul+1
  7278  0C9A  083C               	movf	___flmul@prod,w
  7279  0C9B  00A8               	movwf	?___flmul
  7280  0C9C                     l766:
  7281  0C9C  0008               	return
  7282  0C9D                     __end_of___flmul:
  7283                           
  7284                           	psect	text10
  7285  1A0E                     __ptext10:	
  7286 ;; *************** function __Umul8_16 *****************
  7287 ;; Defined at:
  7288 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  multiplier      1    wreg     unsigned char 
  7291 ;;  multiplicand    1    3[COMMON] unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  multiplier      1    4[BANK0 ] unsigned char 
  7294 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  7295 ;;  product         2    0[BANK0 ] unsigned int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  2    3[COMMON] unsigned int 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7305 ;;      Params:         2       0       0       0       0
  7306 ;;      Locals:         0       5       0       0       0
  7307 ;;      Temps:          2       0       0       0       0
  7308 ;;      Totals:         4       5       0       0       0
  7309 ;;Total ram usage:        9 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 1
  7312 ;; This function calls:
  7313 ;;		Nothing
  7314 ;; This function is called by:
  7315 ;;		___flmul
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           
  7320                           ;psect for function __Umul8_16
  7321  1A0E                     __Umul8_16:
  7322                           
  7323                           ;incstack = 0
  7324                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7325                           ;__Umul8_16@multiplier stored from wreg
  7326  1A0E  1283               	bcf	3,5	;RP0=0, select bank0
  7327  1A0F  1303               	bcf	3,6	;RP1=0, select bank0
  7328  1A10  00A4               	movwf	__Umul8_16@multiplier
  7329  1A11                     l2254:
  7330  1A11  01A0               	clrf	__Umul8_16@product
  7331  1A12  01A1               	clrf	__Umul8_16@product+1
  7332  1A13                     l2256:
  7333  1A13  0873               	movf	__Umul8_16@multiplicand,w
  7334  1A14  00F5               	movwf	??__Umul8_16
  7335  1A15  01F6               	clrf	??__Umul8_16+1
  7336  1A16  0875               	movf	??__Umul8_16,w
  7337  1A17  00A2               	movwf	__Umul8_16@word_mpld
  7338  1A18  0876               	movf	??__Umul8_16+1,w
  7339  1A19  00A3               	movwf	__Umul8_16@word_mpld+1
  7340  1A1A                     l2258:
  7341  1A1A  1C24               	btfss	__Umul8_16@multiplier,0
  7342  1A1B  2A1D               	goto	u2851
  7343  1A1C  2A1E               	goto	u2850
  7344  1A1D                     u2851:
  7345  1A1D  2A24               	goto	l785
  7346  1A1E                     u2850:
  7347  1A1E                     l2260:
  7348  1A1E  0822               	movf	__Umul8_16@word_mpld,w
  7349  1A1F  07A0               	addwf	__Umul8_16@product,f
  7350  1A20  1803               	skipnc
  7351  1A21  0AA1               	incf	__Umul8_16@product+1,f
  7352  1A22  0823               	movf	__Umul8_16@word_mpld+1,w
  7353  1A23  07A1               	addwf	__Umul8_16@product+1,f
  7354  1A24                     l785:
  7355  1A24  3001               	movlw	1
  7356  1A25                     u2865:
  7357  1A25  1003               	clrc
  7358  1A26  0DA2               	rlf	__Umul8_16@word_mpld,f
  7359  1A27  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  7360  1A28  3EFF               	addlw	-1
  7361  1A29  1D03               	skipz
  7362  1A2A  2A25               	goto	u2865
  7363  1A2B  1003               	clrc
  7364  1A2C  0CA4               	rrf	__Umul8_16@multiplier,f
  7365  1A2D                     l2262:
  7366  1A2D  0824               	movf	__Umul8_16@multiplier,w
  7367  1A2E  1D03               	btfss	3,2
  7368  1A2F  2A31               	goto	u2871
  7369  1A30  2A32               	goto	u2870
  7370  1A31                     u2871:
  7371  1A31  2A1A               	goto	l2258
  7372  1A32                     u2870:
  7373  1A32                     l2264:
  7374  1A32  0821               	movf	__Umul8_16@product+1,w
  7375  1A33  00F4               	movwf	?__Umul8_16+1
  7376  1A34  0820               	movf	__Umul8_16@product,w
  7377  1A35  00F3               	movwf	?__Umul8_16
  7378  1A36                     l787:
  7379  1A36  0008               	return
  7380  1A37                     __end_of__Umul8_16:
  7381                           
  7382                           	psect	text11
  7383  1F43                     __ptext11:	
  7384 ;; *************** function __tdiv_to_l_ *****************
  7385 ;; Defined at:
  7386 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;  f1              4    3[COMMON] float 
  7389 ;;  f2              4    7[COMMON] float 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;  quot            4    4[BANK0 ] unsigned long 
  7392 ;;  exp1            1    9[BANK0 ] unsigned char 
  7393 ;;  cntr            1    8[BANK0 ] unsigned char 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  4    3[COMMON] unsigned long 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7403 ;;      Params:         8       0       0       0       0
  7404 ;;      Locals:         0       6       0       0       0
  7405 ;;      Temps:          0       4       0       0       0
  7406 ;;      Totals:         8      10       0       0       0
  7407 ;;Total ram usage:       18 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 1
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_sprintf
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function __tdiv_to_l_
  7419  1F43                     __tdiv_to_l_:
  7420  1F43                     l2830:	
  7421                           ;incstack = 0
  7422                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7423                           
  7424  1F43  0873               	movf	__tdiv_to_l_@f1,w
  7425  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7426  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7427  1F46  00A0               	movwf	??__tdiv_to_l_
  7428  1F47  0874               	movf	__tdiv_to_l_@f1+1,w
  7429  1F48  00A1               	movwf	??__tdiv_to_l_+1
  7430  1F49  0875               	movf	__tdiv_to_l_@f1+2,w
  7431  1F4A  00A2               	movwf	??__tdiv_to_l_+2
  7432  1F4B  1003               	clrc
  7433  1F4C  0D21               	rlf	??__tdiv_to_l_+1,w
  7434  1F4D  0D22               	rlf	??__tdiv_to_l_+2,w
  7435  1F4E  00A3               	movwf	??__tdiv_to_l_+3
  7436  1F4F  0823               	movf	??__tdiv_to_l_+3,w
  7437  1F50  00A9               	movwf	__tdiv_to_l_@exp1
  7438  1F51  0829               	movf	__tdiv_to_l_@exp1,w
  7439  1F52  1D03               	btfss	3,2
  7440  1F53  2F55               	goto	u4311
  7441  1F54  2F56               	goto	u4310
  7442  1F55                     u4311:
  7443  1F55  2F5F               	goto	l2836
  7444  1F56                     u4310:
  7445  1F56                     l2832:
  7446  1F56  3000               	movlw	0
  7447  1F57  00F6               	movwf	?__tdiv_to_l_+3
  7448  1F58  3000               	movlw	0
  7449  1F59  00F5               	movwf	?__tdiv_to_l_+2
  7450  1F5A  3000               	movlw	0
  7451  1F5B  00F4               	movwf	?__tdiv_to_l_+1
  7452  1F5C  3000               	movlw	0
  7453  1F5D  00F3               	movwf	?__tdiv_to_l_
  7454  1F5E  2FFF               	goto	l560
  7455  1F5F                     l2836:
  7456  1F5F  0877               	movf	__tdiv_to_l_@f2,w
  7457  1F60  00A0               	movwf	??__tdiv_to_l_
  7458  1F61  0878               	movf	__tdiv_to_l_@f2+1,w
  7459  1F62  00A1               	movwf	??__tdiv_to_l_+1
  7460  1F63  0879               	movf	__tdiv_to_l_@f2+2,w
  7461  1F64  00A2               	movwf	??__tdiv_to_l_+2
  7462  1F65  1003               	clrc
  7463  1F66  0D21               	rlf	??__tdiv_to_l_+1,w
  7464  1F67  0D22               	rlf	??__tdiv_to_l_+2,w
  7465  1F68  00A3               	movwf	??__tdiv_to_l_+3
  7466  1F69  0823               	movf	??__tdiv_to_l_+3,w
  7467  1F6A  00A8               	movwf	__tdiv_to_l_@cntr
  7468  1F6B  0828               	movf	__tdiv_to_l_@cntr,w
  7469  1F6C  1D03               	btfss	3,2
  7470  1F6D  2F6F               	goto	u4321
  7471  1F6E  2F70               	goto	u4320
  7472  1F6F                     u4321:
  7473  1F6F  2F71               	goto	l561
  7474  1F70                     u4320:
  7475  1F70  2F56               	goto	l2832
  7476  1F71                     l561:
  7477  1F71  17F4               	bsf	__tdiv_to_l_@f1+1,7
  7478  1F72                     l2842:
  7479  1F72  30FF               	movlw	255
  7480  1F73  05F3               	andwf	__tdiv_to_l_@f1,f
  7481  1F74  30FF               	movlw	255
  7482  1F75  05F4               	andwf	__tdiv_to_l_@f1+1,f
  7483  1F76  3000               	movlw	0
  7484  1F77  05F5               	andwf	__tdiv_to_l_@f1+2,f
  7485  1F78                     l2844:
  7486  1F78  17F8               	bsf	__tdiv_to_l_@f2+1,7
  7487  1F79  30FF               	movlw	255
  7488  1F7A  05F7               	andwf	__tdiv_to_l_@f2,f
  7489  1F7B  30FF               	movlw	255
  7490  1F7C  05F8               	andwf	__tdiv_to_l_@f2+1,f
  7491  1F7D  3000               	movlw	0
  7492  1F7E  05F9               	andwf	__tdiv_to_l_@f2+2,f
  7493  1F7F  3000               	movlw	0
  7494  1F80  00A7               	movwf	__tdiv_to_l_@quot+3
  7495  1F81  3000               	movlw	0
  7496  1F82  00A6               	movwf	__tdiv_to_l_@quot+2
  7497  1F83  3000               	movlw	0
  7498  1F84  00A5               	movwf	__tdiv_to_l_@quot+1
  7499  1F85  3000               	movlw	0
  7500  1F86  00A4               	movwf	__tdiv_to_l_@quot
  7501  1F87                     l2846:
  7502  1F87  307F               	movlw	127
  7503  1F88  02A9               	subwf	__tdiv_to_l_@exp1,f
  7504  1F89                     l2848:
  7505  1F89  3098               	movlw	152
  7506  1F8A  0728               	addwf	__tdiv_to_l_@cntr,w
  7507  1F8B  00A0               	movwf	??__tdiv_to_l_
  7508  1F8C  0820               	movf	??__tdiv_to_l_,w
  7509  1F8D  02A9               	subwf	__tdiv_to_l_@exp1,f
  7510  1F8E  3018               	movlw	24
  7511  1F8F  00A0               	movwf	??__tdiv_to_l_
  7512  1F90  0820               	movf	??__tdiv_to_l_,w
  7513  1F91  00A8               	movwf	__tdiv_to_l_@cntr
  7514  1F92                     l2850:
  7515  1F92  3001               	movlw	1
  7516  1F93  00A0               	movwf	??__tdiv_to_l_
  7517  1F94                     u4335:
  7518  1F94  1003               	clrc
  7519  1F95  0DA4               	rlf	__tdiv_to_l_@quot,f
  7520  1F96  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7521  1F97  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7522  1F98  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7523  1F99  0BA0               	decfsz	??__tdiv_to_l_,f
  7524  1F9A  2F94               	goto	u4335
  7525  1F9B                     l2852:
  7526  1F9B  0879               	movf	__tdiv_to_l_@f2+2,w
  7527  1F9C  0275               	subwf	__tdiv_to_l_@f1+2,w
  7528  1F9D  1D03               	skipz
  7529  1F9E  2FA5               	goto	u4345
  7530  1F9F  0878               	movf	__tdiv_to_l_@f2+1,w
  7531  1FA0  0274               	subwf	__tdiv_to_l_@f1+1,w
  7532  1FA1  1D03               	skipz
  7533  1FA2  2FA5               	goto	u4345
  7534  1FA3  0877               	movf	__tdiv_to_l_@f2,w
  7535  1FA4  0273               	subwf	__tdiv_to_l_@f1,w
  7536  1FA5                     u4345:
  7537  1FA5  1C03               	skipc
  7538  1FA6  2FA8               	goto	u4341
  7539  1FA7  2FA9               	goto	u4340
  7540  1FA8                     u4341:
  7541  1FA8  2FB4               	goto	l2858
  7542  1FA9                     u4340:
  7543  1FA9                     l2854:
  7544  1FA9  0877               	movf	__tdiv_to_l_@f2,w
  7545  1FAA  02F3               	subwf	__tdiv_to_l_@f1,f
  7546  1FAB  0878               	movf	__tdiv_to_l_@f2+1,w
  7547  1FAC  1C03               	skipc
  7548  1FAD  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  7549  1FAE  02F4               	subwf	__tdiv_to_l_@f1+1,f
  7550  1FAF  0879               	movf	__tdiv_to_l_@f2+2,w
  7551  1FB0  1C03               	skipc
  7552  1FB1  0A79               	incf	__tdiv_to_l_@f2+2,w
  7553  1FB2  02F5               	subwf	__tdiv_to_l_@f1+2,f
  7554  1FB3                     l2856:
  7555  1FB3  1424               	bsf	__tdiv_to_l_@quot,0
  7556  1FB4                     l2858:
  7557  1FB4  3001               	movlw	1
  7558  1FB5                     u4355:
  7559  1FB5  1003               	clrc
  7560  1FB6  0DF3               	rlf	__tdiv_to_l_@f1,f
  7561  1FB7  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  7562  1FB8  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  7563  1FB9  3EFF               	addlw	-1
  7564  1FBA  1D03               	skipz
  7565  1FBB  2FB5               	goto	u4355
  7566  1FBC                     l2860:
  7567  1FBC  3001               	movlw	1
  7568  1FBD  02A8               	subwf	__tdiv_to_l_@cntr,f
  7569  1FBE  1D03               	btfss	3,2
  7570  1FBF  2FC1               	goto	u4361
  7571  1FC0  2FC2               	goto	u4360
  7572  1FC1                     u4361:
  7573  1FC1  2F92               	goto	l2850
  7574  1FC2                     u4360:
  7575  1FC2                     l564:
  7576  1FC2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7577  1FC3  2FC5               	goto	u4371
  7578  1FC4  2FC6               	goto	u4370
  7579  1FC5                     u4371:
  7580  1FC5  2FE0               	goto	l2870
  7581  1FC6                     u4370:
  7582  1FC6                     l2862:
  7583  1FC6  0829               	movf	__tdiv_to_l_@exp1,w
  7584  1FC7  3A80               	xorlw	128
  7585  1FC8  3E97               	addlw	151
  7586  1FC9  1803               	skipnc
  7587  1FCA  2FCC               	goto	u4381
  7588  1FCB  2FCD               	goto	u4380
  7589  1FCC                     u4381:
  7590  1FCC  2FCE               	goto	l2868
  7591  1FCD                     u4380:
  7592  1FCD  2F56               	goto	l2832
  7593  1FCE                     l2868:
  7594  1FCE  3001               	movlw	1
  7595  1FCF                     u4395:
  7596  1FCF  1003               	clrc
  7597  1FD0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7598  1FD1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7599  1FD2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7600  1FD3  0CA4               	rrf	__tdiv_to_l_@quot,f
  7601  1FD4  3EFF               	addlw	-1
  7602  1FD5  1D03               	skipz
  7603  1FD6  2FCF               	goto	u4395
  7604  1FD7  3001               	movlw	1
  7605  1FD8  00A0               	movwf	??__tdiv_to_l_
  7606  1FD9  0820               	movf	??__tdiv_to_l_,w
  7607  1FDA  07A9               	addwf	__tdiv_to_l_@exp1,f
  7608  1FDB  1D03               	btfss	3,2
  7609  1FDC  2FDE               	goto	u4401
  7610  1FDD  2FDF               	goto	u4400
  7611  1FDE                     u4401:
  7612  1FDE  2FCE               	goto	l2868
  7613  1FDF                     u4400:
  7614  1FDF  2FF7               	goto	l2878
  7615  1FE0                     l2870:
  7616  1FE0  3018               	movlw	24
  7617  1FE1  0229               	subwf	__tdiv_to_l_@exp1,w
  7618  1FE2  1C03               	skipc
  7619  1FE3  2FE5               	goto	u4411
  7620  1FE4  2FE6               	goto	u4410
  7621  1FE5                     u4411:
  7622  1FE5  2FF2               	goto	l571
  7623  1FE6                     u4410:
  7624  1FE6  2F56               	goto	l2832
  7625  1FE7                     l2876:
  7626  1FE7  3001               	movlw	1
  7627  1FE8  00A0               	movwf	??__tdiv_to_l_
  7628  1FE9                     u4425:
  7629  1FE9  1003               	clrc
  7630  1FEA  0DA4               	rlf	__tdiv_to_l_@quot,f
  7631  1FEB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7632  1FEC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7633  1FED  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7634  1FEE  0BA0               	decfsz	??__tdiv_to_l_,f
  7635  1FEF  2FE9               	goto	u4425
  7636  1FF0  3001               	movlw	1
  7637  1FF1  02A9               	subwf	__tdiv_to_l_@exp1,f
  7638  1FF2                     l571:
  7639  1FF2  0829               	movf	__tdiv_to_l_@exp1,w
  7640  1FF3  1D03               	btfss	3,2
  7641  1FF4  2FF6               	goto	u4431
  7642  1FF5  2FF7               	goto	u4430
  7643  1FF6                     u4431:
  7644  1FF6  2FE7               	goto	l2876
  7645  1FF7                     u4430:
  7646  1FF7                     l2878:
  7647  1FF7  0827               	movf	__tdiv_to_l_@quot+3,w
  7648  1FF8  00F6               	movwf	?__tdiv_to_l_+3
  7649  1FF9  0826               	movf	__tdiv_to_l_@quot+2,w
  7650  1FFA  00F5               	movwf	?__tdiv_to_l_+2
  7651  1FFB  0825               	movf	__tdiv_to_l_@quot+1,w
  7652  1FFC  00F4               	movwf	?__tdiv_to_l_+1
  7653  1FFD  0824               	movf	__tdiv_to_l_@quot,w
  7654  1FFE  00F3               	movwf	?__tdiv_to_l_
  7655  1FFF                     l560:
  7656  1FFF  0008               	return
  7657  2000                     __end_of__tdiv_to_l_:
  7658                           
  7659                           	psect	text12
  7660  1006                     __ptext12:	
  7661 ;; *************** function __div_to_l_ *****************
  7662 ;; Defined at:
  7663 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;  f1              4    3[COMMON] unsigned long 
  7666 ;;  f2              4    7[COMMON] unsigned long 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  quot            4    1[BANK0 ] unsigned long 
  7669 ;;  exp1            1    6[BANK0 ] unsigned char 
  7670 ;;  cntr            1    5[BANK0 ] unsigned char 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  4    3[COMMON] unsigned long 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7680 ;;      Params:         8       0       0       0       0
  7681 ;;      Locals:         0       6       0       0       0
  7682 ;;      Temps:          0       1       0       0       0
  7683 ;;      Totals:         8       7       0       0       0
  7684 ;;Total ram usage:       15 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 1
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_sprintf
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function __div_to_l_
  7696  1006                     __div_to_l_:
  7697  1006                     l2882:	
  7698                           ;incstack = 0
  7699                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7700                           
  7701  1006  1003               	clrc
  7702  1007  0D75               	rlf	__div_to_l_@f1+2,w
  7703  1008  0D76               	rlf	__div_to_l_@f1+3,w
  7704  1009  1283               	bcf	3,5	;RP0=0, select bank0
  7705  100A  1303               	bcf	3,6	;RP1=0, select bank0
  7706  100B  00A0               	movwf	??__div_to_l_
  7707  100C  0820               	movf	??__div_to_l_,w
  7708  100D  00A6               	movwf	__div_to_l_@exp1
  7709  100E  0826               	movf	__div_to_l_@exp1,w
  7710  100F  1D03               	btfss	3,2
  7711  1010  2812               	goto	u4441
  7712  1011  2813               	goto	u4440
  7713  1012                     u4441:
  7714  1012  281C               	goto	l2888
  7715  1013                     u4440:
  7716  1013                     l2884:
  7717  1013  3000               	movlw	0
  7718  1014  00F6               	movwf	?__div_to_l_+3
  7719  1015  3000               	movlw	0
  7720  1016  00F5               	movwf	?__div_to_l_+2
  7721  1017  3000               	movlw	0
  7722  1018  00F4               	movwf	?__div_to_l_+1
  7723  1019  3000               	movlw	0
  7724  101A  00F3               	movwf	?__div_to_l_
  7725  101B  28C3               	goto	l513
  7726  101C                     l2888:
  7727  101C  1003               	clrc
  7728  101D  0D79               	rlf	__div_to_l_@f2+2,w
  7729  101E  0D7A               	rlf	__div_to_l_@f2+3,w
  7730  101F  00A0               	movwf	??__div_to_l_
  7731  1020  0820               	movf	??__div_to_l_,w
  7732  1021  00A5               	movwf	__div_to_l_@cntr
  7733  1022  0825               	movf	__div_to_l_@cntr,w
  7734  1023  1D03               	btfss	3,2
  7735  1024  2826               	goto	u4451
  7736  1025  2827               	goto	u4450
  7737  1026                     u4451:
  7738  1026  2828               	goto	l514
  7739  1027                     u4450:
  7740  1027  2813               	goto	l2884
  7741  1028                     l514:
  7742  1028  17F5               	bsf	__div_to_l_@f1+2,7
  7743  1029                     l2894:
  7744  1029  30FF               	movlw	255
  7745  102A  05F3               	andwf	__div_to_l_@f1,f
  7746  102B  30FF               	movlw	255
  7747  102C  05F4               	andwf	__div_to_l_@f1+1,f
  7748  102D  30FF               	movlw	255
  7749  102E  05F5               	andwf	__div_to_l_@f1+2,f
  7750  102F  3000               	movlw	0
  7751  1030  05F6               	andwf	__div_to_l_@f1+3,f
  7752  1031                     l2896:
  7753  1031  17F9               	bsf	__div_to_l_@f2+2,7
  7754  1032  30FF               	movlw	255
  7755  1033  05F7               	andwf	__div_to_l_@f2,f
  7756  1034  30FF               	movlw	255
  7757  1035  05F8               	andwf	__div_to_l_@f2+1,f
  7758  1036  30FF               	movlw	255
  7759  1037  05F9               	andwf	__div_to_l_@f2+2,f
  7760  1038  3000               	movlw	0
  7761  1039  05FA               	andwf	__div_to_l_@f2+3,f
  7762  103A  3000               	movlw	0
  7763  103B  00A4               	movwf	__div_to_l_@quot+3
  7764  103C  3000               	movlw	0
  7765  103D  00A3               	movwf	__div_to_l_@quot+2
  7766  103E  3000               	movlw	0
  7767  103F  00A2               	movwf	__div_to_l_@quot+1
  7768  1040  3000               	movlw	0
  7769  1041  00A1               	movwf	__div_to_l_@quot
  7770  1042                     l2898:
  7771  1042  307F               	movlw	127
  7772  1043  02A6               	subwf	__div_to_l_@exp1,f
  7773  1044                     l2900:
  7774  1044  30A0               	movlw	160
  7775  1045  0725               	addwf	__div_to_l_@cntr,w
  7776  1046  00A0               	movwf	??__div_to_l_
  7777  1047  0820               	movf	??__div_to_l_,w
  7778  1048  02A6               	subwf	__div_to_l_@exp1,f
  7779  1049  3020               	movlw	32
  7780  104A  00A0               	movwf	??__div_to_l_
  7781  104B  0820               	movf	??__div_to_l_,w
  7782  104C  00A5               	movwf	__div_to_l_@cntr
  7783  104D                     l2902:
  7784  104D  3001               	movlw	1
  7785  104E  00A0               	movwf	??__div_to_l_
  7786  104F                     u4465:
  7787  104F  1003               	clrc
  7788  1050  0DA1               	rlf	__div_to_l_@quot,f
  7789  1051  0DA2               	rlf	__div_to_l_@quot+1,f
  7790  1052  0DA3               	rlf	__div_to_l_@quot+2,f
  7791  1053  0DA4               	rlf	__div_to_l_@quot+3,f
  7792  1054  0BA0               	decfsz	??__div_to_l_,f
  7793  1055  284F               	goto	u4465
  7794  1056                     l2904:
  7795  1056  087A               	movf	__div_to_l_@f2+3,w
  7796  1057  0276               	subwf	__div_to_l_@f1+3,w
  7797  1058  1D03               	skipz
  7798  1059  2864               	goto	u4475
  7799  105A  0879               	movf	__div_to_l_@f2+2,w
  7800  105B  0275               	subwf	__div_to_l_@f1+2,w
  7801  105C  1D03               	skipz
  7802  105D  2864               	goto	u4475
  7803  105E  0878               	movf	__div_to_l_@f2+1,w
  7804  105F  0274               	subwf	__div_to_l_@f1+1,w
  7805  1060  1D03               	skipz
  7806  1061  2864               	goto	u4475
  7807  1062  0877               	movf	__div_to_l_@f2,w
  7808  1063  0273               	subwf	__div_to_l_@f1,w
  7809  1064                     u4475:
  7810  1064  1C03               	skipc
  7811  1065  2867               	goto	u4471
  7812  1066  2868               	goto	u4470
  7813  1067                     u4471:
  7814  1067  2877               	goto	l2910
  7815  1068                     u4470:
  7816  1068                     l2906:
  7817  1068  0877               	movf	__div_to_l_@f2,w
  7818  1069  02F3               	subwf	__div_to_l_@f1,f
  7819  106A  0878               	movf	__div_to_l_@f2+1,w
  7820  106B  1C03               	skipc
  7821  106C  0F78               	incfsz	__div_to_l_@f2+1,w
  7822  106D  02F4               	subwf	__div_to_l_@f1+1,f
  7823  106E  0879               	movf	__div_to_l_@f2+2,w
  7824  106F  1C03               	skipc
  7825  1070  0F79               	incfsz	__div_to_l_@f2+2,w
  7826  1071  02F5               	subwf	__div_to_l_@f1+2,f
  7827  1072  087A               	movf	__div_to_l_@f2+3,w
  7828  1073  1C03               	skipc
  7829  1074  0F7A               	incfsz	__div_to_l_@f2+3,w
  7830  1075  02F6               	subwf	__div_to_l_@f1+3,f
  7831  1076                     l2908:
  7832  1076  1421               	bsf	__div_to_l_@quot,0
  7833  1077                     l2910:
  7834  1077  3001               	movlw	1
  7835  1078  00A0               	movwf	??__div_to_l_
  7836  1079                     u4485:
  7837  1079  1003               	clrc
  7838  107A  0DF3               	rlf	__div_to_l_@f1,f
  7839  107B  0DF4               	rlf	__div_to_l_@f1+1,f
  7840  107C  0DF5               	rlf	__div_to_l_@f1+2,f
  7841  107D  0DF6               	rlf	__div_to_l_@f1+3,f
  7842  107E  0BA0               	decfsz	??__div_to_l_,f
  7843  107F  2879               	goto	u4485
  7844  1080                     l2912:
  7845  1080  3001               	movlw	1
  7846  1081  02A5               	subwf	__div_to_l_@cntr,f
  7847  1082  1D03               	btfss	3,2
  7848  1083  2885               	goto	u4491
  7849  1084  2886               	goto	u4490
  7850  1085                     u4491:
  7851  1085  284D               	goto	l2902
  7852  1086                     u4490:
  7853  1086                     l517:
  7854  1086  1FA6               	btfss	__div_to_l_@exp1,7
  7855  1087  2889               	goto	u4501
  7856  1088  288A               	goto	u4500
  7857  1089                     u4501:
  7858  1089  28A4               	goto	l2922
  7859  108A                     u4500:
  7860  108A                     l2914:
  7861  108A  0826               	movf	__div_to_l_@exp1,w
  7862  108B  3A80               	xorlw	128
  7863  108C  3E9F               	addlw	159
  7864  108D  1803               	skipnc
  7865  108E  2890               	goto	u4511
  7866  108F  2891               	goto	u4510
  7867  1090                     u4511:
  7868  1090  2892               	goto	l2920
  7869  1091                     u4510:
  7870  1091  2813               	goto	l2884
  7871  1092                     l2920:
  7872  1092  3001               	movlw	1
  7873  1093                     u4525:
  7874  1093  1003               	clrc
  7875  1094  0CA4               	rrf	__div_to_l_@quot+3,f
  7876  1095  0CA3               	rrf	__div_to_l_@quot+2,f
  7877  1096  0CA2               	rrf	__div_to_l_@quot+1,f
  7878  1097  0CA1               	rrf	__div_to_l_@quot,f
  7879  1098  3EFF               	addlw	-1
  7880  1099  1D03               	skipz
  7881  109A  2893               	goto	u4525
  7882  109B  3001               	movlw	1
  7883  109C  00A0               	movwf	??__div_to_l_
  7884  109D  0820               	movf	??__div_to_l_,w
  7885  109E  07A6               	addwf	__div_to_l_@exp1,f
  7886  109F  1D03               	btfss	3,2
  7887  10A0  28A2               	goto	u4531
  7888  10A1  28A3               	goto	u4530
  7889  10A2                     u4531:
  7890  10A2  2892               	goto	l2920
  7891  10A3                     u4530:
  7892  10A3  28BB               	goto	l2930
  7893  10A4                     l2922:
  7894  10A4  3020               	movlw	32
  7895  10A5  0226               	subwf	__div_to_l_@exp1,w
  7896  10A6  1C03               	skipc
  7897  10A7  28A9               	goto	u4541
  7898  10A8  28AA               	goto	u4540
  7899  10A9                     u4541:
  7900  10A9  28B6               	goto	l524
  7901  10AA                     u4540:
  7902  10AA  2813               	goto	l2884
  7903  10AB                     l2928:
  7904  10AB  3001               	movlw	1
  7905  10AC  00A0               	movwf	??__div_to_l_
  7906  10AD                     u4555:
  7907  10AD  1003               	clrc
  7908  10AE  0DA1               	rlf	__div_to_l_@quot,f
  7909  10AF  0DA2               	rlf	__div_to_l_@quot+1,f
  7910  10B0  0DA3               	rlf	__div_to_l_@quot+2,f
  7911  10B1  0DA4               	rlf	__div_to_l_@quot+3,f
  7912  10B2  0BA0               	decfsz	??__div_to_l_,f
  7913  10B3  28AD               	goto	u4555
  7914  10B4  3001               	movlw	1
  7915  10B5  02A6               	subwf	__div_to_l_@exp1,f
  7916  10B6                     l524:
  7917  10B6  0826               	movf	__div_to_l_@exp1,w
  7918  10B7  1D03               	btfss	3,2
  7919  10B8  28BA               	goto	u4561
  7920  10B9  28BB               	goto	u4560
  7921  10BA                     u4561:
  7922  10BA  28AB               	goto	l2928
  7923  10BB                     u4560:
  7924  10BB                     l2930:
  7925  10BB  0824               	movf	__div_to_l_@quot+3,w
  7926  10BC  00F6               	movwf	?__div_to_l_+3
  7927  10BD  0823               	movf	__div_to_l_@quot+2,w
  7928  10BE  00F5               	movwf	?__div_to_l_+2
  7929  10BF  0822               	movf	__div_to_l_@quot+1,w
  7930  10C0  00F4               	movwf	?__div_to_l_+1
  7931  10C1  0821               	movf	__div_to_l_@quot,w
  7932  10C2  00F3               	movwf	?__div_to_l_
  7933  10C3                     l513:
  7934  10C3  0008               	return
  7935  10C4                     __end_of__div_to_l_:
  7936                           
  7937                           	psect	text13
  7938  1E87                     __ptext13:	
  7939 ;; *************** function ___xxtofl *****************
  7940 ;; Defined at:
  7941 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  sign            1    wreg     unsigned char 
  7944 ;;  val             4    3[COMMON] long 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  sign            1    0[BANK0 ] unsigned char 
  7947 ;;  arg             4    2[BANK0 ] unsigned long 
  7948 ;;  exp             1    1[BANK0 ] unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  4    3[COMMON] unsigned char 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7958 ;;      Params:         4       0       0       0       0
  7959 ;;      Locals:         0       6       0       0       0
  7960 ;;      Temps:          4       0       0       0       0
  7961 ;;      Totals:         8       6       0       0       0
  7962 ;;Total ram usage:       14 bytes
  7963 ;; Hardware stack levels used: 1
  7964 ;; Hardware stack levels required when called: 1
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_main
  7969 ;;		_sprintf
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function ___xxtofl
  7975  1E87                     ___xxtofl:
  7976                           
  7977                           ;incstack = 0
  7978                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7979                           ;___xxtofl@sign stored from wreg
  7980  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7981  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7982  1E89  00A0               	movwf	___xxtofl@sign
  7983  1E8A                     l3074:
  7984  1E8A  0820               	movf	___xxtofl@sign,w
  7985  1E8B  1903               	btfsc	3,2
  7986  1E8C  2E8E               	goto	u4951
  7987  1E8D  2E8F               	goto	u4950
  7988  1E8E                     u4951:
  7989  1E8E  2EA3               	goto	l3080
  7990  1E8F                     u4950:
  7991  1E8F                     l3076:
  7992  1E8F  1FF6               	btfss	___xxtofl@val+3,7
  7993  1E90  2E92               	goto	u4961
  7994  1E91  2E93               	goto	u4960
  7995  1E92                     u4961:
  7996  1E92  2EA3               	goto	l3080
  7997  1E93                     u4960:
  7998  1E93                     l3078:
  7999  1E93  0973               	comf	___xxtofl@val,w
  8000  1E94  00A2               	movwf	___xxtofl@arg
  8001  1E95  0974               	comf	___xxtofl@val+1,w
  8002  1E96  00A3               	movwf	___xxtofl@arg+1
  8003  1E97  0975               	comf	___xxtofl@val+2,w
  8004  1E98  00A4               	movwf	___xxtofl@arg+2
  8005  1E99  0976               	comf	___xxtofl@val+3,w
  8006  1E9A  00A5               	movwf	___xxtofl@arg+3
  8007  1E9B  0AA2               	incf	___xxtofl@arg,f
  8008  1E9C  1903               	skipnz
  8009  1E9D  0AA3               	incf	___xxtofl@arg+1,f
  8010  1E9E  1903               	skipnz
  8011  1E9F  0AA4               	incf	___xxtofl@arg+2,f
  8012  1EA0  1903               	skipnz
  8013  1EA1  0AA5               	incf	___xxtofl@arg+3,f
  8014  1EA2  2EAB               	goto	l810
  8015  1EA3                     l3080:
  8016  1EA3  0876               	movf	___xxtofl@val+3,w
  8017  1EA4  00A5               	movwf	___xxtofl@arg+3
  8018  1EA5  0875               	movf	___xxtofl@val+2,w
  8019  1EA6  00A4               	movwf	___xxtofl@arg+2
  8020  1EA7  0874               	movf	___xxtofl@val+1,w
  8021  1EA8  00A3               	movwf	___xxtofl@arg+1
  8022  1EA9  0873               	movf	___xxtofl@val,w
  8023  1EAA  00A2               	movwf	___xxtofl@arg
  8024  1EAB                     l810:
  8025  1EAB  0876               	movf	___xxtofl@val+3,w
  8026  1EAC  0475               	iorwf	___xxtofl@val+2,w
  8027  1EAD  0474               	iorwf	___xxtofl@val+1,w
  8028  1EAE  0473               	iorwf	___xxtofl@val,w
  8029  1EAF  1D03               	skipz
  8030  1EB0  2EB2               	goto	u4971
  8031  1EB1  2EB3               	goto	u4970
  8032  1EB2                     u4971:
  8033  1EB2  2EBC               	goto	l3086
  8034  1EB3                     u4970:
  8035  1EB3                     l3082:
  8036  1EB3  3000               	movlw	0
  8037  1EB4  00F6               	movwf	?___xxtofl+3
  8038  1EB5  3000               	movlw	0
  8039  1EB6  00F5               	movwf	?___xxtofl+2
  8040  1EB7  3000               	movlw	0
  8041  1EB8  00F4               	movwf	?___xxtofl+1
  8042  1EB9  3000               	movlw	0
  8043  1EBA  00F3               	movwf	?___xxtofl
  8044  1EBB  2F42               	goto	l812
  8045  1EBC                     l3086:
  8046  1EBC  3096               	movlw	150
  8047  1EBD  00F7               	movwf	??___xxtofl
  8048  1EBE  0877               	movf	??___xxtofl,w
  8049  1EBF  00A1               	movwf	___xxtofl@exp
  8050  1EC0  2ECE               	goto	l3090
  8051  1EC1                     l3088:
  8052  1EC1  3001               	movlw	1
  8053  1EC2  00F7               	movwf	??___xxtofl
  8054  1EC3  0877               	movf	??___xxtofl,w
  8055  1EC4  07A1               	addwf	___xxtofl@exp,f
  8056  1EC5  3001               	movlw	1
  8057  1EC6                     u4985:
  8058  1EC6  1003               	clrc
  8059  1EC7  0CA5               	rrf	___xxtofl@arg+3,f
  8060  1EC8  0CA4               	rrf	___xxtofl@arg+2,f
  8061  1EC9  0CA3               	rrf	___xxtofl@arg+1,f
  8062  1ECA  0CA2               	rrf	___xxtofl@arg,f
  8063  1ECB  3EFF               	addlw	-1
  8064  1ECC  1D03               	skipz
  8065  1ECD  2EC6               	goto	u4985
  8066  1ECE                     l3090:
  8067  1ECE  30FE               	movlw	254
  8068  1ECF  0525               	andwf	___xxtofl@arg+3,w
  8069  1ED0  1D03               	btfss	3,2
  8070  1ED1  2ED3               	goto	u4991
  8071  1ED2  2ED4               	goto	u4990
  8072  1ED3                     u4991:
  8073  1ED3  2EC1               	goto	l3088
  8074  1ED4                     u4990:
  8075  1ED4  2EF0               	goto	l816
  8076  1ED5                     l3092:
  8077  1ED5  3001               	movlw	1
  8078  1ED6  00F7               	movwf	??___xxtofl
  8079  1ED7  0877               	movf	??___xxtofl,w
  8080  1ED8  07A1               	addwf	___xxtofl@exp,f
  8081  1ED9                     l3094:
  8082  1ED9  3001               	movlw	1
  8083  1EDA  07A2               	addwf	___xxtofl@arg,f
  8084  1EDB  3000               	movlw	0
  8085  1EDC  1803               	skipnc
  8086  1EDD  3001               	movlw	1
  8087  1EDE  07A3               	addwf	___xxtofl@arg+1,f
  8088  1EDF  3000               	movlw	0
  8089  1EE0  1803               	skipnc
  8090  1EE1  3001               	movlw	1
  8091  1EE2  07A4               	addwf	___xxtofl@arg+2,f
  8092  1EE3  3000               	movlw	0
  8093  1EE4  1803               	skipnc
  8094  1EE5  3001               	movlw	1
  8095  1EE6  07A5               	addwf	___xxtofl@arg+3,f
  8096  1EE7                     l3096:
  8097  1EE7  3001               	movlw	1
  8098  1EE8                     u5005:
  8099  1EE8  1003               	clrc
  8100  1EE9  0CA5               	rrf	___xxtofl@arg+3,f
  8101  1EEA  0CA4               	rrf	___xxtofl@arg+2,f
  8102  1EEB  0CA3               	rrf	___xxtofl@arg+1,f
  8103  1EEC  0CA2               	rrf	___xxtofl@arg,f
  8104  1EED  3EFF               	addlw	-1
  8105  1EEE  1D03               	skipz
  8106  1EEF  2EE8               	goto	u5005
  8107  1EF0                     l816:
  8108  1EF0  30FF               	movlw	255
  8109  1EF1  0525               	andwf	___xxtofl@arg+3,w
  8110  1EF2  1D03               	btfss	3,2
  8111  1EF3  2EF5               	goto	u5011
  8112  1EF4  2EF6               	goto	u5010
  8113  1EF5                     u5011:
  8114  1EF5  2ED5               	goto	l3092
  8115  1EF6                     u5010:
  8116  1EF6  2F02               	goto	l3100
  8117  1EF7                     l3098:
  8118  1EF7  3001               	movlw	1
  8119  1EF8  02A1               	subwf	___xxtofl@exp,f
  8120  1EF9  3001               	movlw	1
  8121  1EFA  00F7               	movwf	??___xxtofl
  8122  1EFB                     u5025:
  8123  1EFB  1003               	clrc
  8124  1EFC  0DA2               	rlf	___xxtofl@arg,f
  8125  1EFD  0DA3               	rlf	___xxtofl@arg+1,f
  8126  1EFE  0DA4               	rlf	___xxtofl@arg+2,f
  8127  1EFF  0DA5               	rlf	___xxtofl@arg+3,f
  8128  1F00  0BF7               	decfsz	??___xxtofl,f
  8129  1F01  2EFB               	goto	u5025
  8130  1F02                     l3100:
  8131  1F02  1BA4               	btfsc	___xxtofl@arg+2,7
  8132  1F03  2F05               	goto	u5031
  8133  1F04  2F06               	goto	u5030
  8134  1F05                     u5031:
  8135  1F05  2F0C               	goto	l823
  8136  1F06                     u5030:
  8137  1F06                     l3102:
  8138  1F06  3002               	movlw	2
  8139  1F07  0221               	subwf	___xxtofl@exp,w
  8140  1F08  1803               	skipnc
  8141  1F09  2F0B               	goto	u5041
  8142  1F0A  2F0C               	goto	u5040
  8143  1F0B                     u5041:
  8144  1F0B  2EF7               	goto	l3098
  8145  1F0C                     u5040:
  8146  1F0C                     l823:
  8147  1F0C  1821               	btfsc	___xxtofl@exp,0
  8148  1F0D  2F0F               	goto	u5051
  8149  1F0E  2F10               	goto	u5050
  8150  1F0F                     u5051:
  8151  1F0F  2F18               	goto	l824
  8152  1F10                     u5050:
  8153  1F10                     l3104:
  8154  1F10  30FF               	movlw	255
  8155  1F11  05A2               	andwf	___xxtofl@arg,f
  8156  1F12  30FF               	movlw	255
  8157  1F13  05A3               	andwf	___xxtofl@arg+1,f
  8158  1F14  307F               	movlw	127
  8159  1F15  05A4               	andwf	___xxtofl@arg+2,f
  8160  1F16  30FF               	movlw	255
  8161  1F17  05A5               	andwf	___xxtofl@arg+3,f
  8162  1F18                     l824:
  8163  1F18  1003               	clrc
  8164  1F19  0CA1               	rrf	___xxtofl@exp,f
  8165  1F1A                     l3106:
  8166  1F1A  0821               	movf	___xxtofl@exp,w
  8167  1F1B  00F7               	movwf	??___xxtofl
  8168  1F1C  01F8               	clrf	??___xxtofl+1
  8169  1F1D  01F9               	clrf	??___xxtofl+2
  8170  1F1E  01FA               	clrf	??___xxtofl+3
  8171  1F1F  3018               	movlw	24
  8172  1F20                     u5065:
  8173  1F20  1003               	clrc
  8174  1F21  0DF7               	rlf	??___xxtofl,f
  8175  1F22  0DF8               	rlf	??___xxtofl+1,f
  8176  1F23  0DF9               	rlf	??___xxtofl+2,f
  8177  1F24  0DFA               	rlf	??___xxtofl+3,f
  8178  1F25                     u5060:
  8179  1F25  3EFF               	addlw	-1
  8180  1F26  1D03               	skipz
  8181  1F27  2F20               	goto	u5065
  8182  1F28  0877               	movf	??___xxtofl,w
  8183  1F29  04A2               	iorwf	___xxtofl@arg,f
  8184  1F2A  0878               	movf	??___xxtofl+1,w
  8185  1F2B  04A3               	iorwf	___xxtofl@arg+1,f
  8186  1F2C  0879               	movf	??___xxtofl+2,w
  8187  1F2D  04A4               	iorwf	___xxtofl@arg+2,f
  8188  1F2E  087A               	movf	??___xxtofl+3,w
  8189  1F2F  04A5               	iorwf	___xxtofl@arg+3,f
  8190  1F30                     l3108:
  8191  1F30  0820               	movf	___xxtofl@sign,w
  8192  1F31  1903               	btfsc	3,2
  8193  1F32  2F34               	goto	u5071
  8194  1F33  2F35               	goto	u5070
  8195  1F34                     u5071:
  8196  1F34  2F3A               	goto	l3114
  8197  1F35                     u5070:
  8198  1F35                     l3110:
  8199  1F35  1FF6               	btfss	___xxtofl@val+3,7
  8200  1F36  2F38               	goto	u5081
  8201  1F37  2F39               	goto	u5080
  8202  1F38                     u5081:
  8203  1F38  2F3A               	goto	l3114
  8204  1F39                     u5080:
  8205  1F39                     l3112:
  8206  1F39  17A5               	bsf	___xxtofl@arg+3,7
  8207  1F3A                     l3114:
  8208  1F3A  0825               	movf	___xxtofl@arg+3,w
  8209  1F3B  00F6               	movwf	?___xxtofl+3
  8210  1F3C  0824               	movf	___xxtofl@arg+2,w
  8211  1F3D  00F5               	movwf	?___xxtofl+2
  8212  1F3E  0823               	movf	___xxtofl@arg+1,w
  8213  1F3F  00F4               	movwf	?___xxtofl+1
  8214  1F40  0822               	movf	___xxtofl@arg,w
  8215  1F41  00F3               	movwf	?___xxtofl
  8216  1F42                     l812:
  8217  1F42  0008               	return
  8218  1F43                     __end_of___xxtofl:
  8219                           
  8220                           	psect	text14
  8221  19E9                     __ptext14:	
  8222 ;; *************** function ___wmul *****************
  8223 ;; Defined at:
  8224 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;  multiplier      2    3[COMMON] unsigned int 
  8227 ;;  multiplicand    2    5[COMMON] unsigned int 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  product         2    7[COMMON] unsigned int 
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  2    3[COMMON] unsigned int 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2, status,0
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8239 ;;      Params:         4       0       0       0       0
  8240 ;;      Locals:         2       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0
  8242 ;;      Totals:         6       0       0       0       0
  8243 ;;Total ram usage:        6 bytes
  8244 ;; Hardware stack levels used: 1
  8245 ;; Hardware stack levels required when called: 1
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_sprintf
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           
  8254                           ;psect for function ___wmul
  8255  19E9                     ___wmul:
  8256  19E9                     l2934:	
  8257                           ;incstack = 0
  8258                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8259                           
  8260  19E9  01F7               	clrf	___wmul@product
  8261  19EA  01F8               	clrf	___wmul@product+1
  8262  19EB                     l2936:
  8263  19EB  1C73               	btfss	___wmul@multiplier,0
  8264  19EC  29EE               	goto	u4571
  8265  19ED  29EF               	goto	u4570
  8266  19EE                     u4571:
  8267  19EE  29F5               	goto	l343
  8268  19EF                     u4570:
  8269  19EF                     l2938:
  8270  19EF  0875               	movf	___wmul@multiplicand,w
  8271  19F0  07F7               	addwf	___wmul@product,f
  8272  19F1  1803               	skipnc
  8273  19F2  0AF8               	incf	___wmul@product+1,f
  8274  19F3  0876               	movf	___wmul@multiplicand+1,w
  8275  19F4  07F8               	addwf	___wmul@product+1,f
  8276  19F5                     l343:
  8277  19F5  3001               	movlw	1
  8278  19F6                     u4585:
  8279  19F6  1003               	clrc
  8280  19F7  0DF5               	rlf	___wmul@multiplicand,f
  8281  19F8  0DF6               	rlf	___wmul@multiplicand+1,f
  8282  19F9  3EFF               	addlw	-1
  8283  19FA  1D03               	skipz
  8284  19FB  29F6               	goto	u4585
  8285  19FC                     l2940:
  8286  19FC  3001               	movlw	1
  8287  19FD                     u4595:
  8288  19FD  1003               	clrc
  8289  19FE  0CF4               	rrf	___wmul@multiplier+1,f
  8290  19FF  0CF3               	rrf	___wmul@multiplier,f
  8291  1A00  3EFF               	addlw	-1
  8292  1A01  1D03               	skipz
  8293  1A02  29FD               	goto	u4595
  8294  1A03                     l2942:
  8295  1A03  0873               	movf	___wmul@multiplier,w
  8296  1A04  0474               	iorwf	___wmul@multiplier+1,w
  8297  1A05  1D03               	btfss	3,2
  8298  1A06  2A08               	goto	u4601
  8299  1A07  2A09               	goto	u4600
  8300  1A08                     u4601:
  8301  1A08  29EB               	goto	l2936
  8302  1A09                     u4600:
  8303  1A09                     l2944:
  8304  1A09  0878               	movf	___wmul@product+1,w
  8305  1A0A  00F4               	movwf	?___wmul+1
  8306  1A0B  0877               	movf	___wmul@product,w
  8307  1A0C  00F3               	movwf	?___wmul
  8308  1A0D                     l345:
  8309  1A0D  0008               	return
  8310  1A0E                     __end_of___wmul:
  8311                           
  8312                           	psect	text15
  8313  1BE7                     __ptext15:	
  8314 ;; *************** function ___llmod *****************
  8315 ;; Defined at:
  8316 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  divisor         4    3[COMMON] unsigned long 
  8319 ;;  dividend        4    7[COMMON] unsigned long 
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;  counter         1    1[BANK0 ] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  4    3[COMMON] unsigned long 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8331 ;;      Params:         8       0       0       0       0
  8332 ;;      Locals:         0       1       0       0       0
  8333 ;;      Temps:          0       1       0       0       0
  8334 ;;      Totals:         8       2       0       0       0
  8335 ;;Total ram usage:       10 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 1
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_sprintf
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           
  8346                           ;psect for function ___llmod
  8347  1BE7                     ___llmod:
  8348  1BE7                     l3048:	
  8349                           ;incstack = 0
  8350                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8351                           
  8352  1BE7  0876               	movf	___llmod@divisor+3,w
  8353  1BE8  0475               	iorwf	___llmod@divisor+2,w
  8354  1BE9  0474               	iorwf	___llmod@divisor+1,w
  8355  1BEA  0473               	iorwf	___llmod@divisor,w
  8356  1BEB  1903               	skipnz
  8357  1BEC  2BEE               	goto	u4891
  8358  1BED  2BEF               	goto	u4890
  8359  1BEE                     u4891:
  8360  1BEE  2C34               	goto	l3064
  8361  1BEF                     u4890:
  8362  1BEF                     l3050:
  8363  1BEF  1283               	bcf	3,5	;RP0=0, select bank0
  8364  1BF0  1303               	bcf	3,6	;RP1=0, select bank0
  8365  1BF1  01A1               	clrf	___llmod@counter
  8366  1BF2  0AA1               	incf	___llmod@counter,f
  8367  1BF3  2C01               	goto	l3054
  8368  1BF4                     l3052:
  8369  1BF4  3001               	movlw	1
  8370  1BF5  00A0               	movwf	??___llmod
  8371  1BF6                     u4905:
  8372  1BF6  1003               	clrc
  8373  1BF7  0DF3               	rlf	___llmod@divisor,f
  8374  1BF8  0DF4               	rlf	___llmod@divisor+1,f
  8375  1BF9  0DF5               	rlf	___llmod@divisor+2,f
  8376  1BFA  0DF6               	rlf	___llmod@divisor+3,f
  8377  1BFB  0BA0               	decfsz	??___llmod,f
  8378  1BFC  2BF6               	goto	u4905
  8379  1BFD  3001               	movlw	1
  8380  1BFE  00A0               	movwf	??___llmod
  8381  1BFF  0820               	movf	??___llmod,w
  8382  1C00  07A1               	addwf	___llmod@counter,f
  8383  1C01                     l3054:
  8384  1C01  1FF6               	btfss	___llmod@divisor+3,7
  8385  1C02  2C04               	goto	u4911
  8386  1C03  2C05               	goto	u4910
  8387  1C04                     u4911:
  8388  1C04  2BF4               	goto	l3052
  8389  1C05                     u4910:
  8390  1C05                     l3056:
  8391  1C05  0876               	movf	___llmod@divisor+3,w
  8392  1C06  027A               	subwf	___llmod@dividend+3,w
  8393  1C07  1D03               	skipz
  8394  1C08  2C13               	goto	u4925
  8395  1C09  0875               	movf	___llmod@divisor+2,w
  8396  1C0A  0279               	subwf	___llmod@dividend+2,w
  8397  1C0B  1D03               	skipz
  8398  1C0C  2C13               	goto	u4925
  8399  1C0D  0874               	movf	___llmod@divisor+1,w
  8400  1C0E  0278               	subwf	___llmod@dividend+1,w
  8401  1C0F  1D03               	skipz
  8402  1C10  2C13               	goto	u4925
  8403  1C11  0873               	movf	___llmod@divisor,w
  8404  1C12  0277               	subwf	___llmod@dividend,w
  8405  1C13                     u4925:
  8406  1C13  1C03               	skipc
  8407  1C14  2C16               	goto	u4921
  8408  1C15  2C17               	goto	u4920
  8409  1C16                     u4921:
  8410  1C16  2C25               	goto	l3060
  8411  1C17                     u4920:
  8412  1C17                     l3058:
  8413  1C17  0873               	movf	___llmod@divisor,w
  8414  1C18  02F7               	subwf	___llmod@dividend,f
  8415  1C19  0874               	movf	___llmod@divisor+1,w
  8416  1C1A  1C03               	skipc
  8417  1C1B  0F74               	incfsz	___llmod@divisor+1,w
  8418  1C1C  02F8               	subwf	___llmod@dividend+1,f
  8419  1C1D  0875               	movf	___llmod@divisor+2,w
  8420  1C1E  1C03               	skipc
  8421  1C1F  0F75               	incfsz	___llmod@divisor+2,w
  8422  1C20  02F9               	subwf	___llmod@dividend+2,f
  8423  1C21  0876               	movf	___llmod@divisor+3,w
  8424  1C22  1C03               	skipc
  8425  1C23  0F76               	incfsz	___llmod@divisor+3,w
  8426  1C24  02FA               	subwf	___llmod@dividend+3,f
  8427  1C25                     l3060:
  8428  1C25  3001               	movlw	1
  8429  1C26                     u4935:
  8430  1C26  1003               	clrc
  8431  1C27  0CF6               	rrf	___llmod@divisor+3,f
  8432  1C28  0CF5               	rrf	___llmod@divisor+2,f
  8433  1C29  0CF4               	rrf	___llmod@divisor+1,f
  8434  1C2A  0CF3               	rrf	___llmod@divisor,f
  8435  1C2B  3EFF               	addlw	-1
  8436  1C2C  1D03               	skipz
  8437  1C2D  2C26               	goto	u4935
  8438  1C2E                     l3062:
  8439  1C2E  3001               	movlw	1
  8440  1C2F  02A1               	subwf	___llmod@counter,f
  8441  1C30  1D03               	btfss	3,2
  8442  1C31  2C33               	goto	u4941
  8443  1C32  2C34               	goto	u4940
  8444  1C33                     u4941:
  8445  1C33  2C05               	goto	l3056
  8446  1C34                     u4940:
  8447  1C34                     l3064:
  8448  1C34  087A               	movf	___llmod@dividend+3,w
  8449  1C35  00F6               	movwf	?___llmod+3
  8450  1C36  0879               	movf	___llmod@dividend+2,w
  8451  1C37  00F5               	movwf	?___llmod+2
  8452  1C38  0878               	movf	___llmod@dividend+1,w
  8453  1C39  00F4               	movwf	?___llmod+1
  8454  1C3A  0877               	movf	___llmod@dividend,w
  8455  1C3B  00F3               	movwf	?___llmod
  8456  1C3C                     l599:
  8457  1C3C  0008               	return
  8458  1C3D                     __end_of___llmod:
  8459                           
  8460                           	psect	text16
  8461  1C96                     __ptext16:	
  8462 ;; *************** function ___lldiv *****************
  8463 ;; Defined at:
  8464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;  divisor         4    3[COMMON] unsigned long 
  8467 ;;  dividend        4    7[COMMON] unsigned long 
  8468 ;; Auto vars:     Size  Location     Type
  8469 ;;  quotient        4    1[BANK0 ] unsigned long 
  8470 ;;  counter         1    5[BANK0 ] unsigned char 
  8471 ;; Return value:  Size  Location     Type
  8472 ;;                  4    3[COMMON] unsigned long 
  8473 ;; Registers used:
  8474 ;;		wreg, status,2, status,0
  8475 ;; Tracked objects:
  8476 ;;		On entry : 0/0
  8477 ;;		On exit  : 0/0
  8478 ;;		Unchanged: 0/0
  8479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8480 ;;      Params:         8       0       0       0       0
  8481 ;;      Locals:         0       5       0       0       0
  8482 ;;      Temps:          0       1       0       0       0
  8483 ;;      Totals:         8       6       0       0       0
  8484 ;;Total ram usage:       14 bytes
  8485 ;; Hardware stack levels used: 1
  8486 ;; Hardware stack levels required when called: 1
  8487 ;; This function calls:
  8488 ;;		Nothing
  8489 ;; This function is called by:
  8490 ;;		_sprintf
  8491 ;; This function uses a non-reentrant model
  8492 ;;
  8493                           
  8494                           
  8495                           ;psect for function ___lldiv
  8496  1C96                     ___lldiv:
  8497  1C96                     l2948:	
  8498                           ;incstack = 0
  8499                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8500                           
  8501  1C96  3000               	movlw	0
  8502  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  8503  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  8504  1C99  00A4               	movwf	___lldiv@quotient+3
  8505  1C9A  3000               	movlw	0
  8506  1C9B  00A3               	movwf	___lldiv@quotient+2
  8507  1C9C  3000               	movlw	0
  8508  1C9D  00A2               	movwf	___lldiv@quotient+1
  8509  1C9E  3000               	movlw	0
  8510  1C9F  00A1               	movwf	___lldiv@quotient
  8511  1CA0  0876               	movf	___lldiv@divisor+3,w
  8512  1CA1  0475               	iorwf	___lldiv@divisor+2,w
  8513  1CA2  0474               	iorwf	___lldiv@divisor+1,w
  8514  1CA3  0473               	iorwf	___lldiv@divisor,w
  8515  1CA4  1903               	skipnz
  8516  1CA5  2CA7               	goto	u4611
  8517  1CA6  2CA8               	goto	u4610
  8518  1CA7                     u4611:
  8519  1CA7  2CF5               	goto	l2968
  8520  1CA8                     u4610:
  8521  1CA8                     l2950:
  8522  1CA8  01A5               	clrf	___lldiv@counter
  8523  1CA9  0AA5               	incf	___lldiv@counter,f
  8524  1CAA  2CB8               	goto	l2954
  8525  1CAB                     l2952:
  8526  1CAB  3001               	movlw	1
  8527  1CAC  00A0               	movwf	??___lldiv
  8528  1CAD                     u4625:
  8529  1CAD  1003               	clrc
  8530  1CAE  0DF3               	rlf	___lldiv@divisor,f
  8531  1CAF  0DF4               	rlf	___lldiv@divisor+1,f
  8532  1CB0  0DF5               	rlf	___lldiv@divisor+2,f
  8533  1CB1  0DF6               	rlf	___lldiv@divisor+3,f
  8534  1CB2  0BA0               	decfsz	??___lldiv,f
  8535  1CB3  2CAD               	goto	u4625
  8536  1CB4  3001               	movlw	1
  8537  1CB5  00A0               	movwf	??___lldiv
  8538  1CB6  0820               	movf	??___lldiv,w
  8539  1CB7  07A5               	addwf	___lldiv@counter,f
  8540  1CB8                     l2954:
  8541  1CB8  1FF6               	btfss	___lldiv@divisor+3,7
  8542  1CB9  2CBB               	goto	u4631
  8543  1CBA  2CBC               	goto	u4630
  8544  1CBB                     u4631:
  8545  1CBB  2CAB               	goto	l2952
  8546  1CBC                     u4630:
  8547  1CBC                     l2956:
  8548  1CBC  3001               	movlw	1
  8549  1CBD  00A0               	movwf	??___lldiv
  8550  1CBE                     u4645:
  8551  1CBE  1003               	clrc
  8552  1CBF  0DA1               	rlf	___lldiv@quotient,f
  8553  1CC0  0DA2               	rlf	___lldiv@quotient+1,f
  8554  1CC1  0DA3               	rlf	___lldiv@quotient+2,f
  8555  1CC2  0DA4               	rlf	___lldiv@quotient+3,f
  8556  1CC3  0BA0               	decfsz	??___lldiv,f
  8557  1CC4  2CBE               	goto	u4645
  8558  1CC5                     l2958:
  8559  1CC5  0876               	movf	___lldiv@divisor+3,w
  8560  1CC6  027A               	subwf	___lldiv@dividend+3,w
  8561  1CC7  1D03               	skipz
  8562  1CC8  2CD3               	goto	u4655
  8563  1CC9  0875               	movf	___lldiv@divisor+2,w
  8564  1CCA  0279               	subwf	___lldiv@dividend+2,w
  8565  1CCB  1D03               	skipz
  8566  1CCC  2CD3               	goto	u4655
  8567  1CCD  0874               	movf	___lldiv@divisor+1,w
  8568  1CCE  0278               	subwf	___lldiv@dividend+1,w
  8569  1CCF  1D03               	skipz
  8570  1CD0  2CD3               	goto	u4655
  8571  1CD1  0873               	movf	___lldiv@divisor,w
  8572  1CD2  0277               	subwf	___lldiv@dividend,w
  8573  1CD3                     u4655:
  8574  1CD3  1C03               	skipc
  8575  1CD4  2CD6               	goto	u4651
  8576  1CD5  2CD7               	goto	u4650
  8577  1CD6                     u4651:
  8578  1CD6  2CE6               	goto	l2964
  8579  1CD7                     u4650:
  8580  1CD7                     l2960:
  8581  1CD7  0873               	movf	___lldiv@divisor,w
  8582  1CD8  02F7               	subwf	___lldiv@dividend,f
  8583  1CD9  0874               	movf	___lldiv@divisor+1,w
  8584  1CDA  1C03               	skipc
  8585  1CDB  0F74               	incfsz	___lldiv@divisor+1,w
  8586  1CDC  02F8               	subwf	___lldiv@dividend+1,f
  8587  1CDD  0875               	movf	___lldiv@divisor+2,w
  8588  1CDE  1C03               	skipc
  8589  1CDF  0F75               	incfsz	___lldiv@divisor+2,w
  8590  1CE0  02F9               	subwf	___lldiv@dividend+2,f
  8591  1CE1  0876               	movf	___lldiv@divisor+3,w
  8592  1CE2  1C03               	skipc
  8593  1CE3  0F76               	incfsz	___lldiv@divisor+3,w
  8594  1CE4  02FA               	subwf	___lldiv@dividend+3,f
  8595  1CE5                     l2962:
  8596  1CE5  1421               	bsf	___lldiv@quotient,0
  8597  1CE6                     l2964:
  8598  1CE6  3001               	movlw	1
  8599  1CE7                     u4665:
  8600  1CE7  1003               	clrc
  8601  1CE8  0CF6               	rrf	___lldiv@divisor+3,f
  8602  1CE9  0CF5               	rrf	___lldiv@divisor+2,f
  8603  1CEA  0CF4               	rrf	___lldiv@divisor+1,f
  8604  1CEB  0CF3               	rrf	___lldiv@divisor,f
  8605  1CEC  3EFF               	addlw	-1
  8606  1CED  1D03               	skipz
  8607  1CEE  2CE7               	goto	u4665
  8608  1CEF                     l2966:
  8609  1CEF  3001               	movlw	1
  8610  1CF0  02A5               	subwf	___lldiv@counter,f
  8611  1CF1  1D03               	btfss	3,2
  8612  1CF2  2CF4               	goto	u4671
  8613  1CF3  2CF5               	goto	u4670
  8614  1CF4                     u4671:
  8615  1CF4  2CBC               	goto	l2956
  8616  1CF5                     u4670:
  8617  1CF5                     l2968:
  8618  1CF5  0824               	movf	___lldiv@quotient+3,w
  8619  1CF6  00F6               	movwf	?___lldiv+3
  8620  1CF7  0823               	movf	___lldiv@quotient+2,w
  8621  1CF8  00F5               	movwf	?___lldiv+2
  8622  1CF9  0822               	movf	___lldiv@quotient+1,w
  8623  1CFA  00F4               	movwf	?___lldiv+1
  8624  1CFB  0821               	movf	___lldiv@quotient,w
  8625  1CFC  00F3               	movwf	?___lldiv
  8626  1CFD                     l379:
  8627  1CFD  0008               	return
  8628  1CFE                     __end_of___lldiv:
  8629                           
  8630                           	psect	text17
  8631  1D67                     __ptext17:	
  8632 ;; *************** function ___fltol *****************
  8633 ;; Defined at:
  8634 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  f1              4   53[BANK0 ] unsigned long 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  exp1            1   63[BANK0 ] unsigned char 
  8639 ;;  sign1           1   62[BANK0 ] unsigned char 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  4   53[BANK0 ] long 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8649 ;;      Params:         0       4       0       0       0
  8650 ;;      Locals:         0       2       0       0       0
  8651 ;;      Temps:          0       5       0       0       0
  8652 ;;      Totals:         0      11       0       0       0
  8653 ;;Total ram usage:       11 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 1
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_sprintf
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function ___fltol
  8665  1D67                     ___fltol:
  8666  1D67                     l3012:	
  8667                           ;incstack = 0
  8668                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8669                           
  8670  1D67  1003               	clrc
  8671  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  8672  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  8673  1D6A  0D57               	rlf	___fltol@f1+2,w
  8674  1D6B  0D58               	rlf	___fltol@f1+3,w
  8675  1D6C  00D9               	movwf	??___fltol
  8676  1D6D  0859               	movf	??___fltol,w
  8677  1D6E  00DF               	movwf	___fltol@exp1
  8678  1D6F  085F               	movf	___fltol@exp1,w
  8679  1D70  1D03               	btfss	3,2
  8680  1D71  2D73               	goto	u4791
  8681  1D72  2D74               	goto	u4790
  8682  1D73                     u4791:
  8683  1D73  2D7D               	goto	l3018
  8684  1D74                     u4790:
  8685  1D74                     l3014:
  8686  1D74  3000               	movlw	0
  8687  1D75  00D8               	movwf	?___fltol+3
  8688  1D76  3000               	movlw	0
  8689  1D77  00D7               	movwf	?___fltol+2
  8690  1D78  3000               	movlw	0
  8691  1D79  00D6               	movwf	?___fltol+1
  8692  1D7A  3000               	movlw	0
  8693  1D7B  00D5               	movwf	?___fltol
  8694  1D7C  2DE2               	goto	l546
  8695  1D7D                     l3018:
  8696  1D7D  0855               	movf	___fltol@f1,w
  8697  1D7E  00D9               	movwf	??___fltol
  8698  1D7F  0856               	movf	___fltol@f1+1,w
  8699  1D80  00DA               	movwf	??___fltol+1
  8700  1D81  0857               	movf	___fltol@f1+2,w
  8701  1D82  00DB               	movwf	??___fltol+2
  8702  1D83  0858               	movf	___fltol@f1+3,w
  8703  1D84  00DC               	movwf	??___fltol+3
  8704  1D85  301F               	movlw	31
  8705  1D86                     u4805:
  8706  1D86  1003               	clrc
  8707  1D87  0CDC               	rrf	??___fltol+3,f
  8708  1D88  0CDB               	rrf	??___fltol+2,f
  8709  1D89  0CDA               	rrf	??___fltol+1,f
  8710  1D8A  0CD9               	rrf	??___fltol,f
  8711  1D8B                     u4800:
  8712  1D8B  3EFF               	addlw	-1
  8713  1D8C  1D03               	skipz
  8714  1D8D  2D86               	goto	u4805
  8715  1D8E  0859               	movf	??___fltol,w
  8716  1D8F  00DD               	movwf	??___fltol+4
  8717  1D90  085D               	movf	??___fltol+4,w
  8718  1D91  00DE               	movwf	___fltol@sign1
  8719  1D92                     l3020:
  8720  1D92  17D7               	bsf	___fltol@f1+2,7
  8721  1D93                     l3022:
  8722  1D93  30FF               	movlw	255
  8723  1D94  05D5               	andwf	___fltol@f1,f
  8724  1D95  30FF               	movlw	255
  8725  1D96  05D6               	andwf	___fltol@f1+1,f
  8726  1D97  30FF               	movlw	255
  8727  1D98  05D7               	andwf	___fltol@f1+2,f
  8728  1D99  3000               	movlw	0
  8729  1D9A  05D8               	andwf	___fltol@f1+3,f
  8730  1D9B                     l3024:
  8731  1D9B  3096               	movlw	150
  8732  1D9C  02DF               	subwf	___fltol@exp1,f
  8733  1D9D                     l3026:
  8734  1D9D  1FDF               	btfss	___fltol@exp1,7
  8735  1D9E  2DA0               	goto	u4811
  8736  1D9F  2DA1               	goto	u4810
  8737  1DA0                     u4811:
  8738  1DA0  2DBB               	goto	l3036
  8739  1DA1                     u4810:
  8740  1DA1                     l3028:
  8741  1DA1  085F               	movf	___fltol@exp1,w
  8742  1DA2  3A80               	xorlw	128
  8743  1DA3  3E97               	addlw	151
  8744  1DA4  1803               	skipnc
  8745  1DA5  2DA7               	goto	u4821
  8746  1DA6  2DA8               	goto	u4820
  8747  1DA7                     u4821:
  8748  1DA7  2DA9               	goto	l3034
  8749  1DA8                     u4820:
  8750  1DA8  2D74               	goto	l3014
  8751  1DA9                     l3034:
  8752  1DA9  3001               	movlw	1
  8753  1DAA                     u4835:
  8754  1DAA  1003               	clrc
  8755  1DAB  0CD8               	rrf	___fltol@f1+3,f
  8756  1DAC  0CD7               	rrf	___fltol@f1+2,f
  8757  1DAD  0CD6               	rrf	___fltol@f1+1,f
  8758  1DAE  0CD5               	rrf	___fltol@f1,f
  8759  1DAF  3EFF               	addlw	-1
  8760  1DB0  1D03               	skipz
  8761  1DB1  2DAA               	goto	u4835
  8762  1DB2  3001               	movlw	1
  8763  1DB3  00D9               	movwf	??___fltol
  8764  1DB4  0859               	movf	??___fltol,w
  8765  1DB5  07DF               	addwf	___fltol@exp1,f
  8766  1DB6  1D03               	btfss	3,2
  8767  1DB7  2DB9               	goto	u4841
  8768  1DB8  2DBA               	goto	u4840
  8769  1DB9                     u4841:
  8770  1DB9  2DA9               	goto	l3034
  8771  1DBA                     u4840:
  8772  1DBA  2DD2               	goto	l3044
  8773  1DBB                     l3036:
  8774  1DBB  3020               	movlw	32
  8775  1DBC  025F               	subwf	___fltol@exp1,w
  8776  1DBD  1C03               	skipc
  8777  1DBE  2DC0               	goto	u4851
  8778  1DBF  2DC1               	goto	u4850
  8779  1DC0                     u4851:
  8780  1DC0  2DCD               	goto	l553
  8781  1DC1                     u4850:
  8782  1DC1  2D74               	goto	l3014
  8783  1DC2                     l3042:
  8784  1DC2  3001               	movlw	1
  8785  1DC3  00D9               	movwf	??___fltol
  8786  1DC4                     u4865:
  8787  1DC4  1003               	clrc
  8788  1DC5  0DD5               	rlf	___fltol@f1,f
  8789  1DC6  0DD6               	rlf	___fltol@f1+1,f
  8790  1DC7  0DD7               	rlf	___fltol@f1+2,f
  8791  1DC8  0DD8               	rlf	___fltol@f1+3,f
  8792  1DC9  0BD9               	decfsz	??___fltol,f
  8793  1DCA  2DC4               	goto	u4865
  8794  1DCB  3001               	movlw	1
  8795  1DCC  02DF               	subwf	___fltol@exp1,f
  8796  1DCD                     l553:
  8797  1DCD  085F               	movf	___fltol@exp1,w
  8798  1DCE  1D03               	btfss	3,2
  8799  1DCF  2DD1               	goto	u4871
  8800  1DD0  2DD2               	goto	u4870
  8801  1DD1                     u4871:
  8802  1DD1  2DC2               	goto	l3042
  8803  1DD2                     u4870:
  8804  1DD2                     l3044:
  8805  1DD2  085E               	movf	___fltol@sign1,w
  8806  1DD3  1903               	btfsc	3,2
  8807  1DD4  2DD6               	goto	u4881
  8808  1DD5  2DD7               	goto	u4880
  8809  1DD6                     u4881:
  8810  1DD6  2DE2               	goto	l556
  8811  1DD7                     u4880:
  8812  1DD7                     l3046:
  8813  1DD7  09D5               	comf	___fltol@f1,f
  8814  1DD8  09D6               	comf	___fltol@f1+1,f
  8815  1DD9  09D7               	comf	___fltol@f1+2,f
  8816  1DDA  09D8               	comf	___fltol@f1+3,f
  8817  1DDB  0AD5               	incf	___fltol@f1,f
  8818  1DDC  1903               	skipnz
  8819  1DDD  0AD6               	incf	___fltol@f1+1,f
  8820  1DDE  1903               	skipnz
  8821  1DDF  0AD7               	incf	___fltol@f1+2,f
  8822  1DE0  1903               	skipnz
  8823  1DE1  0AD8               	incf	___fltol@f1+3,f
  8824  1DE2                     l556:
  8825  1DE2                     l546:
  8826  1DE2  0008               	return
  8827  1DE3                     __end_of___fltol:
  8828                           
  8829                           	psect	text18
  8830  1B97                     __ptext18:	
  8831 ;; *************** function ___flsub *****************
  8832 ;; Defined at:
  8833 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;  a               4    0[BANK1 ] long 
  8836 ;;  b               4    4[BANK1 ] long 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;		None
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  4    0[BANK1 ] long 
  8841 ;; Registers used:
  8842 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8848 ;;      Params:         0       0       8       0       0
  8849 ;;      Locals:         0       0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0
  8851 ;;      Totals:         0       0       8       0       0
  8852 ;;Total ram usage:        8 bytes
  8853 ;; Hardware stack levels used: 1
  8854 ;; Hardware stack levels required when called: 2
  8855 ;; This function calls:
  8856 ;;		___fladd
  8857 ;; This function is called by:
  8858 ;;		_main
  8859 ;;		_sprintf
  8860 ;; This function uses a non-reentrant model
  8861 ;;
  8862                           
  8863                           
  8864                           ;psect for function ___flsub
  8865  1B97                     ___flsub:
  8866  1B97                     l3068:	
  8867                           ;incstack = 0
  8868                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8869                           
  8870  1B97  3080               	movlw	128
  8871  1B98  1683               	bsf	3,5	;RP0=1, select bank1
  8872  1B99  1303               	bcf	3,6	;RP1=0, select bank1
  8873  1B9A  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8874  1B9B                     l3070:
  8875  1B9B  0827               	movf	(___flsub@b+3)^(0+128),w
  8876  1B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8877  1B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8878  1B9E  00D9               	movwf	___fladd@b+3
  8879  1B9F  1683               	bsf	3,5	;RP0=1, select bank1
  8880  1BA0  1303               	bcf	3,6	;RP1=0, select bank1
  8881  1BA1  0826               	movf	(___flsub@b+2)^(0+128),w
  8882  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  8883  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  8884  1BA4  00D8               	movwf	___fladd@b+2
  8885  1BA5  1683               	bsf	3,5	;RP0=1, select bank1
  8886  1BA6  1303               	bcf	3,6	;RP1=0, select bank1
  8887  1BA7  0825               	movf	(___flsub@b+1)^(0+128),w
  8888  1BA8  1283               	bcf	3,5	;RP0=0, select bank0
  8889  1BA9  1303               	bcf	3,6	;RP1=0, select bank0
  8890  1BAA  00D7               	movwf	___fladd@b+1
  8891  1BAB  1683               	bsf	3,5	;RP0=1, select bank1
  8892  1BAC  1303               	bcf	3,6	;RP1=0, select bank1
  8893  1BAD  0824               	movf	___flsub@b^(0+128),w
  8894  1BAE  1283               	bcf	3,5	;RP0=0, select bank0
  8895  1BAF  1303               	bcf	3,6	;RP1=0, select bank0
  8896  1BB0  00D6               	movwf	___fladd@b
  8897  1BB1  1683               	bsf	3,5	;RP0=1, select bank1
  8898  1BB2  1303               	bcf	3,6	;RP1=0, select bank1
  8899  1BB3  0823               	movf	(___flsub@a+3)^(0+128),w
  8900  1BB4  1283               	bcf	3,5	;RP0=0, select bank0
  8901  1BB5  1303               	bcf	3,6	;RP1=0, select bank0
  8902  1BB6  00DD               	movwf	___fladd@a+3
  8903  1BB7  1683               	bsf	3,5	;RP0=1, select bank1
  8904  1BB8  1303               	bcf	3,6	;RP1=0, select bank1
  8905  1BB9  0822               	movf	(___flsub@a+2)^(0+128),w
  8906  1BBA  1283               	bcf	3,5	;RP0=0, select bank0
  8907  1BBB  1303               	bcf	3,6	;RP1=0, select bank0
  8908  1BBC  00DC               	movwf	___fladd@a+2
  8909  1BBD  1683               	bsf	3,5	;RP0=1, select bank1
  8910  1BBE  1303               	bcf	3,6	;RP1=0, select bank1
  8911  1BBF  0821               	movf	(___flsub@a+1)^(0+128),w
  8912  1BC0  1283               	bcf	3,5	;RP0=0, select bank0
  8913  1BC1  1303               	bcf	3,6	;RP1=0, select bank0
  8914  1BC2  00DB               	movwf	___fladd@a+1
  8915  1BC3  1683               	bsf	3,5	;RP0=1, select bank1
  8916  1BC4  1303               	bcf	3,6	;RP1=0, select bank1
  8917  1BC5  0820               	movf	___flsub@a^(0+128),w
  8918  1BC6  1283               	bcf	3,5	;RP0=0, select bank0
  8919  1BC7  1303               	bcf	3,6	;RP1=0, select bank0
  8920  1BC8  00DA               	movwf	___fladd@a
  8921  1BC9  160A  118A  22D1  160A  158A  	fcall	___fladd
  8922  1BCE  1283               	bcf	3,5	;RP0=0, select bank0
  8923  1BCF  1303               	bcf	3,6	;RP1=0, select bank0
  8924  1BD0  0859               	movf	?___fladd+3,w
  8925  1BD1  1683               	bsf	3,5	;RP0=1, select bank1
  8926  1BD2  1303               	bcf	3,6	;RP1=0, select bank1
  8927  1BD3  00A3               	movwf	(?___flsub+3)^(0+128)
  8928  1BD4  1283               	bcf	3,5	;RP0=0, select bank0
  8929  1BD5  1303               	bcf	3,6	;RP1=0, select bank0
  8930  1BD6  0858               	movf	?___fladd+2,w
  8931  1BD7  1683               	bsf	3,5	;RP0=1, select bank1
  8932  1BD8  1303               	bcf	3,6	;RP1=0, select bank1
  8933  1BD9  00A2               	movwf	(?___flsub+2)^(0+128)
  8934  1BDA  1283               	bcf	3,5	;RP0=0, select bank0
  8935  1BDB  1303               	bcf	3,6	;RP1=0, select bank0
  8936  1BDC  0857               	movf	?___fladd+1,w
  8937  1BDD  1683               	bsf	3,5	;RP0=1, select bank1
  8938  1BDE  1303               	bcf	3,6	;RP1=0, select bank1
  8939  1BDF  00A1               	movwf	(?___flsub+1)^(0+128)
  8940  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
  8941  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
  8942  1BE2  0856               	movf	?___fladd,w
  8943  1BE3  1683               	bsf	3,5	;RP0=1, select bank1
  8944  1BE4  1303               	bcf	3,6	;RP1=0, select bank1
  8945  1BE5  00A0               	movwf	?___flsub^(0+128)
  8946  1BE6                     l716:
  8947  1BE6  0008               	return
  8948  1BE7                     __end_of___flsub:
  8949                           
  8950                           	psect	text19
  8951  12D1                     __ptext19:	
  8952 ;; *************** function ___fladd *****************
  8953 ;; Defined at:
  8954 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  b               4   54[BANK0 ] long 
  8957 ;;  a               4   58[BANK0 ] long 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  grs             1   73[BANK0 ] unsigned char 
  8960 ;;  bexp            1   72[BANK0 ] unsigned char 
  8961 ;;  aexp            1   71[BANK0 ] unsigned char 
  8962 ;;  signs           1   70[BANK0 ] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  4   54[BANK0 ] unsigned char 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2, status,0, btemp+1
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8972 ;;      Params:         0       8       0       0       0
  8973 ;;      Locals:         0       4       0       0       0
  8974 ;;      Temps:          0       8       0       0       0
  8975 ;;      Totals:         0      20       0       0       0
  8976 ;;Total ram usage:       20 bytes
  8977 ;; Hardware stack levels used: 1
  8978 ;; Hardware stack levels required when called: 1
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_main
  8983 ;;		_sprintf
  8984 ;;		___flsub
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           
  8989                           ;psect for function ___fladd
  8990  12D1                     ___fladd:
  8991  12D1                     l2400:	
  8992                           ;incstack = 0
  8993                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8994                           
  8995  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  8996  12D2  1303               	bcf	3,6	;RP1=0, select bank0
  8997  12D3  0859               	movf	___fladd@b+3,w
  8998  12D4  3980               	andlw	128
  8999  12D5  00DE               	movwf	??___fladd
  9000  12D6  085E               	movf	??___fladd,w
  9001  12D7  00E6               	movwf	___fladd@signs
  9002  12D8                     l2402:
  9003  12D8  0859               	movf	___fladd@b+3,w
  9004  12D9  00DE               	movwf	??___fladd
  9005  12DA  075E               	addwf	??___fladd,w
  9006  12DB  00DF               	movwf	??___fladd+1
  9007  12DC  085F               	movf	??___fladd+1,w
  9008  12DD  00E8               	movwf	___fladd@bexp
  9009  12DE                     l2404:
  9010  12DE  1FD8               	btfss	___fladd@b+2,7
  9011  12DF  2AE1               	goto	u3201
  9012  12E0  2AE2               	goto	u3200
  9013  12E1                     u3201:
  9014  12E1  2AE3               	goto	l2408
  9015  12E2                     u3200:
  9016  12E2                     l2406:
  9017  12E2  1468               	bsf	___fladd@bexp,0
  9018  12E3                     l2408:
  9019  12E3  0868               	movf	___fladd@bexp,w
  9020  12E4  1903               	btfsc	3,2
  9021  12E5  2AE7               	goto	u3211
  9022  12E6  2AE8               	goto	u3210
  9023  12E7                     u3211:
  9024  12E7  2AF8               	goto	l2418
  9025  12E8                     u3210:
  9026  12E8                     l2410:
  9027  12E8  0A68               	incf	___fladd@bexp,w
  9028  12E9  1D03               	btfss	3,2
  9029  12EA  2AEC               	goto	u3221
  9030  12EB  2AED               	goto	u3220
  9031  12EC                     u3221:
  9032  12EC  2AF5               	goto	l2414
  9033  12ED                     u3220:
  9034  12ED                     l2412:
  9035  12ED  3000               	movlw	0
  9036  12EE  00D9               	movwf	___fladd@b+3
  9037  12EF  3000               	movlw	0
  9038  12F0  00D8               	movwf	___fladd@b+2
  9039  12F1  3000               	movlw	0
  9040  12F2  00D7               	movwf	___fladd@b+1
  9041  12F3  3000               	movlw	0
  9042  12F4  00D6               	movwf	___fladd@b
  9043  12F5                     l2414:
  9044  12F5  17D8               	bsf	___fladd@b+2,7
  9045  12F6                     l2416:
  9046  12F6  01D9               	clrf	___fladd@b+3
  9047  12F7  2B00               	goto	l2420
  9048  12F8                     l2418:
  9049  12F8  3000               	movlw	0
  9050  12F9  00D9               	movwf	___fladd@b+3
  9051  12FA  3000               	movlw	0
  9052  12FB  00D8               	movwf	___fladd@b+2
  9053  12FC  3000               	movlw	0
  9054  12FD  00D7               	movwf	___fladd@b+1
  9055  12FE  3000               	movlw	0
  9056  12FF  00D6               	movwf	___fladd@b
  9057  1300                     l2420:
  9058  1300  085D               	movf	___fladd@a+3,w
  9059  1301  3980               	andlw	128
  9060  1302  00DE               	movwf	??___fladd
  9061  1303  085E               	movf	??___fladd,w
  9062  1304  00E7               	movwf	___fladd@aexp
  9063  1305                     l2422:
  9064  1305  0867               	movf	___fladd@aexp,w
  9065  1306  0666               	xorwf	___fladd@signs,w
  9066  1307  1903               	skipnz
  9067  1308  2B0A               	goto	u3231
  9068  1309  2B0B               	goto	u3230
  9069  130A                     u3231:
  9070  130A  2B0C               	goto	l2426
  9071  130B                     u3230:
  9072  130B                     l2424:
  9073  130B  1766               	bsf	___fladd@signs,6
  9074  130C                     l2426:
  9075  130C  085D               	movf	___fladd@a+3,w
  9076  130D  00DE               	movwf	??___fladd
  9077  130E  075E               	addwf	??___fladd,w
  9078  130F  00DF               	movwf	??___fladd+1
  9079  1310  085F               	movf	??___fladd+1,w
  9080  1311  00E7               	movwf	___fladd@aexp
  9081  1312                     l2428:
  9082  1312  1FDC               	btfss	___fladd@a+2,7
  9083  1313  2B15               	goto	u3241
  9084  1314  2B16               	goto	u3240
  9085  1315                     u3241:
  9086  1315  2B17               	goto	l2432
  9087  1316                     u3240:
  9088  1316                     l2430:
  9089  1316  1467               	bsf	___fladd@aexp,0
  9090  1317                     l2432:
  9091  1317  0867               	movf	___fladd@aexp,w
  9092  1318  1903               	btfsc	3,2
  9093  1319  2B1B               	goto	u3251
  9094  131A  2B1C               	goto	u3250
  9095  131B                     u3251:
  9096  131B  2B2C               	goto	l2442
  9097  131C                     u3250:
  9098  131C                     l2434:
  9099  131C  0A67               	incf	___fladd@aexp,w
  9100  131D  1D03               	btfss	3,2
  9101  131E  2B20               	goto	u3261
  9102  131F  2B21               	goto	u3260
  9103  1320                     u3261:
  9104  1320  2B29               	goto	l2438
  9105  1321                     u3260:
  9106  1321                     l2436:
  9107  1321  3000               	movlw	0
  9108  1322  00DD               	movwf	___fladd@a+3
  9109  1323  3000               	movlw	0
  9110  1324  00DC               	movwf	___fladd@a+2
  9111  1325  3000               	movlw	0
  9112  1326  00DB               	movwf	___fladd@a+1
  9113  1327  3000               	movlw	0
  9114  1328  00DA               	movwf	___fladd@a
  9115  1329                     l2438:
  9116  1329  17DC               	bsf	___fladd@a+2,7
  9117  132A                     l2440:
  9118  132A  01DD               	clrf	___fladd@a+3
  9119  132B  2B34               	goto	l670
  9120  132C                     l2442:
  9121  132C  3000               	movlw	0
  9122  132D  00DD               	movwf	___fladd@a+3
  9123  132E  3000               	movlw	0
  9124  132F  00DC               	movwf	___fladd@a+2
  9125  1330  3000               	movlw	0
  9126  1331  00DB               	movwf	___fladd@a+1
  9127  1332  3000               	movlw	0
  9128  1333  00DA               	movwf	___fladd@a
  9129  1334                     l670:
  9130  1334  0868               	movf	___fladd@bexp,w
  9131  1335  0267               	subwf	___fladd@aexp,w
  9132  1336  1803               	skipnc
  9133  1337  2B39               	goto	u3271
  9134  1338  2B3A               	goto	u3270
  9135  1339                     u3271:
  9136  1339  2B7E               	goto	l2478
  9137  133A                     u3270:
  9138  133A                     l2444:
  9139  133A  1F66               	btfss	___fladd@signs,6
  9140  133B  2B3D               	goto	u3281
  9141  133C  2B3E               	goto	u3280
  9142  133D                     u3281:
  9143  133D  2B42               	goto	l2448
  9144  133E                     u3280:
  9145  133E                     l2446:
  9146  133E  3080               	movlw	128
  9147  133F  00DE               	movwf	??___fladd
  9148  1340  085E               	movf	??___fladd,w
  9149  1341  06E6               	xorwf	___fladd@signs,f
  9150  1342                     l2448:
  9151  1342  0868               	movf	___fladd@bexp,w
  9152  1343  00DE               	movwf	??___fladd
  9153  1344  085E               	movf	??___fladd,w
  9154  1345  00E9               	movwf	___fladd@grs
  9155  1346                     l2450:
  9156  1346  0867               	movf	___fladd@aexp,w
  9157  1347  00DE               	movwf	??___fladd
  9158  1348  085E               	movf	??___fladd,w
  9159  1349  00E8               	movwf	___fladd@bexp
  9160  134A                     l2452:
  9161  134A  0869               	movf	___fladd@grs,w
  9162  134B  00DE               	movwf	??___fladd
  9163  134C  085E               	movf	??___fladd,w
  9164  134D  00E7               	movwf	___fladd@aexp
  9165  134E                     l2454:
  9166  134E  0856               	movf	___fladd@b,w
  9167  134F  00DE               	movwf	??___fladd
  9168  1350  085E               	movf	??___fladd,w
  9169  1351  00E9               	movwf	___fladd@grs
  9170  1352                     l2456:
  9171  1352  085A               	movf	___fladd@a,w
  9172  1353  00DE               	movwf	??___fladd
  9173  1354  085E               	movf	??___fladd,w
  9174  1355  00D6               	movwf	___fladd@b
  9175  1356                     l2458:
  9176  1356  0869               	movf	___fladd@grs,w
  9177  1357  00DE               	movwf	??___fladd
  9178  1358  085E               	movf	??___fladd,w
  9179  1359  00DA               	movwf	___fladd@a
  9180  135A                     l2460:
  9181  135A  0857               	movf	___fladd@b+1,w
  9182  135B  00DE               	movwf	??___fladd
  9183  135C  085E               	movf	??___fladd,w
  9184  135D  00E9               	movwf	___fladd@grs
  9185  135E                     l2462:
  9186  135E  085B               	movf	___fladd@a+1,w
  9187  135F  00DE               	movwf	??___fladd
  9188  1360  085E               	movf	??___fladd,w
  9189  1361  00D7               	movwf	___fladd@b+1
  9190  1362                     l2464:
  9191  1362  0869               	movf	___fladd@grs,w
  9192  1363  00DE               	movwf	??___fladd
  9193  1364  085E               	movf	??___fladd,w
  9194  1365  00DB               	movwf	___fladd@a+1
  9195  1366                     l2466:
  9196  1366  0858               	movf	___fladd@b+2,w
  9197  1367  00DE               	movwf	??___fladd
  9198  1368  085E               	movf	??___fladd,w
  9199  1369  00E9               	movwf	___fladd@grs
  9200  136A                     l2468:
  9201  136A  085C               	movf	___fladd@a+2,w
  9202  136B  00DE               	movwf	??___fladd
  9203  136C  085E               	movf	??___fladd,w
  9204  136D  00D8               	movwf	___fladd@b+2
  9205  136E                     l2470:
  9206  136E  0869               	movf	___fladd@grs,w
  9207  136F  00DE               	movwf	??___fladd
  9208  1370  085E               	movf	??___fladd,w
  9209  1371  00DC               	movwf	___fladd@a+2
  9210  1372                     l2472:
  9211  1372  0859               	movf	___fladd@b+3,w
  9212  1373  00DE               	movwf	??___fladd
  9213  1374  085E               	movf	??___fladd,w
  9214  1375  00E9               	movwf	___fladd@grs
  9215  1376                     l2474:
  9216  1376  085D               	movf	___fladd@a+3,w
  9217  1377  00DE               	movwf	??___fladd
  9218  1378  085E               	movf	??___fladd,w
  9219  1379  00D9               	movwf	___fladd@b+3
  9220  137A                     l2476:
  9221  137A  0869               	movf	___fladd@grs,w
  9222  137B  00DE               	movwf	??___fladd
  9223  137C  085E               	movf	??___fladd,w
  9224  137D  00DD               	movwf	___fladd@a+3
  9225  137E                     l2478:
  9226  137E  01E9               	clrf	___fladd@grs
  9227  137F                     l2480:
  9228  137F  0867               	movf	___fladd@aexp,w
  9229  1380  00DE               	movwf	??___fladd
  9230  1381  01DF               	clrf	??___fladd+1
  9231  1382  085F               	movf	??___fladd+1,w
  9232  1383  00E1               	movwf	??___fladd+3
  9233  1384  0868               	movf	___fladd@bexp,w
  9234  1385  025E               	subwf	??___fladd,w
  9235  1386  00E0               	movwf	??___fladd+2
  9236  1387  1C03               	skipc
  9237  1388  03E1               	decf	??___fladd+3,f
  9238  1389  0861               	movf	??___fladd+3,w
  9239  138A  3A80               	xorlw	128
  9240  138B  00FF               	movwf	btemp+1
  9241  138C  3080               	movlw	128
  9242  138D  027F               	subwf	btemp+1,w
  9243  138E  1D03               	skipz
  9244  138F  2B92               	goto	u3295
  9245  1390  301A               	movlw	26
  9246  1391  0260               	subwf	??___fladd+2,w
  9247  1392                     u3295:
  9248  1392  1C03               	skipc
  9249  1393  2B95               	goto	u3291
  9250  1394  2B96               	goto	u3290
  9251  1395                     u3291:
  9252  1395  2BD3               	goto	l2496
  9253  1396                     u3290:
  9254  1396                     l2482:
  9255  1396  1283               	bcf	3,5	;RP0=0, select bank0
  9256  1397  1303               	bcf	3,6	;RP1=0, select bank0
  9257  1398  0859               	movf	___fladd@b+3,w
  9258  1399  0458               	iorwf	___fladd@b+2,w
  9259  139A  0457               	iorwf	___fladd@b+1,w
  9260  139B  0456               	iorwf	___fladd@b,w
  9261  139C  1D03               	skipz
  9262  139D  2B9F               	goto	u3301
  9263  139E  2BA1               	goto	u3300
  9264  139F                     u3301:
  9265  139F  3001               	movlw	1
  9266  13A0  2BA2               	goto	u3310
  9267  13A1                     u3300:
  9268  13A1  3000               	movlw	0
  9269  13A2                     u3310:
  9270  13A2  00DE               	movwf	??___fladd
  9271  13A3  085E               	movf	??___fladd,w
  9272  13A4  00E9               	movwf	___fladd@grs
  9273  13A5  3000               	movlw	0
  9274  13A6  00D9               	movwf	___fladd@b+3
  9275  13A7  3000               	movlw	0
  9276  13A8  00D8               	movwf	___fladd@b+2
  9277  13A9  3000               	movlw	0
  9278  13AA  00D7               	movwf	___fladd@b+1
  9279  13AB  3000               	movlw	0
  9280  13AC  00D6               	movwf	___fladd@b
  9281  13AD  0867               	movf	___fladd@aexp,w
  9282  13AE  00DE               	movwf	??___fladd
  9283  13AF  085E               	movf	??___fladd,w
  9284  13B0  00E8               	movwf	___fladd@bexp
  9285  13B1  2BDB               	goto	l674
  9286  13B2                     l676:
  9287  13B2  1C69               	btfss	___fladd@grs,0
  9288  13B3  2BB5               	goto	u3321
  9289  13B4  2BB6               	goto	u3320
  9290  13B5                     u3321:
  9291  13B5  2BBF               	goto	l2486
  9292  13B6                     u3320:
  9293  13B6                     l2484:
  9294  13B6  0869               	movf	___fladd@grs,w
  9295  13B7  00DE               	movwf	??___fladd
  9296  13B8  1003               	clrc
  9297  13B9  0C5E               	rrf	??___fladd,w
  9298  13BA  3801               	iorlw	1
  9299  13BB  00DF               	movwf	??___fladd+1
  9300  13BC  085F               	movf	??___fladd+1,w
  9301  13BD  00E9               	movwf	___fladd@grs
  9302  13BE  2BC1               	goto	l2488
  9303  13BF                     l2486:
  9304  13BF  1003               	clrc
  9305  13C0  0CE9               	rrf	___fladd@grs,f
  9306  13C1                     l2488:
  9307  13C1  1C56               	btfss	___fladd@b,0
  9308  13C2  2BC4               	goto	u3331
  9309  13C3  2BC5               	goto	u3330
  9310  13C4                     u3331:
  9311  13C4  2BC6               	goto	l2492
  9312  13C5                     u3330:
  9313  13C5                     l2490:
  9314  13C5  17E9               	bsf	___fladd@grs,7
  9315  13C6                     l2492:
  9316  13C6  3001               	movlw	1
  9317  13C7  00DE               	movwf	??___fladd
  9318  13C8                     u3345:
  9319  13C8  0D59               	rlf	___fladd@b+3,w
  9320  13C9  0CD9               	rrf	___fladd@b+3,f
  9321  13CA  0CD8               	rrf	___fladd@b+2,f
  9322  13CB  0CD7               	rrf	___fladd@b+1,f
  9323  13CC  0CD6               	rrf	___fladd@b,f
  9324  13CD  0BDE               	decfsz	??___fladd& (0+127),f
  9325  13CE  2BC8               	goto	u3345
  9326  13CF                     l2494:
  9327  13CF  3001               	movlw	1
  9328  13D0  00DE               	movwf	??___fladd
  9329  13D1  085E               	movf	??___fladd,w
  9330  13D2  07E8               	addwf	___fladd@bexp,f
  9331  13D3                     l2496:
  9332  13D3  1283               	bcf	3,5	;RP0=0, select bank0
  9333  13D4  1303               	bcf	3,6	;RP1=0, select bank0
  9334  13D5  0867               	movf	___fladd@aexp,w
  9335  13D6  0268               	subwf	___fladd@bexp,w
  9336  13D7  1C03               	skipc
  9337  13D8  2BDA               	goto	u3351
  9338  13D9  2BDB               	goto	u3350
  9339  13DA                     u3351:
  9340  13DA  2BB2               	goto	l676
  9341  13DB                     u3350:
  9342  13DB                     l674:
  9343  13DB  1B66               	btfsc	___fladd@signs,6
  9344  13DC  2BDE               	goto	u3361
  9345  13DD  2BDF               	goto	u3360
  9346  13DE                     u3361:
  9347  13DE  2C2A               	goto	l2522
  9348  13DF                     u3360:
  9349  13DF                     l2498:
  9350  13DF  0868               	movf	___fladd@bexp,w
  9351  13E0  1D03               	btfss	3,2
  9352  13E1  2BE3               	goto	u3371
  9353  13E2  2BE4               	goto	u3370
  9354  13E3                     u3371:
  9355  13E3  2BED               	goto	l2504
  9356  13E4                     u3370:
  9357  13E4                     l2500:
  9358  13E4  3000               	movlw	0
  9359  13E5  00D9               	movwf	?___fladd+3
  9360  13E6  3000               	movlw	0
  9361  13E7  00D8               	movwf	?___fladd+2
  9362  13E8  3000               	movlw	0
  9363  13E9  00D7               	movwf	?___fladd+1
  9364  13EA  3000               	movlw	0
  9365  13EB  00D6               	movwf	?___fladd
  9366  13EC  2D58               	goto	l683
  9367  13ED                     l2504:
  9368  13ED  085A               	movf	___fladd@a,w
  9369  13EE  07D6               	addwf	___fladd@b,f
  9370  13EF  085B               	movf	___fladd@a+1,w
  9371  13F0  1103               	clrz
  9372  13F1  1803               	skipnc
  9373  13F2  3E01               	addlw	1
  9374  13F3  1903               	skipnz
  9375  13F4  2BF6               	goto	u3381
  9376  13F5  07D7               	addwf	___fladd@b+1,f
  9377  13F6                     u3381:
  9378  13F6  085C               	movf	___fladd@a+2,w
  9379  13F7  1103               	clrz
  9380  13F8  1803               	skipnc
  9381  13F9  3E01               	addlw	1
  9382  13FA  1903               	skipnz
  9383  13FB  2BFD               	goto	u3382
  9384  13FC  07D8               	addwf	___fladd@b+2,f
  9385  13FD                     u3382:
  9386  13FD  085D               	movf	___fladd@a+3,w
  9387  13FE  1103               	clrz
  9388  13FF  1803               	skipnc
  9389  1400  3E01               	addlw	1
  9390  1401  1903               	skipnz
  9391  1402  2C04               	goto	u3383
  9392  1403  07D9               	addwf	___fladd@b+3,f
  9393  1404                     u3383:
  9394  1404                     l2506:
  9395  1404  1C59               	btfss	___fladd@b+3,0
  9396  1405  2C07               	goto	u3391
  9397  1406  2C08               	goto	u3390
  9398  1407                     u3391:
  9399  1407  2CDE               	goto	l2556
  9400  1408                     u3390:
  9401  1408                     l2508:
  9402  1408  1C69               	btfss	___fladd@grs,0
  9403  1409  2C0B               	goto	u3401
  9404  140A  2C0C               	goto	u3400
  9405  140B                     u3401:
  9406  140B  2C15               	goto	l2512
  9407  140C                     u3400:
  9408  140C                     l2510:
  9409  140C  0869               	movf	___fladd@grs,w
  9410  140D  00DE               	movwf	??___fladd
  9411  140E  1003               	clrc
  9412  140F  0C5E               	rrf	??___fladd,w
  9413  1410  3801               	iorlw	1
  9414  1411  00DF               	movwf	??___fladd+1
  9415  1412  085F               	movf	??___fladd+1,w
  9416  1413  00E9               	movwf	___fladd@grs
  9417  1414  2C17               	goto	l2514
  9418  1415                     l2512:
  9419  1415  1003               	clrc
  9420  1416  0CE9               	rrf	___fladd@grs,f
  9421  1417                     l2514:
  9422  1417  1C56               	btfss	___fladd@b,0
  9423  1418  2C1A               	goto	u3411
  9424  1419  2C1B               	goto	u3410
  9425  141A                     u3411:
  9426  141A  2C1C               	goto	l2518
  9427  141B                     u3410:
  9428  141B                     l2516:
  9429  141B  17E9               	bsf	___fladd@grs,7
  9430  141C                     l2518:
  9431  141C  3001               	movlw	1
  9432  141D  00DE               	movwf	??___fladd
  9433  141E                     u3425:
  9434  141E  0D59               	rlf	___fladd@b+3,w
  9435  141F  0CD9               	rrf	___fladd@b+3,f
  9436  1420  0CD8               	rrf	___fladd@b+2,f
  9437  1421  0CD7               	rrf	___fladd@b+1,f
  9438  1422  0CD6               	rrf	___fladd@b,f
  9439  1423  0BDE               	decfsz	??___fladd& (0+127),f
  9440  1424  2C1E               	goto	u3425
  9441  1425                     l2520:
  9442  1425  3001               	movlw	1
  9443  1426  00DE               	movwf	??___fladd
  9444  1427  085E               	movf	??___fladd,w
  9445  1428  07E8               	addwf	___fladd@bexp,f
  9446  1429  2CDE               	goto	l2556
  9447  142A                     l2522:
  9448  142A  0859               	movf	___fladd@b+3,w
  9449  142B  3A80               	xorlw	128
  9450  142C  00FF               	movwf	btemp+1
  9451  142D  085D               	movf	___fladd@a+3,w
  9452  142E  3A80               	xorlw	128
  9453  142F  027F               	subwf	btemp+1,w
  9454  1430  1D03               	skipz
  9455  1431  2C3C               	goto	u3433
  9456  1432  085C               	movf	___fladd@a+2,w
  9457  1433  0258               	subwf	___fladd@b+2,w
  9458  1434  1D03               	skipz
  9459  1435  2C3C               	goto	u3433
  9460  1436  085B               	movf	___fladd@a+1,w
  9461  1437  0257               	subwf	___fladd@b+1,w
  9462  1438  1D03               	skipz
  9463  1439  2C3C               	goto	u3433
  9464  143A  085A               	movf	___fladd@a,w
  9465  143B  0256               	subwf	___fladd@b,w
  9466  143C                     u3433:
  9467  143C  1803               	skipnc
  9468  143D  2C3F               	goto	u3431
  9469  143E  2C40               	goto	u3430
  9470  143F                     u3431:
  9471  143F  2C98               	goto	l2532
  9472  1440                     u3430:
  9473  1440                     l2524:
  9474  1440  30FF               	movlw	255
  9475  1441  00DE               	movwf	??___fladd
  9476  1442  30FF               	movlw	255
  9477  1443  00DF               	movwf	??___fladd+1
  9478  1444  30FF               	movlw	255
  9479  1445  00E0               	movwf	??___fladd+2
  9480  1446  30FF               	movlw	255
  9481  1447  00E1               	movwf	??___fladd+3
  9482  1448  085A               	movf	___fladd@a,w
  9483  1449  00E2               	movwf	??___fladd+4
  9484  144A  085B               	movf	___fladd@a+1,w
  9485  144B  00E3               	movwf	??___fladd+5
  9486  144C  085C               	movf	___fladd@a+2,w
  9487  144D  00E4               	movwf	??___fladd+6
  9488  144E  085D               	movf	___fladd@a+3,w
  9489  144F  00E5               	movwf	??___fladd+7
  9490  1450  0856               	movf	___fladd@b,w
  9491  1451  02E2               	subwf	??___fladd+4,f
  9492  1452  0857               	movf	___fladd@b+1,w
  9493  1453  1C03               	skipc
  9494  1454  0F57               	incfsz	___fladd@b+1,w
  9495  1455  2C57               	goto	u3441
  9496  1456  2C58               	goto	u3442
  9497  1457                     u3441:
  9498  1457  02E3               	subwf	??___fladd+5,f
  9499  1458                     u3442:
  9500  1458  0858               	movf	___fladd@b+2,w
  9501  1459  1C03               	skipc
  9502  145A  0F58               	incfsz	___fladd@b+2,w
  9503  145B  2C5D               	goto	u3443
  9504  145C  2C5E               	goto	u3444
  9505  145D                     u3443:
  9506  145D  02E4               	subwf	??___fladd+6,f
  9507  145E                     u3444:
  9508  145E  0859               	movf	___fladd@b+3,w
  9509  145F  1C03               	skipc
  9510  1460  0F59               	incfsz	___fladd@b+3,w
  9511  1461  2C63               	goto	u3445
  9512  1462  2C64               	goto	u3446
  9513  1463                     u3445:
  9514  1463  02E5               	subwf	??___fladd+7,f
  9515  1464                     u3446:
  9516  1464  0862               	movf	??___fladd+4,w
  9517  1465  07DE               	addwf	??___fladd,f
  9518  1466  0863               	movf	??___fladd+5,w
  9519  1467  1803               	skipnc
  9520  1468  0F63               	incfsz	??___fladd+5,w
  9521  1469  2C6B               	goto	u3450
  9522  146A  2C6C               	goto	u3451
  9523  146B                     u3450:
  9524  146B  07DF               	addwf	??___fladd+1,f
  9525  146C                     u3451:
  9526  146C  0864               	movf	??___fladd+6,w
  9527  146D  1803               	skipnc
  9528  146E  0F64               	incfsz	??___fladd+6,w
  9529  146F  2C71               	goto	u3452
  9530  1470  2C72               	goto	u3453
  9531  1471                     u3452:
  9532  1471  07E0               	addwf	??___fladd+2,f
  9533  1472                     u3453:
  9534  1472  0865               	movf	??___fladd+7,w
  9535  1473  1803               	skipnc
  9536  1474  0A65               	incf	??___fladd+7,w
  9537  1475  07E1               	addwf	??___fladd+3,f
  9538  1476  0861               	movf	??___fladd+3,w
  9539  1477  00D9               	movwf	___fladd@b+3
  9540  1478  0860               	movf	??___fladd+2,w
  9541  1479  00D8               	movwf	___fladd@b+2
  9542  147A  085F               	movf	??___fladd+1,w
  9543  147B  00D7               	movwf	___fladd@b+1
  9544  147C  085E               	movf	??___fladd,w
  9545  147D  00D6               	movwf	___fladd@b
  9546  147E                     l2526:
  9547  147E  3080               	movlw	128
  9548  147F  00DE               	movwf	??___fladd
  9549  1480  085E               	movf	??___fladd,w
  9550  1481  06E6               	xorwf	___fladd@signs,f
  9551  1482  09E9               	comf	___fladd@grs,f
  9552  1483  0AE9               	incf	___fladd@grs,f
  9553  1484                     l2528:
  9554  1484  0869               	movf	___fladd@grs,w
  9555  1485  1D03               	btfss	3,2
  9556  1486  2C88               	goto	u3461
  9557  1487  2C89               	goto	u3460
  9558  1488                     u3461:
  9559  1488  2CA6               	goto	l691
  9560  1489                     u3460:
  9561  1489                     l2530:
  9562  1489  3001               	movlw	1
  9563  148A  07D6               	addwf	___fladd@b,f
  9564  148B  3000               	movlw	0
  9565  148C  1803               	skipnc
  9566  148D  3001               	movlw	1
  9567  148E  07D7               	addwf	___fladd@b+1,f
  9568  148F  3000               	movlw	0
  9569  1490  1803               	skipnc
  9570  1491  3001               	movlw	1
  9571  1492  07D8               	addwf	___fladd@b+2,f
  9572  1493  3000               	movlw	0
  9573  1494  1803               	skipnc
  9574  1495  3001               	movlw	1
  9575  1496  07D9               	addwf	___fladd@b+3,f
  9576  1497  2CA6               	goto	l691
  9577  1498                     l2532:
  9578  1498  085A               	movf	___fladd@a,w
  9579  1499  02D6               	subwf	___fladd@b,f
  9580  149A  085B               	movf	___fladd@a+1,w
  9581  149B  1C03               	skipc
  9582  149C  0F5B               	incfsz	___fladd@a+1,w
  9583  149D  02D7               	subwf	___fladd@b+1,f
  9584  149E  085C               	movf	___fladd@a+2,w
  9585  149F  1C03               	skipc
  9586  14A0  0F5C               	incfsz	___fladd@a+2,w
  9587  14A1  02D8               	subwf	___fladd@b+2,f
  9588  14A2  085D               	movf	___fladd@a+3,w
  9589  14A3  1C03               	skipc
  9590  14A4  0F5D               	incfsz	___fladd@a+3,w
  9591  14A5  02D9               	subwf	___fladd@b+3,f
  9592  14A6                     l691:
  9593  14A6  0859               	movf	___fladd@b+3,w
  9594  14A7  0458               	iorwf	___fladd@b+2,w
  9595  14A8  0457               	iorwf	___fladd@b+1,w
  9596  14A9  0456               	iorwf	___fladd@b,w
  9597  14AA  1D03               	skipz
  9598  14AB  2CAD               	goto	u3471
  9599  14AC  2CAE               	goto	u3470
  9600  14AD                     u3471:
  9601  14AD  2CDA               	goto	l2554
  9602  14AE                     u3470:
  9603  14AE                     l2534:
  9604  14AE  0869               	movf	___fladd@grs,w
  9605  14AF  1D03               	btfss	3,2
  9606  14B0  2CB2               	goto	u3481
  9607  14B1  2CB3               	goto	u3480
  9608  14B2                     u3481:
  9609  14B2  2CDA               	goto	l2554
  9610  14B3                     u3480:
  9611  14B3                     l2536:
  9612  14B3  3000               	movlw	0
  9613  14B4  00D9               	movwf	?___fladd+3
  9614  14B5  3000               	movlw	0
  9615  14B6  00D8               	movwf	?___fladd+2
  9616  14B7  3000               	movlw	0
  9617  14B8  00D7               	movwf	?___fladd+1
  9618  14B9  3000               	movlw	0
  9619  14BA  00D6               	movwf	?___fladd
  9620  14BB  2D58               	goto	l683
  9621  14BC                     l2540:
  9622  14BC  3001               	movlw	1
  9623  14BD  00DE               	movwf	??___fladd
  9624  14BE                     u3495:
  9625  14BE  1003               	clrc
  9626  14BF  0DD6               	rlf	___fladd@b,f
  9627  14C0  0DD7               	rlf	___fladd@b+1,f
  9628  14C1  0DD8               	rlf	___fladd@b+2,f
  9629  14C2  0DD9               	rlf	___fladd@b+3,f
  9630  14C3  0BDE               	decfsz	??___fladd,f
  9631  14C4  2CBE               	goto	u3495
  9632  14C5                     l2542:
  9633  14C5  1FE9               	btfss	___fladd@grs,7
  9634  14C6  2CC8               	goto	u3501
  9635  14C7  2CC9               	goto	u3500
  9636  14C8                     u3501:
  9637  14C8  2CCA               	goto	l695
  9638  14C9                     u3500:
  9639  14C9                     l2544:
  9640  14C9  1456               	bsf	___fladd@b,0
  9641  14CA                     l695:
  9642  14CA  1C69               	btfss	___fladd@grs,0
  9643  14CB  2CCD               	goto	u3511
  9644  14CC  2CCE               	goto	u3510
  9645  14CD                     u3511:
  9646  14CD  2CD1               	goto	l2548
  9647  14CE                     u3510:
  9648  14CE                     l2546:
  9649  14CE  1403               	setc
  9650  14CF  0DE9               	rlf	___fladd@grs,f
  9651  14D0  2CD3               	goto	l2550
  9652  14D1                     l2548:
  9653  14D1  1003               	clrc
  9654  14D2  0DE9               	rlf	___fladd@grs,f
  9655  14D3                     l2550:
  9656  14D3  0868               	movf	___fladd@bexp,w
  9657  14D4  1903               	btfsc	3,2
  9658  14D5  2CD7               	goto	u3521
  9659  14D6  2CD8               	goto	u3520
  9660  14D7                     u3521:
  9661  14D7  2CDA               	goto	l2554
  9662  14D8                     u3520:
  9663  14D8                     l2552:
  9664  14D8  3001               	movlw	1
  9665  14D9  02E8               	subwf	___fladd@bexp,f
  9666  14DA                     l2554:
  9667  14DA  1FD8               	btfss	___fladd@b+2,7
  9668  14DB  2CDD               	goto	u3531
  9669  14DC  2CDE               	goto	u3530
  9670  14DD                     u3531:
  9671  14DD  2CBC               	goto	l2540
  9672  14DE                     u3530:
  9673  14DE                     l2556:
  9674  14DE  01E7               	clrf	___fladd@aexp
  9675  14DF                     l2558:
  9676  14DF  1FE9               	btfss	___fladd@grs,7
  9677  14E0  2CE2               	goto	u3541
  9678  14E1  2CE3               	goto	u3540
  9679  14E2                     u3541:
  9680  14E2  2CF1               	goto	l2566
  9681  14E3                     u3540:
  9682  14E3                     l2560:
  9683  14E3  0869               	movf	___fladd@grs,w
  9684  14E4  397F               	andlw	127
  9685  14E5  1903               	btfsc	3,2
  9686  14E6  2CE8               	goto	u3551
  9687  14E7  2CE9               	goto	u3550
  9688  14E8                     u3551:
  9689  14E8  2CEC               	goto	l701
  9690  14E9                     u3550:
  9691  14E9                     l2562:
  9692  14E9  01E7               	clrf	___fladd@aexp
  9693  14EA  0AE7               	incf	___fladd@aexp,f
  9694  14EB  2CF1               	goto	l2566
  9695  14EC                     l701:
  9696  14EC  1C56               	btfss	___fladd@b,0
  9697  14ED  2CEF               	goto	u3561
  9698  14EE  2CF0               	goto	u3560
  9699  14EF                     u3561:
  9700  14EF  2CF1               	goto	l2566
  9701  14F0                     u3560:
  9702  14F0  2CE9               	goto	l2562
  9703  14F1                     l2566:
  9704  14F1  0867               	movf	___fladd@aexp,w
  9705  14F2  1903               	btfsc	3,2
  9706  14F3  2CF5               	goto	u3571
  9707  14F4  2CF6               	goto	u3570
  9708  14F5                     u3571:
  9709  14F5  2D2A               	goto	l704
  9710  14F6                     u3570:
  9711  14F6                     l2568:
  9712  14F6  3001               	movlw	1
  9713  14F7  07D6               	addwf	___fladd@b,f
  9714  14F8  3000               	movlw	0
  9715  14F9  1803               	skipnc
  9716  14FA  3001               	movlw	1
  9717  14FB  07D7               	addwf	___fladd@b+1,f
  9718  14FC  3000               	movlw	0
  9719  14FD  1803               	skipnc
  9720  14FE  3001               	movlw	1
  9721  14FF  07D8               	addwf	___fladd@b+2,f
  9722  1500  3000               	movlw	0
  9723  1501  1803               	skipnc
  9724  1502  3001               	movlw	1
  9725  1503  07D9               	addwf	___fladd@b+3,f
  9726  1504                     l2570:
  9727  1504  1C59               	btfss	___fladd@b+3,0
  9728  1505  2D07               	goto	u3581
  9729  1506  2D08               	goto	u3580
  9730  1507                     u3581:
  9731  1507  2D2A               	goto	l704
  9732  1508                     u3580:
  9733  1508                     l2572:
  9734  1508  0856               	movf	___fladd@b,w
  9735  1509  00DE               	movwf	??___fladd
  9736  150A  0857               	movf	___fladd@b+1,w
  9737  150B  00DF               	movwf	??___fladd+1
  9738  150C  0858               	movf	___fladd@b+2,w
  9739  150D  00E0               	movwf	??___fladd+2
  9740  150E  0859               	movf	___fladd@b+3,w
  9741  150F  00E1               	movwf	??___fladd+3
  9742  1510  3001               	movlw	1
  9743  1511  00E2               	movwf	??___fladd+4
  9744  1512                     u3595:
  9745  1512  0D61               	rlf	??___fladd+3,w
  9746  1513  0CE1               	rrf	??___fladd+3,f
  9747  1514  0CE0               	rrf	??___fladd+2,f
  9748  1515  0CDF               	rrf	??___fladd+1,f
  9749  1516  0CDE               	rrf	??___fladd,f
  9750  1517                     u3590:
  9751  1517  0BE2               	decfsz	??___fladd+4,f
  9752  1518  2D12               	goto	u3595
  9753  1519  0861               	movf	??___fladd+3,w
  9754  151A  00D9               	movwf	___fladd@b+3
  9755  151B  0860               	movf	??___fladd+2,w
  9756  151C  00D8               	movwf	___fladd@b+2
  9757  151D  085F               	movf	??___fladd+1,w
  9758  151E  00D7               	movwf	___fladd@b+1
  9759  151F  085E               	movf	??___fladd,w
  9760  1520  00D6               	movwf	___fladd@b
  9761  1521  0A68               	incf	___fladd@bexp,w
  9762  1522  1903               	btfsc	3,2
  9763  1523  2D25               	goto	u3601
  9764  1524  2D26               	goto	u3600
  9765  1525                     u3601:
  9766  1525  2D2A               	goto	l704
  9767  1526                     u3600:
  9768  1526                     l2574:
  9769  1526  3001               	movlw	1
  9770  1527  00DE               	movwf	??___fladd
  9771  1528  085E               	movf	??___fladd,w
  9772  1529  07E8               	addwf	___fladd@bexp,f
  9773  152A                     l704:
  9774  152A  0A68               	incf	___fladd@bexp,w
  9775  152B  1903               	btfsc	3,2
  9776  152C  2D2E               	goto	u3611
  9777  152D  2D2F               	goto	u3610
  9778  152E                     u3611:
  9779  152E  2D34               	goto	l2578
  9780  152F                     u3610:
  9781  152F                     l2576:
  9782  152F  0868               	movf	___fladd@bexp,w
  9783  1530  1D03               	btfss	3,2
  9784  1531  2D33               	goto	u3621
  9785  1532  2D34               	goto	u3620
  9786  1533                     u3621:
  9787  1533  2D42               	goto	l2584
  9788  1534                     u3620:
  9789  1534                     l2578:
  9790  1534  3000               	movlw	0
  9791  1535  00D9               	movwf	___fladd@b+3
  9792  1536  3000               	movlw	0
  9793  1537  00D8               	movwf	___fladd@b+2
  9794  1538  3000               	movlw	0
  9795  1539  00D7               	movwf	___fladd@b+1
  9796  153A  3000               	movlw	0
  9797  153B  00D6               	movwf	___fladd@b
  9798  153C                     l2580:
  9799  153C  0868               	movf	___fladd@bexp,w
  9800  153D  1D03               	btfss	3,2
  9801  153E  2D40               	goto	u3631
  9802  153F  2D41               	goto	u3630
  9803  1540                     u3631:
  9804  1540  2D42               	goto	l2584
  9805  1541                     u3630:
  9806  1541                     l2582:
  9807  1541  01E6               	clrf	___fladd@signs
  9808  1542                     l2584:
  9809  1542  1C68               	btfss	___fladd@bexp,0
  9810  1543  2D45               	goto	u3641
  9811  1544  2D46               	goto	u3640
  9812  1545                     u3641:
  9813  1545  2D48               	goto	l2588
  9814  1546                     u3640:
  9815  1546                     l2586:
  9816  1546  17D8               	bsf	___fladd@b+2,7
  9817  1547  2D4C               	goto	l712
  9818  1548                     l2588:
  9819  1548  307F               	movlw	127
  9820  1549  00DE               	movwf	??___fladd
  9821  154A  085E               	movf	??___fladd,w
  9822  154B  05D8               	andwf	___fladd@b+2,f
  9823  154C                     l712:
  9824  154C  0868               	movf	___fladd@bexp,w
  9825  154D  00DE               	movwf	??___fladd
  9826  154E  1003               	clrc
  9827  154F  0C5E               	rrf	??___fladd,w
  9828  1550  00DF               	movwf	??___fladd+1
  9829  1551  085F               	movf	??___fladd+1,w
  9830  1552  00D9               	movwf	___fladd@b+3
  9831  1553                     l2590:
  9832  1553  1FE6               	btfss	___fladd@signs,7
  9833  1554  2D56               	goto	u3651
  9834  1555  2D57               	goto	u3650
  9835  1556                     u3651:
  9836  1556  2D58               	goto	l713
  9837  1557                     u3650:
  9838  1557                     l2592:
  9839  1557  17D9               	bsf	___fladd@b+3,7
  9840  1558                     l713:
  9841  1558                     l683:
  9842  1558  0008               	return
  9843  1559                     __end_of___fladd:
  9844                           
  9845                           	psect	text20
  9846  1955                     __ptext20:	
  9847 ;; *************** function ___flneg *****************
  9848 ;; Defined at:
  9849 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;  f1              4    3[COMMON] unsigned char 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  4    3[COMMON] unsigned char 
  9856 ;; Registers used:
  9857 ;;		wreg
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9863 ;;      Params:         4       0       0       0       0
  9864 ;;      Locals:         0       0       0       0       0
  9865 ;;      Temps:          0       0       0       0       0
  9866 ;;      Totals:         4       0       0       0       0
  9867 ;;Total ram usage:        4 bytes
  9868 ;; Hardware stack levels used: 1
  9869 ;; Hardware stack levels required when called: 1
  9870 ;; This function calls:
  9871 ;;		Nothing
  9872 ;; This function is called by:
  9873 ;;		_sprintf
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           
  9878                           ;psect for function ___flneg
  9879  1955                     ___flneg:
  9880  1955                     l3004:	
  9881                           ;incstack = 0
  9882                           ; Regs used in ___flneg: [wreg]
  9883                           
  9884  1955  0876               	movf	___flneg@f1+3,w
  9885  1956  0475               	iorwf	___flneg@f1+2,w
  9886  1957  0474               	iorwf	___flneg@f1+1,w
  9887  1958  0473               	iorwf	___flneg@f1,w
  9888  1959  1903               	skipnz
  9889  195A  295C               	goto	u4781
  9890  195B  295D               	goto	u4780
  9891  195C                     u4781:
  9892  195C  295F               	goto	l3008
  9893  195D                     u4780:
  9894  195D                     l3006:
  9895  195D  3080               	movlw	128
  9896  195E  06F6               	xorwf	___flneg@f1+3,f
  9897  195F                     l3008:
  9898  195F                     l542:
  9899  195F  0008               	return
  9900  1960                     __end_of___flneg:
  9901                           
  9902                           	psect	text21
  9903  1DE3                     __ptext21:	
  9904 ;; *************** function ___flge *****************
  9905 ;; Defined at:
  9906 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;  ff1             4    3[COMMON] unsigned char 
  9909 ;;  ff2             4    7[COMMON] unsigned char 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;		None               void
  9914 ;; Registers used:
  9915 ;;		wreg, status,2, status,0
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9921 ;;      Params:         8       0       0       0       0
  9922 ;;      Locals:         0       0       0       0       0
  9923 ;;      Temps:          0       4       0       0       0
  9924 ;;      Totals:         8       4       0       0       0
  9925 ;;Total ram usage:       12 bytes
  9926 ;; Hardware stack levels used: 1
  9927 ;; Hardware stack levels required when called: 1
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_sprintf
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           
  9936                           ;psect for function ___flge
  9937  1DE3                     ___flge:
  9938  1DE3                     l2984:	
  9939                           ;incstack = 0
  9940                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9941                           
  9942  1DE3  3000               	movlw	0
  9943  1DE4  0573               	andwf	___flge@ff1,w
  9944  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  9945  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  9946  1DE7  00A0               	movwf	??___flge
  9947  1DE8  3000               	movlw	0
  9948  1DE9  0574               	andwf	___flge@ff1+1,w
  9949  1DEA  00A1               	movwf	??___flge+1
  9950  1DEB  3080               	movlw	128
  9951  1DEC  0575               	andwf	___flge@ff1+2,w
  9952  1DED  00A2               	movwf	??___flge+2
  9953  1DEE  307F               	movlw	127
  9954  1DEF  0576               	andwf	___flge@ff1+3,w
  9955  1DF0  00A3               	movwf	??___flge+3
  9956  1DF1  0823               	movf	??___flge+3,w
  9957  1DF2  0422               	iorwf	??___flge+2,w
  9958  1DF3  0421               	iorwf	??___flge+1,w
  9959  1DF4  0420               	iorwf	??___flge,w
  9960  1DF5  1D03               	skipz
  9961  1DF6  2DF8               	goto	u4711
  9962  1DF7  2DF9               	goto	u4710
  9963  1DF8                     u4711:
  9964  1DF8  2E01               	goto	l534
  9965  1DF9                     u4710:
  9966  1DF9                     l2986:
  9967  1DF9  3000               	movlw	0
  9968  1DFA  00F6               	movwf	___flge@ff1+3
  9969  1DFB  3000               	movlw	0
  9970  1DFC  00F5               	movwf	___flge@ff1+2
  9971  1DFD  3000               	movlw	0
  9972  1DFE  00F4               	movwf	___flge@ff1+1
  9973  1DFF  3000               	movlw	0
  9974  1E00  00F3               	movwf	___flge@ff1
  9975  1E01                     l534:
  9976  1E01  3000               	movlw	0
  9977  1E02  0577               	andwf	___flge@ff2,w
  9978  1E03  00A0               	movwf	??___flge
  9979  1E04  3000               	movlw	0
  9980  1E05  0578               	andwf	___flge@ff2+1,w
  9981  1E06  00A1               	movwf	??___flge+1
  9982  1E07  3080               	movlw	128
  9983  1E08  0579               	andwf	___flge@ff2+2,w
  9984  1E09  00A2               	movwf	??___flge+2
  9985  1E0A  307F               	movlw	127
  9986  1E0B  057A               	andwf	___flge@ff2+3,w
  9987  1E0C  00A3               	movwf	??___flge+3
  9988  1E0D  0823               	movf	??___flge+3,w
  9989  1E0E  0422               	iorwf	??___flge+2,w
  9990  1E0F  0421               	iorwf	??___flge+1,w
  9991  1E10  0420               	iorwf	??___flge,w
  9992  1E11  1D03               	skipz
  9993  1E12  2E14               	goto	u4721
  9994  1E13  2E15               	goto	u4720
  9995  1E14                     u4721:
  9996  1E14  2E1D               	goto	l2990
  9997  1E15                     u4720:
  9998  1E15                     l2988:
  9999  1E15  3000               	movlw	0
 10000  1E16  00FA               	movwf	___flge@ff2+3
 10001  1E17  3000               	movlw	0
 10002  1E18  00F9               	movwf	___flge@ff2+2
 10003  1E19  3000               	movlw	0
 10004  1E1A  00F8               	movwf	___flge@ff2+1
 10005  1E1B  3000               	movlw	0
 10006  1E1C  00F7               	movwf	___flge@ff2
 10007  1E1D                     l2990:
 10008  1E1D  1FF6               	btfss	___flge@ff1+3,7
 10009  1E1E  2E20               	goto	u4731
 10010  1E1F  2E21               	goto	u4730
 10011  1E20                     u4731:
 10012  1E20  2E45               	goto	l2994
 10013  1E21                     u4730:
 10014  1E21                     l2992:
 10015  1E21  3000               	movlw	0
 10016  1E22  00A0               	movwf	??___flge
 10017  1E23  3000               	movlw	0
 10018  1E24  00A1               	movwf	??___flge+1
 10019  1E25  3000               	movlw	0
 10020  1E26  00A2               	movwf	??___flge+2
 10021  1E27  3080               	movlw	128
 10022  1E28  00A3               	movwf	??___flge+3
 10023  1E29  0873               	movf	___flge@ff1,w
 10024  1E2A  02A0               	subwf	??___flge,f
 10025  1E2B  0874               	movf	___flge@ff1+1,w
 10026  1E2C  1C03               	skipc
 10027  1E2D  0F74               	incfsz	___flge@ff1+1,w
 10028  1E2E  2E30               	goto	u4741
 10029  1E2F  2E31               	goto	u4742
 10030  1E30                     u4741:
 10031  1E30  02A1               	subwf	??___flge+1,f
 10032  1E31                     u4742:
 10033  1E31  0875               	movf	___flge@ff1+2,w
 10034  1E32  1C03               	skipc
 10035  1E33  0F75               	incfsz	___flge@ff1+2,w
 10036  1E34  2E36               	goto	u4743
 10037  1E35  2E37               	goto	u4744
 10038  1E36                     u4743:
 10039  1E36  02A2               	subwf	??___flge+2,f
 10040  1E37                     u4744:
 10041  1E37  0876               	movf	___flge@ff1+3,w
 10042  1E38  1C03               	skipc
 10043  1E39  0F76               	incfsz	___flge@ff1+3,w
 10044  1E3A  2E3C               	goto	u4745
 10045  1E3B  2E3D               	goto	u4746
 10046  1E3C                     u4745:
 10047  1E3C  02A3               	subwf	??___flge+3,f
 10048  1E3D                     u4746:
 10049  1E3D  0823               	movf	??___flge+3,w
 10050  1E3E  00F6               	movwf	___flge@ff1+3
 10051  1E3F  0822               	movf	??___flge+2,w
 10052  1E40  00F5               	movwf	___flge@ff1+2
 10053  1E41  0821               	movf	??___flge+1,w
 10054  1E42  00F4               	movwf	___flge@ff1+1
 10055  1E43  0820               	movf	??___flge,w
 10056  1E44  00F3               	movwf	___flge@ff1
 10057  1E45                     l2994:
 10058  1E45  1FFA               	btfss	___flge@ff2+3,7
 10059  1E46  2E48               	goto	u4751
 10060  1E47  2E49               	goto	u4750
 10061  1E48                     u4751:
 10062  1E48  2E6D               	goto	l537
 10063  1E49                     u4750:
 10064  1E49                     l2996:
 10065  1E49  3000               	movlw	0
 10066  1E4A  00A0               	movwf	??___flge
 10067  1E4B  3000               	movlw	0
 10068  1E4C  00A1               	movwf	??___flge+1
 10069  1E4D  3000               	movlw	0
 10070  1E4E  00A2               	movwf	??___flge+2
 10071  1E4F  3080               	movlw	128
 10072  1E50  00A3               	movwf	??___flge+3
 10073  1E51  0877               	movf	___flge@ff2,w
 10074  1E52  02A0               	subwf	??___flge,f
 10075  1E53  0878               	movf	___flge@ff2+1,w
 10076  1E54  1C03               	skipc
 10077  1E55  0F78               	incfsz	___flge@ff2+1,w
 10078  1E56  2E58               	goto	u4761
 10079  1E57  2E59               	goto	u4762
 10080  1E58                     u4761:
 10081  1E58  02A1               	subwf	??___flge+1,f
 10082  1E59                     u4762:
 10083  1E59  0879               	movf	___flge@ff2+2,w
 10084  1E5A  1C03               	skipc
 10085  1E5B  0F79               	incfsz	___flge@ff2+2,w
 10086  1E5C  2E5E               	goto	u4763
 10087  1E5D  2E5F               	goto	u4764
 10088  1E5E                     u4763:
 10089  1E5E  02A2               	subwf	??___flge+2,f
 10090  1E5F                     u4764:
 10091  1E5F  087A               	movf	___flge@ff2+3,w
 10092  1E60  1C03               	skipc
 10093  1E61  0F7A               	incfsz	___flge@ff2+3,w
 10094  1E62  2E64               	goto	u4765
 10095  1E63  2E65               	goto	u4766
 10096  1E64                     u4765:
 10097  1E64  02A3               	subwf	??___flge+3,f
 10098  1E65                     u4766:
 10099  1E65  0823               	movf	??___flge+3,w
 10100  1E66  00FA               	movwf	___flge@ff2+3
 10101  1E67  0822               	movf	??___flge+2,w
 10102  1E68  00F9               	movwf	___flge@ff2+2
 10103  1E69  0821               	movf	??___flge+1,w
 10104  1E6A  00F8               	movwf	___flge@ff2+1
 10105  1E6B  0820               	movf	??___flge,w
 10106  1E6C  00F7               	movwf	___flge@ff2
 10107  1E6D                     l537:
 10108  1E6D  3080               	movlw	128
 10109  1E6E  06F6               	xorwf	___flge@ff1+3,f
 10110  1E6F  3080               	movlw	128
 10111  1E70  06FA               	xorwf	___flge@ff2+3,f
 10112  1E71  087A               	movf	___flge@ff2+3,w
 10113  1E72  0276               	subwf	___flge@ff1+3,w
 10114  1E73  1D03               	skipz
 10115  1E74  2E7F               	goto	u4775
 10116  1E75  0879               	movf	___flge@ff2+2,w
 10117  1E76  0275               	subwf	___flge@ff1+2,w
 10118  1E77  1D03               	skipz
 10119  1E78  2E7F               	goto	u4775
 10120  1E79  0878               	movf	___flge@ff2+1,w
 10121  1E7A  0274               	subwf	___flge@ff1+1,w
 10122  1E7B  1D03               	skipz
 10123  1E7C  2E7F               	goto	u4775
 10124  1E7D  0877               	movf	___flge@ff2,w
 10125  1E7E  0273               	subwf	___flge@ff1,w
 10126  1E7F                     u4775:
 10127  1E7F  1803               	skipnc
 10128  1E80  2E82               	goto	u4771
 10129  1E81  2E83               	goto	u4770
 10130  1E82                     u4771:
 10131  1E82  2E85               	goto	l3000
 10132  1E83                     u4770:
 10133  1E83                     l2998:
 10134  1E83  1003               	clrc
 10135  1E84  2E86               	goto	l538
 10136  1E85                     l3000:
 10137  1E85  1403               	setc
 10138  1E86                     l538:
 10139  1E86  0008               	return
 10140  1E87                     __end_of___flge:
 10141                           
 10142                           	psect	text22
 10143  1B47                     __ptext22:	
 10144 ;; *************** function ___fleq *****************
 10145 ;; Defined at:
 10146 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 10147 ;; Parameters:    Size  Location     Type
 10148 ;;  ff1             4    3[COMMON] unsigned char 
 10149 ;;  ff2             4    7[COMMON] unsigned char 
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;		None               void
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10161 ;;      Params:         8       0       0       0       0
 10162 ;;      Locals:         0       0       0       0       0
 10163 ;;      Temps:          0       4       0       0       0
 10164 ;;      Totals:         8       4       0       0       0
 10165 ;;Total ram usage:       12 bytes
 10166 ;; Hardware stack levels used: 1
 10167 ;; Hardware stack levels required when called: 1
 10168 ;; This function calls:
 10169 ;;		Nothing
 10170 ;; This function is called by:
 10171 ;;		_sprintf
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           
 10176                           ;psect for function ___fleq
 10177  1B47                     ___fleq:
 10178  1B47                     l2972:	
 10179                           ;incstack = 0
 10180                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10181                           
 10182  1B47  3000               	movlw	0
 10183  1B48  0573               	andwf	___fleq@ff1,w
 10184  1B49  1283               	bcf	3,5	;RP0=0, select bank0
 10185  1B4A  1303               	bcf	3,6	;RP1=0, select bank0
 10186  1B4B  00A0               	movwf	??___fleq
 10187  1B4C  3000               	movlw	0
 10188  1B4D  0574               	andwf	___fleq@ff1+1,w
 10189  1B4E  00A1               	movwf	??___fleq+1
 10190  1B4F  3080               	movlw	128
 10191  1B50  0575               	andwf	___fleq@ff1+2,w
 10192  1B51  00A2               	movwf	??___fleq+2
 10193  1B52  307F               	movlw	127
 10194  1B53  0576               	andwf	___fleq@ff1+3,w
 10195  1B54  00A3               	movwf	??___fleq+3
 10196  1B55  0823               	movf	??___fleq+3,w
 10197  1B56  0422               	iorwf	??___fleq+2,w
 10198  1B57  0421               	iorwf	??___fleq+1,w
 10199  1B58  0420               	iorwf	??___fleq,w
 10200  1B59  1D03               	skipz
 10201  1B5A  2B5C               	goto	u4681
 10202  1B5B  2B5D               	goto	u4680
 10203  1B5C                     u4681:
 10204  1B5C  2B65               	goto	l529
 10205  1B5D                     u4680:
 10206  1B5D                     l2974:
 10207  1B5D  3000               	movlw	0
 10208  1B5E  00F6               	movwf	___fleq@ff1+3
 10209  1B5F  3000               	movlw	0
 10210  1B60  00F5               	movwf	___fleq@ff1+2
 10211  1B61  3000               	movlw	0
 10212  1B62  00F4               	movwf	___fleq@ff1+1
 10213  1B63  3000               	movlw	0
 10214  1B64  00F3               	movwf	___fleq@ff1
 10215  1B65                     l529:
 10216  1B65  3000               	movlw	0
 10217  1B66  0577               	andwf	___fleq@ff2,w
 10218  1B67  00A0               	movwf	??___fleq
 10219  1B68  3000               	movlw	0
 10220  1B69  0578               	andwf	___fleq@ff2+1,w
 10221  1B6A  00A1               	movwf	??___fleq+1
 10222  1B6B  3080               	movlw	128
 10223  1B6C  0579               	andwf	___fleq@ff2+2,w
 10224  1B6D  00A2               	movwf	??___fleq+2
 10225  1B6E  307F               	movlw	127
 10226  1B6F  057A               	andwf	___fleq@ff2+3,w
 10227  1B70  00A3               	movwf	??___fleq+3
 10228  1B71  0823               	movf	??___fleq+3,w
 10229  1B72  0422               	iorwf	??___fleq+2,w
 10230  1B73  0421               	iorwf	??___fleq+1,w
 10231  1B74  0420               	iorwf	??___fleq,w
 10232  1B75  1D03               	skipz
 10233  1B76  2B78               	goto	u4691
 10234  1B77  2B79               	goto	u4690
 10235  1B78                     u4691:
 10236  1B78  2B81               	goto	l530
 10237  1B79                     u4690:
 10238  1B79                     l2976:
 10239  1B79  3000               	movlw	0
 10240  1B7A  00FA               	movwf	___fleq@ff2+3
 10241  1B7B  3000               	movlw	0
 10242  1B7C  00F9               	movwf	___fleq@ff2+2
 10243  1B7D  3000               	movlw	0
 10244  1B7E  00F8               	movwf	___fleq@ff2+1
 10245  1B7F  3000               	movlw	0
 10246  1B80  00F7               	movwf	___fleq@ff2
 10247  1B81                     l530:
 10248  1B81  087A               	movf	___fleq@ff2+3,w
 10249  1B82  0676               	xorwf	___fleq@ff1+3,w
 10250  1B83  1D03               	skipz
 10251  1B84  2B8F               	goto	u4705
 10252  1B85  0879               	movf	___fleq@ff2+2,w
 10253  1B86  0675               	xorwf	___fleq@ff1+2,w
 10254  1B87  1D03               	skipz
 10255  1B88  2B8F               	goto	u4705
 10256  1B89  0878               	movf	___fleq@ff2+1,w
 10257  1B8A  0674               	xorwf	___fleq@ff1+1,w
 10258  1B8B  1D03               	skipz
 10259  1B8C  2B8F               	goto	u4705
 10260  1B8D  0877               	movf	___fleq@ff2,w
 10261  1B8E  0673               	xorwf	___fleq@ff1,w
 10262  1B8F                     u4705:
 10263  1B8F  1903               	skipnz
 10264  1B90  2B92               	goto	u4701
 10265  1B91  2B93               	goto	u4700
 10266  1B92                     u4701:
 10267  1B92  2B95               	goto	l2980
 10268  1B93                     u4700:
 10269  1B93                     l2978:
 10270  1B93  1003               	clrc
 10271  1B94  2B96               	goto	l531
 10272  1B95                     l2980:
 10273  1B95  1403               	setc
 10274  1B96                     l531:
 10275  1B96  0008               	return
 10276  1B97                     __end_of___fleq:
 10277                           
 10278                           	psect	text23
 10279  1A78                     __ptext23:	
 10280 ;; *************** function _setup *****************
 10281 ;; Defined at:
 10282 ;;		line 148 in file "Lab02.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;		None
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;		None
 10287 ;; Return value:  Size  Location     Type
 10288 ;;                  1    wreg      void 
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10296 ;;      Params:         0       0       0       0       0
 10297 ;;      Locals:         0       0       0       0       0
 10298 ;;      Temps:          1       0       0       0       0
 10299 ;;      Totals:         1       0       0       0       0
 10300 ;;Total ram usage:        1 bytes
 10301 ;; Hardware stack levels used: 1
 10302 ;; Hardware stack levels required when called: 1
 10303 ;; This function calls:
 10304 ;;		Nothing
 10305 ;; This function is called by:
 10306 ;;		_main
 10307 ;; This function uses a non-reentrant model
 10308 ;;
 10309                           
 10310                           
 10311                           ;psect for function _setup
 10312  1A78                     _setup:
 10313  1A78                     l3118:	
 10314                           ;incstack = 0
 10315                           ; Regs used in _setup: [wreg+status,2+status,0]
 10316                           
 10317                           
 10318                           ;Lab02.c: 150:     ANSEL = 0b01100000;
 10319  1A78  3060               	movlw	96
 10320  1A79  1683               	bsf	3,5	;RP0=1, select bank3
 10321  1A7A  1703               	bsf	3,6	;RP1=1, select bank3
 10322  1A7B  0088               	movwf	8	;volatile
 10323  1A7C                     l3120:
 10324                           
 10325                           ;Lab02.c: 151:     ANSELH = 0x00;
 10326  1A7C  0189               	clrf	9	;volatile
 10327  1A7D                     l3122:
 10328                           
 10329                           ;Lab02.c: 154:     TRISE = 0b111;
 10330  1A7D  3007               	movlw	7
 10331  1A7E  1683               	bsf	3,5	;RP0=1, select bank1
 10332  1A7F  1303               	bcf	3,6	;RP1=0, select bank1
 10333  1A80  0089               	movwf	9	;volatile
 10334                           
 10335                           ;Lab02.c: 155:     TRISA = 0x00;
 10336  1A81  0185               	clrf	5	;volatile
 10337  1A82                     l3124:
 10338                           
 10339                           ;Lab02.c: 156:     TRISCbits.TRISC0= 0;
 10340  1A82  1007               	bcf	7,0	;volatile
 10341  1A83                     l3126:
 10342                           
 10343                           ;Lab02.c: 157:     TRISCbits.TRISC1= 0;
 10344  1A83  1087               	bcf	7,1	;volatile
 10345  1A84                     l3128:
 10346                           
 10347                           ;Lab02.c: 158:     TRISCbits.TRISC7= 1;
 10348  1A84  1787               	bsf	7,7	;volatile
 10349  1A85                     l3130:
 10350                           
 10351                           ;Lab02.c: 161:     ADCON1bits.ADFM = 0;
 10352  1A85  139F               	bcf	31,7	;volatile
 10353  1A86                     l3132:
 10354                           
 10355                           ;Lab02.c: 162:     ADCON1bits.VCFG0 = 0;
 10356  1A86  121F               	bcf	31,4	;volatile
 10357  1A87                     l3134:
 10358                           
 10359                           ;Lab02.c: 163:     ADCON1bits.VCFG1 = 0;
 10360  1A87  129F               	bcf	31,5	;volatile
 10361  1A88                     l3136:
 10362                           
 10363                           ;Lab02.c: 164:     ADCON0bits.ADCS = 1;
 10364  1A88  1283               	bcf	3,5	;RP0=0, select bank0
 10365  1A89  1303               	bcf	3,6	;RP1=0, select bank0
 10366  1A8A  081F               	movf	31,w	;volatile
 10367  1A8B  393F               	andlw	-193
 10368  1A8C  3840               	iorlw	64
 10369  1A8D  009F               	movwf	31	;volatile
 10370  1A8E                     l3138:
 10371                           
 10372                           ;Lab02.c: 165:     ADCON0bits.CHS = 5;
 10373  1A8E  081F               	movf	31,w	;volatile
 10374  1A8F  39C3               	andlw	-61
 10375  1A90  3814               	iorlw	20
 10376  1A91  009F               	movwf	31	;volatile
 10377  1A92                     l3140:
 10378                           
 10379                           ;Lab02.c: 166:     _delay((unsigned long)((100)*(8000000/4000000.0)));
 10380  1A92  3042               	movlw	66
 10381  1A93  00F3               	movwf	??_setup
 10382  1A94                     u5717:
 10383  1A94  0BF3               	decfsz	??_setup,f
 10384  1A95  2A94               	goto	u5717
 10385  1A96  0000               	nop
 10386  1A97                     l3142:
 10387                           
 10388                           ;Lab02.c: 167:     ADCON0bits.ADCS = 1;
 10389  1A97  1283               	bcf	3,5	;RP0=0, select bank0
 10390  1A98  1303               	bcf	3,6	;RP1=0, select bank0
 10391  1A99  081F               	movf	31,w	;volatile
 10392  1A9A  393F               	andlw	-193
 10393  1A9B  3840               	iorlw	64
 10394  1A9C  009F               	movwf	31	;volatile
 10395  1A9D                     l3144:
 10396                           
 10397                           ;Lab02.c: 168:     ADCON0bits.ADON = 1;
 10398  1A9D  141F               	bsf	31,0	;volatile
 10399  1A9E                     l3146:
 10400                           
 10401                           ;Lab02.c: 171:     TXSTAbits.SYNC = 0;
 10402  1A9E  1683               	bsf	3,5	;RP0=1, select bank1
 10403  1A9F  1303               	bcf	3,6	;RP1=0, select bank1
 10404  1AA0  1218               	bcf	24,4	;volatile
 10405  1AA1                     l3148:
 10406                           
 10407                           ;Lab02.c: 172:     TXSTAbits.BRGH = 0;
 10408  1AA1  1118               	bcf	24,2	;volatile
 10409  1AA2                     l3150:
 10410                           
 10411                           ;Lab02.c: 173:     BAUDCTLbits.BRG16 = 1;
 10412  1AA2  1683               	bsf	3,5	;RP0=1, select bank3
 10413  1AA3  1703               	bsf	3,6	;RP1=1, select bank3
 10414  1AA4  1587               	bsf	7,3	;volatile
 10415  1AA5                     l3152:
 10416                           
 10417                           ;Lab02.c: 174:     SPBRG = 51;
 10418  1AA5  3033               	movlw	51
 10419  1AA6  1683               	bsf	3,5	;RP0=1, select bank1
 10420  1AA7  1303               	bcf	3,6	;RP1=0, select bank1
 10421  1AA8  0099               	movwf	25	;volatile
 10422  1AA9                     l3154:
 10423                           
 10424                           ;Lab02.c: 175:     SPBRGH = 0;
 10425  1AA9  019A               	clrf	26	;volatile
 10426  1AAA                     l3156:
 10427                           
 10428                           ;Lab02.c: 176:     RCSTAbits.SPEN = 1;
 10429  1AAA  1283               	bcf	3,5	;RP0=0, select bank0
 10430  1AAB  1303               	bcf	3,6	;RP1=0, select bank0
 10431  1AAC  1798               	bsf	24,7	;volatile
 10432  1AAD                     l3158:
 10433                           
 10434                           ;Lab02.c: 177:     RCSTAbits.RX9 = 0;
 10435  1AAD  1318               	bcf	24,6	;volatile
 10436  1AAE                     l3160:
 10437                           
 10438                           ;Lab02.c: 178:     RCSTAbits.CREN = 1;
 10439  1AAE  1618               	bsf	24,4	;volatile
 10440  1AAF                     l3162:
 10441                           
 10442                           ;Lab02.c: 179:     TXSTAbits.TXEN = 1;
 10443  1AAF  1683               	bsf	3,5	;RP0=1, select bank1
 10444  1AB0  1303               	bcf	3,6	;RP1=0, select bank1
 10445  1AB1  1698               	bsf	24,5	;volatile
 10446  1AB2                     l3164:
 10447                           
 10448                           ;Lab02.c: 182:     INTCONbits.GIE = 1;
 10449  1AB2  178B               	bsf	11,7	;volatile
 10450  1AB3                     l3166:
 10451                           
 10452                           ;Lab02.c: 183:     INTCONbits.PEIE = 1;
 10453  1AB3  170B               	bsf	11,6	;volatile
 10454  1AB4                     l3168:
 10455                           
 10456                           ;Lab02.c: 184:     PIR1bits.RCIF = 0;
 10457  1AB4  1283               	bcf	3,5	;RP0=0, select bank0
 10458  1AB5  1303               	bcf	3,6	;RP1=0, select bank0
 10459  1AB6  128C               	bcf	12,5	;volatile
 10460  1AB7                     l3170:
 10461                           
 10462                           ;Lab02.c: 185:     PIE1bits.RCIE = 1;
 10463  1AB7  1683               	bsf	3,5	;RP0=1, select bank1
 10464  1AB8  1303               	bcf	3,6	;RP1=0, select bank1
 10465  1AB9  168C               	bsf	12,5	;volatile
 10466  1ABA                     l91:
 10467  1ABA  0008               	return
 10468  1ABB                     __end_of_setup:
 10469                           
 10470                           	psect	text24
 10471  07B2                     __ptext24:	
 10472 ;; *************** function _send_str *****************
 10473 ;; Defined at:
 10474 ;;		line 27 in file "USART.c"
 10475 ;; Parameters:    Size  Location     Type
 10476 ;;  st              2    4[COMMON] PTR unsigned char 
 10477 ;;		 -> STR_7(35), s(30), 
 10478 ;; Auto vars:     Size  Location     Type
 10479 ;;  i               2    9[COMMON] int 
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      void 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10489 ;;      Params:         2       0       0       0       0
 10490 ;;      Locals:         2       0       0       0       0
 10491 ;;      Temps:          3       0       0       0       0
 10492 ;;      Totals:         7       0       0       0       0
 10493 ;;Total ram usage:        7 bytes
 10494 ;; Hardware stack levels used: 1
 10495 ;; Hardware stack levels required when called: 2
 10496 ;; This function calls:
 10497 ;;		_send_char
 10498 ;; This function is called by:
 10499 ;;		_main
 10500 ;; This function uses a non-reentrant model
 10501 ;;
 10502                           
 10503                           
 10504                           ;psect for function _send_str
 10505  07B2                     _send_str:
 10506  07B2                     l3470:	
 10507                           ;incstack = 0
 10508                           ; Regs used in _send_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10509                           
 10510                           
 10511                           ;USART.c: 28:     int i = 0;
 10512  07B2  01F9               	clrf	send_str@i
 10513  07B3  01FA               	clrf	send_str@i+1
 10514                           
 10515                           ;USART.c: 29:     while (st[i] != 0){
 10516  07B4  2FDC               	goto	l3478
 10517  07B5                     l3472:
 10518                           
 10519                           ;USART.c: 30:         send_char(st[i]);
 10520  07B5  0879               	movf	send_str@i,w
 10521  07B6  0774               	addwf	send_str@st,w
 10522  07B7  00F7               	movwf	??_send_str+1
 10523  07B8  0875               	movf	send_str@st+1,w
 10524  07B9  00F6               	movwf	??_send_str
 10525  07BA  1803               	skipnc
 10526  07BB  0AF6               	incf	??_send_str,f
 10527  07BC  1FF9               	btfss	send_str@i,7
 10528  07BD  2FBF               	goto	u5610
 10529  07BE  03F6               	decf	??_send_str,f
 10530  07BF                     u5610:
 10531  07BF  0876               	movf	??_send_str,w
 10532  07C0  00F8               	movwf	??_send_str+2
 10533  07C1  0878               	movf	??_send_str+2,w
 10534  07C2  1283               	bcf	3,5	;RP0=0, select bank0
 10535  07C3  1303               	bcf	3,6	;RP1=0, select bank0
 10536  07C4  00FF               	movwf	btemp+1
 10537  07C5  0877               	movf	??_send_str+1,w
 10538  07C6  0084               	movwf	4
 10539  07C7  120A  158A  2000  120A  118A  	fcall	stringtab
 10540  07CC  160A  158A  214B  120A  118A  	fcall	_send_char
 10541  07D1                     l3474:
 10542                           
 10543                           ;USART.c: 31:         i++;
 10544  07D1  3001               	movlw	1
 10545  07D2  07F9               	addwf	send_str@i,f
 10546  07D3  1803               	skipnc
 10547  07D4  0AFA               	incf	send_str@i+1,f
 10548  07D5  3000               	movlw	0
 10549  07D6  07FA               	addwf	send_str@i+1,f
 10550  07D7                     l3476:
 10551                           
 10552                           ;USART.c: 32:         _delay((unsigned long)((30)*(8000000/4000000.0)));
 10553  07D7  3013               	movlw	19
 10554  07D8  00F6               	movwf	??_send_str
 10555  07D9                     u5727:
 10556  07D9  0BF6               	decfsz	??_send_str,f
 10557  07DA  2FD9               	goto	u5727
 10558  07DB  2FDC               	nop2
 10559  07DC                     l3478:
 10560                           
 10561                           ;USART.c: 29:     while (st[i] != 0){
 10562  07DC  0879               	movf	send_str@i,w
 10563  07DD  0774               	addwf	send_str@st,w
 10564  07DE  00F7               	movwf	??_send_str+1
 10565  07DF  0875               	movf	send_str@st+1,w
 10566  07E0  00F6               	movwf	??_send_str
 10567  07E1  1803               	skipnc
 10568  07E2  0AF6               	incf	??_send_str,f
 10569  07E3  1FF9               	btfss	send_str@i,7
 10570  07E4  2FE6               	goto	u5620
 10571  07E5  03F6               	decf	??_send_str,f
 10572  07E6                     u5620:
 10573  07E6  0876               	movf	??_send_str,w
 10574  07E7  00F8               	movwf	??_send_str+2
 10575  07E8  0878               	movf	??_send_str+2,w
 10576  07E9  1283               	bcf	3,5	;RP0=0, select bank0
 10577  07EA  1303               	bcf	3,6	;RP1=0, select bank0
 10578  07EB  00FF               	movwf	btemp+1
 10579  07EC  0877               	movf	??_send_str+1,w
 10580  07ED  0084               	movwf	4
 10581  07EE  120A  158A  2000  120A  118A  	fcall	stringtab
 10582  07F3  3A00               	xorlw	0
 10583  07F4  1D03               	skipz
 10584  07F5  2FF7               	goto	u5631
 10585  07F6  2FF8               	goto	u5630
 10586  07F7                     u5631:
 10587  07F7  2FB5               	goto	l3472
 10588  07F8                     u5630:
 10589  07F8                     l147:
 10590  07F8  0008               	return
 10591  07F9                     __end_of_send_str:
 10592                           
 10593                           	psect	text25
 10594  194B                     __ptext25:	
 10595 ;; *************** function _send_char *****************
 10596 ;; Defined at:
 10597 ;;		line 22 in file "USART.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  dato            1    wreg     unsigned char 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  dato            1    3[COMMON] unsigned char 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg
 10606 ;; Tracked objects:
 10607 ;;		On entry : 0/0
 10608 ;;		On exit  : 0/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10611 ;;      Params:         0       0       0       0       0
 10612 ;;      Locals:         1       0       0       0       0
 10613 ;;      Temps:          0       0       0       0       0
 10614 ;;      Totals:         1       0       0       0       0
 10615 ;;Total ram usage:        1 bytes
 10616 ;; Hardware stack levels used: 1
 10617 ;; Hardware stack levels required when called: 1
 10618 ;; This function calls:
 10619 ;;		Nothing
 10620 ;; This function is called by:
 10621 ;;		_send_str
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           
 10626                           ;psect for function _send_char
 10627  194B                     _send_char:
 10628                           
 10629                           ;incstack = 0
 10630                           ; Regs used in _send_char: [wreg]
 10631                           ;send_char@dato stored from wreg
 10632  194B  00F3               	movwf	send_char@dato
 10633  194C                     l2756:
 10634  194C                     l138:	
 10635                           ;USART.c: 23:     while(!TXIF);
 10636                           
 10637  194C  1283               	bcf	3,5	;RP0=0, select bank0
 10638  194D  1303               	bcf	3,6	;RP1=0, select bank0
 10639  194E  1E0C               	btfss	12,4	;volatile
 10640  194F  2951               	goto	u4031
 10641  1950  2952               	goto	u4030
 10642  1951                     u4031:
 10643  1951  294C               	goto	l138
 10644  1952                     u4030:
 10645  1952                     l2758:
 10646                           
 10647                           ;USART.c: 24:     TXREG = dato;
 10648  1952  0873               	movf	send_char@dato,w
 10649  1953  0099               	movwf	25	;volatile
 10650  1954                     l141:
 10651  1954  0008               	return
 10652  1955                     __end_of_send_char:
 10653                           
 10654                           	psect	text26
 10655  1ABB                     __ptext26:	
 10656 ;; *************** function _Lcd_Write_String *****************
 10657 ;; Defined at:
 10658 ;;		line 76 in file "LCD.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  a               2    6[COMMON] PTR unsigned char 
 10661 ;;		 -> s(30), STR_1(16), 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  i               2    0[BANK0 ] int 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  1    wreg      void 
 10666 ;; Registers used:
 10667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10668 ;; Tracked objects:
 10669 ;;		On entry : 0/0
 10670 ;;		On exit  : 0/0
 10671 ;;		Unchanged: 0/0
 10672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10673 ;;      Params:         2       0       0       0       0
 10674 ;;      Locals:         0       2       0       0       0
 10675 ;;      Temps:          3       0       0       0       0
 10676 ;;      Totals:         5       2       0       0       0
 10677 ;;Total ram usage:        7 bytes
 10678 ;; Hardware stack levels used: 1
 10679 ;; Hardware stack levels required when called: 3
 10680 ;; This function calls:
 10681 ;;		_Lcd_Write_Char
 10682 ;; This function is called by:
 10683 ;;		_main
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _Lcd_Write_String
 10689  1ABB                     _Lcd_Write_String:
 10690  1ABB                     l3200:	
 10691                           ;incstack = 0
 10692                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10693                           
 10694                           
 10695                           ;LCD.c: 77:     int i;;LCD.c: 78:     for (i = 0; a[i] != '\0'; i++)
 10696  1ABB  1283               	bcf	3,5	;RP0=0, select bank0
 10697  1ABC  1303               	bcf	3,6	;RP1=0, select bank0
 10698  1ABD  01A0               	clrf	Lcd_Write_String@i
 10699  1ABE  01A1               	clrf	Lcd_Write_String@i+1
 10700  1ABF  2AE4               	goto	l3206
 10701  1AC0                     l3202:
 10702                           
 10703                           ;LCD.c: 79:         Lcd_Write_Char(a[i]);
 10704  1AC0  0820               	movf	Lcd_Write_String@i,w
 10705  1AC1  0776               	addwf	Lcd_Write_String@a,w
 10706  1AC2  00F9               	movwf	??_Lcd_Write_String+1
 10707  1AC3  0877               	movf	Lcd_Write_String@a+1,w
 10708  1AC4  00F8               	movwf	??_Lcd_Write_String
 10709  1AC5  1803               	skipnc
 10710  1AC6  0AF8               	incf	??_Lcd_Write_String,f
 10711  1AC7  1FA0               	btfss	Lcd_Write_String@i,7
 10712  1AC8  2ACA               	goto	u5110
 10713  1AC9  03F8               	decf	??_Lcd_Write_String,f
 10714  1ACA                     u5110:
 10715  1ACA  0878               	movf	??_Lcd_Write_String,w
 10716  1ACB  00FA               	movwf	??_Lcd_Write_String+2
 10717  1ACC  087A               	movf	??_Lcd_Write_String+2,w
 10718  1ACD  1283               	bcf	3,5	;RP0=0, select bank0
 10719  1ACE  1303               	bcf	3,6	;RP1=0, select bank0
 10720  1ACF  00FF               	movwf	btemp+1
 10721  1AD0  0879               	movf	??_Lcd_Write_String+1,w
 10722  1AD1  0084               	movwf	4
 10723  1AD2  120A  158A  2000  160A  158A  	fcall	stringtab
 10724  1AD7  160A  158A  21AA  160A  158A  	fcall	_Lcd_Write_Char
 10725  1ADC                     l3204:
 10726  1ADC  3001               	movlw	1
 10727  1ADD  1283               	bcf	3,5	;RP0=0, select bank0
 10728  1ADE  1303               	bcf	3,6	;RP1=0, select bank0
 10729  1ADF  07A0               	addwf	Lcd_Write_String@i,f
 10730  1AE0  1803               	skipnc
 10731  1AE1  0AA1               	incf	Lcd_Write_String@i+1,f
 10732  1AE2  3000               	movlw	0
 10733  1AE3  07A1               	addwf	Lcd_Write_String@i+1,f
 10734  1AE4                     l3206:
 10735  1AE4  0820               	movf	Lcd_Write_String@i,w
 10736  1AE5  0776               	addwf	Lcd_Write_String@a,w
 10737  1AE6  00F9               	movwf	??_Lcd_Write_String+1
 10738  1AE7  0877               	movf	Lcd_Write_String@a+1,w
 10739  1AE8  00F8               	movwf	??_Lcd_Write_String
 10740  1AE9  1803               	skipnc
 10741  1AEA  0AF8               	incf	??_Lcd_Write_String,f
 10742  1AEB  1FA0               	btfss	Lcd_Write_String@i,7
 10743  1AEC  2AEE               	goto	u5120
 10744  1AED  03F8               	decf	??_Lcd_Write_String,f
 10745  1AEE                     u5120:
 10746  1AEE  0878               	movf	??_Lcd_Write_String,w
 10747  1AEF  00FA               	movwf	??_Lcd_Write_String+2
 10748  1AF0  087A               	movf	??_Lcd_Write_String+2,w
 10749  1AF1  1283               	bcf	3,5	;RP0=0, select bank0
 10750  1AF2  1303               	bcf	3,6	;RP1=0, select bank0
 10751  1AF3  00FF               	movwf	btemp+1
 10752  1AF4  0879               	movf	??_Lcd_Write_String+1,w
 10753  1AF5  0084               	movwf	4
 10754  1AF6  120A  158A  2000  160A  158A  	fcall	stringtab
 10755  1AFB  3A00               	xorlw	0
 10756  1AFC  1D03               	skipz
 10757  1AFD  2AFF               	goto	u5131
 10758  1AFE  2B00               	goto	u5130
 10759  1AFF                     u5131:
 10760  1AFF  2AC0               	goto	l3202
 10761  1B00                     u5130:
 10762  1B00                     l129:
 10763  1B00  0008               	return
 10764  1B01                     __end_of_Lcd_Write_String:
 10765                           
 10766                           	psect	text27
 10767  19AA                     __ptext27:	
 10768 ;; *************** function _Lcd_Write_Char *****************
 10769 ;; Defined at:
 10770 ;;		line 67 in file "LCD.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  a               1    wreg     unsigned char 
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;  a               1    5[COMMON] unsigned char 
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      void 
 10777 ;; Registers used:
 10778 ;;		wreg, status,2, status,0, pclath, cstack
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10784 ;;      Params:         0       0       0       0       0
 10785 ;;      Locals:         1       0       0       0       0
 10786 ;;      Temps:          1       0       0       0       0
 10787 ;;      Totals:         2       0       0       0       0
 10788 ;;Total ram usage:        2 bytes
 10789 ;; Hardware stack levels used: 1
 10790 ;; Hardware stack levels required when called: 2
 10791 ;; This function calls:
 10792 ;;		_Lcd_Port
 10793 ;; This function is called by:
 10794 ;;		_Lcd_Write_String
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           
 10799                           ;psect for function _Lcd_Write_Char
 10800  19AA                     _Lcd_Write_Char:
 10801                           
 10802                           ;incstack = 0
 10803                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10804                           ;Lcd_Write_Char@a stored from wreg
 10805  19AA  00F5               	movwf	Lcd_Write_Char@a
 10806  19AB                     l2744:
 10807                           
 10808                           ;LCD.c: 68:     PORTCbits.RC0 = 1;
 10809  19AB  1283               	bcf	3,5	;RP0=0, select bank0
 10810  19AC  1303               	bcf	3,6	;RP1=0, select bank0
 10811  19AD  1407               	bsf	7,0	;volatile
 10812  19AE                     l2746:
 10813                           
 10814                           ;LCD.c: 69:     Lcd_Port(a);
 10815  19AE  0875               	movf	Lcd_Write_Char@a,w
 10816  19AF  120A  118A  27F9  160A  158A  	fcall	_Lcd_Port
 10817  19B4                     l2748:
 10818                           
 10819                           ;LCD.c: 70:     PORTCbits.RC1 = 1;
 10820  19B4  1283               	bcf	3,5	;RP0=0, select bank0
 10821  19B5  1303               	bcf	3,6	;RP1=0, select bank0
 10822  19B6  1487               	bsf	7,1	;volatile
 10823  19B7                     l2750:
 10824                           
 10825                           ;LCD.c: 71:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10826  19B7  301A               	movlw	26
 10827  19B8  00F4               	movwf	??_Lcd_Write_Char
 10828  19B9                     u5737:
 10829  19B9  0BF4               	decfsz	??_Lcd_Write_Char,f
 10830  19BA  29B9               	goto	u5737
 10831  19BB  0000               	nop
 10832  19BC                     l2752:
 10833                           
 10834                           ;LCD.c: 72:     PORTCbits.RC1 = 0;
 10835  19BC  1283               	bcf	3,5	;RP0=0, select bank0
 10836  19BD  1303               	bcf	3,6	;RP1=0, select bank0
 10837  19BE  1087               	bcf	7,1	;volatile
 10838  19BF                     l2754:
 10839                           
 10840                           ;LCD.c: 73:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10841  19BF  301A               	movlw	26
 10842  19C0  00F4               	movwf	??_Lcd_Write_Char
 10843  19C1                     u5747:
 10844  19C1  0BF4               	decfsz	??_Lcd_Write_Char,f
 10845  19C2  29C1               	goto	u5747
 10846  19C3  0000               	nop
 10847  19C4                     l123:
 10848  19C4  0008               	return
 10849  19C5                     __end_of_Lcd_Write_Char:
 10850                           
 10851                           	psect	text28
 10852  19C5                     __ptext28:	
 10853 ;; *************** function _Lcd_Set_Cursor *****************
 10854 ;; Defined at:
 10855 ;;		line 43 in file "LCD.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  a               1    wreg     unsigned char 
 10858 ;;  b               1    7[COMMON] unsigned char 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  a               1    9[COMMON] unsigned char 
 10861 ;;  temp            1   10[COMMON] unsigned char 
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  1    wreg      void 
 10864 ;; Registers used:
 10865 ;;		wreg, status,2, status,0, pclath, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10871 ;;      Params:         1       0       0       0       0
 10872 ;;      Locals:         2       0       0       0       0
 10873 ;;      Temps:          1       0       0       0       0
 10874 ;;      Totals:         4       0       0       0       0
 10875 ;;Total ram usage:        4 bytes
 10876 ;; Hardware stack levels used: 1
 10877 ;; Hardware stack levels required when called: 3
 10878 ;; This function calls:
 10879 ;;		_Lcd_Cmd
 10880 ;; This function is called by:
 10881 ;;		_main
 10882 ;; This function uses a non-reentrant model
 10883 ;;
 10884                           
 10885                           
 10886                           ;psect for function _Lcd_Set_Cursor
 10887  19C5                     _Lcd_Set_Cursor:
 10888                           
 10889                           ;incstack = 0
 10890                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10891                           ;Lcd_Set_Cursor@a stored from wreg
 10892  19C5  00F9               	movwf	Lcd_Set_Cursor@a
 10893  19C6                     l3188:
 10894                           
 10895                           ;LCD.c: 44:     char temp;;LCD.c: 45:     if (a == 1) {
 10896  19C6  0379               	decf	Lcd_Set_Cursor@a,w
 10897  19C7  1D03               	btfss	3,2
 10898  19C8  29CA               	goto	u5091
 10899  19C9  29CB               	goto	u5090
 10900  19CA                     u5091:
 10901  19CA  29D7               	goto	l3194
 10902  19CB                     u5090:
 10903  19CB                     l3190:
 10904                           
 10905                           ;LCD.c: 46:         temp = 0x80 + b - 1;
 10906  19CB  0877               	movf	Lcd_Set_Cursor@b,w
 10907  19CC  3E7F               	addlw	127
 10908  19CD  00F8               	movwf	??_Lcd_Set_Cursor
 10909  19CE  0878               	movf	??_Lcd_Set_Cursor,w
 10910  19CF  00FA               	movwf	Lcd_Set_Cursor@temp
 10911  19D0                     l3192:
 10912                           
 10913                           ;LCD.c: 47:         Lcd_Cmd(temp);
 10914  19D0  087A               	movf	Lcd_Set_Cursor@temp,w
 10915  19D1  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 10916                           
 10917                           ;LCD.c: 48:     } else if (a == 2) {
 10918  19D6  29E8               	goto	l117
 10919  19D7                     l3194:
 10920  19D7  3002               	movlw	2
 10921  19D8  0679               	xorwf	Lcd_Set_Cursor@a,w
 10922  19D9  1D03               	btfss	3,2
 10923  19DA  29DC               	goto	u5101
 10924  19DB  29DD               	goto	u5100
 10925  19DC                     u5101:
 10926  19DC  29E8               	goto	l117
 10927  19DD                     u5100:
 10928  19DD                     l3196:
 10929                           
 10930                           ;LCD.c: 49:         temp = 0xC0 + b - 1;
 10931  19DD  0877               	movf	Lcd_Set_Cursor@b,w
 10932  19DE  3EBF               	addlw	191
 10933  19DF  00F8               	movwf	??_Lcd_Set_Cursor
 10934  19E0  0878               	movf	??_Lcd_Set_Cursor,w
 10935  19E1  00FA               	movwf	Lcd_Set_Cursor@temp
 10936  19E2                     l3198:
 10937                           
 10938                           ;LCD.c: 50:         Lcd_Cmd(temp);
 10939  19E2  087A               	movf	Lcd_Set_Cursor@temp,w
 10940  19E3  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 10941  19E8                     l117:
 10942  19E8  0008               	return
 10943  19E9                     __end_of_Lcd_Set_Cursor:
 10944                           
 10945                           	psect	text29
 10946  1A37                     __ptext29:	
 10947 ;; *************** function _Lcd_Init *****************
 10948 ;; Defined at:
 10949 ;;		line 54 in file "LCD.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;		None
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg, status,2, status,0, pclath, cstack
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10963 ;;      Params:         0       0       0       0       0
 10964 ;;      Locals:         0       0       0       0       0
 10965 ;;      Temps:          2       0       0       0       0
 10966 ;;      Totals:         2       0       0       0       0
 10967 ;;Total ram usage:        2 bytes
 10968 ;; Hardware stack levels used: 1
 10969 ;; Hardware stack levels required when called: 3
 10970 ;; This function calls:
 10971 ;;		_Lcd_Cmd
 10972 ;;		_Lcd_Port
 10973 ;; This function is called by:
 10974 ;;		_main
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           
 10979                           ;psect for function _Lcd_Init
 10980  1A37                     _Lcd_Init:
 10981  1A37                     l3172:	
 10982                           ;incstack = 0
 10983                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10984                           
 10985                           
 10986                           ;LCD.c: 55:     Lcd_Port(0x00);
 10987  1A37  3000               	movlw	0
 10988  1A38  120A  118A  27F9  160A  158A  	fcall	_Lcd_Port
 10989  1A3D                     l3174:
 10990                           
 10991                           ;LCD.c: 56:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10992  1A3D  3034               	movlw	52
 10993  1A3E  00F8               	movwf	??_Lcd_Init+1
 10994  1A3F  30F1               	movlw	241
 10995  1A40  00F7               	movwf	??_Lcd_Init
 10996  1A41                     u5757:
 10997  1A41  0BF7               	decfsz	??_Lcd_Init,f
 10998  1A42  2A41               	goto	u5757
 10999  1A43  0BF8               	decfsz	??_Lcd_Init+1,f
 11000  1A44  2A41               	goto	u5757
 11001  1A45  2A46               	nop2
 11002  1A46                     l3176:
 11003                           
 11004                           ;LCD.c: 57:     Lcd_Cmd(0x3F);
 11005  1A46  303F               	movlw	63
 11006  1A47  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11007                           
 11008                           ;LCD.c: 58:     _delay((unsigned long)((10)*(8000000/4000.0)));
 11009  1A4C  301A               	movlw	26
 11010  1A4D  00F8               	movwf	??_Lcd_Init+1
 11011  1A4E  30F8               	movlw	248
 11012  1A4F  00F7               	movwf	??_Lcd_Init
 11013  1A50                     u5767:
 11014  1A50  0BF7               	decfsz	??_Lcd_Init,f
 11015  1A51  2A50               	goto	u5767
 11016  1A52  0BF8               	decfsz	??_Lcd_Init+1,f
 11017  1A53  2A50               	goto	u5767
 11018  1A54  0000               	nop
 11019  1A55                     l3178:
 11020                           
 11021                           ;LCD.c: 59:     Lcd_Cmd(0x3F);
 11022  1A55  303F               	movlw	63
 11023  1A56  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11024  1A5B                     l3180:
 11025                           
 11026                           ;LCD.c: 60:     _delay((unsigned long)((200)*(8000000/4000000.0)));
 11027  1A5B  3085               	movlw	133
 11028  1A5C  00F7               	movwf	??_Lcd_Init
 11029  1A5D                     u5777:
 11030  1A5D  0BF7               	decfsz	??_Lcd_Init,f
 11031  1A5E  2A5D               	goto	u5777
 11032                           
 11033                           ;LCD.c: 61:     Lcd_Cmd(0x3F);
 11034  1A5F  303F               	movlw	63
 11035  1A60  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11036                           
 11037                           ;LCD.c: 62:     Lcd_Cmd(0x38);
 11038  1A65  3038               	movlw	56
 11039  1A66  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11040                           
 11041                           ;LCD.c: 63:     Lcd_Cmd(0x0C);
 11042  1A6B  300C               	movlw	12
 11043  1A6C  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11044                           
 11045                           ;LCD.c: 64:     Lcd_Cmd(0x06);
 11046  1A71  3006               	movlw	6
 11047  1A72  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11048  1A77                     l120:
 11049  1A77  0008               	return
 11050  1A78                     __end_of_Lcd_Init:
 11051                           
 11052                           	psect	text30
 11053  1960                     __ptext30:	
 11054 ;; *************** function _Lcd_Clear *****************
 11055 ;; Defined at:
 11056 ;;		line 38 in file "LCD.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;		None
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  1    wreg      void 
 11063 ;; Registers used:
 11064 ;;		wreg, status,2, status,0, pclath, cstack
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11070 ;;      Params:         0       0       0       0       0
 11071 ;;      Locals:         0       0       0       0       0
 11072 ;;      Temps:          0       0       0       0       0
 11073 ;;      Totals:         0       0       0       0       0
 11074 ;;Total ram usage:        0 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; Hardware stack levels required when called: 3
 11077 ;; This function calls:
 11078 ;;		_Lcd_Cmd
 11079 ;; This function is called by:
 11080 ;;		_main
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           
 11085                           ;psect for function _Lcd_Clear
 11086  1960                     _Lcd_Clear:
 11087  1960                     l3182:	
 11088                           ;incstack = 0
 11089                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 11090                           
 11091                           
 11092                           ;LCD.c: 39:     Lcd_Cmd(0);
 11093  1960  3000               	movlw	0
 11094  1961  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11095                           
 11096                           ;LCD.c: 40:     Lcd_Cmd(1);
 11097  1966  3001               	movlw	1
 11098  1967  160A  158A  2190  160A  158A  	fcall	_Lcd_Cmd
 11099  196C                     l111:
 11100  196C  0008               	return
 11101  196D                     __end_of_Lcd_Clear:
 11102                           
 11103                           	psect	text31
 11104  1990                     __ptext31:	
 11105 ;; *************** function _Lcd_Cmd *****************
 11106 ;; Defined at:
 11107 ;;		line 30 in file "LCD.c"
 11108 ;; Parameters:    Size  Location     Type
 11109 ;;  a               1    wreg     unsigned char 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;  a               1    6[COMMON] unsigned char 
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      void 
 11114 ;; Registers used:
 11115 ;;		wreg, status,2, status,0, pclath, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11121 ;;      Params:         0       0       0       0       0
 11122 ;;      Locals:         1       0       0       0       0
 11123 ;;      Temps:          2       0       0       0       0
 11124 ;;      Totals:         3       0       0       0       0
 11125 ;;Total ram usage:        3 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 2
 11128 ;; This function calls:
 11129 ;;		_Lcd_Port
 11130 ;; This function is called by:
 11131 ;;		_Lcd_Clear
 11132 ;;		_Lcd_Set_Cursor
 11133 ;;		_Lcd_Init
 11134 ;; This function uses a non-reentrant model
 11135 ;;
 11136                           
 11137                           
 11138                           ;psect for function _Lcd_Cmd
 11139  1990                     _Lcd_Cmd:
 11140                           
 11141                           ;incstack = 0
 11142                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11143                           ;Lcd_Cmd@a stored from wreg
 11144  1990  00F6               	movwf	Lcd_Cmd@a
 11145  1991                     l2734:
 11146                           
 11147                           ;LCD.c: 31:     PORTCbits.RC0 = 0;
 11148  1991  1283               	bcf	3,5	;RP0=0, select bank0
 11149  1992  1303               	bcf	3,6	;RP1=0, select bank0
 11150  1993  1007               	bcf	7,0	;volatile
 11151  1994                     l2736:
 11152                           
 11153                           ;LCD.c: 32:     Lcd_Port(a);
 11154  1994  0876               	movf	Lcd_Cmd@a,w
 11155  1995  120A  118A  27F9  160A  158A  	fcall	_Lcd_Port
 11156  199A                     l2738:
 11157                           
 11158                           ;LCD.c: 33:     PORTCbits.RC1 = 1;
 11159  199A  1283               	bcf	3,5	;RP0=0, select bank0
 11160  199B  1303               	bcf	3,6	;RP1=0, select bank0
 11161  199C  1487               	bsf	7,1	;volatile
 11162  199D                     l2740:
 11163                           
 11164                           ;LCD.c: 34:     _delay((unsigned long)((4)*(8000000/4000.0)));
 11165  199D  300B               	movlw	11
 11166  199E  00F5               	movwf	??_Lcd_Cmd+1
 11167  199F  3062               	movlw	98
 11168  19A0  00F4               	movwf	??_Lcd_Cmd
 11169  19A1                     u5787:
 11170  19A1  0BF4               	decfsz	??_Lcd_Cmd,f
 11171  19A2  29A1               	goto	u5787
 11172  19A3  0BF5               	decfsz	??_Lcd_Cmd+1,f
 11173  19A4  29A1               	goto	u5787
 11174  19A5  0000               	nop
 11175  19A6                     l2742:
 11176                           
 11177                           ;LCD.c: 35:     PORTCbits.RC1 = 0;
 11178  19A6  1283               	bcf	3,5	;RP0=0, select bank0
 11179  19A7  1303               	bcf	3,6	;RP1=0, select bank0
 11180  19A8  1087               	bcf	7,1	;volatile
 11181  19A9                     l108:
 11182  19A9  0008               	return
 11183  19AA                     __end_of_Lcd_Cmd:
 11184                           
 11185                           	psect	text32
 11186  07F9                     __ptext32:	
 11187 ;; *************** function _Lcd_Port *****************
 11188 ;; Defined at:
 11189 ;;		line 26 in file "LCD.c"
 11190 ;; Parameters:    Size  Location     Type
 11191 ;;  a               1    wreg     unsigned char 
 11192 ;; Auto vars:     Size  Location     Type
 11193 ;;  a               1    3[COMMON] unsigned char 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		wreg
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11203 ;;      Params:         0       0       0       0       0
 11204 ;;      Locals:         1       0       0       0       0
 11205 ;;      Temps:          0       0       0       0       0
 11206 ;;      Totals:         1       0       0       0       0
 11207 ;;Total ram usage:        1 bytes
 11208 ;; Hardware stack levels used: 1
 11209 ;; Hardware stack levels required when called: 1
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_Lcd_Cmd
 11214 ;;		_Lcd_Init
 11215 ;;		_Lcd_Write_Char
 11216 ;; This function uses a non-reentrant model
 11217 ;;
 11218                           
 11219                           
 11220                           ;psect for function _Lcd_Port
 11221  07F9                     _Lcd_Port:
 11222                           
 11223                           ;incstack = 0
 11224                           ; Regs used in _Lcd_Port: [wreg]
 11225                           ;Lcd_Port@a stored from wreg
 11226  07F9  00F3               	movwf	Lcd_Port@a
 11227  07FA                     l2268:
 11228                           
 11229                           ;LCD.c: 27:     PORTA = a;
 11230  07FA  0873               	movf	Lcd_Port@a,w
 11231  07FB  1283               	bcf	3,5	;RP0=0, select bank0
 11232  07FC  1303               	bcf	3,6	;RP1=0, select bank0
 11233  07FD  0085               	movwf	5	;volatile
 11234  07FE                     l105:
 11235  07FE  0008               	return
 11236  07FF                     __end_of_Lcd_Port:
 11237                           
 11238                           	psect	text33
 11239  193B                     __ptext33:	
 11240 ;; *************** function _ADC *****************
 11241 ;; Defined at:
 11242 ;;		line 17 in file "ADC.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  dig             1    wreg     unsigned char 
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  dig             1    4[COMMON] unsigned char 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      unsigned char 
 11249 ;; Registers used:
 11250 ;;		wreg
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11256 ;;      Params:         0       0       0       0       0
 11257 ;;      Locals:         1       0       0       0       0
 11258 ;;      Temps:          1       0       0       0       0
 11259 ;;      Totals:         2       0       0       0       0
 11260 ;;Total ram usage:        2 bytes
 11261 ;; Hardware stack levels used: 1
 11262 ;; Hardware stack levels required when called: 1
 11263 ;; This function calls:
 11264 ;;		Nothing
 11265 ;; This function is called by:
 11266 ;;		_main
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           
 11271                           ;psect for function _ADC
 11272  193B                     _ADC:
 11273  193B                     l3184:	
 11274                           ;incstack = 0
 11275                           ; Regs used in _ADC: [wreg]
 11276                           
 11277                           
 11278                           ;ADC.c: 18:     dig = ADRESH;
 11279  193B  1283               	bcf	3,5	;RP0=0, select bank0
 11280  193C  1303               	bcf	3,6	;RP1=0, select bank0
 11281  193D  081E               	movf	30,w	;volatile
 11282  193E  00F3               	movwf	??_ADC
 11283  193F  0873               	movf	??_ADC,w
 11284  1940  00F4               	movwf	ADC@dig
 11285                           
 11286                           ;ADC.c: 19: return dig;
 11287  1941  0874               	movf	ADC@dig,w
 11288  1942                     l96:
 11289  1942  0008               	return
 11290  1943                     __end_of_ADC:
 11291                           
 11292                           	psect	text34
 11293  196D                     __ptext34:	
 11294 ;; *************** function _isr *****************
 11295 ;; Defined at:
 11296 ;;		line 82 in file "Lab02.c"
 11297 ;; Parameters:    Size  Location     Type
 11298 ;;		None
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;                  1    wreg      void 
 11303 ;; Registers used:
 11304 ;;		wreg
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11310 ;;      Params:         0       0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0
 11312 ;;      Temps:          3       0       0       0       0
 11313 ;;      Totals:         3       0       0       0       0
 11314 ;;Total ram usage:        3 bytes
 11315 ;; Hardware stack levels used: 1
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		Interrupt level 1
 11320 ;; This function uses a non-reentrant model
 11321 ;;
 11322                           
 11323                           
 11324                           ;psect for function _isr
 11325  196D                     _isr:
 11326  196D                     i1l3480:
 11327                           
 11328                           ;Lab02.c: 83:     if(PIR1bits.RCIF){
 11329  196D  1283               	bcf	3,5	;RP0=0, select bank0
 11330  196E  1303               	bcf	3,6	;RP1=0, select bank0
 11331  196F  1E8C               	btfss	12,5	;volatile
 11332  1970  2972               	goto	u564_21
 11333  1971  2973               	goto	u564_20
 11334  1972                     u564_21:
 11335  1972  2977               	goto	i1l74
 11336  1973                     u564_20:
 11337  1973                     i1l3482:
 11338                           
 11339                           ;Lab02.c: 84:         op = RCREG;
 11340  1973  081A               	movf	26,w	;volatile
 11341  1974  00F0               	movwf	??_isr
 11342  1975  0870               	movf	??_isr,w
 11343  1976  00EF               	movwf	_op
 11344  1977                     i1l74:
 11345  1977  0872               	movf	??_isr+2,w
 11346  1978  008A               	movwf	10
 11347  1979  0E71               	swapf	??_isr+1,w
 11348  197A  0083               	movwf	3
 11349  197B  0EFE               	swapf	btemp,f
 11350  197C  0E7E               	swapf	btemp,w
 11351  197D  0009               	retfie
 11352  197E                     __end_of_isr:
 11353  007E                     btemp	set	126	;btemp
 11354  007E                     wtemp0	set	126
 11355                           
 11356                           	psect	intentry
 11357  0004                     __pintentry:	
 11358                           ;incstack = 0
 11359                           ; Regs used in _isr: [wreg]
 11360                           
 11361  0004                     interrupt_function:
 11362  007E                     saved_w	set	btemp
 11363  0004  00FE               	movwf	btemp
 11364  0005  0E03               	swapf	3,w
 11365  0006  00F1               	movwf	??_isr+1
 11366  0007  080A               	movf	10,w
 11367  0008  00F2               	movwf	??_isr+2
 11368  0009  160A  158A  296D   	ljmp	_isr
 11369                           
 11370                           	psect	config
 11371                           
 11372                           ;Config register CONFIG1 @ 0x2007
 11373                           ;	Oscillator Selection bits
 11374                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11375                           ;	Watchdog Timer Enable bit
 11376                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11377                           ;	Power-up Timer Enable bit
 11378                           ;	PWRTE = OFF, PWRT disabled
 11379                           ;	RE3/MCLR pin function select bit
 11380                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11381                           ;	Code Protection bit
 11382                           ;	CP = OFF, Program memory code protection is disabled
 11383                           ;	Data Code Protection bit
 11384                           ;	CPD = OFF, Data memory code protection is disabled
 11385                           ;	Brown Out Reset Selection bits
 11386                           ;	BOREN = OFF, BOR disabled
 11387                           ;	Internal External Switchover bit
 11388                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11389                           ;	Fail-Safe Clock Monitor Enabled bit
 11390                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11391                           ;	Low Voltage Programming Enable bit
 11392                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
 11393                           ;	In-Circuit Debugger Mode bit
 11394                           ;	DEBUG = 0x1, unprogrammed default
 11395  2007                     	org	8199
 11396  2007  30D4               	dw	12500
 11397                           
 11398                           ;Config register CONFIG2 @ 0x2008
 11399                           ;	Brown-out Reset Selection bit
 11400                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11401                           ;	Flash Program Memory Self Write Enable bits
 11402                           ;	WRT = OFF, Write protection off
 11403  2008                     	org	8200
 11404  2008  3FFF               	dw	16383

Data Sizes:
    Strings     92
    Constant    144
    Data        0
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     44      59
    BANK3            96      0      30
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_8(CODE[10]), STR_6(CODE[12]), STR_5(CODE[12]), STR_4(CODE[6]), 
		 -> STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> s(BANK3[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    send_str@st	PTR unsigned char  size(2) Largest target is 35
		 -> STR_7(CODE[35]), s(BANK3[30]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 30
		 -> s(BANK3[30]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _main->___xxtofl
    _main->_send_str
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _send_str->_send_char
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   45030
                                             40 BANK1      4     4      0
                                _ADC
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                            ___flmul
                            ___flsub
                           ___xxtofl
                           _send_str
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   33161
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _send_str                                             7     5      2     416
                                              4 COMMON     7     5      2
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     406
                                              7 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  2     2      0      23
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fladd
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
       ___lwmod
   ___flmul
   ___flsub
     ___fladd
     ___xxtofl (ARG)
   ___xxtofl
   _send_str
     _send_char
   _setup
   _sprintf
     ___awdiv
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      3B       7       73.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      1E       9       31.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 18:10:58 2021

                        _s 0190                          pc 0002                         l91 1ABA  
                       l83 1618                         l96 1942               ___awdiv@sign 0025  
                       _op 006F                         fsr 0004        ___wmul@multiplicand 0075  
      __Umul8_16@word_mpld 0022                        l111 196C                        l120 1A77  
                      l105 07FE                        l123 19C4                        l108 19A9  
                      l117 19E8                        l141 1954                        l129 1B00  
                      l138 194C                        l147 07F8                        l324 06E8  
                      l316 0581                        l309 053D                        l343 19F5  
                      _ADC 193B                        l256 0FFF                        l345 1A0D  
                      l513 10C3                        l249 12D0                        l530 1B81  
                      l514 1028                        l531 1B96                        l339 07B1  
                      l524 10B6                        l701 14EC                        l517 1086  
                      l509 1C95                        l534 1E01                        l542 195F  
                      l278 0104                        l712 154C                        l704 152A  
                      l560 1FFF                        l529 1B65                        l537 1E6D  
                      l713 1558                        l553 1DCD                        l561 1F71  
                      l538 1E86                        l546 1DE2                        l810 1EAB  
                      l379 1CFD                        l571 1FF2                        l716 1BE6  
                      l556 1DE2                        l812 1F42                        l564 1FC2  
                      l670 1334                        l830 198F                        l823 1F0C  
                      l824 1F18                        l816 1EF0                        l496 1D66  
                      l649 1B46                        l674 13DB                        l691 14A6  
                      l683 1558                        l659 093B                        l676 13B2  
                      l772 0C08                        l766 0C9C                        l695 14CA  
                      l599 1C3C                        l785 1A24                        l778 0C90  
                      l787 1A36                        _dig 00DA                        _isr 196D  
                      fsr0 0004                        indf 0000               ___awmod@sign 0079  
             ___flmul@aexp 003A               ___flmul@bexp 003B               ___flmul@sign 0035  
             ___flmul@temp 0040               ___flmul@prod 003C                       ?_ADC 0070  
             ___fltol@exp1 005F                       l3000 1E85                       l3004 1955  
                     l3020 1D92                       l3012 1D67                       l3100 1F02  
                     l2300 1D4A                       l3006 195D                       l3022 1D93  
                     l3014 1D74                       l3110 1F35                       l3102 1F06  
                     l2310 1D62                       l2302 1D4B                       l3200 1ABB  
                     l3120 1A7C                       l3008 195F                       l2400 12D1  
                     l3024 1D9B                       l3112 1F39                       l3104 1F10  
                     l2304 1D52                       l2320 1C47                       l3202 1AC0  
                     l3130 1A85                       l3122 1A7D                       l2410 12E8  
                     l2402 12D8                       l3042 1DC2                       l3034 1DA9  
                     l3026 1D9D                       l3018 1D7D                       l3050 1BEF  
                     l3114 1F3A                       l3106 1F1A                       l2306 1D58  
                     l2330 1C5B                       l2322 1C49                       l2314 1C3D  
                     l3210 0030                       l3204 1ADC                       l3140 1A92  
                     l3132 1A86                       l3124 1A82                       l2500 13E4  
                     l2420 1300                       l2412 12ED                       l2404 12DE  
                     l3044 1DD2                       l3028 1DA1                       l3036 1DBB  
                     l3060 1C25                       l3052 1BF4                       l3108 1F30  
                     l2260 1A1E                       l2308 1D5D                       l2340 1C7A  
                     l2332 1C62                       l2324 1C4D                       l2316 1C3E  
                     l3300 02AC                       l3220 0058                       l3212 0036  
                     l3206 1AE4                       l3150 1AA2                       l3142 1A97  
                     l3134 1A87                       l3126 1A83                       l3118 1A78  
                     l2510 140C                       l2430 1316                       l2422 1305  
                     l2414 12F5                       l2406 12E2                       l3070 1B9B  
                     l3046 1DD7                       l3062 1C2E                       l3054 1C01  
                     l2262 1A2D                       l2254 1A11                       l2270 1CFE  
                     l2342 1C81                       l2334 1C66                       l2326 1C52  
                     l2318 1C42                       l3310 0353                       l3302 02F3  
                     l3222 005C                       l3230 009E                       l3214 003D  
                     l3160 1AAE                       l3152 1AA5                       l3144 1A9D  
                     l3136 1A88                       l3128 1A84                       l2520 1425  
                     l2512 1415                       l2504 13ED                       l2440 132A  
                     l2432 1317                       l2424 130B                       l2416 12F6  
                     l2408 12E3                       l3056 1C05                       l3064 1C34  
                     l3048 1BE7                       l3080 1EA3                       l2264 1A32  
                     l2256 1A13                       l2600 094D                       l2360 1B15  
                     l2352 1B01                       l2280 1D10                       l2272 1D01  
                     l2336 1C6A                       l2328 1C58                       l2344 1C87  
                     l3400 0679                       l3312 036E                       l3304 0302  
                     l3240 00CF                       l3232 00AC                       l3224 0071  
                     l3216 0042                       l3208 002B                       l3170 1AB7  
                     l3162 1AAF                       l3154 1AA9                       l3146 1A9E  
                     l3138 1A8E                       l2530 1489                       l2514 1417  
                     l2506 1404                       l2522 142A                       l2450 1346  
                     l2434 131C                       l2442 132C                       l2426 130C  
                     l2418 12F8                       l3058 1C17                       l3090 1ECE  
                     l3082 1EB3                       l3074 1E8A                       l2258 1A1A  
                     l2610 0962                       l2602 094E                       l2370 1B35  
                     l2362 1B19                       l2354 1B05                       l2290 1D24  
                     l2282 1D15                       l2274 1D05                       l2346 1C8C  
                     l2338 1C74                       l3410 06CD                       l3402 06B4  
                     l3330 042B                       l3322 03BC                       l3314 0377  
                     l3306 031D                       l3242 00E6                       l3234 00AF  
                     l3226 0088                       l3218 0046                       l2268 07FA  
                     l3180 1A5B                       l3172 1A37                       l3164 1AB2  
                     l3156 1AAA                       l3148 1AA1                       l2540 14BC  
                     l2524 1440                       l2532 1498                       l2516 141B  
                     l2508 1408                       l2460 135A                       l2452 134A  
                     l2444 133A                       l2436 1321                       l2428 1312  
                     l3068 1B97                       l3092 1ED5                       l3076 1E8F  
                     l2620 097A                       l2612 096A                       l2604 0953  
                     l2372 1B3C                       l2364 1B1D                       l2356 1B0B  
                     l2380 0908                       l2292 1D2B                       l2284 1D19  
                     l2276 1D0A                       l2348 1C91                       l3420 06FA  
                     l3404 06BC                       l3340 0464                       l3316 037F  
                     l3308 0344                       l3324 03C5                       l3260 0138  
                     l3412 06D4                       l3252 0106                       l3244 00EC  
                     l3236 00B5                       l3228 008E                       l3500 15DD  
                     l3182 1960                       l3174 1A3D                       l3190 19CB  
                     l3166 1AB3                       l3158 1AAD                       l2550 14D3  
                     l2542 14C5                       l2534 14AE                       l2526 147E  
                     l2518 141C                       l2470 136E                       l2462 135E  
                     l2454 134E                       l2446 133E                       l2438 1329  
                     l3094 1ED9                       l3086 1EBC                       l3078 1E93  
                     l2710 0C3D                       l2702 0C0D                       l2630 0996  
                     l2622 097F                       l2614 096F                       l2606 0958  
                     l2366 1B2E                       l2358 1B0E                       l2374 1B42  
                     l2390 0924                       l2382 090B                       l2294 1D2F  
                     l2286 1D1B                       l2278 1D0C                       l3430 072C  
                     l3422 0709                       l3414 06DA                       l3406 06C3  
                     l3350 04A2                       l3342 046E                       l3326 03FA  
                     l3318 039D                       l3270 0180                       l3262 0146  
                     l3254 0124                       l3238 00BA                       l3246 00FE  
                     l3510 160B                       l3502 15E8                       l3184 193B  
                     l3176 1A46                       l3192 19D0                       l3168 1AB4  
                     l2560 14E3                       l2552 14D8                       l2544 14C9  
                     l2536 14B3                       l2528 1484                       l2480 137F  
                     l2472 1372                       l2464 1362                       l2456 1352  
                     l2448 1342                       l3096 1EE7                       l3088 1EC1  
                     l2720 0C74                       l2704 0C12                       l2712 0C43  
                     l2640 09B9                       l2632 099B                       l2624 0984  
                     l2616 0975                       l2608 0960                       l2368 1B34  
                     l2392 092A                       l2384 0912                       l2296 1D33  
                     l2288 1D21                       l2800 0E53                       l3440 0756  
                     l3432 0730                       l3424 0712                       l3416 06E2  
                     l3408 06C7                       l3360 04CB                       l3352 04AB  
                     l3344 0489                       l3336 042D                       l3328 0429  
                     l3280 01C1                       l3272 0184                       l3264 014A  
                     l3256 0130                       l3248 0102                       l3520 1677  
                     l3512 1615                       l3504 15EE                       l3178 1A55  
                     l3194 19D7                       l2570 1504                       l2562 14E9  
                     l2546 14CE                       l2554 14DA                       l2490 13C5  
                     l2482 1396                       l2474 1376                       l2466 1366  
                     l2458 1356                       l3098 1EF7                       l2730 0C94  
                     l2722 0C76                       l2714 0C50                       l2706 0C20  
                     l2650 0A47                       l2642 09C6                       l2634 09A0  
                     l2626 098C                       l2618 0979                       l2394 0931  
                     l2386 0916                       l2378 0902                       l2298 1D44  
                     l2810 0F4B                       l2802 0E5A                       l3450 0777  
                     l3442 0762                       l3434 073E                       l3426 071A  
                     l3418 06F3                       l3370 0545                       l3362 04D2  
                     l3346 048F                       l3290 0258                       l3282 01E4  
                     l3274 019D                       l3266 0163                       l3258 0134  
                     l3530 171C                       l3522 169D                       l3514 1620  
                     l3506 15FA                       l2740 199D                       l3196 19DD  
                     l3188 19C6                       l2580 153C                       l2572 1508  
                     l2548 14D1                       l2556 14DE                       l2492 13C6  
                     l2484 13B6                       l2476 137A                       l2468 136A  
                     l2900 1044                       l2724 0C84                       l2716 0C5B  
                     l2708 0C24                       l2660 0AA9                       l2652 0A63  
                     l2644 09E3                       l2628 098E                       l2388 091A  
                     l2396 0937                       l2820 1980                       l3452 0783  
                     l3444 0766                       l3436 0747                       l3428 0726  
                     l3380 0574                       l3372 054E                       l3364 04D7  
                     l3348 049B                       l3356 04B0                       l3292 0271  
                     l3284 01E8                       l3276 01A8                       l3268 017C  
                     l3460 07AD                       l3540 1783                       l3532 1725  
                     l3524 16A6                       l3516 1629                       l3508 1600  
                     l2742 19A6                       l2734 1991                       l3198 19E2  
                     l2750 19B7                       l3470 07B2                       l2590 1553  
                     l2582 1541                       l2574 1526                       l2566 14F1  
                     l2558 14DF                       l2494 13CF                       l2486 13BF  
                     l2478 137E                       l2910 1077                       l2902 104D  
                     l2830 1F43                       l2726 0C88                       l2718 0C6A  
                     l2670 0B39                       l2662 0AC6                       l2654 0A6C  
                     l2646 09FF                       l2638 09A9                       l2822 1986  
                     l2814 0FD3                       l3454 078F                       l3446 076C  
                     l3438 074B                       l3390 059A                       l3382 057B  
                     l3374 0552                       l3366 0512                       l3358 04BD  
                     l3294 027A                       l3286 01EE                       l3278 01AE  
                     l3550 17EA                       l3542 17A9                       l3534 174B  
                     l3526 16EC                       l3518 166F                       l2736 1994  
                     l2752 19BC                       l2744 19AB                       l3472 07B5  
                     l2592 1557                       l2584 1542                       l2576 152F  
                     l2568 14F6                       l2488 13C1                       l2496 13D3  
                     l2920 1092                       l2912 1080                       l2904 1056  
                     l2832 1F56                       l2728 0C89                       l2680 0BCB  
                     l2672 0B66                       l2664 0ADF                       l2656 0A7C  
                     l2648 0A2B                       l2760 10C7                       l2824 198C  
                     l2808 0F44                       l3448 0773                       l3392 05B8  
                     l3384 058A                       l3376 0558                       l3368 0531  
                     l3296 0295                       l3288 020D                       l3552 17F8  
                     l3544 17B2                       l3536 1754                       l3528 16F6  
                     l2738 199A                       l2754 19BF                       l2746 19AE  
                     l3474 07D1                       l2586 1546                       l2578 1534  
                     l2498 13DF                       l2930 10BB                       l2914 108A  
                     l2922 10A4                       l2906 1068                       l2850 1F92  
                     l2842 1F72                       l2682 0BD4                       l2690 0BE8  
                     l2674 0B8C                       l2666 0AFC                       l2658 0A99  
                     l2594 093C                       l2770 11E2                       l2762 10CD  
                     l2826 198E                       l2818 197F                       l3394 0613  
                     l3386 058F                       l3378 0565                       l3298 029D  
                     l3458 0797                       l3546 17BB                       l3538 177A  
                     l3490 15AD                       l2748 19B4                       l2756 194C  
                     l3476 07D7                       l2588 1548                       l2940 19FC  
                     l2908 1076                       l2860 1FBC                       l2852 1F9B  
                     l2844 1F78                       l2836 1F5F                       l2692 0BEC  
                     l2684 0BD8                       l2676 0BB4                       l2668 0B29  
                     l2596 0943                       l2780 0CA4                       l3396 064E  
                     l3388 0596                       l3548 17E1                       l3492 15B1  
                     l3484 1559                       l2758 1952                       l3478 07DC  
                     l2950 1CA8                       l2942 1A03                       l2934 19E9  
                     l2862 1FC6                       l2870 1FE0                       l2854 1FA9  
                     l2846 1F87                       l2694 0BED                       l2686 0BD9  
                     l2678 0BBD                       l2598 0949                       l2774 128D  
                     l2790 0D97                       l2782 0CA6                       l3398 066D  
                     l3494 15B7                       l3486 1568                       l2960 1CD7  
                     l2952 1CAB                       l2944 1A09                       l2936 19EB  
                     l2928 10AB                       l2856 1FB3                       l2848 1F89  
                     l2696 0BF1                       l2688 0BE2                       l2768 11DC  
                     l2792 0D9E                       l2784 0CAD                       l3584 011C  
                     l3488 1570                       l2962 1CE5                       l2954 1CB8  
                     l2938 19EF                       l2882 1006                       l2858 1FB4  
                     l2698 0C05                       l2778 0CA0                       l3498 15D9  
                     l2980 1B95                       l2972 1B47                       l2964 1CE6  
                     l2956 1CBC                       l2948 1C96                       l2884 1013  
                     l2876 1FE7                       l2868 1FCE                       l2796 0E26  
                     l2974 1B5D                       l2990 1E1D                       l2966 1CEF  
                     l2958 1CC5                       l2894 1029                       l2878 1FF7  
                     l2976 1B79                       l2992 1E21                       l2984 1DE3  
                     l2968 1CF5                       l2896 1031                       l2888 101C  
                     l2978 1B93                       l2994 1E45                       l2986 1DF9  
                     l2898 1042                       l2996 1E49                       l2988 1E15  
                     l2998 1E83                       ?_isr 0070                       STR_1 08C3  
                     STR_2 08F5                       STR_3 08F5                       STR_4 08EF  
                     STR_5 08D3                       STR_6 08DF                       STR_7 08A0  
                     STR_8 08EB                       u3000 1C58                       u3001 1C57  
                     u3020 1C6A                       u3021 1C69                       u3110 1B2E  
                     u3030 1C74                       u3111 1B2D                       u3031 1C73  
                     u3015 1C5C                       u3200 12E2                       u4000 0C50  
                     u3201 12E1                       u4001 0C4F                       u3105 1B1E  
                     u3210 12E8                       u4010 0C6A                       u3130 1B42  
                     u3050 1C87                       u3211 12E7                       u4011 0C69  
                     u3131 1B41                       u3115 1B2A                       u3051 1C86  
                     u3035 1C70                       u3300 13A1                       u3220 12ED  
                     u4020 0C88                       u3140 0908                       u3060 1C8C  
                     u3301 139F                       u3221 12EC                       u4021 0C87  
                     u4005 0C4C                       u3125 1B36                       u3141 0907  
                     u3061 1C8B                       u3045 1C7B                       u4030 1952  
                     u3310 13A2                       u3230 130B                       u3070 1B0B  
                     u4031 1951                       u3231 130A                       u4015 0C66  
                     u3071 1B0A                       u3400 140C                       u3320 13B6  
                     u3240 1316                       u3160 091A                       u4040 10CD  
                     u4120 0CA4                       u3401 140B                       u3321 13B5  
                     u3241 1315                       u3161 0919                       u4105 124C  
                     u4041 10CC                       u4121 0CA3                       u3410 141B  
                     u3330 13C5                       u3250 131C                       u5010 1EF6  
                     u3090 1B1D                       u3170 0924                       u4210 0E5A  
                     u4130 0CAD                       u3411 141A                       u3331 13C4  
                     u3251 131B                       u5011 1EF5                       u3091 1B1C  
                     u3171 0923                       u3155 090C                       u4115 1298  
                     u4211 0E59                       u4131 0CAC                       u5100 19DD  
                     u3500 14C9                       u3260 1321                       u4300 198C  
                     u5101 19DC                       u3501 14C8                       u3261 1320  
                     u5005 1EE8                       u3085 1B0F                       u4301 198B  
                     u4205 0E29                       u5110 1ACA                       u3510 14CE  
                     u3430 1440                       u3350 13DB                       u3270 133A  
                     u5030 1F06                       u4310 1F56                       u3190 0937  
                     u3511 14CD                       u3431 143F                       u3351 13DA  
                     u3271 1339                       u5031 1F05                       u4311 1F55  
                     u3191 0936                       u3175 0920                       u4055 10EA  
                     u5120 1AEE                       u3600 1526                       u3520 14D8  
                     u3360 13DF                       u3280 133E                       u5040 1F0C  
                     u4400 1FDF                       u4320 1F70                       u4080 11E2  
                     u5200 0134                       u3601 1525                       u3521 14D7  
                     u3441 1457                       u3433 143C                       u3425 141E  
                     u3361 13DE                       u3345 13C8                       u3281 133D  
                     u5041 1F0B                       u5025 1EFB                       u4401 1FDE  
                     u4321 1F6F                       u3185 092B                       u4081 11E1  
                     u4065 1146                       u4225 0E7C                       u4145 0CCF  
                     u5201 0133                       u5130 1B00                       u3610 152F  
                     u3530 14DE                       u3450 146B                       u3442 1458  
                     u3370 13E4                       u3290 1396                       u5050 1F10  
                     u4410 1FE6                       u4250 0F4B                       u4170 0D9E  
                     u5210 0163                       u5131 1AFF                       u3611 152E  
                     u3531 14DD                       u3451 146C                       u3443 145D  
                     u3371 13E3                       u3291 1395                       u5051 1F0F  
                     u4411 1FE5                       u4075 119B                       u4251 0F4A  
                     u4235 0EB8                       u4171 0D9D                       u4155 0D0B  
                     u5211 0162                       u3620 1534                       u3540 14E3  
                     u3460 1489                       u3452 1471                       u3444 145E  
                     u5060 1F25                       u4500 108A                       u4340 1FA9  
                     u3700 097F                       u2900 1D21                       u5300 0353  
                     u5220 019D                       u5140 0036                       u3621 1533  
                     u3541 14E2                       u3461 1488                       u3453 1472  
                     u3445 1463                       u3381 13F6                       u4501 1089  
                     u4341 1FA8                       u3701 097E                       u2901 1D20  
                     u4245 0F03                       u4165 0D56                       u5301 0352  
                     u5221 019C                       u5141 0035                       u3630 1541  
                     u3550 14E9                       u3470 14AE                       u3446 1464  
                     u3390 1408                       u3382 13FD                       u5070 1F35  
                     u4510 1091                       u4430 1FF7                       u3710 0984  
                     u5310 036E                       u5230 01E8                       u5150 0058  
                     u3631 1540                       u3551 14E8                       u3471 14AD  
                     u3391 1407                       u3383 1404                       u3295 1392  
                     u5071 1F34                       u4511 1090                       u4431 1FF6  
                     u4335 1F94                       u3711 0983                       u4095 11FF  
                     u5311 036D                       u5231 01E7                       u5151 0057  
                     u3640 1546                       u3560 14F0                       u3480 14B3  
                     u4600 1A09                       u5080 1F39                       u4440 1013  
                     u4360 1FC2                       u3720 099B                       u2920 1D33  
                     u5400 0544                       u5240 0271                       u5160 009E  
                     u3641 1545                       u3561 14EF                       u3481 14B2  
                     u4601 1A08                       u5081 1F38                       u5065 1F20  
                     u4441 1012                       u4425 1FE9                       u4361 1FC1  
                     u4345 1FA5                       u3801 0AB8                       u3721 099A  
                     u2921 1D32                       u4265 0F5E                       u4185 0DB1  
                     u5401 0543                       u5305 034F                       u5241 0270  
                     u5161 009D                       u5090 19CB                       u3650 1557  
                     u3570 14F6                       u4610 1CA8                       u4530 10A3  
                     u4450 1027                       u4370 1FC6                       u2850 1A1E  
                     u3802 0ABF                       u3730 09A0                       u4290 1986  
                     u5410 0565                       u5330 0463                       u5250 0295  
                     u5170 00AC                       u5091 19CA                       u3651 1556  
                     u3571 14F5                       u4611 1CA7                       u4531 10A2  
                     u4451 1026                       u4371 1FC5                       u4355 1FB5  
                     u2851 1A1D                       u3803 0AC6                       u3731 099F  
                     u4291 1985                       u2915 1D25                       u4275 0F9A  
                     u4195 0DED                       u5411 0564                       u5331 0462  
                     u5251 0294                       u5171 00AB                       u4700 1B93  
                     u3580 1508                       u4540 10AA                       u4380 1FCD  
                     u3660 094D                       u2940 1D44                       u5500 06F3  
                     u5420 0574                       u5340 046E                       u5260 02AC  
                     u5180 00FD                       u4701 1B92                       u3581 1507  
                     u4541 10A9                       u4525 1093                       u4381 1FCC  
                     u3821 0AEE                       u3741 09F1                       u3661 094C  
                     u2941 1D43                       u4285 0FD6                       u5501 06F2  
                     u5421 0573                       u5341 046D                       u5325 0430  
                     u5261 02AB                       u5181 00FC                       u4710 1DF9  
                     u3590 1517                       u4630 1CBC                       u4470 1068  
                     u2870 1A32                       u3910 0BD8                       u3822 0AF5  
                     u3742 09F8                       u3670 0953                       u5510 0709  
                     u5430 058F                       u5350 0489                       u5270 0302  
                     u5190 0130                       u4711 1DF8                       u3495 14BE  
                     u4631 1CBB                       u4471 1067                       u2871 1A31  
                     u3911 0BD7                       u3831 0B1B                       u3823 0AFC  
                     u3815 0AC8                       u3751 0A0D                       u3743 09FF  
                     u3671 0952                       u2935 1D34                       u5511 0708  
                     u5431 058E                       u5415 0561                       u5351 0488  
                     u5335 045F                       u5271 0301                       u5191 012F  
                     u4720 1E15                       u4800 1D8B                       u4560 10BB  
                     u3832 0B22                       u3752 0A14                       u3680 0958  
                     u2960 1D58                       u2880 1D05                       u5600 07AD  
                     u5520 071A                       u5360 049B                       u5280 031D  
                     u4705 1B8F                       u4721 1E14                       u4625 1CAD  
                     u4561 10BA                       u4465 104F                       u2865 1A25  
                     u3905 0BCD                       u3841 0B48                       u3833 0B29  
                     u3761 0A39                       u3753 0A1B                       u3681 0957  
                     u2961 1D57                       u2945 1D40                       u2881 1D04  
                     u5601 07AC                       u5521 0719                       u5505 06EF  
                     u5425 0570                       u5361 049A                       u5281 031C  
                     u5265 02A8                       u5610 07BF                       u4730 1E21  
                     u4810 1DA1                       u4650 1CD7                       u4570 19EF  
                     u4490 1086                       u3930 0BEC                       u3850 0B72  
                     u3842 0B4F                       u3762 0A40                       u3690 0979  
                     u2970 1D5D                       u2890 1D10                       u5530 0726  
                     u5370 04BD                       u5290 0344                       u4731 1E20  
                     u3595 1512                       u4811 1DA0                       u4651 1CD6  
                     u4571 19EE                       u4555 10AD                       u4491 1085  
                     u4475 1064                       u4395 1FCF                       u3931 0BEB  
                     u3843 0B56                       u3771 0A55                       u3763 0A47  
                     u3691 0978                       u2971 1D5C                       u2955 1D4C  
                     u2891 1D0F                       u5531 0725                       u5515 0705  
                     u5371 04BC                       u5291 0343                       u5275 02FE  
                     u5620 07E6                       u4820 1DA8                       u3940 0BF1  
                     u3772 0A5C                       u2980 1C42                       u5540 0730  
                     u5460 06BB                       u5380 04CB                       u4741 1E30  
                     u4821 1DA7                       u4805 1D86                       u4645 1CBE  
                     u4485 1079                       u3941 0BF0                       u3925 0BDB  
                     u3861 0B7E                       u3773 0A63                       u2981 1C41  
                     u5541 072F                       u5461 06BA                       u5445 0616  
                     u5381 04CA                       u5630 07F8                       u4750 1E49  
                     u4742 1E31                       u4670 1CF5                       u4910 1C05  
                     u3950 0C05                       u3870 0B9A                       u3862 0B85  
                     u2990 1C4D                       u5550 073E                       u5470 06D3  
                     u5631 07F7                       u4751 1E48                       u4743 1E36  
                     u4671 1CF4                       u4655 1CD3                       u4911 1C04  
                     u3951 0C04                       u3863 0B8C                       u3855 0B6D  
                     u3791 0A8B                       u2991 1C4C                       u5551 073D  
                     u5471 06D2                       u5455 067C                       u5375 04B9  
                     u4680 1B5D                       u4744 1E37                       u4840 1DBA  
                     u4920 1C17                       u3960 0C0C                       u3792 0A92  
                     u5560 0756                       u5480 06DA                       u4681 1B5C  
                     u4761 1E58                       u4745 1E3C                       u4841 1DB9  
                     u4665 1CE7                       u4921 1C16                       u4905 1BF6  
                     u4585 19F6                       u3961 0C0B                       u3881 0BA6  
                     u3793 0A99                       u3785 0A65                       u5561 0755  
                     u5481 06D9                       i1l74 1977                       u4690 1B79  
                     u4770 1E83                       u4762 1E59                       u4746 1E3D  
                     u4850 1DC1                       u3970 0C12                       u3882 0BAD  
                     u5570 076C                       u5490 06E2                       u5650 1570  
                     u4691 1B78                       u4771 1E82                       u4763 1E5E  
                     u4851 1DC0                       u4835 1DAA                       u4595 19FD  
                     u3971 0C11                       u3883 0BB4                       u3875 0B95  
                     u5571 076B                       u5555 073A                       u5491 06E1  
                     u5395 04DA                       u5707 17F2                       u5651 156F  
                     u4764 1E5F                       u4780 195D                       u4940 1C34  
                     u3980 0C24                       u5580 0783                       u5660 15B7  
                     u5717 1A94                       u4765 1E64                       u4781 195C  
                     u4941 1C33                       u4925 1C13                       u3981 0C23  
                     u5581 0782                       u5565 0752                       u5661 15B6  
                     u4766 1E65                       u4870 1DD2                       u4790 1D74  
                     u4950 1E8F                       u3990 0C33                       u5590 078F  
                     u5670 15DD                       u5727 07D9                       u4775 1E7F  
                     u4871 1DD1                       u4791 1D73                       u4935 1C26  
                     u4951 1E8E                       u3895 0BB6                       u5591 078E  
                     u5671 15DC                       u4880 1DD7                       u4960 1E93  
                     u5680 15E8                       u5737 19B9                       u4881 1DD6  
                     u4865 1DC4                       u4961 1E92                       u5681 15E7  
                     u4890 1BEF                       u4970 1EB3                       u5747 19C1  
                     u4891 1BEE                       u4971 1EB2                       u3995 0C2E  
                     u5757 1A41                       u4990 1ED4                       u5767 1A50  
                     u4991 1ED3                       u5777 1A5D                       u4985 1EC6  
                     u5697 1611                       u5787 19A1                       _TXIF 0064  
                     _dig1 00D4                       _dig2 00D0                       _dig3 00CC  
        ?_Lcd_Write_String 0076                       _main 1559                       _val1 00D9  
                     _val2 00D8                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0078               _sprintf$1158 00AD            __end_of_Lcd_Cmd 19AA  
                    ??_ADC 0073                      ??_isr 0070              ___fltol@sign1 005E  
          __end_of___fladd 1559                      ?_main 0070            __end_of___awdiv 1D67  
          __end_of___flneg 1960            __end_of___awmod 1C96            __end_of___flmul 0C9D  
          __end_of___flsub 1BE7            __end_of___fltol 1DE3                      _ANSEL 0188  
          __end_of___lldiv 1CFE            ___awdiv@divisor 0020            __end_of___llmod 1C3D  
          __end_of___lwdiv 1B47            __end_of___lwmod 093C            ___awdiv@counter 0024  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 08A0                      _scale 0C9D  
          __end_of_isdigit 1990                      _setup 1A78                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07B2  
         __end_of_Lcd_Init 1A78           __end_of_Lcd_Port 07FF            __initialization 000F  
             __end_of_main 1800                     ADC@dig 0074                     ??_main 00C8  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0077  
                   ?_scale 0042                     _ADRESH 001E           ___awdiv@dividend 0022  
                   ?_setup 0070                     _ANSELH 0189                     i1l3480 196D  
                   i1l3482 1973                     u564_20 1973                     u564_21 1972  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001B  
         __end_of___xxtofl 1F43           __end_of__powers_ 0844                     ___flge 1DE3  
                   ___fleq 1B47                  ??___fladd 005E                     ___wmul 19E9  
                ??___awdiv 007A                  ??___flneg 0077                  ??___awmod 0077  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 0020                  ??___llmod 0020                  ??___lwdiv 0079  
                ??___lwmod 0077                     _fround 10C4           ___awdiv@quotient 0026  
          ___awmod@divisor 0073            ___awmod@counter 0078           __end_of_send_str 07F9  
                ??_isdigit 0073         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00A8            Lcd_Set_Cursor@a 0079            Lcd_Set_Cursor@b 0077  
               ___flge@ff1 0073                 ___flge@ff2 0077               ___xxtofl@arg 0022  
             ___xxtofl@exp 0021               ___xxtofl@val 0073                 ___fleq@ff1 0073  
               ___fleq@ff2 0077    __end_of__initialization 0024                 ___flneg@f1 0073  
        __end_of_Lcd_Clear 196D                 ___fltol@f1 0055             __pcstackCOMMON 0070  
            __end_of_scale 1000              __end_of_setup 1ABB             _Lcd_Set_Cursor 19C5  
               __div_to_l_ 1006                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0026            __div_to_l_@cntr 0025                    ??_scale 0046  
          __div_to_l_@quot 0021               sprintf@width 00B8                    ??_setup 0073  
               __pbssBANK0 006F                 __pbssBANK1 00CC                 __pbssBANK3 0190  
            __div_to_l_@f1 0073              __div_to_l_@f2 0077          __end_of__Umul8_16 1A37  
               __pmaintext 1559                    ?___flge 0073                    ?___fleq 0073  
                  ?___wmul 0073                 __pintentry 0004         __size_of_send_char 000A  
                  ?_fround 0042  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 19E9  
                ?___xxtofl 0073                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               __stringtab 0800             _Lcd_Write_Char 19AA                    _Lcd_Cmd 1990  
        __end_of__npowers_ 0878                 _scale$1157 0050                  ?_send_str 0074  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 12D1  
                  ___awdiv 1CFE                    ___flneg 1955                    ___awmod 1C3D  
                  ___flmul 093C                    ___flsub 1B97                    ___fltol 1D67  
                  ___lldiv 1C96            __size_of___wmul 0025                    ___llmod 1BE7  
                  ___lwdiv 1B01                    ___lwmod 0902            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0077                    __ptext1 0028                    __ptext2 0C9D  
                  __ptext3 1C3D                    __ptext4 1CFE                    __ptext5 197E  
                  __ptext6 10C4                    __ptext7 0902                    __ptext8 1B01  
                  __ptext9 093C               __size_of_ADC 0008                ?__div_to_l_ 0073  
                  _dpowers 0878                    _isdigit 197E               __size_of_isr 0011  
               ??___xxtofl 0077           ___awmod@dividend 0075                    _sprintf 0028  
                  clrloop0 1944     __end_of_Lcd_Write_Char 19C5       end_of_initialization 0024  
        __end_of_send_char 1955            ___lldiv@divisor 0073            ___lldiv@counter 0025  
               ??_send_str 0076                  _RCSTAbits 0018                  Lcd_Port@a 0073  
           __tdiv_to_l_@f1 0073             __tdiv_to_l_@f2 0077              send_char@dato 0073  
            ??__tdiv_to_l_ 0020                  _PORTCbits 0007                ___fladd@grs 0069  
            ___xxtofl@sign 0020                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0076          Lcd_Write_String@i 0020                ___flmul@grs 0036  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 1960  
           __end_of___flge 1E87             __end_of___fleq 1B97             __end_of___wmul 1A0E  
         _Lcd_Write_String 1ABB                _BAUDCTLbits 0187             __end_of_fround 12D1  
      start_initialization 000F                __end_of_ADC 1943        __end_of__tdiv_to_l_ 2000  
              __end_of_isr 197E          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0073            ___llmod@counter 0021                 ?_Lcd_Clear 0070  
                 ??___flge 0020                   ??___fleq 0020                   ??___wmul 0077  
                __Umul8_16 1A0E            Lcd_Write_Char@a 0075                   ??_fround 0046  
            sprintf@tmpval 00BA                  ___fladd@a 005A                  ___fladd@b 0056  
               fround@prec 0055                  ___flmul@a 002C                  ___flmul@b 0028  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B6                sprintf@eexp 00BE  
              sprintf@fval 00C0                sprintf@prec 00C5           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0078                   ?___fladd 0056                   ?___awdiv 0020  
                 ?___flneg 0073          __size_of_send_str 0047                   ?___awmod 0073  
                 ?___flmul 0028                   ?___flsub 00A0                   ?___fltol 0055  
                 ?___lldiv 0073                   ?___llmod 0073                  __npowers_ 0844  
               ?__Umul8_16 0073                   ?___lwdiv 0020                   ?___lwmod 0073  
                __pstrings 0800                __tdiv_to_l_ 1F43               ??__div_to_l_ 0020  
                 ?_isdigit 0070                 send_str@st 0074           ___lwdiv@quotient 0024  
                 ?_sprintf 006A             __size_of_scale 0363             __size_of_setup 0043  
        interrupt_function 0004             ___wmul@product 0077                  clear_ram0 1943  
                 _PIE1bits 008C                  _send_char 194B                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C         __end_of__div_to_l_ 10C4                ??_Lcd_Clear 0077  
               _ADCON0bits 001F                __stringbase 080F                 _ADCON1bits 009F  
        ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074                   _Lcd_Init 1A37  
                 _Lcd_Port 07F9   __end_of_Lcd_Write_String 1B01           __size_of_Lcd_Cmd 001A  
               ?_send_char 0070                ??__Umul8_16 0075           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A                _fround$1155 0051                _fround$1156 004D  
       __end_of__stringtab 0810                _isdigit$978 0073                 sprintf@val 00B2  
                 ___xxtofl 1E87           __size_of_isdigit 0012            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0026                   __ptext10 1A0E                   __ptext11 1F43  
                 __ptext20 1955                   __ptext12 1006                   __ptext21 1DE3  
                 __ptext13 1E87                   __ptext30 1960                   __ptext22 1B47  
                 __ptext14 19E9                   __ptext31 1990                   __ptext23 1A78  
                 __ptext15 1BE7                   __ptext32 07F9                   __ptext24 07B2  
                 __ptext16 1C96                   __ptext33 193B                   __ptext25 194B  
                 __ptext17 1D67                   __ptext34 196D                   __ptext26 1ABB  
                 __ptext18 1B97                   __ptext27 19AA                   __ptext19 12D1  
                 __ptext28 19C5                   __ptext29 1A37                   __powers_ 0810  
         __size_of_sprintf 078A                  send_str@i 0079              __size_of_main 02A7  
                 _send_str 07B2                 _INTCONbits 000B                   isdigit@c 0074  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B1  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00C4  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0075           ___lldiv@dividend 0077  
              ??_send_char 0073                  stringcode 080A         Lcd_Set_Cursor@temp 007A  
             ?__tdiv_to_l_ 0073     __Umul8_16@multiplicand 0073                   sprintf@c 00C7  
                 sprintf@f 006A           ___lldiv@quotient 0021            ___lwmod@divisor 0073  
          ___lwmod@counter 0078                   stringdir 080A                   stringtab 0800  
            ___fladd@signs 0066               ___fladd@aexp 0067               ___fladd@bexp 0068  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
